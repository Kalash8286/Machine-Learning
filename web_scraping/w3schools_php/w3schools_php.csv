Heading,Link,Intro,Subheading,Definitions,Example,List_item,table_item,Image_url
php||Tutorial,https://www.w3schools.com/php/default.asp,,"['Easy Learning with ""PHP Tryit""']","['With our online ""PHP Tryit"" editor, you can edit the PHP code, and click \non a button to view the result.Click on the ""Try it Yourself"" button to see how it works.', 'Learn by examples! This tutorial supplements all explanations with clarifying examples.See All PHP Examples', 'Learn by taking a quiz! This quiz will give you a signal of how much you know, or do not know, about PHP.Start PHP Quiz!', ""W3Schools' PHP reference contains different categories of all PHP functions, keywords and constants, along with examples.""]","['\n <!DOCTYPE html>\n <html>\n    <body>\n<?php\n echo ""My first PHP script!"";\n ?>\n\n    </body>\n    </html>\n']",[''],[],[]
php||Introduction,https://www.w3schools.com/php/php_intro.asp,PHP code is executed on the server.,"['What You Should Already Know', 'What is PHP?', 'What is a PHP File?', 'What Can PHP Do?', 'Why PHP?', ""What's new in PHP 7""]","['Before you continue you should have a basic understanding of the following:If you want to study these subjects first, find the tutorials on our\nHome page.', 'With PHP you are not limited to output HTML. You can output images, PDF \nfiles, and even Flash movies. You can also output any text, such as XHTML and \nXML.', '', '', '', '']","['', '', '', '', '', '']","['What You Should Already Know###What is PHP?###What is a PHP File?###What Can PHP Do?###Why PHP?###What\'s new in PHP 7###&&&|||HTML|||CSS|||JavaScript|||&&&|||PHP is an acronym for ""PHP: Hypertext Preprocessor""|||PHP is a widely-used, open source scripting language|||PHP scripts are executed on the server|||PHP is free to download and use|||&&&|||PHP files can contain text, HTML, CSS, JavaScript, and PHP code|||PHP code is executed on the server, and the result is returned to the browser as plain HTML|||PHP files have extension "".php""|||&&&|||PHP can generate dynamic page content|||PHP can create, open, read, write, delete, and close files on the server|||PHP can collect form data|||PHP can send and receive cookies|||PHP can add, delete, modify data in your database|||PHP can be used to control user-access|||PHP can encrypt data|||&&&|||PHP runs on various platforms (Windows, Linux, Unix, Mac OS X, etc.)|||PHP is compatible with almost all servers used today (Apache, IIS, etc.)|||PHP supports a wide range of databases|||PHP is free. Download it from the official PHP resource: www.php.net|||PHP is easy to learn and runs efficiently on the server side|||&&&|||PHP 7 is much faster than the previous popular stable release (PHP 5.6)|||PHP 7 has improved Error Handling|||PHP 7 supports stricter Type Declarations for function arguments|||PHP 7 supports new operators (like the spaceship operator: <=>)|||']",[],[]
php||Installation,https://www.w3schools.com/php/php_install.asp,,"['What Do I Need?', 'Use a Web Host With PHP Support', 'Set Up PHP on Your Own PC', 'PHP Online Compiler / Editor']","['To start using PHP, you can:', 'If your server has activated support for PHP you do not \nneed to do anything.Just create some .php files, place them in your web directory, and the server \nwill automatically parse them for you.You do not need to compile anything or install any extra tools.Because PHP is free, most web hosts \noffer PHP support.', 'However, if your server does not support PHP, you must:The official PHP website (PHP.net) has installation instructions for PHP:\nhttp://php.net/manual/en/install.php', 'With w3schools\' online PHP compiler, you can edit PHP code, and view the result in your browser.Click on the ""Try it Yourself"" button to see how it works.']","['', '', '', '']","['What Do I Need?###Set Up PHP on Your Own PC###&&&|||Find a web host with PHP and MySQL support|||Install a web server on your own PC, and then install PHP and MySQL|||&&&|||install a web server|||install PHP|||install a database, such as MySQL|||']",[],[]
php||Syntax,https://www.w3schools.com/php/php_syntax.asp,"A PHP script is executed on the server, and the plain HTML result is sent back to the browser.","['Basic PHP Syntax', 'PHP Case Sensitivity']","['A PHP script can be placed anywhere in the document.A PHP script starts with <?php and ends with \n?>:The default file extension for PHP files is "".php"".A PHP file normally contains HTML tags, and some PHP scripting code.Below, we have an example of a simple PHP file, with a PHP script that uses a \nbuilt-in PHP function ""echo"" to output the text\n""Hello World!"" on a web page:Note: PHP statements end with a semicolon (;).', 'In PHP, keywords (e.g. if, \nelse, while, \necho, etc.), classes, functions, \nand user-defined functions are not case-sensitive.In the example below, all three echo statements below are equal and legal:Look at the example below; only the first statement will display the value of the \n$color variable! This is because \n$color, $COLOR, and \n$coLOR are treated as three \ndifferent variables:']","['\n <!DOCTYPE html>\n <html>\n    <body>\n    <h1>My first PHP page</h1>\n <?php\n echo ""Hello World!"";?>\n    </body>\n    </html>\n', '\n <!DOCTYPE html>\n <html>\n    <body>\n    <?php\n ECHO ""Hello World!<br>"";echo ""Hello World!<br>"";\n EcHo ""Hello World!<br>"";?>\n    </body>\n    </html>\n &&&&&& \n <!DOCTYPE html>\n <html>\n    <body>\n    <?php$color = ""red"";\n echo ""My car is "" . $color . ""<br>"";echo ""My house is "" . $COLOR . ""<br>"";echo ""My boat is "" . $coLOR . ""<br>"";?>\n    </body>\n    </html>\n']",[''],[],[]
php||Comments,https://www.w3schools.com/php/php_comments.asp,,['Comments in PHP'],['A comment in PHP code is a line that is not executed as a part of the \nprogram. Its only purpose is to be read by someone who is looking at the code.Comments can be used to:PHP supports several ways of commenting:'],[''],['Comments in PHP###&&&|||Let others understand your code|||Remind yourself of what you did - Most programmers have experienced coming back to their own work a year or two later and having to re-figure out what they did. Comments can remind you of what you were thinking when you wrote the code|||'],[],[]
php||Variables,https://www.w3schools.com/php/php_variables.asp,"Variables are ""containers"" for storing information.","['Creating (Declaring) PHP Variables', 'PHP Variables', 'Output Variables', 'PHP is a Loosely Typed Language']","['In PHP, a variable starts with the $ sign, followed by the name of the variable:After the execution of the statements above, the variable \n$txt will hold the value \nHello world!, the variable \n$x will hold the value \n5, \nand the variable $y will hold the value \n10.5.Note: When you assign a text value to a variable, put quotes around the value.Note: Unlike other programming languages, PHP has no command \nfor declaring a variable. It is created the moment you first assign a value to \nit.', 'A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume).Rules for PHP variables:', 'The PHP echo statement is often used to output data to the screen.The following example will show how to output text and a variable:The following example will produce the same output as the example above:The following example will output the sum of two variables:Note: You will learn more about the echo statement and how \nto output data to the screen in the next chapter.', 'In the example above, notice that we did not have to tell PHP which data type the variable is.PHP automatically associates a data type to the variable, depending on its value. \nSince the data types are not set in a strict sense, you can do things like \nadding a string to an integer without causing an error.In PHP 7, type declarations were added. This gives an option to specify \nthe data type expected when declaring a function, and by enabling the strict requirement, it will throw a ""Fatal \nError"" on a type mismatch.You will learn more about strict and \nnon-strict requirements, and  \ndata type declarations in the PHP Functions chapter.']","['\n<?php\n$txt = ""Hello world!"";\n$x = 5;$y = 10.5;\n?>\n', '\n<?php\n$txt = ""W3Schools.com"";\n echo ""I love $txt!"";?>\n &&&&&& \n<?php\n$txt = ""W3Schools.com"";\n echo ""I love "" . $txt . ""!"";?>\n &&&&&& \n<?php\n $x = 5;$y = 4;echo $x + $y;?>\n', '', '']","['PHP Variables###&&&|||A variable starts with the $ sign, followed by the name of the variable|||A variable name must start with a letter or the underscore character|||A variable name cannot start with a number|||A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )|||Variable names are case-sensitive ($age and |||  $AGE are two different variables)|||']",[],[]
php||Variables,https://www.w3schools.com/php/php_variables.asp,"Variables are ""containers"" for storing information.","['Creating (Declaring) PHP Variables', 'PHP Variables', 'Output Variables', 'PHP is a Loosely Typed Language']","['In PHP, a variable starts with the $ sign, followed by the name of the variable:After the execution of the statements above, the variable \n$txt will hold the value \nHello world!, the variable \n$x will hold the value \n5, \nand the variable $y will hold the value \n10.5.Note: When you assign a text value to a variable, put quotes around the value.Note: Unlike other programming languages, PHP has no command \nfor declaring a variable. It is created the moment you first assign a value to \nit.', 'A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume).Rules for PHP variables:', 'The PHP echo statement is often used to output data to the screen.The following example will show how to output text and a variable:The following example will produce the same output as the example above:The following example will output the sum of two variables:Note: You will learn more about the echo statement and how \nto output data to the screen in the next chapter.', 'In the example above, notice that we did not have to tell PHP which data type the variable is.PHP automatically associates a data type to the variable, depending on its value. \nSince the data types are not set in a strict sense, you can do things like \nadding a string to an integer without causing an error.In PHP 7, type declarations were added. This gives an option to specify \nthe data type expected when declaring a function, and by enabling the strict requirement, it will throw a ""Fatal \nError"" on a type mismatch.You will learn more about strict and \nnon-strict requirements, and  \ndata type declarations in the PHP Functions chapter.']","['\n<?php\n$txt = ""Hello world!"";\n$x = 5;$y = 10.5;\n?>\n', '\n<?php\n$txt = ""W3Schools.com"";\n echo ""I love $txt!"";?>\n &&&&&& \n<?php\n$txt = ""W3Schools.com"";\n echo ""I love "" . $txt . ""!"";?>\n &&&&&& \n<?php\n $x = 5;$y = 4;echo $x + $y;?>\n', '', '']","['PHP Variables###&&&|||A variable starts with the $ sign, followed by the name of the variable|||A variable name must start with a letter or the underscore character|||A variable name cannot start with a number|||A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )|||Variable names are case-sensitive ($age and |||  $AGE are two different variables)|||']",[],[]
php||Variables Scope,https://www.w3schools.com/php/php_variables_scope.asp,,"['PHP Variables Scope', 'Global and Local Scope', 'PHP The global Keyword', 'PHP The static Keyword']","['In PHP, variables can be declared anywhere in the script.The scope of a variable is the part of the script where the variable can be referenced/used.PHP has three different variable scopes:', 'A variable declared outside a function has a GLOBAL SCOPE and can only \nbe accessed outside a function:A variable declared within a function has a LOCAL SCOPE and can only \nbe accessed within that function:', 'The global keyword is used to access a global variable from within a function.To do this, use the global keyword before the variables (inside the \nfunction):PHP also stores all global variables in an array called \n$GLOBALS[index]. \nThe index holds the name of the variable. This array is also accessible from \nwithin functions and can be used to update global variables directly.The example above can be rewritten like this:', 'Normally, when a function is completed/executed, all of its variables are deleted. \nHowever, sometimes we want a local variable NOT to be deleted. We need it for a \nfurther job.To do this, use the static keyword when you first declare the \nvariable:Then, each time the function is called, that variable will still have the \ninformation it contained from the last time the function was called.Note: The variable is still local to the function.']","['\n <?php$x = 5; // global scopefunction myTest() {\xa0\xa0// using x inside this function will generate an error\xa0\xa0echo ""<p>Variable x inside function is: $x</p>"";} myTest();echo ""<p>Variable x outside function is: $x</p>"";?>\n &&&&&& \n <?phpfunction myTest() {\xa0\xa0$x = 5; // local scope\xa0 echo ""<p>Variable x inside function is: $x</p>"";} myTest();// using x outside the function will generate an errorecho ""<p>Variable x outside function is: $x</p>"";?>\n', ""\n<?php\n$x = 5;$y = 10;\nfunction myTest()\n{\n\xa0\xa0global $x, $y;\n\xa0\n$y = $x + $y;\n}\nmyTest();\necho $y; // outputs 15\n?>\n &&&&&& \n<?php\n$x = 5;\n$y = 10;\n\nfunction myTest()\n{\n\xa0\n$GLOBALS['y'] = $GLOBALS['x'] + $GLOBALS['y'];\n} \n\nmyTest();\necho $y; // outputs 15\n?>\n"", '\n<?phpfunction myTest()\n{\n\xa0\xa0static $x = 0;\n  \xa0 echo $x;\n  \xa0 $x++;\n}\nmyTest();\nmyTest();\nmyTest();?>\n', '']",['PHP Variables Scope###&&&|||local|||global|||static|||'],[],[]
php||echo and print Statements,https://www.w3schools.com/php/php_echo_print.asp,"With PHP, there are two basic ways to get output: echo and print.","['PHP echo and print Statements', 'The PHP echo Statement', 'The PHP print Statement']","['In this tutorial we use echo \nor print in almost every \nexample. So, this chapter contains a little more info about those two output \nstatements.', 'echo and print are more or less the same. They are both used to output data \nto the screen. The differences are small: echo has no return value while print has a return value of 1 so it can be used in \nexpressions. echo can take multiple parameters (although such usage is rare) \nwhile print can take one argument. echo is marginally \nfaster than print.', 'The echo statement can be used with or without parentheses: \necho or echo().Display TextThe following example shows how to output text with the echo \ncommand (notice that the text can contain HTML markup):Display VariablesThe following example shows how to output text and variables with the echo \nstatement:', 'The print statement can be used with or without \nparentheses: \nprint or print().Display TextThe following example shows how to output text with the print \ncommand (notice that the text can contain HTML markup):Display VariablesThe following example shows how to output text and variables with the \nprint statement:']","['\n<?php\n echo ""<h2>PHP is Fun!</h2>"";\n echo ""Hello world!<br>"";echo ""I\'m about to learn PHP!<br>"";\n echo ""This "", ""string "", ""was "", ""made "", ""with multiple parameters."";\n?>\n &&&&&& \n <?php$txt1 = ""Learn PHP"";$txt2 = ""W3Schools.com"";\n $x = 5;$y = 4;\necho ""<h2>"" . $txt1 . ""</h2>"";echo ""Study PHP at \n  "" . $txt2 . ""<br>"";echo $x + $y;?> ', '', '']",[''],[],[]
php||Data Types,https://www.w3schools.com/php/php_datatypes.asp,,"['PHP Data Types', 'PHP String', 'PHP Integer', 'PHP Float', 'PHP Boolean', 'PHP Array', 'PHP Object', 'PHP NULL Value', 'PHP Resource']","['Variables can store data of different types, and different data types can do \ndifferent things.PHP supports the following data types:', 'A string is a sequence of characters, like ""Hello world!"".A string can be any text inside quotes. You can use single or double quotes:', 'An integer data type is a non-decimal number between -2,147,483,648 and \n2,147,483,647.Rules for integers:In the following example $x is an integer. The PHP var_dump() \nfunction returns the data type and value:', 'A float (floating point number) is a number with a decimal point or a number in exponential form.In the following example $x is a float. The PHP var_dump() \nfunction returns the data type and value:', 'A Boolean represents two possible states: TRUE or FALSE.Booleans are often used in conditional testing. You will learn more about \nconditional testing in a later chapter of this tutorial.', 'An array stores multiple values in one single variable.In the following example $cars is an array. The PHP var_dump() \nfunction returns the data type and value:You will learn a lot more about arrays in later chapters of this tutorial.', ""Classes and objects are the two main aspects of object-oriented programming.A class is a template for objects, and an object is an instance of a class.When the individual objects are created, they inherit all the properties and \nbehaviors from the class, but each object will have different values for the \nproperties.Let's assume we have a class named Car. A Car can have properties like model, \ncolor, etc. We can define variables like $model, $color, and so on, to hold the \nvalues of these properties.When the individual objects (Volvo, BMW, Toyota, etc.) are created, they \ninherit all the properties and behaviors from the class, but each object will \nhave different values for the properties.If you create a __construct() function, PHP will automatically call this \nfunction when you create an object from a class."", 'Null is a special data type which can have only one value: NULL.A variable of data type NULL is a variable that has no value assigned to it.Tip: If a variable is created without a value, it is \nautomatically assigned a value of NULL.Variables can also be emptied by setting the value to NULL:', 'The special resource type is not an actual data type. It is the storing of a \nreference to functions and resources external to PHP.A common example of \nusing the resource data type is a database call.We will not talk about the resource type here, since it is an advanced topic.']","['\n <?php $x = ""Hello world!"";$y = \'Hello world!\';echo $x;echo ""<br>""; echo $y;?>', '\n <?php $x = 5985;var_dump($x);?>', '\n <?php $x = 10.365;var_dump($x);?> ', '\n <?php $cars = array(""Volvo"",""BMW"",""Toyota"");var_dump($cars);\n ?> ', '\n <?phpclass Car {\xa0 public $color;\xa0 public $model;\xa0 \n  public function __construct($color, $model) {\xa0\xa0\xa0 \n  $this->color = $color;\xa0\xa0\xa0 $this->model = $model;\xa0 \n  }\xa0 public function message() {\xa0\xa0\xa0 return ""My car \n  is a "" . $this->color . "" "" . $this->model . ""!"";\xa0 }}$myCar \n  = new Car(""black"", ""Volvo"");echo $myCar -> message();echo ""<br>"";$myCar \n  = new Car(""red"", ""Toyota"");echo $myCar -> message();?> ', '\n <?php$x = ""Hello world!"";$x = null;var_dump($x);?> ', '', '', '']","['PHP Data Types###PHP Integer###&&&|||String|||Integer|||Float (floating point numbers - also called double)|||Boolean|||Array|||Object|||NULL|||Resource|||&&&|||An integer must have at least one digit|||An integer must not have a decimal point|||An integer can be either positive or negative|||Integers can be specified in: decimal (base 10), hexadecimal (base 16), octal (base |||  8), or binary (base 2) notation|||']",[],[]
php||Strings,https://www.w3schools.com/php/php_string.asp,"A string is a sequence of characters, like ""Hello world!"".","['PHP String Functions', 'strlen() - Return the Length of a String', 'str_word_count() - Count Words in a String', 'strrev() - Reverse a String', 'strpos() - Search For a Text Within a String', 'str_replace() - Replace Text Within a String', 'Complete PHP String Reference']","['In this chapter we will look at some commonly used functions to manipulate strings.', 'The PHP strlen() function returns the length of a string.', 'The PHP str_word_count() function counts the \nnumber of words in a string.', 'The PHP strrev() function reverses a string.', 'The PHP strpos() function searches for a specific text within a string. If a match is found, the function returns the character position of the first match. If no match is found, it will return FALSE.Tip:  \nThe first character position in a string is 0 (not 1).', 'The PHP str_replace() function replaces some characters with some other \ncharacters in a string.', 'For a complete reference of all string functions, go to our complete PHP String Reference.The PHP string reference contains description and example of use, for each function!']","['\n<?php\necho strlen(""Hello world!""); // outputs 12\n?>\n', '\n<?php\necho str_word_count(""Hello world!""); // outputs 2\n?>\n', '\n<?php\necho strrev(""Hello world!""); // outputs !dlrow olleH\n?>\n', '\n<?php\necho strpos(""Hello world!"", ""world""); // outputs 6\n?>\n', '\n<?php\necho str_replace(""world"", ""Dolly"", ""Hello world!""); // outputs Hello Dolly!\n?>\n', '', '']",[''],[],[]
php||Numbers,https://www.w3schools.com/php/php_numbers.asp,"In this chapter we will look in depth into Integers, Floats, and 
Number Strings.","['PHP Numbers', 'PHP Integers', 'PHP Floats', 'PHP Infinity', 'PHP NaN', 'PHP Numerical Strings', 'PHP Casting Strings and Floats to Integers']","['One thing to notice about PHP is that it provides automatic data type \nconversion.So, if you assign an integer value to a variable, the type of that variable \nwill automatically be an integer. Then, if you assign a string to \nthe same variable, the type will change to a string.This automatic conversion can sometimes break your code.', '2, 256, -256, 10358, -179567 are all integers.An integer is a number without any decimal part.An integer data type is a non-decimal number between -2147483648 and \n2147483647 in 32 bit systems, and between -9223372036854775808 and \n9223372036854775807 in 64 bit systems. A value greater (or lower) than this, will be stored as float, \nbecause it exceeds the limit of an integer.Note: Another important thing to know is that even if 4 * 2.5 is 10, the result is \nstored as float, because one of the operands is a float (2.5).Here are some rules for integers:PHP has the following predefined constants for integers:PHP has the following functions to check if the type of a variable is \ninteger:', 'A float is a number with a decimal point or a number in exponential form.2.0, 256.4, 10.358, 7.64E+5, 5.56E-5 are all floats.The float data type can commonly store a value up to 1.7976931348623E+308 \n(platform dependent), and have a maximum precision of 14 digits.PHP has the following predefined constants for floats (from PHP 7.2):PHP has the following functions to check if the type of a variable is \nfloat:', 'A numeric value that is larger than PHP_FLOAT_MAX is considered infinite.PHP has the following functions to check if a numeric value is finite or \ninfinite:However, the PHP var_dump() function returns the data type and value:', 'NaN stands for Not a Number.NaN is used for impossible mathematical operations.PHP has the following functions to check if a value is not a number:However, the PHP var_dump() function returns the data type and value:', 'The PHP is_numeric() function can be used to find whether a variable is \nnumeric. The function returns true if the variable is a number or a numeric \nstring, false otherwise.', 'Sometimes you need to cast a numerical value into another data type.The (int), (integer), or intval() function are often used to convert a value \nto an integer.']","['\n <?php $x = 5985;var_dump(is_int($x));$x = 59.85;var_dump(is_int($x));?>', '\n <?php $x = 10.365;var_dump(is_float($x));?> ', '\n <?php $x = 1.9e411;var_dump($x);?> ', '\n <?php$x = acos(8);var_dump($x);?> ', '\n <?php $x = 5985;var_dump(is_numeric($x));$x = ""5985"";\n  var_dump(is_numeric($x));$x = ""59.85"" + 100;\n  var_dump(is_numeric($x));$x = ""Hello"";var_dump(is_numeric($x));?>', '', '']","['PHP Integers###PHP Integers###PHP Integers###PHP Floats###PHP Floats###PHP Infinity###PHP NaN###&&&|||An integer must have at least one digit|||An integer must NOT have a decimal point|||An integer can be either positive or negative|||Integers can be specified in three formats: decimal (10-based), hexadecimal (16-based - prefixed with 0x) or octal (8-based - prefixed with 0)|||&&&|||PHP_INT_MAX - The largest integer supported|||PHP_INT_MIN - The smallest integer supported|||PHP_INT_SIZE -\xa0 The size of an integer in bytes|||&&&|||is_int()|||is_integer() - alias of is_int()|||is_long() - alias of is_int()|||&&&|||PHP_FLOAT_MAX - The largest representable floating point number|||PHP_FLOAT_MIN - The smallest representable positive floating point number|||- PHP_FLOAT_MAX - The smallest representable negative floating point |||  number|||PHP_FLOAT_DIG - The number of decimal digits that can be rounded into a |||  float and back without precision loss|||PHP_FLOAT_EPSILON - The smallest representable positive number x, so that |||  x + 1.0 != 1.0|||&&&|||is_float()|||is_double() - alias of is_float()|||&&&|||is_finite()|||is_infinite()|||&&&|||is_nan()|||']",[],[]
php||,https://www.w3schools.com/php/php_math.asp,PHP has a set of math functions that allows you to perform mathematical tasks on numbers.,"['PHP pi() Function', 'PHP min() and max() Functions', 'PHP abs() Function', 'PHP sqrt() Function', 'PHP round() Function', 'Random Numbers', 'Complete PHP Math Reference']","['The pi() function returns the value of PI:', 'The min() and max() functions can be used to find the lowest or highest value in a list of arguments:', 'The abs() function returns the absolute (positive) value of a number:', 'The sqrt() function returns the square root of a number:', 'The round() function rounds a floating-point number \nto its nearest integer:', 'The rand() function generates a random number:To get more control over the random number, you can add the optional min and max parameters to specify the lowest integer and the highest integer to be returned.For example, if you want a random integer between 10 and 100 (inclusive), use \nrand(10, 100):', 'For a complete reference of all math functions, go to our complete PHP Math Reference.The PHP math reference contains description and example of use, for each function.']","['\n  <?phpecho(pi()); // returns 3.1415926535898?>', '\n  <?phpecho(min(0, 150, 30, 20, -8, -200));\xa0 // returns -200echo(max(0, \n  150, 30, 20, -8, -200));\xa0 // returns 150?>', '\n  <?phpecho(abs(-6.7));\xa0 // returns 6.7?>', '\n  <?phpecho(sqrt(64));\xa0 // returns 8?>', '\n  <?phpecho(round(0.60));\xa0 // returns 1echo(round(0.49));\xa0 \n  // returns 0?>', '\n  <?phpecho(rand());?> &&&&&& \n  <?phpecho(rand(10, 100));?>', '']",[''],[],[]
php||Constants,https://www.w3schools.com/php/php_constants.asp,"Constants are like variables except that once they are defined 
they cannot be changed or undefined.","['PHP Constants', 'Create a PHP Constant', 'PHP Constant Arrays', 'Constants are Global']","['A constant is an identifier (name) for a simple value. The value cannot be \nchanged during the script.A valid constant name starts with a letter or underscore (no $ sign before \nthe constant name).Note: Unlike variables, constants are automatically global across \nthe entire script.', 'To create a constant, use the define() function.Parameters:', 'In PHP7, you can create an Array constant using the define() function.', 'Constants are automatically global and can be used across \nthe entire script.']","['\n<?php\n define(""GREETING"", ""Welcome to W3Schools.com!"");echo GREETING;?>\n &&&&&& \n<?php\n define(""GREETING"", ""Welcome to W3Schools.com!"", true);echo greeting;?>\n', '\n<?php\n define(""cars"", [\xa0 ""Alfa Romeo"",\xa0 \n  ""BMW"",\xa0 ""Toyota""]);echo cars[0];?>\n', '', '']",['Create a PHP Constant###&&&|||name: Specifies the name of the constant|||value: Specifies the value of the constant|||case-insensitive: Specifies whether the constant name should be case-insensitive. Default is false|||'],[],[]
php||Operators,https://www.w3schools.com/php/php_operators.asp,,"['PHP Operators', 'PHP Arithmetic Operators', 'PHP Assignment Operators', 'PHP Comparison Operators', 'PHP Increment / Decrement Operators', 'PHP Logical Operators', 'PHP String Operators', 'PHP Array Operators', 'PHP Conditional Assignment Operators']","['Operators are used to perform operations on variables and values.PHP divides the operators in the following groups:', 'The PHP arithmetic operators are used with numeric values to perform common arithmetical operations, \nsuch as addition, subtraction, multiplication etc.', 'The PHP assignment operators are used with numeric values to write a value to a variable.The basic assignment operator in PHP is ""="". It means that the left operand \ngets set to the value of the assignment expression on the right.', 'The PHP comparison operators are used to compare two values (number or string):', ""The PHP increment operators are used to increment a variable's value.The PHP decrement operators are used to decrement a variable's value."", 'The PHP logical operators are used to combine conditional statements.', 'PHP has two operators that are specially designed for strings.', 'The PHP array operators are used to compare arrays.', 'The PHP conditional assignment operators are used to set a value depending on conditions:']","['', '', '', '', '', '', '', '', '']",['PHP Operators###&&&|||Arithmetic operators|||Assignment operators|||Comparison operators|||Increment/Decrement operators|||Logical operators|||String operators|||Array operators|||Conditional assignment operators|||'],"[""Operator|||Name|||Example|||Result|||Show it|||&&&+|||Addition|||$x + $y|||Sum of $x and $y|||Try it »|||&&&-|||Subtraction|||$x - $y|||Difference of $x and $y|||Try it »|||&&&*|||Multiplication|||$x * $y|||Product of $x and $y|||Try it »|||&&&/|||Division|||$x / $y|||Quotient of $x and $y|||Try it »|||&&&%|||Modulus|||$x % $y|||Remainder of $x divided by $y|||Try it »|||&&&**|||Exponentiation|||$x ** $y|||Result of raising $x to the $y'th power|||Try it »|||&&&"", 'Assignment|||Same as... |||Description|||Show it|||&&&x = y|||x = y|||The left operand gets set to the value of the expression on the right|||Try it »|||&&&x += y|||x = x + y|||Addition|||Try it »|||&&&x -= y|||x = x - y|||Subtraction|||Try it »|||&&&x *= y|||x = x * y|||Multiplication|||Try it »|||&&&x /= y|||x = x / y|||Division|||Try it »|||&&&x %= y|||x = x % y|||Modulus|||Try it »|||&&&', 'Operator|||Name|||Example|||Result|||Show it|||&&&==|||Equal|||$x == $y|||Returns true if $x is equal to $y|||Try it »|||&&&===|||Identical|||$x === $y|||Returns true if $x is equal to $y, and they are of the same type|||Try it »|||&&&!=|||Not equal|||$x != $y|||Returns true if $x is not equal to $y|||Try it »|||&&&<>|||Not equal|||$x <> $y|||Returns true if $x is not equal to $y|||Try it »|||&&&!==|||Not identical|||$x !== $y|||Returns true if $x is not equal to $y, or they are not of the same type|||Try it »|||&&&>|||Greater than|||$x > $y|||Returns true if $x is greater than $y|||Try it »|||&&&<|||Less than|||$x < $y|||Returns true if $x is less than $y|||Try it »|||&&&>=|||Greater than or equal to|||$x >= $y|||Returns true if $x is greater than or equal to $y|||Try it »|||&&&<=|||Less than or equal to|||$x <= $y|||Returns true if $x is less than or equal to $y|||Try it »|||&&&<=>|||Spaceship|||$x <=> $y|||Returns an integer less than, equal to, or greater than zero, depending on \nif $x is less than, equal to, or greater than $y. Introduced in PHP 7.|||Try it »|||&&&', 'Operator|||Name |||Description|||Show it|||&&&++$x|||Pre-increment|||Increments $x by one, then returns $x|||Try it »|||&&&$x++|||Post-increment|||Returns $x, then increments $x by one|||Try it »|||&&&--$x|||Pre-decrement|||Decrements $x by one, then returns $x|||Try it »|||&&&$x--|||Post-decrement|||Returns $x, then decrements $x by one|||Try it »|||&&&', 'Operator|||Name|||Example|||Result|||Show it|||&&&and|||And|||$x and $y|||True if both $x and $y are true|||Try it »|||&&&or|||Or|||$x or $y|||True if either $x or $y is true|||Try it »|||&&&xor|||Xor|||$x xor $y|||True if either $x or $y is true, but not both|||Try it »|||&&&&&|||And|||$x && $y|||True if both $x and $y are true|||Try it »|||&&&|||||Or|||$x || $y|||True if either $x or $y is true|||Try it »|||&&&!|||Not|||!$x|||True if $x is not true|||Try it »|||&&&', 'Operator|||Name|||Example|||Result|||Show it|||&&&.|||Concatenation|||$txt1 . $txt2|||Concatenation of $txt1 and $txt2|||Try it »|||&&&.=|||Concatenation assignment|||$txt1 .= $txt2|||Appends $txt2 to $txt1|||Try it »|||&&&', 'Operator|||Name|||Example|||Result|||Show it|||&&&+|||Union|||$x + $y|||Union of $x and $y|||Try it »|||&&&==|||Equality|||$x == $y|||Returns true if $x and $y have the same key/value pairs|||Try it »|||&&&===|||Identity|||$x === $y|||Returns true if $x and $y have the same key/value pairs in the same order and of the same types|||Try it »|||&&&!=|||Inequality|||$x != $y|||Returns true if $x is not equal to $y|||Try it »|||&&&<>|||Inequality|||$x <> $y|||Returns true if $x is not equal to $y|||Try it »|||&&&!==|||Non-identity|||$x !== $y|||Returns true if $x is not identical to $y|||Try it »|||&&&', 'Operator|||Name|||Example|||Result|||Show it|||&&&?:|||Ternary|||$x = expr1 ? expr2 : expr3|||Returns the value of $x.The value of $x is expr2 if expr1 \n= TRUE.The value of $x is expr3 if expr1 = FALSE|||Try it »|||&&&??|||Null coalescing|||$x = expr1 ?? expr2|||Returns the value of $x.The value of $x is expr1 if expr1 \nexists, and is not NULL.If expr1 does not exist, or is NULL, the value of $x is\nexpr2.Introduced in PHP 7|||Try it »|||&&&']",[]
php||if...else...elseif,https://www.w3schools.com/php/php_if_else.asp,Conditional statements are used to perform different actions based on different conditions.,"['PHP Conditional Statements', 'PHP - The if Statement', 'PHP - The if...else Statement', 'PHP - The if...elseif...else Statement', 'PHP - The switch Statement']","['Very often when you write code, you want to perform different actions for \ndifferent conditions. You can use conditional statements in your code to do this.In PHP we have the following conditional statements:', 'The if statement executes some code if one condition is true.', 'The if...else statement executes some code if a condition is true and \nanother code if that condition is false.', 'The if...elseif...else statement executes different codes for more than two \nconditions.', 'The switch statement will be explained in the next chapter.']","['\n<?php\n$t = date(""H"");\nif ($t < ""20"") {\n\xa0\xa0echo ""Have a good day!"";\n }\n?>\n', '\n<?php\n$t = date(""H"");\nif ($t < ""20"") {\n\xa0\necho ""Have a good day!"";\n }\nelse {\n\xa0\xa0echo \n""Have a good night!"";\n }\n?>\n', '\n<?php\n$t = date(""H"");\nif ($t < ""10"") {\n\xa0\xa0echo ""Have a good morning!"";\n }\nelseif ($t < ""20"") {\n  \xa0 echo ""Have a good day!"";\n } else {\n\xa0\xa0echo ""Have a good night!"";\n }\n?>\n', '', '']",['PHP Conditional Statements###&&&|||if statement - executes some code if one condition is true|||if...else statement - executes some code if a condition is true and another code if that condition is false|||if...elseif...else statement  - executes different codes for more than two conditions|||switch statement - selects one of many blocks of code to be executed|||'],[],[]
php||switch,https://www.w3schools.com/php/php_switch.asp,The switch statement is used to perform different actions based on different conditions.,['The PHP switch Statement'],"['Use the switch statement to select one of many blocks \nof code to be executed.This is how it works: First we have a single expression n (most often a\nvariable), that is evaluated once. The value of the expression is then compared\nwith the values for each case in the structure. If there is a match, the block\nof code associated with that case is executed. Use break to prevent the\ncode from running into the next case automatically. The default statement is used if no \nmatch is found.']","['\n <?php\n $favcolor = ""red"";\n switch ($favcolor)\n {\n \xa0\xa0case ""red"":\n  \xa0\xa0\xa0 echo ""Your favorite color is red!"";\n  \xa0\xa0\xa0 break;\n \xa0\n case ""blue"":\n  \xa0\xa0\xa0 echo ""Your favorite color is blue!"";\n  \xa0\xa0\xa0 break;\n \xa0\n case ""green"":\n \xa0\xa0\xa0\xa0echo ""Your favorite color is green!"";\n \xa0\xa0\xa0\n break;\n \xa0\n default:\n  \xa0\xa0\xa0 echo ""Your favorite color is neither red, blue, nor green!"";\n }\n ?>\n']",[''],[],[]
php||Loops,https://www.w3schools.com/php/php_looping.asp,"In the following chapters you will learn how to repeat code by 
using loops in PHP.",['PHP Loops'],"['Often when you write code, you want the same block of code to run over and \nover again a certain number of times. So, instead of adding several almost equal code-lines in a script, we \ncan use loops.Loops are used to execute the same block of code again and again, as long as \na certain condition is true.In PHP, we have the following loop types:The following chapters will explain and give examples of each loop type.']",[''],"['PHP Loops###&&&|||while - loops through a block of code as long as the specified condition is true|||do...while - loops through a block of code once, and then repeats the loop |||  as long as the specified condition is true|||for - loops through a block of code a specified number of times|||foreach - loops through a block of code for each element in an |||  array|||']",[],[]
php||Loops,https://www.w3schools.com/php/php_looping.asp,"In the following chapters you will learn how to repeat code by 
using loops in PHP.",['PHP Loops'],"['Often when you write code, you want the same block of code to run over and \nover again a certain number of times. So, instead of adding several almost equal code-lines in a script, we \ncan use loops.Loops are used to execute the same block of code again and again, as long as \na certain condition is true.In PHP, we have the following loop types:The following chapters will explain and give examples of each loop type.']",[''],"['PHP Loops###&&&|||while - loops through a block of code as long as the specified condition is true|||do...while - loops through a block of code once, and then repeats the loop |||  as long as the specified condition is true|||for - loops through a block of code a specified number of times|||foreach - loops through a block of code for each element in an |||  array|||']",[],[]
php||while,https://www.w3schools.com/php/php_looping_while.asp,"The while loop - Loops through 
a block of code as long as the specified condition is true.",['The PHP while Loop'],['The while loop executes a block of code as long as the specified condition is true.The example below displays the numbers from 1 to 5:This example counts to 100 by tens:'],"['\n <?php $x = 1; while($x <= 5) {\xa0 echo ""The number is: $x <br>"";\xa0\xa0$x++;} ?>  &&&&&& \n <?php $x = 0; while($x <= 100) {\xa0\xa0echo ""The number is: $x <br>"";\n  \xa0 $x+=10;} ?> ']","['The PHP while Loop###The PHP while Loop###&&&|||$x = 1; - Initialize the loop counter ($x), and set the start value to 1|||$x <= 5 - Continue the loop as long as $x is less than or equal to 5|||$x++; - Increase the loop counter value by 1 for each iteration|||&&&|||$x = 0; - Initialize the loop counter ($x), and set the start value to 0|||$x <= 100 - Continue the loop as long as $x is less than or equal to 100|||$x+=10; - Increase the loop counter value by 10 for each iteration|||']",[],[]
php||do while,https://www.w3schools.com/php/php_looping_do_while.asp,"The do...while loop - Loops 
through a block of code once, and then repeats the loop as long as the specified 
condition is true.",['The PHP do...while Loop'],"['The do...while loop will always execute the block of code once, it \nwill then check the condition, and repeat the loop while the specified condition is true.The example below first sets a variable $x to 1 ($x = 1). Then, the do while \nloop will write some output, and then increment the variable $x with 1. Then the condition is checked (is \n$x less than, or equal to 5?), and the loop will continue to run as long as $x is less than, or equal to 5:This example sets the $x variable to 6, then it runs the loop, \nand then the condition is checked:']",[''],[''],[],[]
php||for,https://www.w3schools.com/php/php_looping_for.asp,The for loop - Loops through a block of code a specified number of times.,['The PHP for Loop'],['The for loop is used when you know in advance how many times the script should run.Parameters:The example below displays the numbers from 0 to 10:This example counts to 100 by tens:'],"['\n<?php for ($x = 0; $x <= 10; $x++)\n{\n \xa0\xa0echo ""The number is: $x <br>"";} ?>  &&&&&& \n<?php for ($x = 0; $x <= 100; $x+=10)\n{\n  \xa0 echo ""The number is: $x <br>"";} ?> ']","['The PHP for Loop###The PHP for Loop###The PHP for Loop###&&&|||init counter: Initialize the loop counter value|||test counter: Evaluated for each loop iteration. If it evaluates to TRUE, the loop continues. If it evaluates to FALSE, the loop ends.|||increment counter: Increases the loop counter value|||&&&|||$x = 0; - Initialize the loop counter ($x), and set the start value to 0|||$x <= 10; - Continue the loop as long as $x is less than or equal to 10|||$x++ - Increase the loop counter value by 1 for each iteration|||&&&|||$x = 0; - Initialize the loop counter ($x), and set the start value to 0|||$x <= 100; - Continue the loop as long as $x is less than or equal to 100|||$x+=10 - Increase the loop counter value by 10 for each iteration|||']",[],[]
php||foreach,https://www.w3schools.com/php/php_looping_foreach.asp,"The foreach loop - Loops 
through a block of code for each element in an array.",['The PHP foreach Loop'],"['The foreach loop works only on arrays, and is used to loop through each key/value pair in an array.For every loop iteration, the value of the \ncurrent array element is assigned to $value and the array pointer is moved by \none, until it reaches the last array element.The following example will output the values of  the \ngiven array ($colors):The following example will output both the keys and the values of  the \ngiven array ($age):You will learn more about arrays in the PHP Arrays chapter.']",[''],[''],[],[]
php||Break and Continue,https://www.w3schools.com/php/php_looping_break.asp,,"['PHP Break', 'PHP Continue', 'Break and Continue in While Loop']","['You have already seen the break statement used in an earlier chapter of this tutorial. It was used to ""jump out"" of a switch statement.The break statement can also be used to jump out of a loop.This example jumps out of the loop when x is equal to \n4:', 'The continue statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.This example skips the value of 4:', 'You can also use break and continue in while loops:']","['\n  <?php for ($x = 0; $x < 10; $x++) {\xa0 if ($x == 4) {\xa0\xa0\xa0 \n  break;\xa0 }\xa0 echo ""The number is: $x <br>"";}?>', '\n  <?php for ($x = 0; $x < 10; $x++) {\xa0 if ($x == 4) {\xa0\xa0\xa0 \n  continue;\xa0 }\xa0 echo ""The number is: $x <br>"";}?>', '']",[''],[],[]
php||Functions,https://www.w3schools.com/php/php_functions.asp,The real power of PHP comes from its functions.,"['PHP Built-in Functions', 'PHP User Defined Functions', 'Create a User Defined Function in PHP', 'PHP Function Arguments', 'PHP is a Loosely Typed Language', 'PHP Default Argument Value', 'PHP Functions - Returning values', 'PHP Return Type Declarations', 'Passing Arguments by Reference']","['PHP has more \nthan 1000 built-in functions, and in addition you can create your own custom \nfunctions.', 'PHP has over 1000 built-in functions that can be called directly, from within \na script, to perform \na specific task.Please check out our PHP reference for a complete overview of the\nPHP built-in functions.', 'Besides the built-in PHP functions, it is possible to create your own functions.', 'A user-defined function declaration starts with the word function:Tip: Give the function a name that reflects what the \nfunction does!In the example below, we create a function named ""writeMsg()"". The opening \ncurly brace ( { ) indicates the beginning of the function code, and the closing \ncurly brace ( } ) indicates the end of the function. The function outputs ""Hello \nworld!"". To call the function, just write its name followed by brackets ():', 'Information can be passed to functions through arguments. An argument is just \nlike a variable.Arguments are specified after the function name, inside the parentheses. You \ncan add as many arguments as you want, just separate them with a comma. The following example has a function with one argument ($fname). When the \nfamilyName() function is called, we also pass along a name (e.g. Jani), and the \nname is used inside the function, which outputs several different first names, \nbut an equal last name:The following example has a function with two arguments ($fname and $year):', 'In the example above, notice that we did not have to tell PHP which data type the variable is.PHP automatically associates a data type to the variable, depending on its value. \nSince the data types are not set in a strict sense, you can do things like \nadding a string to an integer without causing an error.In PHP 7, type declarations were added. This gives us an option to specify \nthe expected data type when declaring a function, and by adding the strict \ndeclaration, it will throw a ""Fatal \nError"" if the data type mismatches.In the following example we try to send both a number and a string to the \nfunction without using strict:To specify strict we need to set declare(strict_types=1);. \nThis must be on the very first line of the PHP file.In the following example we try to send both a number and a string to the \nfunction, but here we have added the strict \ndeclaration:', 'The following example shows how to use a default parameter. If we call the \nfunction setHeight() without arguments it takes the default value as argument:', 'To let a function return a value, use the return statement:', 'PHP 7 also supports Type Declarations for the return \nstatement. Like with the type declaration for function arguments, by enabling the strict requirement, it will throw a ""Fatal \nError"" on a type mismatch.To declare a type for the function return, add a colon (\n: ) and the type right before the opening curly \n( { )bracket when declaring the function.In the following example we specify the return type for the function:You can specify a different return type, than the argument types, but make \nsure the return is the correct type:', 'In PHP, arguments are usually passed by value, which means that a copy of the value is\nused in the function and the variable that was passed into the function cannot be changed.When a function argument is passed by reference, changes to the argument also change\nthe variable that was passed in. To turn a function argument into a reference, the &\noperator is used:']","['\n <?phpfunction writeMsg() {\xa0\xa0echo ""Hello world!"";\n }writeMsg(); // call the function?>', '\n <?phpfunction familyName($fname) {\xa0 echo ""$fname Refsnes.<br>"";\n }familyName(""Jani"");familyName(""Hege"");\n familyName(""Stale"");familyName(""Kai Jim"");familyName(""Borge"");?> &&&&&& \n <?phpfunction familyName($fname, $year) {\xa0 echo ""$fname Refsnes. Born in $year <br>"";}familyName(""Hege"", ""1975"");\n familyName(""Stale"", ""1978"");familyName(""Kai Jim"", ""1983"");?>', '\n  <?phpfunction addNumbers(int $a, int $b) {\xa0\xa0return $a \n  + $b;}\n  echo addNumbers(5, ""5 days""); // since strict is NOT enabled ""5 days"" is \n  changed to int(5), and it will return 10?>  &&&&&& \n  <?php declare(strict_types=1); // strict requirementfunction \n  addNumbers(int $a, int $b) {\xa0\xa0return $a + $b;}echo addNumbers(5, ""5 \n  days""); // since strict is enabled and ""5 days"" is not an integer, an \n  error will be thrown?>\n', '\n <?php declare(strict_types=1); // strict requirementfunction setHeight(int $minheight = 50) {\xa0\xa0echo ""The height is : $minheight <br>"";}setHeight(350);setHeight(); // will use the default value of 50setHeight(135);setHeight(80);?>', '\n <?php declare(strict_types=1); // strict requirementfunction sum(int $x, \n  int $y) {\xa0 $z = $x + $y;\xa0\xa0return $z;}\n echo ""5 + 10 = "" . sum(5, 10) . ""<br>"";echo ""7 + 13 = "" . sum(7, 13) . ""<br>"";echo ""2 + 4 = "" . sum(2, 4);?>', '\n  <?php declare(strict_types=1); // strict requirementfunction addNumbers(float \n  $a, float $b) : float {\xa0\xa0return $a + $b;}echo addNumbers(1.2, 5.2);\n  ?>  &&&&&& \n  <?php declare(strict_types=1); // strict requirementfunction addNumbers(float \n  $a, float $b) : int {\xa0 return (int)($a + $b);}\n  echo addNumbers(1.2, 5.2); ?>\n', '\n  <?phpfunction add_five(&$value) {\xa0 $value += 5;}$num \n  = 2;add_five($num);\n  echo $num;?> ', '', '']",['PHP User Defined Functions###&&&|||A function is a block of statements that can be used repeatedly in a program.|||A function will not execute automatically when a page loads.|||A function will be executed by a call to the function.|||'],[],[]
php||Arrays,https://www.w3schools.com/php/php_arrays.asp,An array stores multiple values in one single variable:,"['What is an Array?', 'Create an Array in PHP', 'Get The Length of an Array - The count() Function', 'Complete PHP Array Reference']","['An array is a special variable, which can hold more than one value at a time.If you have a list of items (a list of car names, for example), storing the cars in single variables could look like this:However, what if you want to loop through the cars and find a specific one? And what if you had not 3 cars, but 300?The solution is to create an array!An array can hold many values under a single name, and you can access the values by referring to an index number.', 'In PHP, the array() function is used to create an array:In PHP, there are three types of arrays:', 'The count() function is used to return the length (the number of elements) of \nan array:', 'For a complete reference of all array functions, go to our complete PHP Array Reference.The reference contains a brief description, and examples of use, for each function!']","['\n<?php\n$cars = array(""Volvo"", ""BMW"", ""Toyota"");\necho ""I like "" . $cars[0] . "", "" . $cars[1] . "" and "" . $cars[2] . ""."";\n?>\n', '\n<?php\n $cars = array(""Volvo"", ""BMW"", ""Toyota"");echo count($cars);?>\n', '', '']",['Create an Array in PHP###&&&|||Indexed arrays - Arrays with a numeric index|||Associative arrays - Arrays with named keys|||Multidimensional arrays - Arrays containing one or more arrays|||'],[],[]
php||Arrays,https://www.w3schools.com/php/php_arrays.asp,An array stores multiple values in one single variable:,"['What is an Array?', 'Create an Array in PHP', 'Get The Length of an Array - The count() Function', 'Complete PHP Array Reference']","['An array is a special variable, which can hold more than one value at a time.If you have a list of items (a list of car names, for example), storing the cars in single variables could look like this:However, what if you want to loop through the cars and find a specific one? And what if you had not 3 cars, but 300?The solution is to create an array!An array can hold many values under a single name, and you can access the values by referring to an index number.', 'In PHP, the array() function is used to create an array:In PHP, there are three types of arrays:', 'The count() function is used to return the length (the number of elements) of \nan array:', 'For a complete reference of all array functions, go to our complete PHP Array Reference.The reference contains a brief description, and examples of use, for each function!']","['\n<?php\n$cars = array(""Volvo"", ""BMW"", ""Toyota"");\necho ""I like "" . $cars[0] . "", "" . $cars[1] . "" and "" . $cars[2] . ""."";\n?>\n', '\n<?php\n $cars = array(""Volvo"", ""BMW"", ""Toyota"");echo count($cars);?>\n', '', '']",['Create an Array in PHP###&&&|||Indexed arrays - Arrays with a numeric index|||Associative arrays - Arrays with named keys|||Multidimensional arrays - Arrays containing one or more arrays|||'],[],[]
php||Indexed Arrays,https://www.w3schools.com/php/php_arrays_indexed.asp,,"['PHP Indexed Arrays', 'Loop Through an Indexed Array', 'Complete PHP Array Reference']","['There are two ways to create indexed arrays:The index can be assigned automatically (index \nalways starts at 0), like this:or the index can be assigned manually:The following example creates an indexed array named $cars, assigns three \nelements to it, and then prints a text containing the array values:', 'To loop through and print all the values of an indexed array, you could use a for loop, like this:', 'For a complete reference of all array functions, go to our complete PHP Array Reference.The reference contains a brief description, and examples of use, for each function!']","['\n<?php\n $cars = array(""Volvo"", ""BMW"", ""Toyota"");echo ""I like "" . $cars[0] . "", "" . $cars[1] . "" and "" . $cars[2] . ""."";\n?>\n', '\n<?php\n $cars = array(""Volvo"", ""BMW"", ""Toyota"");\n $arrlength = count($cars);for($x = 0; $x < $arrlength; $x++) {\xa0 echo $cars[$x];\xa0\xa0echo ""<br>"";}?>\n', '']",[''],[],[]
php||Associative Arrays,https://www.w3schools.com/php/php_arrays_associative.asp,,"['PHP Associative Arrays', 'Loop Through an Associative Array', 'Complete PHP Array Reference']","['Associative arrays are arrays that use named keys that you assign to them.There are two ways to create an associative array:\xa0or:The named keys can then be used in a script:', 'To loop through and print all the values of an associative array, you could use a foreach loop, like this:', 'For a complete reference of all array functions, go to our complete PHP Array Reference.The reference contains a brief description, and examples of use, for each function!']","['\n<?php\n\n$age = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");\necho ""Peter is "" . $age[\'Peter\'] . "" years old."";\n?>\n', '\n <?php$age = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");\nforeach($age as $x => $x_value) {\xa0 echo ""Key="" . $x . "", Value="" . $x_value;\xa0\xa0echo ""<br>"";}?>\n', '']",[''],[],[]
php||Multidimensional Arrays,https://www.w3schools.com/php/php_arrays_multidimensional.asp,"In the previous pages, we have described arrays that are a 
single list of key/value pairs.","['PHP - Multidimensional Arrays', 'PHP - Two-dimensional Arrays', 'Complete PHP Array Reference']","['However, sometimes you want to store values with more than one \nkey. For this, we have multidimensional arrays.', 'A multidimensional array is an array containing one or more arrays.PHP supports multidimensional arrays that are two, three, four, five, or \nmore levels deep. However, arrays more than three levels deep are hard to manage for most people.', 'A two-dimensional array is an array of arrays (a three-dimensional array is an array of arrays of arrays).First, take a look at the following table:We can store the data from the table above in a two-dimensional array, like this:Now the two-dimensional $cars array contains four arrays, and it has two indices: row and column.To get access to the elements of the $cars array we must point to the two \nindices (row and column):We can also put a for loop inside another for loop to get the elements of the \n$cars array (we still have to point to the two indices):', 'For a complete reference of all array functions, go to our complete PHP Array Reference.The reference contains a brief description, and examples of use, for each function!']","['\n <?phpecho $cars[0][0]."": In stock: "".$cars[0][1]."", sold: "".$cars[0][2]."".<br>"";echo $cars[1][0]."": In stock: "".$cars[1][1]."", sold: "".$cars[1][2]."".<br>"";echo $cars[2][0]."": In stock: "".$cars[2][1]."", sold: "".$cars[2][2]."".<br>"";echo $cars[3][0]."": In stock: "".$cars[3][1]."", sold: "".$cars[3][2]."".<br>"";?> &&&&&& \n <?phpfor ($row = 0; $row < 4; $row++) {\xa0 echo ""<p><b>Row number $row</b></p>"";\xa0 echo ""<ul>"";\xa0 for ($col = 0; $col < 3; $col++) {\xa0\xa0\xa0 echo ""<li>"".$cars[$row][$col].""</li>"";\xa0 }\xa0 echo ""</ul>"";}?>', '', '']",[''],['Name|||Stock|||Sold|||&&&Volvo|||22|||18|||&&&BMW|||15|||13|||&&&Saab|||5|||2|||&&&Land Rover|||17|||15|||&&&'],[]
php||Sorting Arrays,https://www.w3schools.com/php/php_arrays_sort.asp,"The elements in an array can be sorted in alphabetical or numerical order, descending or ascending.","['PHP - Sort Functions For Arrays', 'Sort Array in Ascending Order - sort()', 'Sort Array in Descending Order - rsort()', 'Sort Array (Ascending Order), According to Value - asort()', 'Sort Array (Ascending Order), According to Key - ksort()', 'Sort Array (Descending Order), According to Value - arsort()', 'Sort Array (Descending Order), According to Key - krsort()', 'Complete PHP Array Reference']","['In this chapter, we will go through the following PHP array sort functions:', 'The following example sorts the elements of the $cars array in ascending alphabetical order:The following example sorts the elements of the $numbers array in ascending \nnumerical order:', 'The following example sorts the elements of the $cars array in descending alphabetical order:The following example sorts the elements of the $numbers array in descending \nnumerical order:', 'The following example sorts an associative array in ascending order, \naccording to the value:', 'The following example sorts an associative array in ascending order, \naccording to the key:', 'The following example sorts an associative array in descending order, \naccording to the value:', 'The following example sorts an associative array in descending order, \naccording to the key:', 'For a complete reference of all array functions, go to our complete PHP Array Reference.The reference contains a brief description, and examples of use, for each function!']","['\n<?php\n $cars = array(""Volvo"", ""BMW"", ""Toyota"");sort($cars);?>\n &&&&&& \n<?php\n $numbers = array(4, 6, 2, 22, 11);sort($numbers);?>\n', '\n<?php\n $cars = array(""Volvo"", ""BMW"", ""Toyota"");rsort($cars);?>\n &&&&&& \n<?php\n $numbers = array(4, 6, 2, 22, 11);rsort($numbers);?>\n', '\n<?php\n $age = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");\n asort($age);?>\n', '\n<?php\n $age = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");\n ksort($age);?>\n', '\n<?php\n $age = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");\n arsort($age);?>\n', '\n<?php\n $age = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");\n krsort($age);?>\n', '', '']","['PHP - Sort Functions For Arrays###&&&|||sort() - sort arrays in ascending order|||rsort() - sort arrays in descending order|||asort() - sort associative arrays in ascending order, according to the value|||ksort() - sort associative arrays in ascending order, according to the key|||arsort() - sort associative arrays in descending order, according to the value|||krsort() - sort associative arrays in descending order, according to the key|||']",[],[]
php||Global Variables,https://www.w3schools.com/php/php_superglobals.asp,"Superglobals were introduced in PHP 4.1.0, and are built-in 
variables that are always available in all scopes.",['PHP Global Variables - Superglobals'],"['Some predefined variables in PHP are ""superglobals"", which means that they \nare always accessible, regardless of scope - and you can access them from any \nfunction, class or file without having to do anything special.The PHP superglobal variables are:The next chapters will explain some of the superglobals, and the rest will be \nexplained in later chapters.']",[''],['PHP Global Variables - Superglobals###&&&|||$GLOBALS|||$_SERVER|||$_REQUEST|||$_POST|||$_GET|||$_FILES|||$_ENV|||$_COOKIE|||$_SESSION|||'],[],[]
php||Global Variables,https://www.w3schools.com/php/php_superglobals.asp,"Superglobals were introduced in PHP 4.1.0, and are built-in 
variables that are always available in all scopes.",['PHP Global Variables - Superglobals'],"['Some predefined variables in PHP are ""superglobals"", which means that they \nare always accessible, regardless of scope - and you can access them from any \nfunction, class or file without having to do anything special.The PHP superglobal variables are:The next chapters will explain some of the superglobals, and the rest will be \nexplained in later chapters.']",[''],['PHP Global Variables - Superglobals###&&&|||$GLOBALS|||$_SERVER|||$_REQUEST|||$_POST|||$_GET|||$_FILES|||$_ENV|||$_COOKIE|||$_SESSION|||'],[],[]
php||,https://www.w3schools.com/php/php_superglobals_globals.asp,Super global variables are built-in variables that are always available in all scopes.,['PHP $GLOBALS'],"['$GLOBALS is a PHP super global variable which is used to access global variables from anywhere in the PHP script (also from within \nfunctions or methods). PHP stores all global variables in an array called $GLOBALS[index]. \nThe index holds the name of the variable.The example below shows how to use the super global variable $GLOBALS:In the example above, since z is a variable present within the $GLOBALS \narray, it is also accessible from outside the function! ']",[''],[''],[],[]
php||,https://www.w3schools.com/php/php_superglobals_server.asp,"Super global variables are built-in 
variables that are always available in all scopes.",['PHP $_SERVER'],"['$_SERVER is a PHP super global variable which holds information about headers, \npaths, and script locations. The example below shows how to use some of the elements in $_SERVER:The following table lists the most important elements that can go inside $_SERVER:']",[''],[''],"[""Element/Code|||Description|||&&&$_SERVER['PHP_SELF']|||Returns the filename of the currently executing script|||&&&$_SERVER['GATEWAY_INTERFACE']|||Returns the version of the Common Gateway Interface (CGI) the server is \nusing|||&&&$_SERVER['SERVER_ADDR']|||Returns the IP address of the host server|||&&&$_SERVER['SERVER_NAME']|||Returns the name of the host server (such as www.w3schools.com)|||&&&$_SERVER['SERVER_SOFTWARE']|||Returns the server identification string (such as Apache/2.2.24)|||&&&$_SERVER['SERVER_PROTOCOL']|||Returns the name and revision of the information protocol (such as HTTP/1.1)|||&&&$_SERVER['REQUEST_METHOD']|||Returns the request method used to access the page (such as POST)|||&&&$_SERVER['REQUEST_TIME']|||Returns the timestamp of the start of the request (such as 1377687496)|||&&&$_SERVER['QUERY_STRING']|||Returns the query string if the page is accessed via a query string|||&&&$_SERVER['HTTP_ACCEPT']|||Returns the Accept header from the current request |||&&&$_SERVER['HTTP_ACCEPT_CHARSET']|||Returns the Accept_Charset header from the current request (such as \nutf-8,ISO-8859-1)|||&&&$_SERVER['HTTP_HOST']|||Returns the Host header from the current request |||&&&$_SERVER['HTTP_REFERER']|||Returns the complete URL of the current page (not reliable because not all \nuser-agents support it)|||&&&$_SERVER['HTTPS']|||Is the script queried through a secure HTTP protocol|||&&&$_SERVER['REMOTE_ADDR']|||Returns the IP address from where the user is viewing the current page|||&&&$_SERVER['REMOTE_HOST']|||Returns the Host name from where the user is viewing the current page|||&&&$_SERVER['REMOTE_PORT']|||Returns the port being used on the user's machine to communicate with the \nweb server|||&&&$_SERVER['SCRIPT_FILENAME']|||Returns the absolute pathname of the currently executing script|||&&&$_SERVER['SERVER_ADMIN']|||Returns the value given to the SERVER_ADMIN directive in the web server \nconfiguration file (if your script runs on a virtual host, it will be the value \ndefined for that virtual host) (such as someone@w3schools.com)|||&&&$_SERVER['SERVER_PORT']|||Returns the port on the server machine being used by the web server for \ncommunication (such as 80)|||&&&$_SERVER['SERVER_SIGNATURE']|||Returns the server version and virtual host name which are added to \nserver-generated pages|||&&&$_SERVER['PATH_TRANSLATED']|||Returns the file system based path to the current script|||&&&$_SERVER['SCRIPT_NAME']|||Returns the path of the current script|||&&&$_SERVER['SCRIPT_URI']|||Returns the URI of the current page|||&&&""]",[]
php||,https://www.w3schools.com/php/php_superglobals_request.asp,"Super global variables are built-in 
variables that are always available in all scopes.",['PHP $_REQUEST'],"['PHP $_REQUEST is a PHP super global variable which is used to collect data after submitting an HTML form.The example below shows a form with an input field and a submit button. When \na user submits the data by clicking on ""Submit"", the form data is sent to the \nfile specified in the action attribute of the <form> tag. In this example, we \npoint to this file itself for processing form data. If you wish to use another \nPHP file to process form data, replace that with the filename of your \nchoice. Then, we can use the super global variable $_REQUEST to collect the \nvalue of the input field:']",[''],[''],[],[]
php||,https://www.w3schools.com/php/php_superglobals_post.asp,"Super global variables are built-in 
variables that are always available in all scopes.",['PHP $_POST'],"['PHP $_POST is a PHP super global variable which is used to collect form data after submitting an HTML form \nwith method=""post"". \n$_POST is also widely used to pass variables.The example below shows a form with an input field and a submit button. When \na user submits the data by clicking on ""Submit"", the form data is sent to the \nfile specified in the action attribute of the <form> tag. In this example, we \npoint to the file itself for processing form data. If you wish to use another \nPHP file to process form data, replace that with the filename of your \nchoice. Then, we can use the super global variable $_POST to collect the \nvalue of the input field:Tip: You will learn more about $_POST in the PHP Forms chapter.']",[''],[''],[],[]
php||,https://www.w3schools.com/php/php_superglobals_get.asp,"Super global variables are built-in 
variables that are always available in all scopes.",['PHP $_GET'],"['PHP $_GET is a PHP super global variable which is used to collect form data after submitting an HTML form \nwith method=""get"".$_GET can also collect data sent in the URL.Assume we have an HTML page that contains a hyperlink with parameters:When a user clicks on the link ""Test $GET"", the parameters ""subject"" and \n""web"" are sent to ""test_get.php"", and you can then access their values \nin ""test_get.php"" with $_GET.The example below shows the code in ""test_get.php"":Tip: You will learn more about $_GET in the PHP Forms chapter.']",[''],[''],[],[]
php||Regular Expressions,https://www.w3schools.com/php/php_regex.asp,,"['What is a Regular Expression?', 'Syntax', 'Regular Expression Functions', 'Using preg_match()', 'Using preg_match_all()', 'Using preg_replace()', 'Regular Expression Modifiers', 'Regular Expression Patterns', 'Metacharacters', 'Quantifiers', 'Grouping', 'Complete RegExp Reference']","['A regular expression is a sequence of characters that forms a search pattern.\nWhen you search for data in a text, you can use this search pattern to describe what you\nare searching for.A regular expression can be a single character, or a more complicated pattern.Regular expressions can be used to perform all types of text search and text replace\noperations.', 'In PHP, regular expressions are strings composed of delimiters, a pattern and optional\nmodifiers.In the example above, / is the delimiter, w3schools is the pattern that is being searched for,\nand i is a modifier that makes the search case-insensitive.The delimiter can be any character that is not a letter, number, backslash or space. The\nmost common delimiter is the forward slash (/), but when your pattern contains forward\nslashes it is convenient to choose other delimiters such as # or ~.', 'PHP provides a variety of functions that allow you to use regular expressions. The\npreg_match(), preg_match_all() and preg_replace() functions are some of the\nmost commonly used ones:', 'The preg_match() function will tell you whether a string contains matches of a pattern.', 'The preg_match_all() function will tell you how many matches were found for a pattern in a\nstring.', 'The preg_replace() function will replace all of the matches of the pattern in a string with\nanother string.', 'Modifiers can change how a search is performed.', 'Brackets are used to find a range of characters:Metacharacters are characters with a special meaning:Quantifiers define quantities:', 'You can use parentheses ( ) to apply quantifiers to entire patterns. They also can be used\nto select parts of the pattern to be used as a match.', 'For a complete reference, go to our Complete PHP Regular Expression Reference.The reference contains descriptions and examples of all Regular Expression functions.', '', '']","['\n <?php$str = ""Visit W3Schools"";$pattern = ""/w3schools/i"";echo \n  preg_match($pattern, $str); // Outputs 1?>', '\n <?php$str = ""The rain in SPAIN falls mainly on the plains."";\n  $pattern = ""/ain/i"";echo preg_match_all($pattern, $str); // Outputs 4?>', '\n <?php$str = ""Visit Microsoft!"";$pattern = ""/microsoft/i"";echo \n  preg_replace($pattern, ""W3Schools"", $str); // Outputs ""Visit\n  W3Schools!""?>', '\n <?php$str = ""Apples and bananas."";$pattern = ""/ba(na){2}/i"";echo \n  preg_match($pattern, $str); // Outputs 1?>', '', '', '', '', '', '', '', '']",[''],"['Function|||Description|||&&&preg_match()|||Returns 1 if the pattern was found in the string and 0 if not|||&&&preg_match_all()|||Returns the number of times the pattern was found in the string, which may also be 0|||&&&preg_replace()|||Returns a new string where matched patterns have been replaced with another string|||&&&', 'Modifier|||Description|||&&&i|||Performs a case-insensitive search|||&&&m|||Performs a multiline search (patterns that search for the\nbeginning or end of a string will match the beginning or end\nof each line)|||&&&u|||Enables correct matching of UTF-8 encoded patterns|||&&&', 'Expression|||Description|||&&&[abc]|||Find one character from the options between the brackets|||&&&[^abc]|||Find any character NOT between the brackets|||&&&[0-9]|||Find one character from the range 0 to 9|||&&&', 'Metacharacter|||Description|||&&&||||Find a match for any one of the patterns separated by | as in: cat|dog|fish|||&&&.|||Find just one instance of any character|||&&&^|||Finds a match as the beginning of a string as in: ^Hello|||&&&$|||Finds a match at the end of the string as in: World$|||&&&\\d|||Find a digit|||&&&\\s|||Find a whitespace character|||&&&\\b|||Find a match at the beginning of a word like this: \\bWORD, or at the end of a word like this: WORD\\b|||&&&\\uxxxx|||Find the Unicode character specified by the hexadecimal number xxxx|||&&&', ""Quantifier|||Description|||&&&n+|||Matches any string that contains at least one n|||&&&n*|||Matches any string that contains zero or more occurrences of n|||&&&n?|||Matches any string that contains zero or one occurrences of n|||&&&n{x}|||Matches any string that contains a sequence of X n's|||&&&n{x,y}|||Matches any string that contains a sequence of X to Y n's|||&&&n{x,}|||Matches any string that contains a sequence of at least X n's|||&&&""]",[]
php||Form Handling,https://www.w3schools.com/php/php_forms.asp,The PHP superglobals $_GET and $_POST are used to collect form-data.,"['PHP - A Simple HTML Form', 'GET vs. POST', 'When to use GET?', 'When to use POST?']","['The example below displays a simple HTML form with two input fields and a submit button:When the user fills out the form above and clicks the submit button, the form data is sent \nfor processing to a PHP file named ""welcome.php"". The form data is sent with \nthe HTTP POST method.To display the submitted data you could simply echo all the variables. The ""welcome.php"" looks like this:The output could be something like this:The same result could also be achieved using the HTTP GET method:and ""welcome_get.php"" looks like this:The code above is quite simple. However, the most important thing is missing. You need \nto validate form data to protect your script from malicious code.', 'Both GET and POST create an array (e.g. array( key1 => value1, \nkey2 => value2, key3 => value3, ...)). This array holds key/value pairs, where \nkeys are the names of the form controls and values are the input data from the user.Both GET and POST are treated as $_GET and $_POST. These are superglobals, \nwhich means that they are always accessible, regardless of scope - and you can access them from any function,\nclass or file without having to do anything special.$_GET is an array of variables passed to the current script via the URL parameters.$_POST is an array of variables passed to the current script via the HTTP POST method.', 'Information sent from a form with the GET method is visible to everyone (all \nvariable names and values are displayed in the URL). GET also has limits on the amount of \ninformation to send. The limitation is about 2000 characters. However, \nbecause the variables are displayed in the URL, it is possible to bookmark the \npage. This can be useful in some cases.GET may be used for sending non-sensitive data.Note: GET should NEVER be used for sending passwords or other sensitive information!', 'Information sent from a form with the POST method is invisible to others \n(all names/values are embedded within the body of the HTTP request) and \nhas no limits on the amount of information to send.Moreover POST supports advanced functionality such as support for multi-part \nbinary input while uploading files to server.However, because the variables are not displayed in the URL, it is not possible to bookmark the page.Next, lets see how we can process PHP forms the secure way!']","['\n<html>\n<body>\n\n<form action=""welcome.php"" method=""post"">\nName: <input type=""text"" name=""name""><br>\nE-mail: <input type=""text"" name=""email""><br>\n<input type=""submit"">\n</form>\n\n</body>\n</html>\n &&&&&& \n<html>\n<body>\n\n<form action=""welcome_get.php"" method=""get"">\n Name: <input type=""text"" name=""name""><br>\n E-mail: <input type=""text"" name=""email""><br>\n<input type=""submit"">\n</form>\n\n</body>\n</html>\n', '', '', '']",[''],[],[]
php||Form Validation,https://www.w3schools.com/php/php_form_validation.asp,This and the next chapters show how to use PHP to validate form data.,"['PHP Form Validation', 'Text Fields', 'Radio Buttons', 'The Form Element', 'Big Note on PHP Form Security', 'How To Avoid $_SERVER[""PHP_SELF""] Exploits?', 'Validate Form Data With PHP']","['The HTML form we will be working at in these chapters, contains various input fields: \nrequired and optional text fields, radio buttons, and a submit button:The validation rules for the form above are as follows:First we will look at the plain HTML code for the form:', 'The name, email, and website fields are text input elements, and the comment \nfield is a textarea. The HTML code looks like this:', 'The gender fields are radio buttons and the HTML code looks like this:', 'The HTML code of the form looks like this:When the form is submitted, the form data is sent with method=""post"".So, the $_SERVER[""PHP_SELF""] sends the submitted form data to the page itself, instead of jumping to a different page. \nThis way, the user will get error messages on the same page as the form.', 'The $_SERVER[""PHP_SELF""] variable can be used by hackers!If PHP_SELF is used in your page then a user can enter a slash (/) and then\nsome Cross Site Scripting (XSS) commands to execute.Assume we have the following form in a page named ""test_form.php"":Now, if a user enters the normal URL in the address bar like \n""http://www.example.com/test_form.php"", the above code will be translated to:So far, so good.However, consider that a user enters the following URL in the address bar:In this case, the above code will be translated to:This code adds a script tag and an alert command. And when the page loads, the \nJavaScript code will be executed (the user will see an alert box). This is just a simple \nand harmless example how the PHP_SELF variable can be exploited.Be aware of that any JavaScript code can be added inside the  \n<script> tag! A hacker can redirect the user to a file on another server, \nand that file can hold malicious code \nthat can alter the global variables or submit the form to another \naddress to save the user data, for example.', '$_SERVER[""PHP_SELF""] exploits can be avoided by using the htmlspecialchars() function.The form code should look like this:The htmlspecialchars() function converts special characters to HTML entities. Now if the user \ntries to exploit the PHP_SELF variable, it will result in the following output:The exploit attempt fails, and no harm is done!', 'The first thing we will do is to pass all variables through PHP\'s htmlspecialchars() function.When we use the htmlspecialchars() function; then if a user tries to submit the following in a text field:<script>location.href(\'http://www.hacked.com\')</script>- this would not be executed, because it would be saved as HTML escaped code, like this:&lt;script&gt;location.href(\'http://www.hacked.com\')&lt;/script&gt;The code is now safe to be displayed on a page or inside an e-mail.We will also do two more things when the user submits the form:The next step is to create a function that will do all the checking for us \n(which is much more convenient than writing the same code over and over again).We will name the function test_input().Now, we can \ncheck each $_POST variable with the test_input() function, and the script looks like this:Notice that at the start of the script, we check whether the form has been \nsubmitted using $_SERVER[""REQUEST_METHOD""]. If the REQUEST_METHOD is POST, then \nthe form has been submitted - and it \nshould be validated. If it has not been submitted, skip the validation and \ndisplay a blank form.However, in the example above, all input fields are optional. The script \nworks fine even if the user does not enter any data.The next step is to make input fields required and create error messages if \nneeded.']","['', '', '', '', '', '', '']",[''],"['Field|||Validation Rules|||&&&Name|||Required. + Must only contain letters and whitespace|||&&&E-mail|||Required. + Must contain a valid email address (with @ and .)|||&&&Website|||Optional. If present, it must contain a valid URL|||&&&Comment|||Optional. Multi-line input field (textarea)|||&&&Gender|||Required. Must select one|||&&&']",[]
php||Forms - Required Fields,https://www.w3schools.com/php/php_form_required.asp,This chapter shows how to make input fields required and create error messages if needed.,"['PHP - Required Fields', 'PHP - Display The Error Messages']","['From the validation rules table on the previous page, we see that the ""Name"", ""E-mail"", and \n""Gender"" fields are required. These fields cannot be empty and must be filled out in the \nHTML form.In the previous chapter, all input fields were optional. In the following code we have added some new variables: $nameErr, $emailErr, \n$genderErr, and $websiteErr. These error variables will hold error messages for the \nrequired fields. We have also added an if else statement for each $_POST variable. This \nchecks if the $_POST variable is empty (with the PHP empty() \nfunction). If it is empty, an error message is stored in the different error variables, \nand if it is not empty, it sends the user input data through the test_input() \nfunction:', 'Then in the HTML form, we add a little script after each required field, \nwhich generates the correct error message if needed (that is if the user tries to submit \nthe form without filling out the required fields):The next step is to validate the input data, that is ""Does the Name field \ncontain only letters and whitespace?"", and ""Does the E-mail field contain a \nvalid e-mail address syntax?"", and if filled out, ""Does the Website field contain \na valid URL?"".']","['', '']",[''],"['Field|||Validation Rules|||&&&Name|||Required. + Must only contain letters and whitespace|||&&&E-mail|||Required. + Must contain a valid email address (with @ and .)|||&&&Website|||Optional. If present, it must contain a valid URL|||&&&Comment|||Optional. Multi-line input field (textarea)|||&&&Gender|||Required. Must select one|||&&&']",[]
php||Forms - Validate E-mail and URL,https://www.w3schools.com/php/php_form_url_email.asp,"This chapter shows how to validate names, e-mails, and URLs.","['PHP - Validate Name', 'PHP - Validate E-mail', 'PHP - Validate URL', 'PHP - Validate Name, E-mail, and URL']","['The code below shows a simple way to check if the name field only contains \nletters, dashes, apostrophes and whitespaces. If the value of the name field is not valid, then store \nan error message:', ""The easiest and safest way to check whether an email address is well-formed \nis to use PHP's filter_var() function.In the code below, if the e-mail address is not well-formed, then store an error message:"", 'The code below shows a way to check if a URL address syntax is \nvalid (this regular expression also allows dashes in the URL). If the URL address syntax is not valid, then store an error message:', 'Now, the script looks like this:The next step is to show how to prevent the form from emptying all the input \nfields when the user submits the form.']","['', '', '', '']",[''],[],[]
php||Complete Form Example,https://www.w3schools.com/php/php_form_complete.asp,"This chapter shows how to keep the values in the input fields 
when the user hits the submit button.","['PHP - Keep The Values in The Form', 'PHP - Complete Form Example']","['To show the values in the input fields after the user hits the submit button, \nwe add a little PHP script inside the value attribute of the following input \nfields: name, email, and website. In the comment textarea field, we put the \nscript between the <textarea> and </textarea> tags. The little script outputs the \nvalue of the $name, $email, $website, and $comment variables.\xa0Then, we also need to show which radio button that was checked. For this, we \nmust manipulate the checked attribute (not the value attribute for radio \nbuttons):', 'Here is the complete code for the PHP Form Validation Example:']","['', '']",[''],[],[]
php||Date and Time,https://www.w3schools.com/php/php_date.asp,The PHP date() function is used to format a date and/or a time.,"['The PHP Date() Function', 'Get a Date', 'PHP Tip - Automatic Copyright Year', 'Get a Time', 'Get Your Time Zone', 'Create a Date With mktime()', 'Create a Date From a String With strtotime()', 'More Date Examples', 'Complete PHP Date Reference']","['The PHP date() function formats a timestamp to a more readable date and time.', 'The required format parameter of the date() function specifies how to format the date \n(or time).Here are some characters that are commonly used for dates:Other characters, like""/"", ""."", or ""-"" can also be inserted between the \ncharacters to add additional formatting.The example below formats today\'s date in three different ways:', 'Use the date() function to automatically update the copyright year on your \nwebsite:', 'Here are some characters that are commonly used for times:The example below outputs the current time in the specified format:', 'If the time you got back from the code is not correct, it\'s probably because your server is in another country or set up \nfor a different timezone.So, if you need the time to be correct according to a specific \nlocation, you can set the timezone you want to use. The example below sets the timezone to ""America/New_York"", then outputs the current time in the specified format:', 'The optional timestamp parameter in the date() function specifies a timestamp. If \nomitted, the current date and time will be used (as in the \nexamples above).The PHP mktime() function returns the Unix timestamp for a date. The Unix timestamp contains the number of seconds between the Unix Epoch \n(January 1 1970 00:00:00 GMT) and the time specified.The example below creates a date and time with the \ndate() function from a number of parameters in the \nmktime() function:', 'The PHP strtotime() function is used to convert a human readable \ndate string into a \nUnix timestamp (the number of seconds since January 1 1970 00:00:00 GMT).The example below creates a date and time from the strtotime() function:PHP is quite clever about converting a string to a date, so you can put in \nvarious values:However, strtotime() is not perfect, so remember to check the strings you put in there.', 'The example below outputs the dates for the next six Saturdays:The example below outputs the number of days until 4th of July:', 'For a complete reference of all date functions, go to our complete\nPHP Date Reference.The reference contains a brief description, and examples of use, for each function!']","['\n <?phpecho ""Today is "" . date(""Y/m/d"") . ""<br>"";echo ""Today is "" . date(""Y.m.d"") . ""<br>"";echo ""Today is "" . date(""Y-m-d"") . ""<br>"";\n echo ""Today is "" . date(""l"");?>', '\n &copy; 2010-<?php echo date(""Y"");?>', '\n <?phpecho ""The time is "" . date(""h:i:sa"");?>', '\n <?phpdate_default_timezone_set(""America/New_York"");echo ""The time is "" . date(""h:i:sa"");?>', '\n <?php$d=mktime(11, 14, 54, 8, 12, 2014);echo ""Created date is "" . date(""Y-m-d h:i:sa"", $d);?>', '\n <?php$d=strtotime(""10:30pm April 15 2014"");echo ""Created date is "" . date(""Y-m-d h:i:sa"", $d);?> &&&&&& \n <?php$d=strtotime(""tomorrow"");echo date(""Y-m-d h:i:sa"", $d) . ""<br>"";\n$d=strtotime(""next Saturday"");echo date(""Y-m-d h:i:sa"", $d) . ""<br>"";\n$d=strtotime(""+3 Months"");echo date(""Y-m-d h:i:sa"", $d) . ""<br>"";?>', '\n <?php$startdate = strtotime(""Saturday"");$enddate = strtotime(""+6 weeks"", $startdate);while ($startdate < $enddate) {\xa0 echo date(""M d"", $startdate) . ""<br>"";\xa0 $startdate = strtotime(""+1 week"", $startdate);}?> &&&&&& \n <?php$d1=strtotime(""July 04"");$d2=ceil(($d1-time())/60/60/24);\n echo ""There are "" . $d2 ."" days until 4th of July."";?>', '', '']","[""Get a Date###Get a Time###&&&|||d - Represents the day of the month (01 to 31) |||m - Represents a month (01 to 12)|||Y - Represents a year (in four digits)|||l (lowercase 'L') - Represents the day of the week|||&&&|||H - 24-hour format of an hour (00 to 23)|||h - 12-hour format of an hour with leading zeros (01 to 12) |||i - Minutes with leading zeros (00 to 59)|||s - Seconds with leading zeros (00 to 59)|||a - Lowercase Ante meridiem and Post meridiem (am or pm)|||""]",['Parameter|||Description|||&&&format|||Required. Specifies the format of the timestamp|||&&&timestamp|||Optional. Specifies a timestamp. Default is the current date and time|||&&&'],[]
php||Include Files,https://www.w3schools.com/php/php_includes.asp,"The include (or require) statement takes all the text/code/markup that exists in the specified file and copies it into
the file that uses the include statement.","['PHP include and require Statements', 'PHP include Examples', 'PHP include vs. require']","['Including files is very useful when you want to include the same PHP,\nHTML, or text on multiple pages of a website.', ""It is possible to insert the content of one PHP file into another PHP file (before the \nserver executes it), with the include or require statement.The include and require statements are identical, except upon failure:So, if you want the execution to go on and show users the output, even if the \ninclude file is missing, use the include statement. Otherwise, in case of FrameWork, CMS, or a \ncomplex PHP application coding, always use the require statement to include a key file to the \nflow of execution. This will help avoid compromising your application's security \nand integrity, just in-case one key file is accidentally missing.Including files saves a lot of work. This means that \nyou can create a standard header, footer, or menu file for all your web pages. \nThen, when the header needs to be updated, you can only \nupdate the header include file."", 'Assume we have a standard footer file called ""footer.php"", that looks like this:To include the footer file in a page, use the include statement:', 'Assume we have a standard menu file called ""menu.php"":All pages in the Web site should use this menu file. Here is how it can be done \n(we are using a <div> element so that the menu easily can be styled with CSS later):', 'Assume we have a file called ""vars.php"", with some variables defined:Then, if we include the ""vars.php"" file, the variables can be used in the calling file:', 'The require statement is also used to include a file into the PHP code.However, there is one big difference between include and require; when a \nfile is included with the include statement and PHP cannot find it, the script \nwill continue to execute:If we do the same example using the require statement, the \necho statement will not be executed because the script execution dies after the \nrequire statement returned a fatal error:']","[""\n<html>\n<body>\n\n<h1>Welcome to my home page!</h1>\n<p>Some text.</p><p>Some more text.</p><?php include 'footer.php';?>\n\n</body>\n</html>\n"", '\n<html>\n<body>\n\n <div class=""menu""><?php include \'menu.php\';?></div>\n <h1>Welcome to my home page!</h1><p>Some text.</p><p>Some more text.</p>\n\n</body>\n</html>\n', '\n<html>\n<body>\n\n<h1>Welcome to my home page!</h1>\n<?php include \'vars.php\';\necho ""I have a $color $car."";?>\n\n</body>\n</html>\n', '\n<html>\n<body>\n\n<h1>Welcome to my home page!</h1>\n<?php include \'noFileExists.php\';\necho ""I have a $color $car."";?>\n\n</body>\n</html>\n &&&&&& \n<html>\n<body>\n\n<h1>Welcome to my home page!</h1>\n<?php require \'noFileExists.php\';\necho ""I have a $color $car."";?>\n\n</body>\n</html>\n']",['PHP include and require Statements###&&&|||require will produce a fatal error (E_COMPILE_ERROR) and stop the script|||include will only produce a warning (E_WARNING) and the script will continue|||'],[],[]
php||File Handling,https://www.w3schools.com/php/php_file.asp,"File handling is an important part of any web application. You 
often need to open and process a file for different tasks.","['PHP Manipulating Files', 'PHP readfile() Function']","['PHP has several functions for creating, reading, uploading, and editing files.', 'The readfile() function reads a file and writes it to the output buffer.Assume we have a text file called ""webdictionary.txt"", stored on the \nserver, that looks like this:The PHP code to read the file and write it to the output buffer is as follows \n(the readfile() function returns the number of bytes read on success):The readfile() function is useful if all you want to do is open up a file and read its contents.The next chapters will teach you more about file handling.']","['\n <?phpecho readfile(""webdictionary.txt"");?>\n', '']",[''],[],[]
php||File Open/Read/Close,https://www.w3schools.com/php/php_file_open.asp,"In this chapter we will teach you how to open, read, and close a file 
on the server.","['PHP Open File - fopen()', 'PHP Read File - fread()', 'PHP Close File - fclose()', 'PHP Read Single Line - fgets()', 'PHP Check End-Of-File - feof()', 'PHP Read Single Character - fgetc()', 'Complete PHP Filesystem Reference']","['A better method to open files is with the fopen() function. This function gives you more \noptions than the readfile() function.We will use the text file, ""webdictionary.txt"", during the lessons:The first parameter of fopen() contains the name of the file to be opened and the \nsecond parameter specifies in which mode the file should be opened. The following example \nalso generates a message if the fopen() function is unable to open the specified file:Tip: The fread() and the fclose() functions will be \nexplained below.The file may be opened in one of the following modes:', 'The fread() function reads from an open file.The first parameter of fread() contains the name of the file to read from and \nthe second parameter specifies the maximum number of bytes to read.The following PHP code reads the ""webdictionary.txt"" file to the end:', 'The fclose() function is used to close an open file.The fclose() requires the name of the file (or a variable that holds the \nfilename) we want to close:', 'The fgets() function is used to read a single line from a file.The example below outputs the first line of the ""webdictionary.txt"" file:Note: After a call to the fgets() function, the file pointer has moved to the next line.', 'The feof() function checks if the ""end-of-file"" (EOF) has been reached.The feof() function is useful for looping through data of unknown length.The example below reads the ""webdictionary.txt"" file line by line, until end-of-file is reached:', 'The fgetc() function is used to read a single character from a file.The example below reads the ""webdictionary.txt"" file character by \ncharacter, until end-of-file is reached:Note: After a call to the fgetc() function, the file pointer moves to the next character.', 'For a complete reference of filesystem functions, go to our complete\nPHP Filesystem Reference.']","['\n <?php$myfile = fopen(""webdictionary.txt"", ""r"") or die(""Unable to open file!"");echo fread($myfile,filesize(""webdictionary.txt""));\n fclose($myfile);?>\n', '\n <?php$myfile = fopen(""webdictionary.txt"", ""r"") or die(""Unable to open file!"");echo fgets($myfile);\n fclose($myfile);?>\n', '\n <?php$myfile = fopen(""webdictionary.txt"", ""r"") or die(""Unable to open file!"");// Output one line until end-of-filewhile(!feof($myfile)) {\xa0\xa0echo fgets($myfile) . ""<br>"";}fclose($myfile);?>\n', '\n <?php$myfile = fopen(""webdictionary.txt"", ""r"") or die(""Unable to open file!"");// Output one character until end-of-filewhile(!feof($myfile)) {\xa0\xa0echo fgetc($myfile);}fclose($myfile);?>\n', '', '', '']",[''],"[""Modes|||Description|||&&&r|||Open a file for read only. File pointer starts at the beginning of the file|||&&&w|||Open a file for write only. Erases the contents of the file or creates a new file if it doesn't exist. File pointer starts at the beginning of the file|||&&&a|||Open a file for write only. The existing data in file is preserved. File pointer starts at the end of the file. Creates a new file if the file doesn't exist|||&&&x|||Creates a new file for write only. Returns FALSE and an error if file already exists|||&&&r+|||Open a file for read/write. File pointer starts at the beginning of the file|||&&&w+|||Open a file for read/write. Erases the contents of the file or creates a new file if it doesn't exist. File pointer starts at the beginning of the file|||&&&a+|||Open a file for read/write. The existing data in file is preserved. File pointer starts at the end of the file. Creates a new file if the file doesn't exist|||&&&x+|||Creates a new file for read/write. Returns FALSE and an error if file already exists|||&&&""]",[]
php||File Create/Write,https://www.w3schools.com/php/php_file_create.asp,"In this chapter we will teach you how to create and write to a file 
on the server.","['PHP Create File - fopen()', 'PHP File Permissions', 'PHP Write to File - fwrite()', 'PHP Overwriting', 'Complete PHP Filesystem Reference']","['The fopen() function is also used to create a file. Maybe a little confusing, but in PHP, a file is created using the same \nfunction used to open files.If you use fopen() on a file that does not \nexist, it will create it, given that the file is opened for writing (w) or \nappending (a).The example below creates a new file called ""testfile.txt"". The file will be \ncreated in the same directory where the PHP code resides:', 'If you are having errors when trying to get this code to run, check that you have granted your PHP file access to write \ninformation to the hard drive.', 'The fwrite() function is used to write to a file.The first parameter of fwrite() contains the name of the file to write to and \nthe second parameter is the string to be written.The example below writes a couple of names into a new file called ""newfile.txt"":Notice that we wrote to the file ""newfile.txt"" twice. Each time we wrote to \nthe file we sent the string $txt that first contained ""John Doe"" and second \ncontained ""Jane Doe"". After we finished writing, we closed the file using the fclose() function.If we open the ""newfile.txt"" file it would look like this:', 'Now that ""newfile.txt"" contains some data we can show what happens when we \nopen an existing file for writing. All the existing data will be ERASED and we \nstart with an empty file.In the example below we open our existing file ""newfile.txt"", and write some \nnew data into it:If we now open the ""newfile.txt"" file, both John and Jane have \nvanished, and only the data we just wrote is present:', 'For a complete reference of filesystem functions, go to our complete\nPHP Filesystem Reference.']","['\n $myfile = fopen(""testfile.txt"", ""w"")\n', '\n <?php$myfile = fopen(""newfile.txt"", ""w"") or die(""Unable to open file!"");$txt = ""John Doe\\n"";fwrite($myfile, $txt);$txt = ""Jane Doe\\n"";fwrite($myfile, $txt);fclose($myfile);?>\n', '\n <?php$myfile = fopen(""newfile.txt"", ""w"") or die(""Unable to open file!"");$txt = ""Mickey Mouse\\n"";fwrite($myfile, $txt);$txt = ""Minnie Mouse\\n"";fwrite($myfile, $txt);fclose($myfile);?>\n', '', '']",[''],[],[]
php||File Upload,https://www.w3schools.com/php/php_file_upload.asp,"With PHP, it is easy to upload files to the server.","['Configure The ""php.ini"" File', 'Create The HTML Form', 'Create The Upload File PHP Script', 'Check if File Already Exists', 'Limit File Size', 'Limit File Type', 'Complete Upload File PHP Script', 'Complete PHP Filesystem Reference']","['However, with ease comes danger, so always be careful when \nallowing file uploads!', 'First, ensure that PHP is configured to allow file uploads.In your ""php.ini"" file, search for the file_uploads directive, and set it to On:', 'Next, create an HTML form that allow users to choose the image file they want to upload:Some rules to follow for the HTML form above:Without the requirements above, the file upload will not work.Other things to notice:The form above sends data to a file called ""upload.php"", which we will create next.', 'The ""upload.php"" file contains the code for uploading a file:PHP script explained:', 'Now we can add some restrictions.First, we will check if the file already exists in the ""uploads"" folder. If \nit does, an error message is displayed, and $uploadOk is set to 0:', 'The file input field in our HTML form above is named ""fileToUpload"".Now, we want to check the size of the file. If the file is larger than 500KB, an error message is displayed, and $uploadOk is set to 0:', 'The code below only allows users to upload JPG, JPEG, PNG, and GIF files. All other \nfile types gives an error message before setting $uploadOk to 0:', 'The complete ""upload.php"" file now looks like this:', 'For a complete reference of filesystem functions, go to our complete\nPHP Filesystem Reference.']","['\nfile_uploads = On\n', '\n <!DOCTYPE html><html><body><form action=""upload.php"" method=""post""\nenctype=""multipart/form-data"">\xa0\xa0Select image to upload:\xa0\xa0<input type=""file"" name=""fileToUpload"" id=""fileToUpload"">\n  \xa0 <input type=""submit"" value=""Upload Image"" name=""submit"">\n</form></body></html>\n', '\n<?php$target_dir = ""uploads/"";$target_file = $target_dir . basename($_FILES[""fileToUpload""][""name""]);$uploadOk = 1;$imageFileType = \n  strtolower(pathinfo($target_file,PATHINFO_EXTENSION));// Check if image file is a actual image or fake imageif(isset($_POST[""submit""])) {\n  \xa0 $check = getimagesize($_FILES[""fileToUpload""][""tmp_name""]);\xa0 if($check !== false) {\xa0\xa0\xa0 echo ""File is an image - "" . $check[""mime""] . ""."";\xa0\xa0\xa0 $uploadOk = 1;\n  \xa0 } else {\xa0\xa0\xa0\xa0echo ""File is not an image."";\n  \xa0\xa0\xa0 $uploadOk = 0;\xa0\xa0}}?>\n', '\n// Check if file already existsif (file_exists($target_file)) {\xa0 echo ""Sorry, file already exists."";\n  \xa0 $uploadOk = 0;\n } ', '\n// Check file sizeif ($_FILES[""fileToUpload""][""size""] > 500000) {\n  \xa0 echo ""Sorry, your file is too large."";\xa0 $uploadOk = 0;\n } ', '\n// Allow certain file formatsif($imageFileType != ""jpg"" && $imageFileType  != ""png"" && $imageFileType != ""jpeg""&& $imageFileType != ""gif"" ) {\xa0\xa0echo ""Sorry, only JPG, JPEG, PNG & GIF files are allowed."";\xa0\xa0$uploadOk = 0;}\n', '\n<?php$target_dir = ""uploads/"";$target_file = $target_dir . basename($_FILES[""fileToUpload""][""name""]);$uploadOk = 1;$imageFileType = \n  strtolower(pathinfo($target_file,PATHINFO_EXTENSION));// Check if image file is a actual image or fake imageif(isset($_POST[""submit""])) {\xa0\xa0$check = getimagesize($_FILES[""fileToUpload""][""tmp_name""]);\xa0\xa0if($check !== false) {\xa0\xa0\xa0 echo ""File is an image - "" . $check[""mime""] . ""."";\n  \xa0\xa0\xa0 $uploadOk = 1;\xa0\xa0} else {\xa0\xa0\xa0 echo ""File is not an image."";\n  \xa0\xa0\xa0 $uploadOk = 0;\xa0\xa0}}// Check if file already existsif (file_exists($target_file)) {\n  \xa0 echo ""Sorry, file already exists."";\xa0\xa0$uploadOk = 0;}\n // Check file sizeif ($_FILES[""fileToUpload""][""size""] > 500000) {\xa0\xa0echo ""Sorry, your file is too large."";\xa0\xa0$uploadOk = 0;\n }// Allow certain file formatsif($imageFileType != ""jpg"" && $imageFileType != ""png"" && $imageFileType != ""jpeg""&& $imageFileType != ""gif"" ) {\xa0\xa0echo ""Sorry, only JPG, JPEG, PNG & GIF files are allowed."";\xa0\xa0$uploadOk = 0;}// Check if $uploadOk is set to 0 by an errorif ($uploadOk == 0) {\xa0\xa0echo ""Sorry, your file was not uploaded."";// if everything is ok, try to upload file} else {\n  \xa0 if (move_uploaded_file($_FILES[""fileToUpload""][""tmp_name""], $target_file)) {\n  \xa0\xa0\xa0 echo ""The file "". htmlspecialchars( basename( $_FILES[""fileToUpload""][""name""])). \n  "" has been uploaded."";\n  \xa0 } else {\xa0\xa0\xa0 echo ""Sorry, there was an error uploading your file."";\n  \xa0\xa0}}?>\n', '']","['Create The HTML Form###Create The HTML Form###Create The Upload File PHP Script###&&&|||Make sure that the form uses method=""post""|||The form also needs the following attribute: enctype=""multipart/form-data"". It specifies which content-type to use when submitting the form|||&&&|||The type=""file"" attribute of the <input> tag shows the input field as a file-select control, with a ""Browse"" button next to the input control |||&&&|||$target_dir = ""uploads/"" - specifies the directory where the file is going to be placed|||$target_file specifies the path of the file to be uploaded|||$uploadOk=1 is not used yet (will be used later)|||$imageFileType holds the file extension of the file (in lower case)|||Next, check if the image file is an actual image or a fake image|||']",[],[]
php||Cookies,https://www.w3schools.com/php/php_cookies.asp,,"['What is a Cookie? ', 'Create Cookies With PHP', 'PHP Create/Retrieve a Cookie', 'Modify a Cookie Value', 'Delete a Cookie', 'Check if Cookies are Enabled', 'Complete PHP Network Reference']","[""A cookie is often used to identify a user. A cookie is a small file that the \nserver embeds on the user's computer. Each time the same computer requests a \npage with a browser, it will send the cookie too. With PHP, you can both create \nand retrieve cookie values."", 'A cookie is created with the setcookie() function.Only the name parameter is required. All other parameters are \noptional.', 'The following example creates a cookie named ""user"" with the value ""John \nDoe"". The cookie will expire after 30 days (86400 * 30). The ""/"" means that the \ncookie is available in entire website (otherwise, select the directory you \nprefer).We then retrieve the value of the cookie ""user"" (using the global variable \n$_COOKIE). We also use the isset() function to find out if the cookie is set:Note: The value of the cookie is automatically URLencoded when \nsending the cookie, and automatically decoded when received (to prevent \nURLencoding, use setrawcookie() instead).', 'To modify a cookie, just set (again) the cookie using the setcookie() function:', 'To delete a cookie, use the setcookie() function with an expiration date in \nthe past:', 'The following example creates a small script that checks whether cookies are \nenabled. First, try to create a test cookie with the setcookie() function, then \ncount the $_COOKIE array variable:', 'For a complete reference of Network functions, go to our complete\nPHP Network Reference.']","['\n <?php$cookie_name = ""user"";$cookie_value = ""John Doe"";setcookie($cookie_name, $cookie_value, time() + (86400 * 30), ""/""); // 86400 = 1 day?><html><body><?phpif(!isset($_COOKIE[$cookie_name])) {\n  \xa0 echo ""Cookie named \'"" . $cookie_name . ""\' is not set!"";} else {\n  \xa0 echo ""Cookie \'"" . $cookie_name . ""\' is set!<br>"";\xa0\xa0echo ""Value is: "" . $_COOKIE[$cookie_name];}?></body></html>\n', '\n <?php$cookie_name = ""user"";$cookie_value = ""Alex Porter"";\n setcookie($cookie_name, $cookie_value, time() + (86400 * 30), ""/"");?><html><body><?phpif(!isset($_COOKIE[$cookie_name])) {\n  \xa0 echo ""Cookie named \'"" . $cookie_name . ""\' is not set!"";} else {\n  \xa0 echo ""Cookie \'"" . $cookie_name . ""\' is set!<br>"";\n  \xa0 echo ""Value is: "" . $_COOKIE[$cookie_name];}?></body></html>\n', '\n <?php// set the expiration date to one hour agosetcookie(""user"", """", time() - 3600);?><html><body><?phpecho ""Cookie \'user\' is deleted."";?></body></html>\n', '\n <?phpsetcookie(""test_cookie"", ""test"", time() + 3600, \'/\');?><html><body><?phpif(count($_COOKIE) > 0) {\xa0\xa0echo ""Cookies are enabled."";} else {\n  \xa0 echo ""Cookies are disabled."";}\n ?></body></html>\n', '', '', '']",[''],[],[]
php||Sessions,https://www.w3schools.com/php/php_sessions.asp,A session is a way to store information (in variables) to be used across multiple pages.,"['What is a PHP Session?', 'Start a PHP Session', 'Get PHP Session Variable Values', 'Modify a PHP Session Variable', 'Destroy a PHP Session ']","['Unlike a cookie, the information is not stored on the users computer.', ""When you work with an application, you open it, do some changes, and \nthen you close it. This is much like a Session. The computer knows who you are. \nIt knows when you start the application and when you end. But on the internet \nthere is one problem: the web server does not know who you are or what you do, \nbecause the HTTP address doesn't maintain state.Session variables solve this problem by storing user information \nto be used across multiple pages (e.g. username, favorite color, etc). By \ndefault, session variables last until the user closes the browser.So; Session variables hold information about one single user, and are available to all pages in one application."", 'A session is started with the session_start() function.Session variables are set with the PHP global variable: $_SESSION.Now, let\'s create a new page called ""demo_session1.php"". In this page, we start a \nnew PHP session and set some session variables:', 'Next, we create another page called ""demo_session2.php"". From this page, we \nwill access the session information we set on the first page (""demo_session1.php"").Notice that session variables are not passed individually to each new page, \ninstead they are retrieved from the session we open at the beginning of each \npage (session_start()).Also notice that all session variable values are stored in the global $_SESSION variable:Another way to show all the session variable values for a user session is to run the \nfollowing code:', 'To change a session variable, just overwrite it:', 'To remove all global session variables and destroy the session, use session_unset()\nand session_destroy():']","['\n <?php// Start the sessionsession_start();?><!DOCTYPE html><html><body><?php// Set session variables$_SESSION[""favcolor""] = ""green"";$_SESSION[""favanimal""] = ""cat"";echo ""Session variables are set."";?></body></html>\n', '\n <?phpsession_start();?><!DOCTYPE html><html>\n <body><?php// Echo session variables that were set on previous pageecho ""Favorite color is "" . $_SESSION[""favcolor""] . "".<br>"";echo ""Favorite animal is "" . $_SESSION[""favanimal""] . ""."";?>\n </body></html>\n &&&&&& \n <?phpsession_start();?><!DOCTYPE html><html><body><?php\n print_r($_SESSION);?></body></html>\n', '\n <?phpsession_start();?><!DOCTYPE html><html><body><?php// to change a session variable, just overwrite it $_SESSION[""favcolor""] = ""yellow"";print_r($_SESSION);?></body></html>\n', '\n <?phpsession_start();?><!DOCTYPE html><html><body><?php// remove all session variablessession_unset(); // destroy the session session_destroy(); ?></body></html>\n', '']",[''],[],[]
php||Filters,https://www.w3schools.com/php/php_filter.asp,Validating data = Determine if the data is in proper form.,"['The PHP Filter Extension ', 'Why Use Filters?', 'PHP filter_var() Function', 'Sanitize a String', 'Validate an Integer', 'Validate an IP Address', 'Sanitize and Validate an Email Address', 'Sanitize and Validate a URL', 'Complete PHP Filter Reference']","['Sanitizing data = Remove any illegal character from the data.', 'PHP filters are used to validate and sanitize external input.The PHP filter extension has many of the functions needed for checking user input,\nand is designed to make data validation easier and quicker.The filter_list() function can be used to list what the PHP filter extension offers: ', 'Many web applications receive external input. External input/data can be:', 'The filter_var() function both validate and sanitize data.The filter_var() function filters a single variable with a specified filter. It takes two pieces of data:', 'The following example uses the filter_var() function to remove all HTML tags \nfrom a string:', 'The following example uses the filter_var() function to check if the variable $int \nis an integer. If $int is an integer,\nthe output of the code below will be: ""Integer is valid"". If $int is not an integer, \nthe output will be: ""Integer is not valid"":In the example above, if $int was set to 0, the function above will return \n""Integer is not valid"". To solve this problem, use the code below:', 'The following example uses the filter_var() function to check if the variable $ip \nis a valid IP address:', 'The following example uses the filter_var() function to first remove all \nillegal characters from the $email variable, then check if it \nis a valid email address:', 'The following example uses the filter_var() function to first remove all \nillegal characters from a URL, then check if $url is a valid URL:', 'For a complete reference of all filter functions, go to our complete\nPHP Filter Reference. Check each filter to see \nwhat options and flags are available.The reference contains a brief description, and examples of use, for each function!']","[""\n <table>\xa0 <tr>\xa0\xa0\xa0 <td>Filter Name</td>\xa0\xa0\xa0 <td>Filter ID</td>\xa0 </tr>\xa0 <?php\xa0 foreach (filter_list() as $id =>$filter) {\n  \xa0\xa0\xa0 echo '<tr><td>' . $filter . '</td><td>' . filter_id($filter) . '</td></tr>';\xa0 }\xa0 ?></table> "", '\n <?php$str = ""<h1>Hello World!</h1>"";$newstr = filter_var($str, FILTER_SANITIZE_STRING);echo $newstr;?>\n', '\n <?php$int = 100;if (!filter_var($int, FILTER_VALIDATE_INT) === false) {\n  \xa0 echo(""Integer is valid"");} else {\xa0\xa0echo(""Integer is not valid"");}?>\n &&&&&& \n <?php$int = 0;if (filter_var($int, FILTER_VALIDATE_INT) === 0 || !filter_var($int, FILTER_VALIDATE_INT) === false) {\n  \xa0 echo(""Integer is valid"");} else {\xa0 echo(""Integer is not valid"");}?>\n', '\n <?php$ip = ""127.0.0.1"";if (!filter_var($ip, FILTER_VALIDATE_IP) === false) {\n  \xa0 echo(""$ip is a valid IP address"");} else {\xa0 echo(""$ip is not a valid IP address"");}?>\n', '\n <?php$email = ""john.doe@example.com"";// Remove all illegal characters from email$email = filter_var($email, FILTER_SANITIZE_EMAIL);// Validate e-mailif (!filter_var($email, FILTER_VALIDATE_EMAIL) === false) {\xa0 echo(""$email is a valid email address"");} else {\xa0\xa0echo(""$email is not a valid email address"");}?>\n', '\n <?php$url = ""https://www.w3schools.com"";\n// Remove all illegal characters from a url$url = filter_var($url, FILTER_SANITIZE_URL);// Validate urlif (!filter_var($url, FILTER_VALIDATE_URL) === false) {\xa0\xa0echo(""$url is a valid URL"");} else {\xa0\xa0echo(""$url is not a valid URL"");}?>\n', '', '', '']",['Why Use Filters?###PHP filter_var() Function###&&&|||User input from a form|||Cookies|||Web services data|||Server variables|||Database query results|||&&&|||The variable you want to check|||The type of check to use|||'],[],[]
php||Filters Advanced,https://www.w3schools.com/php/php_filter_advanced.asp,,"['Validate an Integer Within a Range', 'Validate IPv6 Address', 'Validate URL - Must Contain QueryString', 'Remove Characters With ASCII Value > 127', 'Complete PHP Filter Reference']","['The following example uses the filter_var() function to check if a variable \nis both of type INT, and between 1 and 200:', 'The following example uses the filter_var() function to check if the variable $ip is a valid \nIPv6 address:', 'The following example uses the filter_var() function to check if the variable $url is a \nURL with a querystring:', 'The following example uses the filter_var() function to sanitize a string. It \nwill both remove all HTML tags, and all characters with ASCII value > 127, from \nthe string:', 'For a complete reference of all filter functions, go to our complete\nPHP Filter Reference. Check each filter to see \nwhat options and flags are available.The reference contains a brief description, and examples of use, for each function!']","['\n <?php$int = 122;$min = 1;$max = 200;if (filter_var($int, FILTER_VALIDATE_INT, array(""options"" => array(""min_range""=>$min, ""max_range""=>$max))) === false) {\xa0 echo(""Variable value is not within the legal range"");} else {\xa0\xa0echo(""Variable value is within the legal range"");}?>\n', '\n <?php$ip = ""2001:0db8:85a3:08d3:1319:8a2e:0370:7334"";if (!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_IPV6) === false) {\xa0\xa0echo(""$ip is a valid IPv6 address"");} else {\n  \xa0 echo(""$ip is not a valid IPv6 address"");}?>\n', '\n <?php$url = ""https://www.w3schools.com"";if (!filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_QUERY_REQUIRED) === false) {\xa0\xa0echo(""$url is a valid URL with a query string"");} else {\n  \xa0 echo(""$url is not a valid URL with a query string"");}?>\n', '\n <?php$str = ""<h1>Hello WorldÆØÅ!</h1>"";$newstr = filter_var($str, FILTER_SANITIZE_STRING, FILTER_FLAG_STRIP_HIGH);echo $newstr;?>\n', '']",[''],[],[]
php||Callback Functions,https://www.w3schools.com/php/php_callback_functions.asp,,"['Callback Functions', 'Callbacks in User Defined Functions']","['A callback function (often referred to as just ""callback"") is a function which is passed as an\nargument into another function.Any existing function can be used as a callback function. To use a function as a callback\nfunction, pass a string containing the name of the function as the argument of another\nfunction:Starting with version 7, PHP can pass anonymous functions as callback functions:', 'User-defined functions and methods can also take callback functions as \narguments. To use callback functions inside a user-defined function or method, \ncall it by adding parentheses to the variable and pass arguments as with normal \nfunctions:']","['\n  <?phpfunction my_callback($item) {\xa0 return strlen($item);}\n  $strings = [""apple"", ""orange"", \n  ""banana"", ""coconut""];$lengths = \n  array_map(""my_callback"", $strings);print_r($lengths);?> &&&&&& \n  <?php$strings = [""apple"", ""orange"", ""banana"", ""coconut""];$lengths = \n  array_map( function($item) { return strlen($item); } , $strings);\n  print_r($lengths);?>', '']",[''],[],[]
php||PHP and,https://www.w3schools.com/php/php_json.asp,,"['What is JSON?', 'PHP and JSON', 'PHP - json_encode()', 'PHP - json_decode()', 'PHP - Accessing the Decoded Values', 'PHP - Looping Through the Values']","['JSON stands for JavaScript Object Notation, and is a syntax for storing and \nexchanging data.Since the JSON format is a text-based format, it can easily be sent to and \nfrom a server, and used as a data format by any programming language.', 'PHP has some built-in functions to handle JSON.First, we will look at the following two functions:', 'The json_encode() function is used to encode a value to JSON format.', 'The json_decode() function is used to decode \na JSON object into a PHP object or an associative array.The json_decode() function returns an object \nby default. The json_decode() function has a \nsecond parameter, and when set to true, JSON objects are decoded into \nassociative arrays.', 'Here are two examples of how to access the decoded values from an object and \nfrom an associative array:', 'You can also loop through the values with a foreach() \nloop:']","['\n  <?php$age = array(""Peter""=>35, ""Ben""=>37, ""Joe""=>43);\necho json_encode($age);?> &&&&&& \n  <?php$cars = array(""Volvo"", ""BMW"", ""Toyota"");echo json_encode($cars);?>', '\n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';var_dump(json_decode($jsonobj));?> &&&&&& \n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';var_dump(json_decode($jsonobj, \n  true));?>', '\n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';\n  $obj = json_decode($jsonobj);echo $obj->Peter;echo $obj->Ben;\n  echo $obj->Joe;?> &&&&&& \n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';\n  $arr = json_decode($jsonobj, true);echo $arr[""Peter""];echo $arr[""Ben""];\n  echo $arr[""Joe""];?>', '', '', '']",['PHP and JSON###&&&||||||json_encode()||||||json_decode() |||'],[],[]
php||Exceptions,https://www.w3schools.com/php/php_exceptions.asp,,['What is an Exception?'],"['An exception is an object that describes an error or unexpected behaviour of a PHP script.\nExceptions are thrown by many PHP functions and classes.\nUser defined functions and classes can also throw exceptions.\nExceptions are a good way to stop a function when it comes across data that it cannot\nuse.\n\nThrowing an Exception\nThe throw statement allows a user defined \nfunction or method to throw an exception. When an exception is thrown, the code \nfollowing it will not be executed.\nIf an exception is not caught, a fatal error will occur with an ""Uncaught \nException"" message.\nLets try to throw an exception without catching it:\n\nExample\n\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == 0) \n  {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 }\xa0 \n  return $dividend / $divisor;}echo divide(5, 0);?>\nTry it Yourself »\n\nThe result will look something like this:\n\nFatal error: Uncaught Exception: Division by zero in \n  C:\\webfolder\\test.php:4\nStack trace: #0 C:\\webfolder\\test.php(9): \n  divide(5, 0) #1 {main} thrown in C:\\webfolder\\test.php on line 4\n\n\nThe try...catch Statement\nTo avoid the error from the example above, we can use the\ntry...catch statement to catch exceptions and continue the process.\nSyntax\n\n  try {\xa0 code that can throw exceptions} catch(Exception $e) {\xa0 \n  code that runs when an exception is caught}\n\n\nExample\nShow a message when an exception is thrown:\n\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == \n  0) {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 \n  }\xa0 return $dividend / $divisor;}try {\xa0 echo \n  divide(5, 0);} catch(Exception $e) {\xa0 echo ""Unable to divide."";\n  }?>\nTry it Yourself »\n\nThe catch block indicates what type of exception should be caught and the name of the\nvariable which can be used to access the exception. In the example above, the type of\nexception is Exception and the variable name is $e.\n\nThe try...catch...finally Statement\nThe try...catch...finally statement can be used to catch exceptions. Code in the\nfinally block will always run regardless of whether an exception was caught. If\nfinally is present, the catch block is optional.\nSyntax\n\n  try {\xa0 code that can throw exceptions} catch(Exception $e) {\xa0 \n  code that runs when an exception is caught} finally {\xa0 code that \n  always runs regardless of whether an exception was caught}\n\n\nExample\nShow a message when an exception is thrown and then indicate that the process \nhas ended:\n\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor \n  == 0) {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 \n  }\xa0 return $dividend / $divisor;}try {\xa0 echo \n  divide(5, 0);} catch(Exception $e) {\xa0 echo ""Unable to \n  divide. "";} finally {\xa0 echo ""Process complete."";}?>\nTry it Yourself »\n\n\nExample\nOutput a string even if an exception was not caught:\n\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == 0) \n  {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 }\xa0 \n  return $dividend / $divisor;}try {\xa0 echo divide(5, 0);} finally {\xa0 echo \n  ""Process complete."";}?>\nTry it Yourself »\n\n\nThe Exception Object\nThe Exception Object contains information about the error or unexpected behaviour that\nthe function encountered.\nSyntax\n\n  new Exception(message, code, previous)\n\nParameter Values\n\n\nParameter\nDescription\n\n\nmessage\nOptional. A string describing why the exception was thrown\n\n\ncode\nOptional. An integer that can be used used to easily distinguish this exception from others of the same type\n\n\nprevious\nOptional. If this exception was thrown in a catch block of another exception, it is recommended to pass that exception into this parameter\n\n\nMethods\nWhen catching an exception, the following table shows some of the methods that can be used to\nget information about the exception:\n\n\nMethod\nDescription\n\n\ngetMessage()\nReturns a string describing why the exception was thrown\n\n\ngetPrevious()\nIf this exception was triggered by another one, this method returns the previous exception. If not, then it returns null\n\n\ngetCode()\nReturns the exception code\n\n\ngetFile()\nReturns the full path of the file in which the exception was thrown\n\n\ngetLine()\nReturns the line number of the line of code which threw the exception\n\n\n\nExample\nOutput information about an exception that was thrown:\n\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == 0) \n  {\xa0\xa0\xa0 throw new Exception(""Division by zero"", 1);\xa0 \n  }\xa0 return $dividend / $divisor;}try {\xa0 echo \n  divide(5, 0);} catch(Exception $ex) {\xa0 $code = $ex->getCode();\xa0 \n  $message = $ex->getMessage();\xa0 $file = $ex->getFile();\xa0 \n  $line = $ex->getLine();\xa0 echo ""Exception thrown in $file on line \n  $line: [Code $code]\xa0 $message"";}?>\nTry it Yourself »\n\n\nComplete Exception Reference\nFor a complete reference, go to our Complete PHP Exception Reference.\nThe reference contains descriptions and examples of all Exception methods.\n\n\n\n❮ Previous\nNext ❯\n\n\n\n', 'The throw statement allows a user defined \nfunction or method to throw an exception. When an exception is thrown, the code \nfollowing it will not be executed.If an exception is not caught, a fatal error will occur with an ""Uncaught \nException"" message.Lets try to throw an exception without catching it:The result will look something like this:', 'To avoid the error from the example above, we can use the\ntry...catch statement to catch exceptions and continue the process.The catch block indicates what type of exception should be caught and the name of the\nvariable which can be used to access the exception. In the example above, the type of\nexception is Exception and the variable name is $e.', 'The try...catch...finally statement can be used to catch exceptions. Code in the\nfinally block will always run regardless of whether an exception was caught. If\nfinally is present, the catch block is optional.', 'The Exception Object contains information about the error or unexpected behaviour that\nthe function encountered.When catching an exception, the following table shows some of the methods that can be used to\nget information about the exception:', 'For a complete reference, go to our Complete PHP Exception Reference.The reference contains descriptions and examples of all Exception methods.']","['\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == 0) \n  {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 }\xa0 \n  return $dividend / $divisor;}echo divide(5, 0);?>', '\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == \n  0) {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 \n  }\xa0 return $dividend / $divisor;}try {\xa0 echo \n  divide(5, 0);} catch(Exception $e) {\xa0 echo ""Unable to divide."";\n  }?>', '\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor \n  == 0) {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 \n  }\xa0 return $dividend / $divisor;}try {\xa0 echo \n  divide(5, 0);} catch(Exception $e) {\xa0 echo ""Unable to \n  divide. "";} finally {\xa0 echo ""Process complete."";}?> &&&&&& \n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == 0) \n  {\xa0\xa0\xa0 throw new Exception(""Division by zero"");\xa0 }\xa0 \n  return $dividend / $divisor;}try {\xa0 echo divide(5, 0);} finally {\xa0 echo \n  ""Process complete."";}?>', '\n <?phpfunction divide($dividend, $divisor) {\xa0 if($divisor == 0) \n  {\xa0\xa0\xa0 throw new Exception(""Division by zero"", 1);\xa0 \n  }\xa0 return $dividend / $divisor;}try {\xa0 echo \n  divide(5, 0);} catch(Exception $ex) {\xa0 $code = $ex->getCode();\xa0 \n  $message = $ex->getMessage();\xa0 $file = $ex->getFile();\xa0 \n  $line = $ex->getLine();\xa0 echo ""Exception thrown in $file on line \n  $line: [Code $code]\xa0 $message"";}?>']",[''],"['Parameter|||Description|||&&&message|||Optional. A string describing why the exception was thrown|||&&&code|||Optional. An integer that can be used used to easily distinguish this exception from others of the same type|||&&&previous|||Optional. If this exception was thrown in a catch block of another exception, it is recommended to pass that exception into this parameter|||&&&', 'Method|||Description|||&&&getMessage()|||Returns a string describing why the exception was thrown|||&&&getPrevious()|||If this exception was triggered by another one, this method returns the previous exception. If not, then it returns null|||&&&getCode()|||Returns the exception code|||&&&getFile()|||Returns the full path of the file in which the exception was thrown|||&&&getLine()|||Returns the line number of the line of code which threw the exception|||&&&']",[]
php||- What is OOP?,https://www.w3schools.com/php/php_oop_what_is.asp,"From PHP5, you can also write PHP code in an object-oriented 
style.","['PHP What is OOP?', 'PHP - What are Classes and Objects?']","['Object-Oriented programming is faster and easier to execute.', 'OOP stands for Object-Oriented Programming.Procedural programming is about writing procedures or functions that perform \noperations on the data, while object-oriented programming is about \ncreating objects that contain both data and functions.Object-oriented programming has several advantages over procedural \nprogramming:Tip: The ""Don\'t Repeat Yourself"" (DRY) principle is about \nreducing the repetition of code. You should extract out the codes that are \ncommon for the application, and place them at a single place and reuse them \ninstead of repeating it.', 'Classes and objects are the two main aspects of object-oriented programming.Look at the following illustration to see the difference between class and \nobjects:Another example:So, a class is a template for objects, and an object is an instance of a class.When the individual objects are created, they inherit all the \nproperties and behaviors from the class, but each object will have different values for the properties.Look at the next chapters to learn more about OOP.']","['', '']","['PHP What is OOP?###&&&|||OOP is faster and easier to execute|||OOP provides a clear structure for the programs|||OOP helps to keep the PHP code DRY ""Don\'t Repeat Yourself"", and makes |||  the |||  code easier to maintain, modify and debug|||OOP makes it possible to create full reusable |||  applications with less code and shorter development time|||']",[],[]
php||OOP - Classes and Objects,https://www.w3schools.com/php/php_oop_classes_objects.asp,"A class is a template for objects, and an object is an instance 
of class.","['OOP Case', 'Define a Class', 'Define Objects', 'PHP - The $this Keyword', 'PHP - instanceof']","[""Let's assume we have a class named Fruit. A Fruit can have properties like name, \ncolor, weight, etc. We can define variables like $name, $color, and $weight to hold the values of these properties.When the individual objects (apple, banana, etc.) are created, they inherit \nall the  \nproperties and behaviors from the class, but each object will have different values for the properties."", 'A class is defined by using the class \nkeyword, followed by the name of the class and a pair of curly braces ({}). All \nits properties and methods go inside the braces:Below we declare a class named Fruit consisting of two properties \n($name and $color) and two methods set_name() and \nget_name() for setting and getting the $name property:', 'Classes are nothing without objects! We can create multiple objects from a \nclass. Each object has all the properties and methods defined in the class, but \nthey will have different property values.Objects \nof a class is created using the new keyword.In the example below, $apple and $banana are instances of the class Fruit:In the example below, we add two more methods to class Fruit, for setting and \ngetting the $color property:', 'The $this keyword refers to the current object, and is only available inside \nmethods.Look at the following example:So, where can we change the value of the $name property? There are two \nways:1. Inside the class (by adding a set_name() method and use $this):2. Outside the class (by directly changing the property value):', 'You can use the instanceof keyword to check if an object belongs to a specific class:']","['\n    <?phpclass Fruit {\xa0 // code goes here...}?>\n', '\n    <?phpclass Fruit {\xa0 // Properties\xa0 public \n    $name;\xa0 public $color;\xa0 // Methods\xa0 function \n    set_name($name) {\xa0\xa0\xa0 \n    $this->name = $name;\xa0 }\xa0 function get_name() {\xa0\xa0\xa0 \n    return $this->name;\xa0 }}?>\n', '\n    <?phpclass Fruit {\xa0 // Properties\xa0 public \n    $name;\xa0 public $color;\xa0 // Methods\xa0 function \n    set_name($name) {\xa0\xa0\xa0 \n    $this->name = $name;\xa0 }\xa0 function get_name() {\xa0\xa0\xa0 \n    return $this->name;\xa0 }}$apple = new Fruit();\n    $banana = new Fruit();$apple->set_name(\'Apple\');$banana->set_name(\'Banana\');\necho $apple->get_name();echo ""<br>"";\n    echo $banana->get_name();?>\n &&&&&& \n    <?phpclass Fruit {\xa0 // Properties\xa0 public $name;\xa0 \n    public $color;\xa0 // Methods\xa0 \n    function set_name($name) {\xa0\xa0\xa0 $this->name = $name;\xa0 }\xa0 \n    function get_name() {\xa0\xa0\xa0 return $this->name;\xa0 }\xa0 \n    function set_color($color) {\xa0\xa0\xa0 $this->color = $color;\xa0 }\xa0 \n    function get_color() {\xa0\xa0\xa0 return $this->color;\xa0 }\n    }$apple = new Fruit();$apple->set_name(\'Apple\');\n    $apple->set_color(\'Red\');echo ""Name: "" . $apple->get_name();echo ""<br>"";\n    echo ""Color: "" . $apple->get_color();?>\n', '\n    <?phpclass Fruit {\xa0 public $name;}$apple = new Fruit();?>\n &&&&&& \n    <?phpclass Fruit {\xa0 public $name;\xa0 \n    function set_name($name) {\xa0\xa0\xa0 $this->name = $name;\xa0 \n    }}$apple = new Fruit();$apple->set_name(""Apple"");\necho $apple->name;?>\n &&&&&& \n    <?phpclass Fruit {\xa0 public $name;}$apple = new Fruit();$apple->name = ""Apple"";\necho $apple->name;?>\n', '']",[''],[],[]
php||OOP - Constructor,https://www.w3schools.com/php/php_oop_constructor.asp,,['PHP - The __construct Function'],"[""A constructor allows you to initialize an object's properties upon creation of the object.If you create a __construct() function, PHP will automatically call this \nfunction when you create an object from a class.Notice that the construct function starts with two underscores (__)!We see in the example below, that using a constructor saves us from  \ncalling the set_name() method which reduces the amount of code:Another example:""]",[''],[''],[],[]
php||OOP - Destructor,https://www.w3schools.com/php/php_oop_destructor.asp,,['PHP - The __destruct Function'],"['A destructor is called when the object is destructed or the script is stopped \nor exited.If you create a __destruct() function, PHP will automatically call this \nfunction at the end of the script.Notice that the destruct function starts with two underscores (__)!The example below has a __construct() function that is automatically called \nwhen you create an object from a class, and a __destruct() function that is \nautomatically called at the end of the script:Another example:']",[''],[''],[],[]
php||OOP - Access Modifiers,https://www.w3schools.com/php/php_oop_access_modifiers.asp,,['PHP - Access Modifiers'],"['Properties and methods can have access modifiers which control where they can \nbe accessed.There are three access modifiers:In the following example we have added three different access modifiers to \nthree properties (name, color, and weight). Here, if you try to set the name property it \nwill work fine (because the name property is public, and can be accessed from \neverywhere). However,\xa0if you try \nto set the color or weight property it will result in a fatal \nerror (because the color and weight property are protected and private):In the next example we have added access modifiers to \ntwo functions. Here, if you try to call the set_color() or the set_weight() function it will result in a fatal \nerror (because the two functions are considered protected and private), even if \nall the properties are public:']",[''],['PHP - Access Modifiers###&&&||| public - the property or |||  method can be accessed from everywhere. This is default||| protected - the property or method can |||  be accessed within the |||  class and by classes derived from that class||| private - the property or method can |||  ONLY be accessed within the class|||'],[],[]
php||OOP - Inheritance,https://www.w3schools.com/php/php_oop_inheritance.asp,,"['PHP - What is Inheritance?', 'PHP - Inheritance and the Protected Access Modifier', 'PHP - Overriding Inherited Methods', 'PHP - The final Keyword']","[""Inheritance in OOP = When a class derives from another class.The child class will inherit all the public and protected properties and \nmethods from the parent class. In addition, it can have its own properties and \nmethods.An inherited class is defined by using the extends \nkeyword.Let's look at an example:The Strawberry class is inherited from the Fruit class. This means that the Strawberry class can use the public $name and $color \nproperties as well as the public __construct() and intro() methods from the \nFruit class because of inheritance.The Strawberry class also has its own method: message()."", ""In the previous chapter we learned that protected properties or methods can \n  be accessed within the \n  class and by classes derived from that class. What does that mean?Let's look at an example:In the example above we see that if we try to call a protected \nmethod (intro()) from outside the class, we will receive an error. public \nmethods will work fine!Let's look at another example:In the example above we see that all works fine! It is because we call the\nprotected \nmethod (intro()) from inside the derived class."", 'Inherited methods can be overridden by redefining the methods (use the same \nname) in the child class.Look at the example below. The __construct() and intro() methods in the child \nclass (Strawberry) will override the __construct() and intro() methods in the \nparent class (Fruit):', 'The final \nkeyword can be used to prevent class inheritance or to prevent method overriding.The following example shows how to prevent class inheritance:The following example shows how to prevent method overriding:']","['\n    <?phpclass Fruit {\xa0 public \n    $name;\xa0 public $color;\xa0 public \n    function __construct($name, $color) {\xa0\xa0\xa0 $this->name = $name;\xa0\xa0\xa0 $this->color = $color;\n    \xa0 }\xa0 \n    public function intro() {\xa0\xa0\xa0 echo ""The fruit is {$this->name} \n    and the color is {$this->color}."";\n    \xa0 }}// Strawberry is inherited from Fruitclass \n    Strawberry extends Fruit {\xa0 public \n    function message() {\xa0\xa0\xa0 echo ""Am I a fruit or a \n    berry? "";\n    \xa0 }}$strawberry = new Strawberry(""Strawberry"", ""red"");$strawberry->message();$strawberry->intro();\n    ?>\n', '\n    <?phpclass Fruit {\xa0 public \n    $name;\xa0 public $color;\xa0 public \n    function __construct($name, $color) {\xa0\xa0\xa0 $this->name = $name;\xa0\xa0\xa0 $this->color = $color;\n    \xa0 }\xa0 \n    protected function intro() {\xa0\xa0\xa0 echo ""The fruit is {$this->name} \n    and the color is {$this->color}."";\n    \xa0 }}class \n    Strawberry extends Fruit {\xa0 public \n    function message() {\xa0\xa0\xa0 echo ""Am I a fruit or a \n    berry? "";\n    \xa0 }}// Try to call all three methods from outside class$strawberry = new Strawberry(""Strawberry"", ""red"");\xa0 \n    // OK. __construct() is public$strawberry->message(); // OK. message() \n    is public$strawberry->intro(); // ERROR. intro() \n    is protected\n    ?>\n &&&&&& \n    <?phpclass Fruit {\xa0 public $name;\xa0 public \n    $color;\xa0 public function __construct($name, $color) {\xa0\xa0\xa0 \n    $this->name = $name;\xa0\xa0\xa0 $this->color = $color; \xa0 \n    }\xa0 protected function intro() {\xa0\xa0\xa0 echo ""The \n    fruit is {$this->name} and the color is {$this->color}.""; \xa0 }}\nclass Strawberry extends Fruit {\xa0 public function message() {\xa0\xa0\xa0 \n    echo ""Am I a fruit or a berry? "";\xa0\xa0\xa0 // Call protected \n    method from within derived class - OK\xa0\xa0\xa0 $this -> \n    intro();\xa0 }}\n    $strawberry = new Strawberry(""Strawberry"", ""red""); // OK. __construct() is \n    public$strawberry->message(); // OK. message() is \n    public and it calls intro() (which is protected) from within the \n    derived class?>\n', '\n    <?phpclass Fruit {\xa0 public \n    $name;\xa0 public $color;\xa0 public \n    function __construct($name, $color) {\xa0\xa0\xa0 $this->name = $name;\xa0\xa0\xa0 $this->color = $color;\n    \xa0 }\xa0 \n    public function intro() {\xa0\xa0\xa0 echo ""The fruit is {$this->name} \n    and the color is {$this->color}."";\n    \xa0 }}class \n    Strawberry extends Fruit {\xa0 public $weight;\xa0 public \n    function __construct($name, $color, $weight) {\xa0\xa0\xa0 $this->name = $name;\xa0\xa0\xa0 $this->color = $color;\xa0\xa0\xa0 $this->weight = $weight;\n    \xa0 }\xa0 \n    public function intro() {\xa0\xa0\xa0 echo ""The fruit is {$this->name}, the color is {$this->color}, \n    and the weight is {$this->weight} gram."";\n    \xa0 }}$strawberry = new Strawberry(""Strawberry"", ""red"", \n    50);$strawberry->intro();?>\n', '']",[''],[],[]
php||OOP - Class Constants,https://www.w3schools.com/php/php_oop_constants.asp,,['PHP - Class Constants'],"['Constants cannot be changed once it is declared.Class constants can be useful if you need to define some constant data within \na class.A class constant is declared inside a class with the const \nkeyword.Class constants are case-sensitive. However, it is recommended to name the constants in \nall uppercase letters.We can access a constant from outside the class by using the class name \nfollowed by the scope resolution operator (::) followed by the constant \nname, like here:Or, we can access a constant from inside the class by using the \nself keyword followed by the scope resolution operator (::) followed\xa0by the constant name, like here:']",[''],[''],[],[]
php||OOP - Abstract Classes,https://www.w3schools.com/php/php_oop_classes_abstract.asp,,"['PHP - What are Abstract Classes and Methods?', 'PHP - More Abstract Class Examples']","[""Abstract classes and methods are when the parent class has a named method, \nbut \nneed its child class(es) to fill out the tasks.An abstract class is a class that contains at least one abstract method. An \nabstract method is a method that is declared, but not implemented in the code.An abstract class or method is defined with the abstract \nkeyword:When inheriting from an abstract class, the child class method must be \ndefined with the same name, and the same or a less restricted access modifier. \nSo, if the abstract method is defined as protected, the child class method must \nbe defined as either protected or public, but not private. Also, the type and number of \nrequired arguments must be the same. However, the child classes may have optional \narguments in addition.So, when a child class is inherited from an abstract class, we have the following rules:Let's look at an example:The Audi, Volvo, and Citroen classes are inherited from the Car class. This means that the \nAudi, Volvo, and Citroen classes can use the public $name \nproperty as well as the public __construct() method from the \nCar class because of inheritance.But, intro() is an abstract method that should be defined in all the child \nclasses and they should return a string."", ""Let's look at another example where the abstract method has an argument:Let's look at another example where the abstract method has an argument, and \nthe child class has two optional arguments that are not defined in the parent's \n    abstract method:""]","['\n    <?phpabstract class \n    ParentClass {\xa0 abstract public function someMethod1();\xa0 \n    abstract public function someMethod2($name, $color);\xa0 abstract \n    public function someMethod3() : string;}?>\n &&&&&& \n    <?php// Parent classabstract class Car {\xa0 public \n    $name;\xa0 public \n    function __construct($name) {\xa0\xa0\xa0 $this->name = $name;\xa0 }\xa0 \n    abstract public function intro() : string;     }// Child classesclass \n    Audi extends Car {\xa0 public \n    function intro() : string {\xa0\xa0\xa0 return ""Choose German \n    quality! I\'m an $this->name!"";\n    \xa0 }}class \n    Volvo extends Car {\xa0 public \n    function intro() : string {\xa0\xa0\xa0 return ""Proud to be \n    Swedish! I\'m a $this->name!"";\n    \xa0 }}class \n    Citroen extends Car {\xa0 public \n    function intro() : string {\xa0\xa0\xa0 return ""French \n    extravagance! I\'m a $this->name!"";\n    \xa0 }}// Create objects from the child classes$audi = new \n    audi(""Audi"");\n    echo $audi->intro();echo ""<br>"";$volvo = new \n    volvo(""Volvo"");\n    echo $volvo->intro();echo ""<br>"";\n$citroen = new citroen(""Citroen"");\n    echo $citroen->intro();?>\n', '']","['PHP - What are Abstract Classes and Methods?###&&&|||The child class method must be defined with the same name and it redeclares the parent abstract method|||The child class method must be defined with the same or a less restricted |||  access modifier|||The number of required arguments must be the same. However, the child class |||  may have optional |||arguments in addition|||']",[],[]
php||OOP - Interfaces,https://www.w3schools.com/php/php_oop_interfaces.asp,,"['PHP - What are Interfaces?', 'PHP - Interfaces vs. Abstract Classes', 'PHP - Using Interfaces']","['Interfaces allow you to specify what methods a class should implement.Interfaces make it easy to use a variety of different classes in the same way. When one or more classes use the same interface, it is referred to as ""polymorphism"".Interfaces are declared with the interface keyword:', 'Interface are similar to abstract classes. The difference between interfaces and abstract classes are:', ""To implement an interface, a class must use the  implements keyword.A class that implements an interface must implement all of the interface's methods.From the example above, let's say that we would like to write software which manages a group of animals. There are actions\nthat all of the animals can do, but each animal does it in its own way.Using interfaces, we can write some code which can work for all of the \nanimals even if each animal behaves differently:Cat, Dog and Mouse are all classes that implement the Animal interface, which means that\nall of them are able to make a sound using the makeSound() method. Because of this,\nwe can loop through all of the animals and tell them to make a sound even if we don't\nknow what type of animal each one is.Since the interface does not tell the classes how to implement the method, each animal\ncan make a sound in its own way.""]","['\n    <?php\n    interface InterfaceName {\xa0 public function someMethod1();\xa0 \n    public function someMethod2($name, $color);\xa0 public function \n    someMethod3() : string; }?>\n', '', '']","['PHP - Interfaces vs. Abstract Classes###&&&|||Interfaces cannot have properties, while abstract classes can|||All interface methods must be public, while abstract class methods is public |||or protected|||All methods in an interface are abstract, so they cannot be implemented in code|||and the abstract keyword is not necessary|||Classes can implement an interface while inheriting from another class at the same|||time|||']",[],[]
php||OOP - Traits,https://www.w3schools.com/php/php_oop_traits.asp,,"['PHP - What are Traits?', 'PHP - Using Multiple Traits']","[""PHP only supports single inheritance: a child class can inherit only from one \nsingle parent.So, what if a class needs to inherit multiple behaviors? OOP traits solve \nthis problem.Traits are used to declare methods that can be used in multiple classes. \nTraits can have methods and abstract methods that can be used in multiple \nclasses, and the methods can have any access modifier (public, private, or \nprotected).Traits are declared with the trait \nkeyword:To use a trait in a class, use the \nuse \nkeyword:Let's look at an example:Here, we declare one trait: message1. Then, we create a class: \nWelcome. The class uses the trait, and all the methods in the trait will be \navailable in the class.If other classes need to use the msg1() function, simply use \nthe message1 trait in those classes. This reduces code duplication, because \nthere is no need to redeclare the same method over and over again."", ""Let's look at another example:Here, we declare two traits: message1 and message2. Then, we create two classes: \nWelcome and Welcome2. The first class (Welcome) uses the message1 trait, and the \nsecond class (Welcome2) uses both message1 and message2 traits (multiple traits \nare separated by comma).""]","['\n    <?php\n    trait TraitName {\xa0 // some code...}?>\n &&&&&& \n    <?phpclass MyClass {\xa0 use TraitName;}?>\n &&&&&& \n    <?phptrait message1 {public function msg1() {\xa0\xa0\xa0 \n    echo ""OOP is fun! ""; \xa0 }}class Welcome {\xa0 use \n    message1;}$obj = new Welcome();$obj->msg1();?>\n', '']",[''],[],[]
php||OOP - Static Methods,https://www.w3schools.com/php/php_oop_static_methods.asp,,"['PHP - Static Methods', 'PHP - More on Static Methods']","[""Static methods can be called directly - without creating an instance of the \nclass first.Static methods are declared with the static \nkeyword:To access a static method use the class name, double colon (::), and the \nmethod name:Let's look at an example:Here, we declare a static method: welcome(). Then, we call the static method \nby using the class name, double colon (::), and the method name (without \ncreating an instance of the class first)."", 'A class can have both static and non-static methods. A static method can be \naccessed from a method in the same class using the self \nkeyword and double colon (::):Static methods can also be called from methods in other classes. To do this, \nthe static method should be public:To call a static method from a child class, use the parent \nkeyword inside the child class. Here, the static method can be public \nor protected.']","['\n    <?php\n    class ClassName {\xa0 public static function staticMethod() {\xa0\xa0\xa0 \n    echo ""Hello World!"";\xa0 }}?>\n &&&&&& \n    ClassName::staticMethod(); &&&&&& \n    <?phpclass \n    greeting {\xa0 public static function \n    welcome() {\xa0\xa0\xa0 echo ""Hello World!"";\xa0 }}\n// Call static method\n    greeting::welcome();?>\n', '']",[''],[],[]
php||OOP - Static Properties,https://www.w3schools.com/php/php_oop_static_properties.asp,,"['PHP - Static Properties', 'PHP - More on Static Properties']","[""Static properties can be called directly - without creating an instance of a \nclass.Static properties are declared with the static \nkeyword:To access a static property use the class name, double colon (::), and the \nproperty name:Let's look at an example:Here, we declare a static property: $value. Then, we echo the value of the static \nproperty \nby using the class name, double colon (::), and the property name (without creating a class \nfirst)."", 'A class can have both static and non-static properties. A static property can be \naccessed from a method in the same class using the self \nkeyword and double colon (::):To call a static property from a child class, use the parent \nkeyword inside the child class:']","['\n    <?php\n    class ClassName {\xa0 public static $staticProp = ""W3Schools"";}?>\n &&&&&& \n    ClassName::$staticProp; &&&&&& \n    <?phpclass \n    pi {\xa0 public static $value = 3.14159;}\n// Get static property\n    echo pi::$value;?>\n', '']",[''],[],[]
php||Namespaces,https://www.w3schools.com/php/php_namespaces.asp,,"['PHP Namespaces', 'Declaring a Namespace', 'Using Namespaces', 'Namespace Alias']","['Namespaces are qualifiers that solve two different problems:For example, you may have a set of classes which describe an HTML table, such as Table, Row and\nCell while also having another set of classes to describe furniture, such as Table,\nChair and Bed. Namespaces can be used to organize the classes into two different\ngroups while also preventing the two classes Table and Table from being mixed up.', 'Namespaces are declared at the beginning of a file using the namespace keyword:Constants, classes and functions declared in this file will belong to the Html namespace:For further organization, it is possible to have nested namespaces:', 'Any code that follows a namespace declaration is operating inside the namespace, so\nclasses that belong to the namespace can be instantiated without any qualifiers. To access\nclasses from outside a namespace, the class needs to have the namespace attached\nto it.When many classes from the same namespace are being used at the same time, it is\neasier to use the namespace keyword:', 'It can be useful to give a namespace or class an alias to make it easier to write. This is\ndone with the use keyword:']","['\nnamespace Html; &&&&&& \n    <?phpecho ""Hello World!"";namespace Html;...?> &&&&&& \n    <?phpnamespace Html;class Table {\xa0 public $title = """";\xa0 public \n    $numRows = 0;\xa0 public function message() {\xa0\xa0\xa0 echo ""<p>Table \n    \'{$this->title}\' has {$this->numRows} rows.</p>"";\xa0 }}$table = new \n    Table();$table->title = ""My table"";$table->numRows = 5;?>\n<!DOCTYPE html>\n    <html><body><?php $table->message(); ?></body></html>', '\nnamespace Code\\Html;', '\n    $table = new Html\\Table()$row = new Html\\Row(); &&&&&& \n    namespace Html;$table = new Table();$row = new Row();', '']",[''],[],[]
php||,https://www.w3schools.com/php/php_iterables.asp,,"['PHP - What is an Iterable?', 'PHP - Using Iterables', 'PHP - Creating Iterables']","['An iterable is any value which can be looped through with a foreach() loop.The iterable pseudo-type was introduced in PHP 7.1, and it can be used as a data type for function arguments and function\nreturn values.', 'The iterable keyword can be used as a data type of a function argument or as the return\ntype of a function:', 'ArraysAll arrays are iterables, so any array can be used as an argument of a function that requires an iterable.IteratorsAny object that implements the Iterator interface can be used as an argument of a function\nthat requires an iterable.An iterator contains a list of items and provides methods to loop through them. It keeps a\npointer to one of the elements in the list. Each item in the list should have a key which can\nbe used to find the item.An iterator must have these methods:']","['\n  <?phpfunction printIterable(iterable $myIterable) {\xa0 \n  foreach($myIterable as $item) {\xa0\xa0\xa0 echo $item;\xa0 }\n  }$arr = [""a"", \n  ""b"", ""c""];printIterable($arr);?> &&&&&& \n  <?phpfunction getIterable():iterable {\xa0 return [""a"", ""b"", ""c""];\n  }$myIterable = getIterable();foreach($myIterable as $item) {\xa0 \n  echo $item;}?>', '', '']","['PHP - Creating Iterables###&&&|||current() - Returns the element that the pointer is currently pointing to. It can be any|||data type|||key() Returns the key associated with the current element in the list. It can only be|||an integer, float, boolean or string|||next() Moves the pointer to the next element in the list|||rewind() Moves the pointer to the first element in the list|||valid() If the internal pointer is not pointing to any element (for example, if next()|||was called at the end of the list), this should return false. It returns true in any|||other case|||']",[],[]
php||MySQL Database,https://www.w3schools.com/php/php_mysql_intro.asp,"With PHP, you can connect to and manipulate databases.","['What is MySQL?', 'PHP + MySQL Database System', ' Database Queries', 'Download MySQL Database', 'Facts About MySQL Database']","['MySQL is the most popular database system used with PHP.', 'The data in a MySQL database are stored in tables. A table is a collection of related data, and it consists of columns \nand rows.Databases are useful for storing information categorically. A company may \nhave a database with the following tables:', ' A query is a question or a request.We can query a database for specific information and have a \nrecordset returned.Look at the following query (using standard SQL):The query above selects all the data in the ""LastName"" column from the ""Employees"" \ntable.To learn more about SQL, please visit our SQL \ntutorial.', ""If you don't have a PHP server with a MySQL Database, you can download it \nfor free here: \nhttp://www.mysql.com\n"", 'MySQL is the de-facto standard database system for web sites \nwith HUGE volumes of both data and end-users (like Facebook, Twitter, \nand Wikipedia).Another great thing about MySQL is that it can be scaled down to support \nembedded database applications.Look at \nhttp://www.mysql.com/customers/ for an overview of companies using MySQL.']","['', '', '', '', '']","[""What is MySQL?###What is MySQL?###PHP + MySQL Database System###&&&|||MySQL is a database system used on the web|||MySQL is a database system that runs on a server|||MySQL is ideal for both small and large applications|||MySQL is very fast, reliable, and easy to use|||MySQL uses standard SQL|||MySQL compiles on a number of platforms|||MySQL is free to download and use|||MySQL is developed, distributed, and supported by Oracle Corporation|||MySQL is named after co-founder Monty Widenius's daughter: My|||&&&|||Employees|||Products|||Customers|||Orders|||&&&|||PHP combined with MySQL are cross-platform (you can develop in |||  Windows and serve on a Unix platform)|||""]",[],[]
php||Connect to MySQL,https://www.w3schools.com/php/php_mysql_connect.asp,PHP 5 and later can work with a MySQL database using:,"['Should I Use MySQLi or PDO?', 'MySQL Examples in Both MySQLi and PDO Syntax', 'MySQLi Installation', 'PDO Installation', 'Open a Connection to MySQL', 'Close the Connection']","['Earlier versions of PHP used the MySQL extension. However, this \nextension was deprecated in 2012.', 'If you need a short answer, it would be ""Whatever you like"".Both MySQLi and PDO have their advantages:PDO will work on 12 different database systems, whereas MySQLi will only \nwork with MySQL databases.So, if you have to switch your project \nto use another database, PDO makes the process easy. You only have \nto change the connection string and a few queries. With MySQLi, you will need \nto rewrite the entire code - queries included.Both are object-oriented, but MySQLi also offers a procedural API.Both support Prepared Statements. Prepared Statements protect \nfrom SQL injection, and are very important for web application security.', 'In this, and in the following chapters we demonstrate three ways of working \nwith PHP and MySQL:', 'For Linux and Windows: The MySQLi extension is automatically installed in \nmost cases, when php5 mysql package is installed.For installation details, go to:\n\nhttp://php.net/manual/en/mysqli.installation.php', 'For installation details, go to:\n\nhttp://php.net/manual/en/pdo.installation.php', 'Before we can access data in the MySQL database, we need to be able to connect to \nthe server:Tip: A great benefit of PDO is that it \nhas an exception class to handle any problems that may \noccur in our database queries. If an exception is thrown within the try{ } block, \nthe script stops executing and flows directly to the first catch(){ } block.', 'The connection will be closed automatically when the script ends. To close the \nconnection before, use the following:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";// Create connection$conn = new mysqli($servername, $username, $password);\n// Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\necho ""Connected successfully"";\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";\n $password = ""password"";// Create connection\n$conn = mysqli_connect($servername, $username, $password);\n// Check connection\n if (!$conn)\xa0{\n  \xa0 die(""Connection failed: "" . mysqli_connect_error());}echo ""Connected successfully"";\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";\n $password = ""password"";try {\xa0\xa0$conn = new PDO(""mysql:host=$servername;dbname=myDB"", $username, $password);\n  \xa0 // set the PDO error mode to exception\xa0 $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);\n  \xa0 echo ""Connected successfully"";\n } catch(PDOException $e)\xa0{\xa0\xa0echo ""Connection failed: "" . $e->getMessage();}\n?>\n', '', '', '']",[''],[],[]
php||Create a MySQL Database,https://www.w3schools.com/php/php_mysql_create.asp,A database consists of one or more tables. ,['Create a MySQL Database Using MySQLi and PDO'],"['You will need special CREATE privileges to create or to delete a MySQL \ndatabase.', 'The CREATE DATABASE statement is used to create a database in MySQL.The following examples create a database named ""myDB"":', 'Note: The following PDO example create a database named ""myDBPDO"":Tip: A great benefit of PDO is that it has exception class to handle any problems that may \noccur in our database queries. If an exception is thrown within the try{ } block, \nthe script stops executing and flows directly to the first catch(){ } block. In the catch block above we echo the SQL statement and \nthe generated error message. ']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";// Create connection$conn = new mysqli($servername, $username, $password);\n // Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\n\n// Create database\n $sql = ""CREATE DATABASE myDB"";if ($conn->query($sql) === TRUE) {\xa0\xa0echo ""Database created successfully"";} else {\xa0\xa0echo ""Error creating database: "" . $conn->error;}$conn->close();\n?>\n']",[''],[],[]
php||MySQL Create Table,https://www.w3schools.com/php/php_mysql_create_table.asp,"A database table has its own unique name and consists of 
columns and rows.",['Create a MySQL Table Using MySQLi and PDO'],"['The CREATE TABLE statement is used to create a table in MySQL.We will create a table named ""MyGuests"", with \nfive columns: ""id"", ""firstname"", ""lastname"", ""email"" and ""reg_date"":Notes on the table above:The data type specifies what type of data the column can hold. For a complete \nreference of all the available data types, go to our\nData Types reference.After the data type, you can specify other optional attributes for each \ncolumn:Each table should have a primary key column (in this case: the ""id"" column). \nIts value must be unique for each record in the table.The following examples shows how to create the table in PHP:']","['\nCREATE TABLE MyGuests (\nid INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\nfirstname VARCHAR(30) NOT NULL,\nlastname VARCHAR(30) NOT NULL,\nemail VARCHAR(50),\nreg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n)\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);\n // Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\n\n// sql to create table\n $sql = ""CREATE TABLE MyGuests (id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, firstname VARCHAR(30) NOT NULL,lastname VARCHAR(30) NOT NULL,email VARCHAR(50),reg_date TIMESTAMP \n  DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP)"";\nif ($conn->query($sql) === TRUE) {\xa0 echo ""Table MyGuests created successfully"";} else {\n  \xa0 echo ""Error creating table: "" . $conn->error;}$conn->close();\n?>\n']","['Create a MySQL Table Using MySQLi and PDO###&&&|||NOT NULL - Each row must contain a value for that column, null values are not allowed|||DEFAULT value - Set a default value that is added when no other value is passed|||UNSIGNED - Used for number types, limits the stored data to positive numbers and zero|||AUTO INCREMENT - MySQL automatically increases the value of the field by 1 each time a new record is added|||PRIMARY KEY - Used to uniquely identify the rows in a table. The column with PRIMARY KEY setting is often an ID number, and is often used with AUTO_INCREMENT|||']",[],[]
php||MySQL Insert Data,https://www.w3schools.com/php/php_mysql_insert.asp,,['Insert Data Into MySQL Using MySQLi and PDO'],"['After a database and a table have been created, we can start adding data in \nthem.Here are some syntax rules to follow:The INSERT INTO statement is used to add new records to a MySQL table:To learn more about SQL, please visit our SQL tutorial.In the previous chapter we created an empty table named ""MyGuests"" with \nfive columns: ""id"", ""firstname"", ""lastname"", ""email"" and ""reg_date"". \nNow, let us fill the table with data.The following examples add a new record to the ""MyGuests"" table:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);\n // Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\n\n$sql = ""INSERT INTO MyGuests (firstname, lastname, email)\n VALUES (\'John\', \'Doe\', \'john@example.com\')"";\nif ($conn->query($sql) === TRUE) {\xa0 echo ""New record created successfully"";} else {\n  \xa0 echo ""Error: "" . $sql . ""<br>"" . $conn->error;}$conn->close();\n?>\n']",['Insert Data Into MySQL Using MySQLi and PDO###&&&|||The SQL query must be quoted in PHP|||String values inside the SQL query must be quoted|||Numeric values must not be quoted|||The word NULL must not be quoted|||'],[],[]
php||MySQL Get Last Inserted ID,https://www.w3schools.com/php/php_mysql_insert_lastid.asp,,['Get ID of The Last Inserted Record'],"['If we perform an INSERT or UPDATE on a table with an AUTO_INCREMENT field, we can \nget the ID of the last inserted/updated record immediately.In the table ""MyGuests"", the ""id"" column is an AUTO_INCREMENT \nfield:The following examples are equal to the examples from the previous page (PHP Insert Data Into \nMySQL), except that we have added one single line of code to retrieve the ID \nof the last inserted record. We also echo the last inserted ID:']","['\nCREATE TABLE MyGuests (\nid INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY,\nfirstname VARCHAR(30) NOT NULL,\nlastname VARCHAR(30) NOT NULL,\nemail VARCHAR(50),\nreg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\n)\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);\n // Check connection\n if ($conn->connect_error)\xa0{\n  \xa0 die(""Connection failed: "" . $conn->connect_error);}\n\n$sql = ""INSERT INTO MyGuests (firstname, lastname, email)\n VALUES (\'John\', \'Doe\', \'john@example.com\')"";\nif ($conn->query($sql) === TRUE) {\xa0 $last_id = $conn->insert_id;\n  \xa0 echo ""New record created successfully. Last inserted ID is: "" . $last_id;} else {\n  \xa0 echo ""Error: "" . $sql . ""<br>"" . $conn->error;}$conn->close();\n?>\n']",[''],[],[]
php||MySQL Insert Multiple Records,https://www.w3schools.com/php/php_mysql_insert_multiple.asp,,['Insert Multiple Records Into MySQL Using MySQLi and PDO'],"['Multiple SQL statements must be executed with the mysqli_multi_query() function.The following examples add three new records to the ""MyGuests"" table:', 'The PDO way is a little bit different:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);\n // Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\n\n$sql = ""INSERT INTO MyGuests (firstname, lastname, email)\n VALUES (\'John\', \'Doe\', \'john@example.com\');"";\n $sql .= ""INSERT INTO MyGuests (firstname, lastname, email)\n VALUES (\'Mary\', \'Moe\', \'mary@example.com\');"";\n $sql .= ""INSERT INTO MyGuests (firstname, lastname, email)\n VALUES (\'Julie\', \'Dooley\', \'julie@example.com\')"";\nif ($conn->multi_query($sql) === TRUE) {\xa0 echo ""New records created successfully"";} else {\xa0\xa0echo ""Error: "" . $sql . ""<br>"" . $conn->error;}$conn->close();\n?>\n']",[''],[],[]
php||MySQL Prepared Statements,https://www.w3schools.com/php/php_mysql_prepared_statements.asp,Prepared statements are very useful against SQL injections.,"['Prepared Statements and Bound Parameters', 'Prepared Statements in MySQLi', 'Prepared Statements in PDO']","['A prepared statement is a feature used to execute the same (or similar) SQL \nstatements repeatedly with high efficiency.Prepared statements basically work like this:Compared to executing SQL statements directly, prepared statements have three main advantages:', 'The following example uses prepared statements and bound parameters in MySQLi:Code lines to explain from the example above:In our SQL, we insert a question mark (?) where we want to substitute in an integer, string, double or blob \nvalue.Then, have a look at the bind_param() function:This function binds the parameters to the SQL query and tells the \ndatabase what the parameters are. The ""sss"" argument lists the \ntypes of data that the parameters are. The s character tells mysql that the parameter is a string.The argument may be one of four types:We must have one of these for each parameter.By telling mysql what type of data to expect, we minimize the risk of SQL injections.', 'The following example uses prepared statements and bound parameters in PDO:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\xa0\xa0die(""Connection failed: "" . $conn->connect_error);\n }// prepare and bind$stmt = $conn->prepare(""INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)"");$stmt->bind_param(""sss"", $firstname, $lastname, $email);// set parameters and execute$firstname = ""John"";$lastname = ""Doe"";$email = ""john@example.com"";$stmt->execute();$firstname = ""Mary"";$lastname = ""Moe"";$email = ""mary@example.com"";$stmt->execute();\n$firstname = ""Julie"";$lastname = ""Dooley"";$email = ""julie@example.com"";\n $stmt->execute();echo ""New records created successfully"";$stmt->close();\n $conn->close();?>\n', '\n ""INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)""', '\n $stmt->bind_param(""sss"", $firstname, $lastname, $email);\n']","['Prepared Statements and Bound Parameters###Prepared Statements in MySQLi###&&&|||Prepared statements reduce parsing time as the preparation on the query is done only once (although the statement is executed multiple times)|||Bound parameters minimize bandwidth to the server as you need send only the parameters each time, and not the whole query|||Prepared statements are very useful against SQL injections, because parameter values, which are transmitted later using a different protocol, need not be correctly escaped. If the original statement template is not derived from external input, SQL injection cannot occur.|||&&&|||i - integer|||d - double|||s - |||string|||b - BLOB||||||']",[],[]
php||MySQL Select Data,https://www.w3schools.com/php/php_mysql_select.asp,,"['Select Data From a MySQL Database', 'Select Data With MySQLi', 'Select Data With PDO (+ Prepared Statements)']","['The SELECT statement is used to select data from one or more tables:or we can use the * character to select ALL columns from a table:To learn more about SQL, please visit our SQL tutorial.', 'The following example selects the id, firstname and lastname columns from the MyGuests \ntable and displays it on the page:Code lines to explain from the example above:First, we set up an SQL query that selects the id, firstname and lastname columns from the MyGuests \ntable. The next line of code runs the query and puts the resulting data into a \nvariable called $result.Then, the function num_rows() checks if there are more than zero \nrows returned.If there are more than zero rows returned, the \nfunction fetch_assoc() puts all the results into an associative array that we can loop \nthrough. The while() loop loops through the result set and outputs the data from \nthe id, firstname and lastname columns.The following example shows the same as the example above, in the MySQLi \nprocedural way:', 'You can also put the result in an HTML table:', 'The following example uses prepared statements.It selects the id, firstname and lastname columns from the MyGuests table and \ndisplays it in an HTML table:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\n  \xa0 die(""Connection failed: "" . $conn->connect_error);\n } $sql = ""SELECT id, firstname, lastname FROM MyGuests"";$result = $conn->query($sql);if ($result->num_rows > 0) {\xa0\xa0// output data of each row\n  \xa0 while($row = $result->fetch_assoc()) {\xa0\xa0\xa0 echo ""id: "" . $row[""id""]. "" - Name: "" . $row[""firstname""]. "" "" . $row[""lastname""]. ""<br>"";\n  \xa0\xa0}} else {\xa0 echo ""0 results"";}\n $conn->close();\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n // Check connection\n if (!$conn)\xa0{\n\xa0\xa0die(""Connection failed: "" . mysqli_connect_error());}$sql = ""SELECT id, firstname, lastname FROM MyGuests"";$result = mysqli_query($conn, $sql);if (mysqli_num_rows($result) > 0) {\n  \xa0 // output data of each row\xa0\xa0while($row = mysqli_fetch_assoc($result)) {\xa0\xa0\xa0\xa0echo ""id: "" . $row[""id""]. "" - Name: "" . $row[""firstname""]. "" "" . $row[""lastname""]. ""<br>"";\n  \xa0\xa0}} else {\xa0\xa0echo ""0 results"";}\nmysqli_close($conn);\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\n  \xa0 die(""Connection failed: "" . $conn->connect_error);\n } $sql = ""SELECT id, firstname, lastname FROM MyGuests"";$result = $conn->query($sql);if ($result->num_rows > 0) {\n  \xa0 echo ""<table><tr><th>ID</th><th>Name</th></tr>"";\n  \xa0 // output data of each row\xa0 while($row = $result->fetch_assoc()) {\xa0\xa0\xa0\xa0echo ""<tr><td>"".$row[""id""].""</td><td>"".$row[""firstname""]."" "".$row[""lastname""].""</td></tr>"";\n  \xa0\xa0}\xa0 echo ""</table>"";} else {\xa0\xa0echo ""0 results"";}\n $conn->close();\n?>\n']",[''],[],[]
php||MySQL Use The WHERE Clause,https://www.w3schools.com/php/php_mysql_select_where.asp,,"['Select and Filter Data From a MySQL Database', 'Select and Filter Data With MySQLi', 'Select Data With PDO (+ Prepared Statements)']","['The WHERE clause is used to filter records.The WHERE clause is used to extract only those records that fulfill a \nspecified condition.To learn more about SQL, please visit our SQL tutorial.', 'The following example selects the id, firstname and lastname columns from the MyGuests \ntable where the lastname is ""Doe"", and displays it on the page:Code lines to explain from the example above:First, we set up the SQL query that selects the id, firstname and lastname columns from the MyGuests \ntable where the lastname is ""Doe"". The next line of code runs the query and puts the resulting data into a \nvariable called $result.Then, the function num_rows() checks if there are more than zero \nrows returned.If there are more than zero rows returned, the \nfunction fetch_assoc() puts all the results into an associative array that we can loop \nthrough. The while() loop loops through the result set and outputs the data from \nthe id, firstname and lastname columns.The following example shows the same as the example above, in the MySQLi procedural way:', 'You can also put the result in an HTML table:', 'The following example uses prepared statements.It selects the id, firstname and lastname columns from the MyGuests table \nwhere the lastname is ""Doe"", and \ndisplays it in an HTML table:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\xa0\xa0die(""Connection failed: "" . $conn->connect_error);\n } $sql = ""SELECT id, firstname, lastname FROM MyGuests WHERE \n  lastname=\'Doe\'"";$result = $conn->query($sql);if ($result->num_rows > 0) {\xa0\xa0// output data of each row\xa0\xa0while($row = $result->fetch_assoc()) {\xa0\xa0\xa0 echo ""id: "" . $row[""id""]. "" - Name: "" . $row[""firstname""]. "" "" . $row[""lastname""]. ""<br>"";\n  \xa0\xa0}} else {\xa0\xa0echo ""0 results"";}\n $conn->close();\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n // Check connection\n if (!$conn)\xa0{\n  \xa0 die(""Connection failed: "" . mysqli_connect_error());}$sql = ""SELECT id, firstname, lastname FROM MyGuests \n  WHERE lastname=\'Doe\'"";$result = mysqli_query($conn, $sql);if (mysqli_num_rows($result) > 0) {\xa0\xa0// output data of each row\n  \xa0 while($row = mysqli_fetch_assoc($result)) {\xa0\xa0\xa0 echo ""id: "" . $row[""id""]. "" - Name: "" . $row[""firstname""]. "" "" . $row[""lastname""]. ""<br>"";\n  \xa0 }} else {\xa0\xa0echo ""0 results"";}\nmysqli_close($conn);\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\xa0\xa0die(""Connection failed: "" . $conn->connect_error);\n } $sql = ""SELECT id, firstname, lastname FROM MyGuests WHERE \n  lastname=\'Doe\'"";$result = $conn->query($sql);if ($result->num_rows > 0) {\xa0\xa0echo ""<table><tr><th>ID</th><th>Name</th></tr>"";\n  \xa0 // output data of each row\xa0\xa0while($row = $result->fetch_assoc()) {\xa0\xa0\xa0 echo ""<tr><td>"".$row[""id""].""</td><td>"".$row[""firstname""]."" "".$row[""lastname""].""</td></tr>"";\n  \xa0\xa0}\xa0\xa0echo ""</table>"";} else {\xa0 echo ""0 results"";}\n $conn->close();\n?>\n']",[''],[],[]
php||MySQL Use The ORDER BY Clause,https://www.w3schools.com/php/php_mysql_select_orderby.asp,,"['Select and Order Data From a MySQL Database', 'Select and Order Data With MySQLi', 'Select Data With PDO (+ Prepared Statements)']","['The ORDER BY clause is used to sort the result-set in ascending or descending \norder.The ORDER BY clause sorts the records in ascending order by default. To sort \nthe records in descending order, use the DESC keyword.To learn more about SQL, please visit our SQL tutorial.', 'The following example selects the id, firstname and lastname columns from the MyGuests \ntable. The records will be ordered by the lastname column:Code lines to explain from the example above:First, we set up the SQL query that selects the id, firstname and lastname columns from the MyGuests \ntable. The records will be ordered by the lastname column. The next line of code runs the query and puts the resulting data into a \nvariable called $result.Then, the function num_rows() checks if there are more than zero \nrows returned.If there are more than zero rows returned, the \nfunction fetch_assoc() puts all the results into an associative array that we can loop \nthrough. The while() loop loops through the result set and outputs the data from \nthe id, firstname and lastname columns.The following example shows the same as the example above, in the MySQLi procedural way:', 'You can also put the result in an HTML table:', 'The following example uses prepared statements.Here we select the id, firstname and lastname columns from the MyGuests table. \nThe records will be ordered by the lastname column, and it will be \ndisplayed in an HTML table:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\n  \xa0 die(""Connection failed: "" . $conn->connect_error);\n } $sql = ""SELECT id, firstname, lastname FROM MyGuests ORDER BY lastname"";$result = $conn->query($sql);if ($result->num_rows > 0) {\xa0\xa0// output data of each row\xa0\xa0while($row = $result->fetch_assoc()) {\n  \xa0\xa0\xa0 echo ""id: "" . $row[""id""]. "" - Name: "" . $row[""firstname""]. "" "" . $row[""lastname""]. ""<br>"";\n  \xa0 }} else {\xa0 echo ""0 results"";}\n $conn->close();\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection\n$conn = mysqli_connect($servername, $username, $password, $dbname);\n // Check connection\n if (!$conn)\xa0{\n  \xa0 die(""Connection failed: "" . mysqli_connect_error());}$sql = ""SELECT id, firstname, lastname FROM MyGuests \n  ORDER BY lastname"";$result = mysqli_query($conn, $sql);if (mysqli_num_rows($result) > 0) {\n  \xa0 // output data of each row\xa0 while($row = mysqli_fetch_assoc($result)) {\xa0\xa0\xa0\xa0echo ""id: "" . $row[""id""]. "" - Name: "" . $row[""firstname""]. "" "" . $row[""lastname""]. ""<br>"";\n  \xa0\xa0}} else {\xa0\xa0echo ""0 results"";}\nmysqli_close($conn);\n?>\n', '\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);// Check connectionif ($conn->connect_error) {\n  \xa0 die(""Connection failed: "" . $conn->connect_error);\n } $sql = ""SELECT id, firstname, lastname FROM MyGuests ORDER BY lastname"";$result = $conn->query($sql);if ($result->num_rows > 0) {\xa0\xa0echo ""<table><tr><th>ID</th><th>Name</th></tr>"";\n  \xa0 // output data of each row\xa0 while($row = $result->fetch_assoc()) {\xa0\xa0\xa0 echo ""<tr><td>"".$row[""id""].""</td><td>"".$row[""firstname""]."" "".$row[""lastname""].""</td></tr>"";\n  \xa0\xa0}\xa0\xa0echo ""</table>"";} else {\xa0 echo ""0 results"";}\n $conn->close();\n?>\n']",[''],[],[]
php||MySQL Delete Data,https://www.w3schools.com/php/php_mysql_delete.asp,,['Delete Data From a MySQL Table Using MySQLi and PDO'],"['The DELETE statement is used to delete records from a table:To learn more about SQL, please visit our SQL tutorial.Let\'s look at the ""MyGuests"" table:The following examples delete the record with id=3 in the ""MyGuests"" table:', 'After the record is deleted, the table will look like this:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);\n // Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\n\n// sql to delete a record\n $sql = ""DELETE FROM MyGuests WHERE id=3"";\nif ($conn->query($sql) === TRUE) {\xa0 echo ""Record deleted successfully"";} else {\n  \xa0 echo ""Error deleting record: "" . $conn->error;}$conn->close();\n?>\n']",[''],"['id|||firstname|||lastname|||email|||reg_date|||&&&1|||John|||Doe|||john@example.com|||2014-10-22 14:26:15|||&&&2|||Mary|||Moe|||mary@example.com|||2014-10-23 10:22:30|||&&&3|||Julie|||Dooley|||julie@example.com|||2014-10-26 10:48:23|||&&&', 'id|||firstname|||lastname|||email|||reg_date|||&&&1|||John|||Doe|||john@example.com|||2014-10-22 14:26:15|||&&&2|||Mary|||Moe|||mary@example.com|||2014-10-23 10:22:30|||&&&']",[]
php||MySQL Update Data,https://www.w3schools.com/php/php_mysql_update.asp,,['Update Data In a MySQL Table Using MySQLi and PDO'],"['The UPDATE statement is used to update existing records in a table:To learn more about SQL, please visit our SQL tutorial.Let\'s look at the ""MyGuests"" table:The following examples update the record with id=2 in the ""MyGuests"" table:', 'After the record is updated, the table will look like this:']","['\n<?php$servername = ""localhost"";$username = ""username"";$password = ""password"";$dbname = ""myDB"";// Create connection$conn = new mysqli($servername, $username, $password, $dbname);\n // Check connection\n if ($conn->connect_error)\xa0{\n\xa0\xa0die(""Connection failed: "" . $conn->connect_error);}\n\n$sql = ""UPDATE MyGuests SET lastname=\'Doe\' WHERE id=2"";\nif ($conn->query($sql) === TRUE) {\xa0\xa0echo ""Record updated successfully"";} else {\xa0\xa0echo ""Error updating record: "" . $conn->error;}$conn->close();\n?>\n']",[''],"['id|||firstname|||lastname|||email|||reg_date|||&&&1|||John|||Doe|||john@example.com|||2014-10-22 14:26:15|||&&&2|||Mary|||Moe|||mary@example.com|||2014-10-23 10:22:30|||&&&', 'id|||firstname|||lastname|||email|||reg_date|||&&&1|||John|||Doe|||john@example.com|||2014-10-22 14:26:15|||&&&2|||Mary|||Doe|||mary@example.com|||2014-10-23 10:22:30|||&&&']",[]
php||MySQL Limit Data Selections,https://www.w3schools.com/php/php_mysql_select_limit.asp,,['Limit Data Selections From a MySQL Database'],"['MySQL provides a LIMIT clause that is used to specify the number of records \nto return.The LIMIT clause makes it easy to code multi page results or pagination with \nSQL, and is very useful on large tables. Returning a large number of records can \nimpact on performance.Assume we wish to select all records from 1 - 30 (inclusive) from a table \ncalled ""Orders"". The SQL query would then look like this:When the SQL query above is run, it will return the first 30 records.What if we want to select records 16 - 25 (inclusive)?Mysql also provides a way to handle this: by using OFFSET.The SQL query below says ""return only 10 records, start on record 16 (OFFSET \n15)"":You could also use a shorter syntax to achieve the same result:Notice that the numbers are reversed when you use a comma.']",[''],[''],[],[]
php||XML Parsers,https://www.w3schools.com/php/php_xml_parsers.asp,,"['What is XML?', 'What is an XML Parser?', 'Tree-Based Parsers', 'Event-Based Parsers']","['The XML language is a way to structure data for sharing across websites.Several web technologies like RSS Feeds and Podcasts are written in XML.XML is easy to create. It looks a lot like HTML, except \nthat you make up your own tags.If you want to learn more about XML, please visit our \nXML tutorial.', 'To read and update, create and manipulate an XML document, you will need \nan XML parser.In PHP there are two major types of XML parsers:', 'Tree-based parsers holds the entire document in Memory and transforms the XML document into a \nTree structure. It analyzes the whole document, and provides access to the Tree elements (DOM).This type of parser is a better option for smaller \nXML documents, but not for large XML document as it causes major \nperformance issues.Example of tree-based parsers:', 'Event-based parsers do \nnot hold the entire document in Memory, instead, they read in one node at a \ntime and allow you to interact with in real time. Once you move onto the next \nnode, the old one is thrown away.This type of parser is well suited for large XML documents. It parses faster and consumes less memory. Example of event-based parsers:']","['', '', '', '']",['What is an XML Parser?###Tree-Based Parsers###Event-Based Parsers###&&&|||Tree-Based Parsers|||Event-Based Parsers|||&&&|||SimpleXML|||DOM|||&&&|||XMLReader|||XML Expat Parser|||'],[],[]
php||SimpleXML Parser,https://www.w3schools.com/php/php_xml_simplexml_read.asp,"SimpleXML is a PHP extension that allows us to easily 
manipulate and get XML data.","['The SimpleXML Parser', 'Installation', 'PHP SimpleXML - Read From String', 'PHP SimpleXML - Read From File', 'More PHP SimpleXML']","[""SimpleXML is a tree-based parser.SimpleXML provides an easy way of getting an element's name, attributes and textual \ncontent if you know the XML document's structure or layout.SimpleXML turns an XML document into a data structure you can iterate through \nlike a collection of arrays and objects.Compared to DOM or the Expat parser, SimpleXML takes a fewer lines of code to \nread text data from an element."", 'From PHP 5, the SimpleXML functions are part of the PHP core. No installation is required to use these functions.', 'The PHP simplexml_load_string() function is used to read XML data from a string.Assume we have a variable that contains XML data, like this:The example below shows how to use the simplexml_load_string() function to \nread XML data from a string:The output of the code above will be:Error Handling Tip: Use the libxml functionality to retrieve \nall XML errors when loading the document and then iterate over the errors. The \nfollowing example tries to load a broken XML string:The output of the code above will be:', 'The PHP simplexml_load_file() function is used to read XML data from a file.Assume we have an XML file called ""note.xml"", \nthat looks like this:The example below shows how to use the simplexml_load_file() function to read \nXML data from a file:The output of the code above will be:Tip: The next chapter shows how to get/retrieve node values \nfrom an XML file with SimpleXML!', 'For more information about the PHP SimpleXML functions, visit our\nPHP SimpleXML Reference.']","['\n$myXMLData = ""<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don\'t forget me this weekend!</body>\n</note>"";\n &&&&&& \n<?php$myXMLData =""<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<note>\n<to>Tove</to>\n<from>Jani</from>\n<heading>Reminder</heading>\n<body>Don\'t forget me this weekend!</body>\n</note>"";\n$xml=simplexml_load_string($myXMLData) or die(""Error: Cannot create object"");print_r($xml);\n?>\n &&&&&& \n<?phplibxml_use_internal_errors(true);$myXMLData =""<?xml version=\'1.0\' encoding=\'UTF-8\'?> <document> <user>John Doe</wronguser> <email>john@example.com</wrongemail>\n </document>""; $xml = simplexml_load_string($myXMLData);if ($xml === false) {\n  \xa0 echo ""Failed loading XML: "";\xa0 foreach(libxml_get_errors() as $error) {\xa0\xa0\xa0 echo ""<br>"", $error->message;\n  \xa0 }} else {\xa0 print_r($xml);}\n?>\n', '\n<?xml version=""1.0"" encoding=""UTF-8""?>\n<note>\n\xa0\n<to>Tove</to>\n\xa0\n<from>Jani</from>\n\xa0\n<heading>Reminder</heading>\n\xa0\n<body>Don\'t forget me this weekend!</body>\n</note>\n &&&&&& \n<?php\n$xml=simplexml_load_file(""note.xml"") or die(""Error: Cannot create object"");\n print_r($xml);\n?>\n', '', '', '']",[''],[],[]
php||SimpleXML - Get Node/Attribute Values,https://www.w3schools.com/php/php_xml_simplexml_get.asp,"SimpleXML is a PHP extension that allows us to easily 
manipulate and get XML data.","['PHP SimpleXML - Get Node Values', 'Another XML File', 'PHP SimpleXML - Get Node Values of Specific Elements', 'PHP SimpleXML - Get Node Values - Loop', 'PHP SimpleXML - Get Attribute Values', 'PHP SimpleXML - Get Attribute Values - Loop', 'More PHP SimpleXML']","['Get the node values from the ""note.xml"" file:The output of the code above will be:', 'Assume we have an XML file called ""books.xml"", \nthat looks like this:\xa0', 'The following example gets the node value of the <title> element in the first \nand second <book> elements in the ""books.xml"" file:\xa0The output of the code above will be:', 'The following example loops through all the <book> elements in the ""books.xml"" file, \nand gets the node values of the <title>, <author>, <year>, and <price> elements:The output of the code above will be:', 'The following example gets the attribute value of the ""category"" attribute of \nthe first <book> element and the attribute value of the ""lang"" attribute \nof the <title> element in the second <book> element:The output of the code above will be:', 'The following example gets the attribute values of the <title> elements in the ""books.xml"" file:The output of the code above will be:', 'For more information about the PHP SimpleXML functions, visit our\nPHP SimpleXML Reference.']","['\n <?php$xml=simplexml_load_file(""note.xml"") or die(""Error: Cannot create object"");echo $xml->to . ""<br>"";\n echo $xml->from . ""<br>"";echo $xml->heading . ""<br>"";echo $xml->body;?>\n', '\n <?php$xml=simplexml_load_file(""books.xml"") or die(""Error: Cannot create object"");echo $xml->book[0]->title . ""<br>"";echo $xml->book[1]->title; ?>\n', '\n <?php$xml=simplexml_load_file(""books.xml"") or die(""Error: Cannot create object"");foreach($xml->children() as $books) { \xa0\xa0echo $books->title . "", ""; \n  \xa0 echo $books->author . "", ""; \xa0 echo $books->year . "", "";\n  \xa0 echo $books->price . ""<br>""; } ?>\n', '\n <?php$xml=simplexml_load_file(""books.xml"") or die(""Error: Cannot create object"");echo $xml->book[0][\'category\'] . ""<br>"";echo $xml->book[1]->title[\'lang\']; ?>\n', '\n <?php$xml=simplexml_load_file(""books.xml"") or die(""Error: Cannot create object"");foreach($xml->children() as $books) { \xa0 echo $books->title[\'lang\'];\n  \xa0 echo ""<br>""; } ?>\n', '', '']",[''],[],[]
php||XML Expat Parser,https://www.w3schools.com/php/php_xml_parser_expat.asp,"The built-in XML Expat Parser makes it possible to process XML 
documents in PHP.","['The XML Expat Parser', 'The XML File', 'Initializing the XML Expat Parser', 'More PHP XML Expat Parser']","['The Expat parser is an event-based parser.Look at the following XML fraction:An event-based parser reports the XML above as a series of three events: The XML Expat Parser functions are part of the PHP core. There is no \ninstallation needed to use these functions.', 'The XML file ""note.xml"" will be used in the example below:', 'We want to initialize the XML Expat Parser in PHP, define some handlers for different \nXML events, and then parse the XML file.Example explained:', 'For more information about the PHP Expat functions, visit our PHP XML Parser Reference.']","['\n<?php\n// Initialize the XML parser\n$parser=xml_parser_create();\n\n// Function to use at the start of an element\nfunction start($parser,$element_name,$element_attrs)\xa0{\n\xa0\xa0switch($element_name)\xa0{\n\xa0\xa0\xa0\xa0case ""NOTE"":\n\xa0\xa0\xa0\xa0echo ""-- Note --<br>"";\n\xa0\xa0\xa0\xa0break;\n\xa0\xa0\xa0\xa0case ""TO"":\n\xa0\xa0\xa0\xa0echo ""To: "";\n\xa0\xa0\xa0\xa0break;\n\xa0\xa0\xa0\xa0case ""FROM"":\n\xa0\xa0\xa0\xa0echo ""From: "";\n\xa0\xa0\xa0\xa0break;\n\xa0\xa0\xa0\xa0case ""HEADING"":\n\xa0\xa0\xa0\xa0echo ""Heading: "";\n\xa0\xa0\xa0\xa0break;\n\xa0\xa0\xa0\xa0case ""BODY"":\n\xa0\xa0\xa0\xa0echo ""Message: "";\n \xa0\xa0}\n }\n\n// Function to use at the end of an element\nfunction stop($parser,$element_name)\xa0{\n\xa0\xa0echo ""<br>"";\n }\n\n// Function to use when finding character data\nfunction char($parser,$data)\xa0{\n\xa0\xa0echo $data;\n }\n\n// Specify element handler\nxml_set_element_handler($parser,""start"",""stop"");\n\n// Specify data handler\nxml_set_character_data_handler($parser,""char"");\n\n// Open XML file\n$fp=fopen(""note.xml"",""r"");\n\n// Read data\nwhile ($data=fread($fp,4096))\xa0{\n\xa0\xa0xml_parse($parser,$data,feof($fp)) or \n\xa0\xa0die (sprintf(""XML Error: %s at line %d"", \n\xa0\xa0xml_error_string(xml_get_error_code($parser)),\n\xa0\xa0xml_get_current_line_number($parser)));\n }\n\n// Free the XML parser\nxml_parser_free($parser);\n?>\n', '', '', '']","['The XML Expat Parser###&&&|||Start element: from|||Start CDATA section, value: Jani|||Close element: from|||']",[],[]
php||XML DOM Parser,https://www.w3schools.com/php/php_xml_dom.asp,The built-in DOM parser makes it possible to process XML documents in PHP.,"['The XML DOM Parser', 'Installation', 'The XML File', 'Load and Output XML', 'Looping through XML']","['The DOM parser is a tree-based parser.Look at the following XML document fraction:The DOM sees the XML above as a tree structure: ', 'The DOM parser functions are part of the PHP core. There is no installation needed to use these functions.', 'The XML file below (""note.xml"") will be used in our example:', 'We want to initialize the XML parser, load the xml, and output it:The output of the code above will be:If you select ""View source"" in the browser window, you will see the following HTML:The example above creates a DOMDocument-Object and loads the XML from ""note.xml"" into it.Then the saveXML() function puts the internal XML document into a string, so we can output it. ', 'We want to initialize the XML parser, load the XML, and loop through all elements of the <note> element:The output of the code above will be:In the example above you see that there are empty text nodes between each element.When XML generates, it often contains white-spaces between the nodes. The XML \nDOM parser treats these as ordinary elements, and if you are not aware of them, \nthey sometimes cause problems.', 'If you want to learn more about the XML DOM, please visit our\nXML tutorial.']","['\n<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(""note.xml"");\n\nprint $xmlDoc->saveXML();\n?>\n', '\n<?php\n$xmlDoc = new DOMDocument();\n$xmlDoc->load(""note.xml"");\n\n$x = $xmlDoc->documentElement;\nforeach ($x->childNodes AS $item) {\n\xa0\xa0print $item->nodeName . "" = "" . $item->nodeValue . ""<br>"";\n }\n?>\n', '', '', '']","['The XML DOM Parser###&&&|||Level 1: XML Document|||Level 2: Root element: <from>|||Level 3: Text element: ""Jani""|||']",[],[]
php||Introduction,https://www.w3schools.com/php/php_ajax_intro.asp,"AJAX is about updating parts of a web page, without reloading the whole page.","['What is AJAX?', 'How AJAX Works', 'AJAX is Based on Internet Standards', 'Google Suggest', 'Start Using AJAX Today']","['AJAX = Asynchronous JavaScript and XML.AJAX is a technique for creating fast and dynamic web pages.AJAX allows web pages to be updated asynchronously by exchanging small \namounts of data with the server behind the scenes. This means that it is \npossible to update parts of a web page, without reloading the whole page.Classic web pages, (which do not use AJAX) must reload the entire page if the \ncontent should change.Examples of applications using AJAX: Google Maps, Gmail, Youtube, and \nFacebook tabs.', 'AJAX is based on internet standards, and uses a combination of:', ""AJAX was made popular in 2005 by Google, with Google Suggest.Google Suggest \nis using AJAX to create a very dynamic web interface: \nWhen you start typing in Google's search box, a JavaScript sends the letters off \nto a server and the server returns a list of suggestions."", 'In our PHP tutorial, we will demonstrate how AJAX can update parts of a web \npage, without reloading the whole page. The server script will be written in PHP.If you want to learn more about AJAX, visit our AJAX tutorial.', '']","['', '', '', '', '']",['AJAX is Based on Internet Standards###&&&|||XMLHttpRequest object (to exchange data asynchronously with a server)|||JavaScript/DOM (to display/interact with the information)|||CSS (to style the data)|||XML (often used as the format for transferring data)|||'],[],['ajax.gif']
php||AJAX and PHP,https://www.w3schools.com/php/php_ajax_php.asp,AJAX is used to create more interactive applications.,"['AJAX PHP Example', 'Example Explained', 'The PHP File - ""gethint.php""']","['The following example will demonstrate how a web page can communicate with a \nweb server while a user type characters in an input field:', 'In the example above, when a user types a character in the input field, a function \ncalled ""showHint()"" is executed.The function is triggered by the onkeyup event.Here is the HTML code:Code explanation:First, check if the input field is empty (str.length == 0). If it is, clear the \ncontent of the txtHint placeholder and exit the function.However, if the input field is not empty, do the following:', 'The PHP file checks an array of names, and returns the corresponding name(s) to the \nbrowser:']","['\nStart typing a name in the input field below:\n\nFirst name:\n\n\nSuggestions: \n', '\n <html><head><script>function showHint(str) {\xa0 if (str.length == 0) { \n  \xa0\xa0\xa0\xa0document.getElementById(""txtHint"").innerHTML = """";\xa0\xa0\xa0\xa0return;\xa0\xa0} else {\xa0\xa0\xa0 var xmlhttp = new XMLHttpRequest();\xa0\xa0\xa0 xmlhttp.onreadystatechange = function() {\xa0\xa0\xa0 \xa0 if (this.readyState == 4 && this.status == 200) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 document.getElementById(""txtHint"").innerHTML = this.responseText;\xa0\xa0\xa0 \xa0\xa0}\xa0\xa0\xa0\xa0};\xa0\xa0\xa0 xmlhttp.open(""GET"", ""gethint.php?q="" + str, true);\xa0\xa0\xa0\xa0xmlhttp.send();\n  \xa0\xa0}}</script></head><body><p><b>Start typing a name in the input field below:</b></p>\n  <form action="""">\xa0 <label for=""fname"">First name:</label>\xa0 \n  <input type=""text"" id=""fname"" name=""fname"" onkeyup=""showHint(this.value)"">\n  </form><p>Suggestions: <span id=""txtHint""></span></p>\n </body></html>', '']","['Example Explained###&&&|||Create an XMLHttpRequest object|||Create the function to be executed when the server response is ready|||Send the request off to a PHP file (gethint.php) on the server|||Notice that q parameter is added to the url (gethint.php?q=""+str)|||And the str variable holds the content of the input field|||']",[],[]
php||AJAX and MySQL,https://www.w3schools.com/php/php_ajax_database.asp,AJAX can be used for interactive communication with a database.,"['AJAX Database Example', 'Example Explained - The MySQL Database', 'Example Explained', 'The PHP File']","['The following example will demonstrate how a web page can fetch information from a database with AJAX:', 'The database table we use in the example above looks like this:', 'In the example above, when a user selects a person in the dropdown list \nabove, a function called ""showUser()"" is executed.The function is triggered by the onchange event.Here is the HTML code:Code explanation:First, check if person is selected. If no person is selected (str == """"), clear the \ncontent of txtHint and exit the function. If a person is selected, do the following:', 'The page on the server called by the JavaScript above is a PHP file called ""getuser.php"".The source code in ""getuser.php"" runs a query against a MySQL database, and returns the result in an HTML \ntable:Explanation: When the query is sent from the JavaScript to the PHP file, the following happens:']","['\n\n\nSelect a person:\nPeter Griffin\nLois Griffin\nJoseph Swanson\nGlenn Quagmire\n\n\n\nPerson info will be listed here...\n', '\n <html><head><script>function showUser(str) {\xa0 if (str == """") {\n  \xa0\xa0\xa0\xa0document.getElementById(""txtHint"").innerHTML = """";\xa0\xa0\xa0\xa0return;\n  \xa0 } else { \xa0\xa0\xa0\xa0var xmlhttp = new XMLHttpRequest();\xa0\xa0\xa0 xmlhttp.onreadystatechange = function() {\xa0\xa0\xa0\xa0\xa0 if (this.readyState == 4 && this.status == 200) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 document.getElementById(""txtHint"").innerHTML = this.responseText;\n  \xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0};\xa0\xa0\xa0\xa0xmlhttp.open(""GET"",""getuser.php?q=""+str,true);\n  \xa0\xa0\xa0 xmlhttp.send();\xa0 }}</script></head><body><form>\n <select name=""users"" onchange=""showUser(this.value)"">\xa0 <option value="""">Select a person:</option>\xa0 <option value=""1"">Peter Griffin</option>\xa0 <option value=""2"">Lois Griffin</option>\xa0 <option value=""3"">Joseph Swanson</option>\xa0 <option value=""4"">Glenn Quagmire</option>\xa0 </select></form><br><div id=""txtHint""><b>Person info will be listed here...</b></div></body></html>', '', '']",['Example Explained###&&&|||Create an XMLHttpRequest object|||Create the function to be executed when the server response is ready|||Send the request off to a file on the server|||Notice that a parameter (q) is added to the URL (with the content of the dropdown list)|||'],['id|||FirstName|||LastName|||Age|||Hometown|||Job|||&&&1|||Peter|||Griffin|||41|||Quahog|||Brewery|||&&&2|||Lois|||Griffin|||40|||Newport|||Piano Teacher|||&&&3|||Joseph|||Swanson|||39|||Quahog|||Police Officer|||&&&4|||Glenn|||Quagmire|||41|||Quahog|||Pilot|||&&&'],[]
php||AJAX and XML,https://www.w3schools.com/php/php_ajax_xml.asp,AJAX can be used for interactive communication with an XML file.,"['AJAX XML Example', 'Example Explained - The HTML Page', 'The PHP File']","['The following example will demonstrate how a web page can fetch information from an XML file with AJAX:', 'When a user selects a CD in the dropdown list above, a function called ""showCD()"" is executed. The \nfunction is triggered by the ""onchange"" event:The showCD() function does the following:', 'The page on the server called by the JavaScript above is a PHP file called ""getcd.php"".The PHP script loads an XML document, ""cd_catalog.xml"", runs a query against the XML file, and returns the result as HTML:When the CD query is sent from the JavaScript to the PHP page, the following \nhappens:']","['\n\n\nSelect a CD:\nBob Dylan\nBee Gees\nCat Stevens\n\n\n\nCD info will be listed here...\n', '\n<html>\n<head>\n<script>\nfunction showCD(str)\n{\n\xa0\nif (str=="""") {\n\xa0\n\xa0 document.getElementById(""txtHint"").innerHTML="""";\n\xa0\xa0\xa0 return;\n\xa0 } \n\xa0 var xmlhttp=new XMLHttpRequest();\n\xa0\nxmlhttp.onreadystatechange=function() {\n\xa0\n\xa0 if (this.readyState==4 && this.status==200) {\n\xa0\n\xa0\xa0\xa0 document.getElementById(""txtHint"").innerHTML=this.responseText;\n\xa0\xa0\xa0 }\n\xa0 }\n\xa0\nxmlhttp.open(""GET"",""getcd.php?q=""+str,true);\n\xa0\nxmlhttp.send();\n}\n</script>\n</head>\n<body>\n\n<form>\nSelect a CD:\n<select name=""cds"" onchange=""showCD(this.value)"">\n\xa0\n<option value="""">Select a CD:</option>\n\xa0\n<option value=""Bob Dylan"">Bob Dylan</option>\n\xa0\n<option value=""Bee Gees"">Bee Gees</option>\n\xa0\n<option value=""Cat Stevens"">Cat Stevens</option>\n</select>\n</form><div id=""txtHint""><b>CD info will be listed here...</b></div>\n</body>\n</html>', '']",['Example Explained - The HTML Page###&&&|||Check if a CD is selected|||Create an XMLHttpRequest object|||Create the function to be executed when the server response is ready|||Send the request off to a file on the server|||Notice that a parameter (q) is added to the URL (with the content of the dropdown list)|||'],[],[]
php||AJAX Live Search,https://www.w3schools.com/php/php_ajax_livesearch.asp,AJAX can be used to create more user-friendly and interactive searches.,"['AJAX Live Search', 'Example Explained - The HTML Page', 'The PHP File']","['The following example will demonstrate a live search, where you get search results while you type.Live search has many benefits compared to traditional searching:Search for a W3Schools page in the input field below:The results in the example above are found in an XML file\n(links.xml). To make this \nexample small and simple, only six results are available.', 'When a user types a character in the input field above, the function ""showResult()"" is executed. The function is triggered by the ""onkeyup"" \nevent:Source code explanation:If the input field is empty (str.length==0), the function clears the \ncontent of the livesearch placeholder and exits the function.If the input field is not empty, the showResult() function executes the following:', 'The page on the server called by the JavaScript above is a PHP file called ""livesearch.php"".The source code in ""livesearch.php"" searches an XML file for titles matching the search string and returns the result:If there is any text sent from the JavaScript (strlen($q) > 0), the following happens:']","['\n<html>\n<head>\n<script>\nfunction showResult(str)\n{\n\xa0\nif (str.length==0) { \n\xa0\n\xa0\xa0document.getElementById(""livesearch"").innerHTML="""";\n\xa0\xa0\xa0 document.getElementById(""livesearch"").style.border=""0px"";\n\xa0\n\xa0 return;\n\xa0 }\n\xa0 var xmlhttp=new XMLHttpRequest();\n\xa0\nxmlhttp.onreadystatechange=function() {\n\xa0\n\xa0 if (this.readyState==4 && this.status==200) {\n\xa0\n\xa0\n\xa0\xa0document.getElementById(""livesearch"").innerHTML=this.responseText;\n\xa0\xa0\xa0 \xa0 document.getElementById(""livesearch"").style.border=""1px solid #A5ACB2"";\n\xa0\xa0\xa0 }\n\xa0 }\n\xa0\nxmlhttp.open(""GET"",""livesearch.php?q=""+str,true);\n\xa0\nxmlhttp.send();\n}\n</script>\n</head>\n<body>\n\n<form>\n<input type=""text"" size=""30"" onkeyup=""showResult(this.value)"">\n<div id=""livesearch""></div>\n</form>\n\n</body>\n</html>\n', '', '']","['AJAX Live Search###Example Explained - The HTML Page###The PHP File###&&&|||Results are shown as you type|||Results narrow as you continue typing|||If results become too narrow, remove characters to see a broader result|||&&&|||Create an XMLHttpRequest object|||Create the function to be executed when the server response is ready|||Send the request off to a file on the server|||Notice that a parameter (q) is added to the URL (with the content of the input field)|||&&&|||Load an XML file into a new XML DOM object|||Loop through all\xa0<title> elements to find matches from the text sent from the JavaScript|||Sets the correct url and title in the ""$response"" variable.||| If more than one match is found, all matches are added to the variable|||If no matches are found, the $response variable is set to ""no suggestion""|||']",[],[]
php||AJAX Poll,https://www.w3schools.com/php/php_ajax_poll.asp,,"['AJAX Poll', 'Example Explained - The HTML Page', 'The PHP File', 'The Text File']","['The following example will demonstrate a poll where the result is shown without reloading.', 'When a user chooses an option above, a function called ""getVote()"" is executed. The \nfunction is triggered by the ""onclick"" event:The getVote() function does the following:', 'The page on the server called by the JavaScript above is a PHP file called ""poll_vote.php"":The value is sent from the JavaScript, and the following \nhappens:', 'The text file (poll_result.txt) is where we store the data from the poll. It is stored like this:The first number represents the ""Yes"" votes, the second number represents the \n""No"" votes.Note: Remember to allow your web server to edit the text file. Do \nNOT give everyone access, just the web server (PHP).']","['\n<html>\n<head>\n<script>\nfunction getVote(int)\n{\n\xa0\n  var xmlhttp=new XMLHttpRequest();\n\xa0\nxmlhttp.onreadystatechange=function() {\n\xa0\n\xa0 if (this.readyState==4 && this.status==200) {\n\xa0\n\xa0\n\xa0\xa0document.getElementById(""poll"").innerHTML=this.responseText;\n\xa0\xa0\xa0 }\n\xa0 }\n\xa0\nxmlhttp.open(""GET"",""poll_vote.php?vote=""+int,true);\n\xa0\nxmlhttp.send();\n}\n</script>\n</head>\n<body>\n\n<div id=""poll"">\n<h3>Do you like PHP and AJAX so far?</h3>\n<form>\nYes:\n<input type=""radio"" name=""vote""\nvalue=""0"" onclick=""getVote(this.value)""><br>No:\n<input type=""radio"" name=""vote""\nvalue=""1"" onclick=""getVote(this.value)"">\n</form>\n</div>\n\n</body>\n</html>\n\n', '\n<?php\n$vote = $_REQUEST[\'vote\'];\n\n//get content of textfile\n$filename = ""poll_result.txt"";\n$content = file($filename);\n\n//put content in array\n$array = explode(""||"", $content[0]);\n$yes = $array[0];\n$no = $array[1];\n\nif ($vote == 0)\xa0{\n\xa0\xa0$yes = $yes + 1;\n }\nif ($vote == 1)\xa0{\n\xa0\xa0$no = $no + 1;\n }\n\n//insert votes to txt file\n$insertvote = $yes.""||"".$no;\n$fp = fopen($filename,""w"");\nfputs($fp,$insertvote);\nfclose($fp);\n?>\n\n<h2>Result:</h2>\n<table>\n<tr>\n<td>Yes:</td>\n<td><img src=""poll.gif""\nwidth=\'<?php echo(100*round($yes/($no+$yes),2)); ?>\'\nheight=\'20\'>\n<?php echo(100*round($yes/($no+$yes),2)); ?>%\n</td>\n</tr>\n<tr>\n<td>No:</td>\n<td><img src=""poll.gif""\nwidth=\'<?php echo(100*round($no/($no+$yes),2)); ?>\'\nheight=\'20\'>\n<?php echo(100*round($no/($no+$yes),2)); ?>%\n</td>\n</tr>\n</table>\n\n', '', '']",['Example Explained - The HTML Page###&&&|||Create an XMLHttpRequest object|||Create the function to be executed when the server response is ready|||Send the request off to a file on the server|||Notice that a parameter (vote) is added to the URL (with the value of the yes or no option)|||'],[],[]
php||Examples,https://www.w3schools.com/php/php_examples.asp,,"['PHP Syntax', 'PHP Comments', 'PHP Variables', 'PHP Echo and Print', 'PHP Data Types', 'PHP Strings', 'PHP Numbers', 'PHP Math', 'PHP Constants', 'PHP Operators', 'PHP If...Else and Switch Statements', 'PHP While and For Loops', 'PHP Functions', 'PHP Arrays', 'PHP Multidimensional Arrays', 'PHP Sorting Arrays', 'PHP Superglobals', 'PHP Regular Expressions', 'PHP Form Validation', 'PHP Date and Time', 'PHP Include Files', 'PHP File Handling', 'PHP File Open/Read/Close', 'PHP Cookies', 'PHP Sessions', 'PHP Filters', 'PHP JSON', 'PHP Exceptions', 'PHP Classes/Objects', 'PHP Select Data From MySQL', 'PHP SimpleXML Parser', 'PHP XML Expat Parser']","['Syntax explained', 'Comments explained', 'Variables explained', 'Echo and Print explained', 'Data Types explained', 'Strings explained', 'Numbers explained', 'Math explained', 'Constants explained', 'Operators explained', 'Conditions explained', 'Loops explained', 'Functions explained', 'Arrays explained', 'Multidimensional Arrays explained', 'Sorting Arrays explained', 'Superglobals explained', 'Regular Expressions explained', 'Form Validation explained', 'Date and Time explained', 'Include Files explained', 'File Handling explained', 'File Open/Read/Close explained', 'Cookies explained', 'Sessions explained', 'Filters explained', 'PHP JSON explained', 'PHP Exceptions explained', 'PHP OOP (Classes/Objects) explained', 'Select Data From MySQL explained', 'SimpleXML Parser explained', 'XML Expat Parser explained']","['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']",[''],[],[]
php||Online Compiler,https://www.w3schools.com/php/php_compiler.asp,,"['PHP Compiler (Editor)', 'PHP Compiler Explained']","['With our online PHP compiler, you can edit PHP code, and view the result in your browser.Click on the ""Try it Yourself"" button to see how it works.', 'The window to the left is editable - edit the code and click on the ""Run"" button to view the result in the right window.The icons are explained in the table below:']","['', '']",[''],['Icon|||Description|||&&&|||Go to www.w3schools.com|||&&&|||Menu button for more options|||&&&|||Change orientation (horizontally or vertically)|||&&&|||Change color theme (dark or light)|||&&&'],[]
php||Quiz,https://www.w3schools.com/php/php_quiz.asp,You can test your PHP skills with W3Schools' Quiz.,"['The Test', 'Count Your Score']","[""The test contains 25 questions and there is no time limit.The test is not official, it's just a nice way to see how much you know, or don't know, about \nPHP.You will get 1 point for each correct answer. At the end of the Quiz,\nyour total score will be displayed. Maximum score is 25 points."", '']","['', '']",[''],[],[]
php||Exercises,https://www.w3schools.com/php/php_exercises.asp,You can test your PHP skills with W3Schools' Exercises.,[],"['We have gathered a variety of PHP exercises (with answers) for each PHP Chapter.Try to solve an exercise by filling in the missing parts of a code. If you\'re stuck, hit the ""Show Answer"" button to see what you\'ve done wrong.You will get 1 point for\neach correct answer. Your score and total score will always be displayed.']",[],[''],[],[]
php||PHP Certificate,https://www.w3schools.com/php/php_exam.asp,,['How Does It Work?'],[''],[''],"['How Does It Work?###&&&|||Study for free at W3Schools.com|||Study at your own speed|||Test your skills with W3Schools online quizzes|||Apply for your certificate by paying an exam fee|||Take your exam online, at any time, and from any location|||']","['.cls-1{fill:#04aa6b;}.cls-2{font-size:23px;}.cls-2,.cls-3,.cls-4{fill:#fff;}.cls-2,.cls-3{font-family:RobotoMono-Medium, Roboto Mono;font-weight:500;}.cls-3{font-size:20.08px;}w3schools CERTIFIED  .  2021\n|||\xa0\xa0|||\nW3Schools offers an Online Certification Program.\nThe perfect solution for busy professionals who need to balance work, family, and career building.\nMore than 30 000 certificates already issued!\n|||&&&', '\nDocument Your Skills\nKnowledge is power, especially in the current job market. Documentation of your skills enables you to advance your career, or help you to start a new one.\nGet a Certificate\nGetting a certificate proves your commitment to upgrade your skills,\ngives you the credibility needed for more responsibilities, larger projects, and a higher salary.\n\nGet Your Certificate »\n\n|||\n\n|||&&&']",['/cert/pic_html_cert_small.gif']
php||,https://www.w3schools.com/php/php_ref_overview.asp,,['PHP Reference'],"['\nThis section contains a complete PHP reference documentation.', 'The PHP reference contains different categories of all PHP functions, keywords and constants, along with examples.']",[''],[''],[],[]
php||Array,https://www.w3schools.com/php/php_ref_array.asp,,"['PHP Array Introduction', 'Installation', 'PHP Array Functions']","['The array functions allow you to access and manipulate arrays.Simple and multi-dimensional arrays are supported.', 'The array functions are part of the PHP core. There is no installation needed to use these functions.', '']","['', '', '']",[''],"['Function|||Description|||&&&array()|||Creates an array|||&&&array_change_key_case()|||Changes all keys in an array to lowercase or uppercase|||&&&array_chunk()|||Splits an array into chunks of arrays|||&&&array_column()|||Returns the values from a single column in the input array|||&&&array_combine()|||Creates an array by using the elements from one ""keys"" array and one ""values"" array|||&&&array_count_values()|||Counts all the values of an array|||&&&array_diff()|||Compare arrays, and returns the differences (compare values only)|||&&&array_diff_assoc()|||Compare arrays, and returns the differences (compare keys and values)|||&&&array_diff_key()|||Compare arrays, and returns the differences (compare keys only)|||&&&array_diff_uassoc()|||Compare arrays, and returns the differences (compare keys and values, using a user-defined key comparison function)|||&&&array_diff_ukey()|||Compare arrays, and returns the differences (compare keys only, using a user-defined key comparison function)|||&&&array_fill()|||Fills an array with values|||&&&array_fill_keys()|||Fills an array with values, specifying keys|||&&&array_filter()|||Filters the values of an array using a callback function|||&&&array_flip()|||Flips/Exchanges all keys with their associated values in an array|||&&&array_intersect()|||Compare arrays, and returns the matches (compare values only)|||&&&array_intersect_assoc()|||Compare arrays and returns the matches (compare keys and values)|||&&&array_intersect_key()|||Compare arrays, and returns the matches (compare keys only)|||&&&array_intersect_uassoc()|||Compare arrays, and returns the matches (compare keys and values, using a user-defined key comparison function)|||&&&array_intersect_ukey()|||Compare arrays, and returns the matches (compare keys only, using a user-defined key comparison function)|||&&&array_key_exists()|||Checks if the specified key exists in the array|||&&&array_keys()|||Returns all the keys of an array|||&&&array_map()|||Sends each value of an array to a user-made function, which returns new values|||&&&array_merge()|||Merges one or more arrays into one array|||&&&array_merge_recursive()|||Merges one or more arrays into one array recursively|||&&&array_multisort()|||Sorts multiple or multi-dimensional arrays|||&&&array_pad()|||Inserts a specified number of items, with a specified value, to an array|||&&&array_pop()|||Deletes the last element of an array|||&&&array_product()|||Calculates the product of the values in an array|||&&&array_push()|||Inserts one or more elements to the end of an array|||&&&array_rand()|||Returns one or more random keys from an array|||&&&array_reduce()|||Returns an array as a string, using a user-defined function|||&&&array_replace()|||Replaces the values of the first array with the values from following arrays|||&&&array_replace_recursive()|||Replaces the values of the first array with the values from following arrays recursively|||&&&array_reverse()|||Returns an array in the reverse order|||&&&array_search()|||Searches an array for a given value and returns the key|||&&&array_shift()|||Removes the first element from an array, and returns the value of the removed element|||&&&array_slice()|||Returns selected parts of an array|||&&&array_splice()|||Removes and replaces specified elements of an array|||&&&array_sum()|||Returns the sum of the values in an array|||&&&array_udiff()|||Compare arrays, and returns the differences (compare values only, using a user-defined key comparison function)|||&&&array_udiff_assoc()|||Compare arrays, and returns the differences (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values)|||&&&array_udiff_uassoc()|||Compare arrays, and returns the differences (compare keys and values, using two user-defined key comparison functions)|||&&&array_uintersect()|||Compare arrays, and returns the matches (compare values only, using a user-defined key comparison function)|||&&&array_uintersect_assoc()|||Compare arrays, and returns the matches (compare keys and values, using a built-in function to compare the keys and a user-defined function to compare the values)|||&&&array_uintersect_uassoc()|||Compare arrays, and returns the matches (compare keys and values, using two user-defined key comparison functions)|||&&&array_unique()|||Removes duplicate values from an array|||&&&array_unshift()|||Adds one or more elements to the beginning of an array|||&&&array_values()|||Returns all the values of an array|||&&&array_walk()|||Applies a user function to every member of an array|||&&&array_walk_recursive()|||Applies a user function recursively to every member of an array|||&&&arsort()|||Sorts an associative array in descending order, according to the value|||&&&asort()|||Sorts an associative array in ascending order, according to the value|||&&&compact()|||Create array containing variables and their values|||&&&count()|||Returns the number of elements in an array|||&&&current()|||Returns the current element in an array|||&&&each()|||Deprecated from PHP 7.2. Returns the current key and value pair from an array|||&&&end()|||Sets the internal pointer of an array to its last element|||&&&extract()|||Imports variables into the current symbol table from an array|||&&&in_array()|||Checks if a specified value exists in an array|||&&&key()|||Fetches a key from an array|||&&&krsort()|||Sorts an associative array in descending order, according to the key|||&&&ksort()|||Sorts an associative array in ascending order, according to the key|||&&&list()|||Assigns variables as if they were an array|||&&&natcasesort()|||Sorts an array using a case insensitive ""natural order"" algorithm|||&&&natsort()|||Sorts an array using a ""natural order"" algorithm|||&&&next()|||Advance the internal array pointer of an array|||&&&pos()|||Alias of current()|||&&&prev()|||Rewinds the internal array pointer|||&&&range()|||Creates an array containing a range of elements|||&&&reset()|||Sets the internal pointer of an array to its first element|||&&&rsort()|||Sorts an indexed array in descending order|||&&&shuffle()|||Shuffles an array|||&&&sizeof()|||Alias of count()|||&&&sort()|||Sorts an indexed array in ascending order|||&&&uasort()|||Sorts an array by values using a user-defined comparison function|||&&&uksort()|||Sorts an array by keys using a user-defined comparison function|||&&&usort()|||Sorts an array using a user-defined comparison function|||&&&']",[]
php||array(),https://www.w3schools.com/php/func_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array() function is used to create an array.In PHP, there are three types of arrays:', 'Syntax for indexed arrays:Syntax for associative arrays:\xa0', '', '', '']","['\n<?php\n$cars=array(""Volvo"",""BMW"",""Toyota"");\necho ""I like "" . $cars[0] . "", "" . $cars[1] . "" and "" . $cars[2] . ""."";\n?>\n', '\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");echo ""Peter is "" . $age[\'Peter\'] . "" years old."";?>\n &&&&&& \n<?php\n $cars=array(""Volvo"",""BMW"",""Toyota"");\n $arrlength=count($cars);for($x=0;$x<$arrlength;$x++)\xa0 {\xa0 echo $cars[$x];\xa0 echo ""<br>"";\xa0 }?>\n &&&&&& \n <?php$age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");\nforeach($age as $x=>$x_value)\xa0 {\xa0 echo ""Key="" . $x . "", Value="" . $x_value;\xa0 echo ""<br>"";\xa0 }?>\n &&&&&& \n <?php// A two-dimensional array:$cars=array\xa0 (\xa0 array(""Volvo"",100,96),\xa0 array(""BMW"",60,59),\xa0 array(""Toyota"",110,100)\xa0 );?>\n', '', '', '']",['Definition and Usage###&&&|||Indexed arrays - Arrays with numeric index|||Associative arrays - Arrays with named keys|||Multidimensional arrays - Arrays containing one or more arrays|||'],"['Parameter|||Description|||&&&key|||Specifies the key (numeric or string)|||&&&value|||Specifies the value|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||array_change_key_case(),https://www.w3schools.com/php/func_array_change_key_case.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_change_key_case() function changes all keys in an array to lowercase or uppercase.', '', '', '', '']","['\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");\n print_r(array_change_key_case($age,CASE_UPPER));?>\n', '\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");\n print_r(array_change_key_case($age,CASE_LOWER));?>\n &&&&&& \n<?php\n $pets=array(""a""=>""Cat"",""B""=>""Dog"",""c""=>""Horse"",""b""=>""Bird"");\n print_r(array_change_key_case($pets,CASE_UPPER));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&case|||Optional. Possible values:\nCASE_LOWER - Default value. Changes the keys to lowercase\nCASE_UPPER - Changes the keys to uppercase\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_chunk(),https://www.w3schools.com/php/func_array_chunk.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_chunk() function splits an array into chunks of new arrays.', '', '', '', '']","['\n<?php\n$cars=array(""Volvo"",""BMW"",""Toyota"",""Honda"",""Mercedes"",""Opel"");\n print_r(array_chunk($cars,2));?>\n', '\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"",""Harry""=>""50"");print_r(array_chunk($age,2,true));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&size|||Required. An integer that specifies the size of each chunk|||&&&preserve_key|||Optional. Possible values:\ntrue - Preserves the keys\nfalse - Default. Reindexes the chunk numerically\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_column(),https://www.w3schools.com/php/func_array_column.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_column() function returns the values from a single column in the input array.', '', '', '', '']","[""\n <?php// An array that represents a possible record set returned from a database$a = array(\xa0 array(\xa0\xa0\xa0 'id' => 5698,\xa0\xa0\xa0 'first_name' => 'Peter',\xa0\xa0\xa0 'last_name' => 'Griffin',\xa0 ),\xa0 array(\xa0\xa0\xa0 'id' => 4767,\xa0\xa0\xa0 'first_name' => 'Ben',\xa0\xa0\xa0 'last_name' => 'Smith',\xa0 ),\xa0 array(\xa0\xa0\xa0 'id' => 3809,\xa0\xa0\xa0 'first_name' => 'Joe',\xa0\xa0\xa0 'last_name' => 'Doe',\xa0 ));$last_names = array_column($a, 'last_name');print_r($last_names);?>\n"", 'Array(\xa0 [0] => Griffin\xa0 [1] => Smith\xa0 [2] => Doe)', ""\n <?php// An array that represents a possible record set returned from a database$a = array(\xa0 array(\xa0\xa0\xa0 'id' => 5698,\xa0\xa0\xa0 'first_name' => 'Peter',\xa0\xa0\xa0 'last_name' => 'Griffin',\xa0 ),\xa0 array(\xa0\xa0\xa0 'id' => 4767,\xa0\xa0\xa0 'first_name' => 'Ben',\xa0\xa0\xa0 'last_name' => 'Smith',\xa0 ),\xa0 array(\xa0\xa0\xa0 'id' => 3809,\xa0\xa0\xa0 'first_name' => 'Joe',\xa0\xa0\xa0 'last_name' => 'Doe',\xa0 ));$last_names = array_column($a, 'last_name', 'id');print_r($last_names);\n ?> "", 'Array(\xa0 [5698] => Griffin\xa0 [4767] => Smith\xa0 [3809] => Doe)', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the multi-dimensional array (record-set) to use. As \n    of PHP 7.0, this can also be an array of objects.|||&&&column_key|||Required. An integer key or a string key name of the column of values to return. This parameter can also be NULL to return complete arrays (useful together with index_key to re-index the array)|||&&&index_key|||Optional. The column to use as the index/keys for the returned array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_combine(),https://www.w3schools.com/php/func_array_combine.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_combine() function creates an array by using the elements from one \n""keys"" array and \none ""values"" array.Note: Both arrays must have equal number of elements!', '', '', '']","['\n<?php\n $fname=array(""Peter"",""Ben"",""Joe"");$age=array(""35"",""37"",""43"");\n $c=array_combine($fname,$age);print_r($c);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&keys|||Required. Array of keys|||&&&values|||Required. Array of values|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||array_count_values(),https://www.w3schools.com/php/func_array_count_values.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_count_values() function counts all the values of an array.', '', '', '']","['\n<?php\n$a=array(""A"",""Cat"",""Dog"",""A"",""Dog"");\nprint_r(array_count_values($a));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifying the array to count values of|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_diff(),https://www.w3schools.com/php/func_array_diff.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_diff() function compares the values of two (or more) arrays,\nand returns the differences.This function compares the values of two (or more) arrays, and return an array that contains the entries from \narray1 that are not present in \narray2 or array3, etc.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""e""=>""red"",""f""=>""green"",""g""=>""blue"");$result=array_diff($a1,$a2);print_r($result);?>\n', '\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""e""=>""red"",""f""=>""black"",""g""=>""purple"");$a3=array(""a""=>""red"",""b""=>""black"",""h""=>""yellow"");\n$result=array_diff($a1,$a2,$a3);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_diff_assoc(),https://www.w3schools.com/php/func_array_diff_assoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_diff_assoc() function compares the keys and values \nof two (or more) arrays,\nand returns the differences.This function compares the keys and values of two (or more) arrays, and return an array that contains the entries from \narray1 that are not present in \narray2 or array3, etc.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$result=array_diff_assoc($a1,$a2);\n print_r($result);?>\n', '\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""e""=>""red"",""f""=>""green"",""g""=>""blue"");\n $result=array_diff_assoc($a1,$a2);print_r($result);?>\n &&&&&& \n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""a""=>""red"",""f""=>""green"",""g""=>""blue"");$a3=array(""h""=>""red"",""b""=>""green"",""g""=>""blue"");\n$result=array_diff_assoc($a1,$a2,$a3);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_diff_key(),https://www.w3schools.com/php/func_array_diff_key.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_diff_key() function compares the keys \nof two (or more) arrays,\nand returns the differences.This function compares the keys of two (or more) arrays, and return an array that contains the entries from \narray1 that are not present in \narray2 or array3, etc.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""red"",""c""=>""blue"",""d""=>""pink"");\n$result=array_diff_key($a1,$a2);print_r($result);?>\n', '\n<?php\n $a1=array(""red"",""green"",""blue"",""yellow"");$a2=array(""red"",""green"",""blue"");\n $result=array_diff_key($a1,$a2);print_r($result);?>\n &&&&&& \n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""c""=>""yellow"",""d""=>""black"",""e""=>""brown"");\n $a3=array(""f""=>""green"",""c""=>""purple"",""g""=>""red"");$result=array_diff_key($a1,$a2,$a3);\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_diff_uassoc(),https://www.w3schools.com/php/func_array_diff_uassoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_diff_uassoc() function compares the keys and values \nof two (or more) arrays,\nand returns the differences.Note: This function uses a user-defined function to compare \nthe keys!This function compares the keys and values of two (or more) arrays, and return an array that contains the entries from \narray1 that are not present in \narray2 or array3, etc.', '', '', '', '']","['\n <?phpfunction myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""d""=>""red"",""b""=>""green"",""e""=>""blue"");\n$result=array_diff_uassoc($a1,$a2,""myfunction"");print_r($result);\n ?>\n', '\n <?phpfunction myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""red"",""b""=>""green"",""d""=>""blue"");\n $a3=array(""e""=>""yellow"",""a""=>""red"",""d""=>""blue"");$result=array_diff_uassoc($a1,$a2,$a3,""myfunction"");\n print_r($result);\n ?>', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_diff_ukey(),https://www.w3schools.com/php/func_array_diff_ukey.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_diff_ukey() function compares the keys \nof two (or more) arrays, and returns the differences.Note: This function uses a user-defined function to compare the keys!This function compares the keys of two (or more) arrays, and return an array that contains the entries from \narray1 that are not present in array2 or array3, etc.', '', '', '', '']","['\n <?phpfunction myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""blue"",""b""=>""black"",""e""=>""blue"");\n$result=array_diff_ukey($a1,$a2,""myfunction"");print_r($result);\n ?>\n', '\n <?phpfunction myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""black"",""b""=>""yellow"",""d""=>""brown"");\n $a3=array(""e""=>""purple"",""f""=>""white"",""a""=>""gold"");$result=array_diff_ukey($a1,$a2,$a3,""myfunction"");\n print_r($result);?>', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_fill(),https://www.w3schools.com/php/func_array_fill.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_fill() function fills an array with values.', '', '', '']","['\n<?php\n $a1=array_fill(3,4,""blue"");print_r($a1);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&index|||Required. The first index of the returned array|||&&&number|||Required. Specifies the number of elements to insert|||&&&value|||Required. Specifies the value to use for filling the array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_fill_keys(),https://www.w3schools.com/php/func_array_fill_keys.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_fill_keys() function fills an array with values, specifying keys.', '', '', '']","['\n<?php\n $keys=array(""a"",""b"",""c"",""d"");$a1=array_fill_keys($keys,""blue"");\n print_r($a1);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&keys|||Required. Array of values that will be used as keys|||&&&value|||Required. Specifies the value to use for filling the array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_filter(),https://www.w3schools.com/php/func_array_filter.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_filter() function filters the values of an array using a callback function.This function passes each value of the input array to the callback function. \nIf the callback function returns true, the current value from input is returned \ninto the result array. Array keys are preserved.', '', '', '']","['\n <?phpfunction test_odd($var)\xa0 {\xa0 return($var & 1);\xa0 \n  }$a1=array(1,3,2,3,4);print_r(array_filter($a1,""test_odd""));?>', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to filter|||&&&callbackfunction|||Optional. Specifies the callback function to use|||&&&flag|||Optional. Specifies what arguments are sent to callback:\n    \nARRAY_FILTER_USE_KEY - pass key as the only argument to callback (instead of the value)\nARRAY_FILTER_USE_BOTH - pass both value and key as arguments to callback (instead of the value)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_flip(),https://www.w3schools.com/php/func_array_flip.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_flip() function flips/exchanges all keys with their associated values in an array.', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $result=array_flip($a1);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array of key/value pairs to be flipped|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_intersect(),https://www.w3schools.com/php/func_array_intersect.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_intersect() function compares the values of two (or more) arrays, and returns the matches.This function compares the values of two or more arrays, and return an \narray that contains the entries from array1 that are present in \narray2, array3, etc.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""e""=>""red"",""f""=>""green"",""g""=>""blue"");$result=array_intersect($a1,$a2);print_r($result);?>\n', '\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""e""=>""red"",""f""=>""black"",""g""=>""purple"");$a3=array(""a""=>""red"",""b""=>""black"",""h""=>""yellow"");\n$result=array_intersect($a1,$a2,$a3);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_intersect_assoc(),https://www.w3schools.com/php/func_array_intersect_assoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_intersect_assoc() function compares the keys and values\nof two (or more) arrays, and returns the matches. This function compares the keys and values of two or more arrays, and return \nan array that contains the entries from array1 that are present in \narray2, array3, etc.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$result=array_intersect_assoc($a1,$a2);\n print_r($result);?>\n', '\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""a""=>""red"",""b""=>""green"",""g""=>""blue"");$a3=array(""a""=>""red"",""b""=>""green"",""g""=>""blue"");\n$result=array_intersect_assoc($a1,$a2,$a3);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The first array is the array that the others will be compared with|||&&&array2|||Required. An array to be compared with the first array|||&&&array3,...|||Optional. An array to be compared with the first array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_intersect_key(),https://www.w3schools.com/php/func_array_intersect_key.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_intersect_key() function compares the keys of two (or more) arrays, and returns the matches.This function compares the keys of two or more arrays, and return an \narray that contains the entries from array1 that are present in \narray2, array3, etc.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""red"",""c""=>""blue"",""d""=>""pink"");\n$result=array_intersect_key($a1,$a2);print_r($result);?>\n', '\n<?php\n $a1=array(""red"",""green"",""blue"",""yellow"");$a2=array(""red"",""green"",""blue"");\n $result=array_intersect_key($a1,$a2);print_r($result);?>\n &&&&&& \n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""c""=>""yellow"",""d""=>""black"",""e""=>""brown"");\n $a3=array(""f""=>""green"",""c""=>""purple"",""g""=>""red"");$result=array_intersect_key($a1,$a2,$a3);\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The first array is the array that the others will be compared with|||&&&array2|||Required. An array to be compared with the first array|||&&&array3,...|||Optional. An array to be compared with the first array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_intersect_uassoc(),https://www.w3schools.com/php/func_array_intersect_uassoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_intersect_uassoc() function compares the keys and values \nof two (or more) arrays, and returns the matches.Note: This function uses a user-defined function to compare the keys!This function compares the keys and values of two or more arrays, and return \nan array that contains the entries from array1 that are present in \narray2, array3, etc.', '', '', '', '']","['\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""d""=>""red"",""b""=>""green"",""e""=>""blue"");\n$result=array_intersect_uassoc($a1,$a2,""myfunction"");print_r($result);?>\n', '\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""red"",""b""=>""green"",""d""=>""blue"");\n $a3=array(""e""=>""yellow"",""a""=>""red"",""d""=>""blue"");$result=array_intersect_uassoc($a1,$a2,$a3,""myfunction"");\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The first array is the array that the others will be compared with|||&&&array2|||Required. An array to be compared with the first array|||&&&array3,...|||Optional. An array to be compared with the first array|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_intersect_ukey(),https://www.w3schools.com/php/func_array_intersect_ukey.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_intersect_ukey() function compares the keys of two (or more) \narrays, and returns the matches.Note: This function uses a user-defined function to compare the keys!This function compares the keys of two or more arrays, and return an array \nthat contains the entries from array1 that are present in array2,\narray3, etc.', '', '', '', '']","['\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""blue"",""b""=>""black"",""e""=>""blue"");\n$result=array_intersect_ukey($a1,$a2,""myfunction"");print_r($result);?>\n', '\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""black"",""b""=>""yellow"",""d""=>""brown"");\n $a3=array(""e""=>""purple"",""f""=>""white"",""a""=>""gold"");$result=array_intersect_ukey($a1,$a2,$a3,""myfunction"");\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The first array is the array that the others will be compared with|||&&&array2|||Required. An array to be compared with the first array|||&&&array3,...|||Optional. An array to be compared with the first array|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_key_exists(),https://www.w3schools.com/php/func_array_key_exists.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_key_exists() function checks an array for a specified key,\nand returns true if the key exists and false if the key does not exist.Tip: Remember that if you skip the key when you specify an array,\nan integer key is generated, starting at 0 and increases by 1 for each value. (See example below)', '', '', '', '']","['\n<?php\n $a=array(""Volvo""=>""XC90"",""BMW""=>""X5"");if (array_key_exists(""Volvo"",$a))\xa0 {\xa0 echo ""Key exists!"";\xa0 }else\xa0 {\xa0 echo ""Key does not exist!"";\xa0 }?>\n', '\n<?php\n $a=array(""Volvo""=>""XC90"",""BMW""=>""X5"");if (array_key_exists(""Toyota"",$a))\n\xa0\xa0{\n\xa0\xa0echo ""Key exists!"";\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""Key does not exist!"";\n\xa0\xa0}\n?>\n &&&&&& \n<?php\n$a=array(""Volvo"",""BMW"");\nif (array_key_exists(0,$a))\n\xa0\xa0{\n\xa0\xa0echo ""Key exists!"";\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""Key does not exist!"";\n\xa0\xa0}\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&key|||Required. Specifies the key|||&&&array|||Required. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_keys(),https://www.w3schools.com/php/func_array_keys.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_keys() function returns an array containing the keys.', '', '', '', '']","['\n<?php\n $a=array(""Volvo""=>""XC90"",""BMW""=>""X5"",""Toyota""=>""Highlander"");print_r(array_keys($a));\n?>\n', '\n<?php\n $a=array(""Volvo""=>""XC90"",""BMW""=>""X5"",""Toyota""=>""Highlander"");print_r(array_keys($a,""Highlander""));?>\n &&&&&& \n<?php\n $a=array(10,20,30,""10"");print_r(array_keys($a,""10"",false));?>\n &&&&&& \n <?php$a=array(10,20,30,""10"");print_r(array_keys($a,""10"",true));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&value|||Optional. You can specify a value, then only the keys with this value are returned|||&&&strict|||Optional. Used with the value parameter. Possible values:\ntrue - Returns the keys with the specified value, depending on type: the number \n      5 is not the same as the string ""5"".\nfalse - Default value. Not depending on type, the number 5 is the same as the string ""5"".\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||array_map(),https://www.w3schools.com/php/func_array_map.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_map() function sends each value of an array to a user-made function,\nand returns an array with new values, given by the user-made function.Tip: You can assign one array to the function, or as many as you like.', '', '', '', '']","['\n<?php\n function myfunction($v){\xa0 return($v*$v);}\n $a=array(1,2,3,4,5);print_r(array_map(""myfunction"",$a));\n?>\n', '\n<?php\n function myfunction($v){if ($v===""Dog"")\xa0 {\xa0 return ""Fido"";\xa0 }return $v;}$a=array(""Horse"",""Dog"",""Cat"");\n print_r(array_map(""myfunction"",$a));?>\n &&&&&& \n<?php\n function myfunction($v1,$v2){if ($v1===$v2)\xa0 {\xa0 return ""same"";\xa0 }return ""different"";}$a1=array(""Horse"",""Dog"",""Cat"");\n $a2=array(""Cow"",""Dog"",""Rat"");print_r(array_map(""myfunction"",$a1,$a2));?>\n &&&&&& \n<?php\n function myfunction($v) {$v=strtoupper($v);\xa0 return $v;\n }$a=array(""Animal"" => ""horse"", ""Type"" => ""mammal"");print_r(array_map(""myfunction"",$a));?>\n &&&&&& \n <?php$a1=array(""Dog"",""Cat"");\n$a2=array(""Puppy"",""Kitten"");\nprint_r(array_map(null,$a1,$a2));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&myfunction|||Required. The name of the user-made function, or null|||&&&array1|||Required. Specifies an array|||&&&array2|||Optional. Specifies an array|||&&&array3|||Optional. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_merge(),https://www.w3schools.com/php/func_array_merge.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_merge() function merges one or more arrays into one array.Tip: You can assign one array to the function, or as many as you like.Note: If two or more array elements have the same key, the last one overrides the others.Note: If you assign only one array to the array_merge() function, and the keys are integers,\nthe function returns a new array with integer keys starting at 0 and increases by 1 for each value (See \nexample below).Tip: The difference between this function and the\narray_merge_recursive() function is \nwhen two or more array elements have the same key. Instead of override the keys, \nthe array_merge_recursive() function makes the value as an array.', '', '', '', '']","['\n<?php\n $a1=array(""red"",""green"");$a2=array(""blue"",""yellow"");print_r(array_merge($a1,$a2));\n?>\n', '\n<?php\n$a1=array(""a""=>""red"",""b""=>""green"");\n$a2=array(""c""=>""blue"",""b""=>""yellow"");\nprint_r(array_merge($a1,$a2));?>\n &&&&&& \n<?php\n$a=array(3=>""red"",4=>""green"");\nprint_r(array_merge($a));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. Specifies an array|||&&&array2|||Optional. Specifies an array|||&&&array3,...|||Optional. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||array_merge_recursive(),https://www.w3schools.com/php/func_array_merge_recursive.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_merge_recursive() function merges one or more arrays into one array.The difference between this function and the array_merge() function is when two or more array elements have the same key.\nInstead of override the keys, the array_merge_recursive() function makes the value as an array.Note: If you assign only one array to the array_merge_recursive() function,\nit will behave exactly the same as the array_merge() function.', '', '', '']","['\n<?php\n$a1=array(""a""=>""red"",""b""=>""green"");\n$a2=array(""c""=>""blue"",""b""=>""yellow"");\nprint_r(array_merge_recursive($a1,$a2));\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. Specifies an array|||&&&array2|||Optional. Specifies an array|||&&&array3,...|||Optional. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_multisort(),https://www.w3schools.com/php/func_array_multisort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_multisort() function returns a sorted array. You can assign one or \nmore arrays. The function sorts the first array, and the other arrays follow, \nthen, if two or more values are the same, it sorts the next array, and so on.Note: String keys will be maintained, but numeric keys will be re-indexed, starting at 0 and increase by 1.Note: You can assign the sortorder and the sorttype parameters after each array. \nIf not specified, each array parameter uses the default values.', '', '', '', '']","['\n<?php\n$a=array(""Dog"",""Cat"",""Horse"",""Bear"",""Zebra"");\narray_multisort($a);\nprint_r($a);\n?>\n', '\n<?php\n$a1=array(""Dog"",""Cat"");\n$a2=array(""Fido"",""Missy"");\narray_multisort($a1,$a2);\nprint_r($a1);\nprint_r($a2);?>\n &&&&&& \n<?php\n$a1=array(""Dog"",""Dog"",""Cat"");\n$a2=array(""Pluto"",""Fido"",""Missy"");\narray_multisort($a1,$a2);\nprint_r($a1);\nprint_r($a2);?>\n &&&&&& \n <?php$a1=array(""Dog"",""Dog"",""Cat"");$a2=array(""Pluto"",""Fido"",""Missy"");array_multisort($a1,SORT_ASC,$a2,SORT_DESC);print_r($a1);print_r($a2);?>\n &&&&&& \n<?php\n $a1=array(1,30,15,7,25);$a2=array(4,30,20,41,66);$num=array_merge($a1,$a2);\n array_multisort($num,SORT_DESC,SORT_NUMERIC);print_r($num);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. Specifies an array|||&&&sortorder|||Optional. Specifies the sorting order. Possible values:\n     \nSORT_ASC - Default. Sort in ascending order (A-Z)\nSORT_DESC - Sort in descending order (Z-A)\n\n|||&&&sorttype|||Optional. Specifies the type to use, when comparing elements. Possible values:\n     \nSORT_REGULAR - Default. Compare elements normally (Standard ASCII)\nSORT_NUMERIC - Compare elements as numeric values\nSORT_STRING - Compare elements as string values\nSORT_LOCALE_STRING - Compare elements as string, based on the   current locale (can be changed using    setlocale())\nSORT_NATURAL - Compare elements as strings using ""natural   ordering"" like natsort()\nSORT_FLAG_CASE - Can be combined (bitwise OR) with SORT_STRING   or SORT_NATURAL to sort strings case-insensitively\n\n|||&&&array2|||Optional. Specifies an array|||&&&array3|||Optional. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_pad(),https://www.w3schools.com/php/func_array_pad.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_pad() function inserts a specified number of elements, with a \nspecified value, to an array.Tip: If you assign a negative size parameter, the function will insert \nnew elements BEFORE the original elements (See example below).Note: This function will not delete any elements if the size parameter is \nless than the size of the original array.', '', '', '', '']","['\n<?php\n$a=array(""red"",""green"");\nprint_r(array_pad($a,5,""blue""));\n?>\n', '\n<?php\n$a=array(""red"",""green"");\nprint_r(array_pad($a,-5,""blue""));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&size|||Required. Specifies the number of elements in the array returned from the function|||&&&value|||Required. Specifies the value of the new elements in the array returned from the function|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_pop(),https://www.w3schools.com/php/func_array_pop.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_pop() function deletes the last element of an array.', '', '', '']","['\n<?php\n$a=array(""red"",""green"",""blue"");\narray_pop($a);\nprint_r($a);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_product(),https://www.w3schools.com/php/func_array_product.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_product() function calculates and returns the product of an array.', '', '', '', '']","['\n<?php\n$a=array(5,5);\necho(array_product($a));\n?>\n', '\n<?php\n$a=array(5,5,2,10);\necho(array_product($a));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||array_push(),https://www.w3schools.com/php/func_array_push.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_push() function inserts one or more elements to the end of an array.Tip: You can add one value, or as many as you like.Note: Even if your array has string keys, your added elements will always have numeric keys (See example below).', '', '', '', '']","['\n<?php\n$a=array(""red"",""green"");\narray_push($a,""blue"",""yellow"");\nprint_r($a);?>\n', '\n<?php\n$a=array(""a""=>""red"",""b""=>""green"");\narray_push($a,""blue"",""yellow"");\nprint_r($a);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&value1|||Optional. Specifies the value to add (Required in PHP versions before 7.3)|||&&&value2|||Optional. Specifies the value to add|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Change log:|||&&&']",[]
php||array_rand(),https://www.w3schools.com/php/func_array_rand.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_rand() function returns a random key from an array,\nor it returns an array of random keys if you specify that the function should return more than one key.', '', '', '', '']","['\n<?php\n $a=array(""red"",""green"",""blue"",""yellow"",""brown"");$random_keys=array_rand($a,3);\n echo $a[$random_keys[0]].""<br>"";echo $a[$random_keys[1]].""<br>"";echo $a[$random_keys[2]];?>\n', '\n<?php\n$a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\nprint_r(array_rand($a,1));?>\n &&&&&& \n<?php\n$a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\nprint_r(array_rand($a,2));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&number|||Optional. Specifies how many random keys to return|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_reduce(),https://www.w3schools.com/php/func_array_reduce.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_reduce() function sends the values in an array to a user-defined function, and returns a string.Note: If the array is empty and initial is not passed, this \nfunction returns NULL.', '', '', '', '']","['\n<?php\nfunction myfunction($v1,$v2)\n{\nreturn $v1 . ""-"" . $v2;\n}\n$a=array(""Dog"",""Cat"",""Horse"");\nprint_r(array_reduce($a,""myfunction""));\n?>\n', '\n<?php\nfunction myfunction($v1,$v2)\n{\nreturn $v1 . ""-"" . $v2;\n}\n$a=array(""Dog"",""Cat"",""Horse"");\nprint_r(array_reduce($a,""myfunction"",5));?>\n &&&&&& \n<?php\nfunction myfunction($v1,$v2)\n{\nreturn $v1+$v2;\n}\n$a=array(10,15,20);\nprint_r(array_reduce($a,""myfunction"",5));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&myfunction|||Required. Specifies the name of the function|||&&&initial|||Optional. Specifies the initial value to send to the function|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_replace(),https://www.w3schools.com/php/func_array_replace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_replace() function replaces the values of the first array with the values from following arrays.Tip: You can assign one array to the function, or as many as you like.If a key from array1 exists in array2, values from array1 will be replaced by \nthe values from array2. If the key only exists in array1, it will be left as it is (See Example 1 below).If a key exist in array2 and not in array1, it will be created in array1 (See Example 2 below).If multiple arrays are used, values from later arrays will overwrite the previous ones (See Example 3 below).Tip: Use array_replace_recursive() to replace the values of array1 with the values \nfrom following arrays recursively.', '', '', '', '']","['\n<?php\n $a1=array(""red"",""green"");$a2=array(""blue"",""yellow"");\n print_r(array_replace($a1,$a2));\n?>\n', '\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"");$a2=array(""a""=>""orange"",""burgundy"");\n print_r(array_replace($a1,$a2));?>\n', '\n<?php\n $a1=array(""a""=>""red"",""green"");$a2=array(""a""=>""orange"",""b""=>""burgundy"");\n print_r(array_replace($a1,$a2));?>\n', '\n<?php\n $a1=array(""red"",""green"");$a2=array(""blue"",""yellow"");$a3=array(""orange"",""burgundy"");\n print_r(array_replace($a1,$a2,$a3));?>\n', '\n<?php\n $a1=array(""red"",""green"",""blue"",""yellow"");\n $a2=array(0=>""orange"",3=>""burgundy"");print_r(array_replace($a1,$a2));?>\n']",[''],"['Parameter|||Description|||&&&array1|||Required. Specifies an array|||&&&array2|||Optional. Specifies an array which will replace the values of array1|||&&&array3,...|||Optional. Specifies more arrays to replace the values of array1  and array2, etc. Values from later arrays will overwrite the previous ones.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_replace_recursive(),https://www.w3schools.com/php/func_array_replace_recursive.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_replace_recursive() function replaces the values of the first array with the values from following arrays recursively.Tip: You can assign one array to the function, or as many as you like.If a key from array1 exists in array2, values from array1 will be replaced by \nthe values from array2. If the key only exists in array1, it will be left as it \nis. If a key exist in array2 and not in array1, it will be created in array1. If \nmultiple arrays are used, values from later arrays will overwrite the previous ones.Note: If you do not specify a key for each array, this \nfunction will behave exactly the same as the array_replace() function.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>array(""red""),""b""=>array(""green"",""blue""),);\n $a2=array(""a""=>array(""yellow""),""b""=>array(""black""));print_r(array_replace_recursive($a1,$a2));\n?>\n', '\n<?php\n $a1=array(""a""=>array(""red""),""b""=>array(""green"",""blue""));\n $a2=array(""a""=>array(""yellow""),""b""=>array(""black""));\n $a3=array(""a""=>array(""orange""),""b""=>array(""burgundy""));print_r(array_replace_recursive($a1,$a2,$a3));?>\n &&&&&& \n<?php\n $a1=array(""a""=>array(""red""),""b""=>array(""green"",""blue""),);\n $a2=array(""a""=>array(""yellow""),""b""=>array(""black""));$result=array_replace_recursive($a1,$a2);\n print_r($result);$result=array_replace($a1,$a2);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. Specifies an array|||&&&array2|||Optional. Specifies an array which will replace the values of array1|||&&&array3,...|||Optional. Specifies more arrays to replace the values of array1  and array2, etc. Values from later arrays will overwrite the previous ones.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_reverse(),https://www.w3schools.com/php/func_array_reverse.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_reverse() function returns an array in the reverse order.', '', '', '', '']","['\n<?php\n$a=array(""a""=>""Volvo"",""b""=>""BMW"",""c""=>""Toyota"");\nprint_r(array_reverse($a));\n?>\n', '\n<?php\n $a=array(""Volvo"",""XC90"",array(""BMW"",""Toyota""));$reverse=array_reverse($a);\n $preserve=array_reverse($a,true);print_r($a);print_r($reverse);\n print_r($preserve);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&preserve|||Optional. Specifies if the function should preserve the keys of the array or not. Possible values:\n    truefalse|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_search(),https://www.w3schools.com/php/func_array_search.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_search() function search an array for a value and returns the key.', '', '', '', '']","['\n<?php\n $a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");echo array_search(""red"",$a);\n?>\n', '\n<?php\n$a=array(""a""=>""5"",""b""=>5,""c""=>""5"");\necho array_search(5,$a,true);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. Specifies the value to search for|||&&&array|||Required. Specifies the array to search in|||&&&strict|||Optional. If this parameter is set to TRUE, then this function will search for identical elements in the array. Possible values:\n    truefalse - Default\n When set to true, the number 5 is not the same as the string 5 \n    (See example 2)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_shift(),https://www.w3schools.com/php/func_array_shift.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_shift() function removes the first element from an array, and returns the value of the removed element.Note: If the keys are numeric, all elements will get new keys, starting from 0 and increases by 1 (See example below).', '', '', '', '']","['\n<?php\n $a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");echo array_shift($a);\n print_r ($a);\n?>\n', '\n<?php\n $a=array(0=>""red"",1=>""green"",2=>""blue"");\necho array_shift($a);\nprint_r ($a);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_slice(),https://www.w3schools.com/php/func_array_slice.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_slice() function returns selected parts of an array.Note: If the array have string keys, the returned array will always preserve the keys (See example 4).', '', '', '', '']","['\n<?php\n $a=array(""red"",""green"",""blue"",""yellow"",""brown"");print_r(array_slice($a,2));\n?>\n', '\n<?php\n $a=array(""red"",""green"",""blue"",""yellow"",""brown"");print_r(array_slice($a,1,2));?>\n', '\n<?php\n $a=array(""red"",""green"",""blue"",""yellow"",""brown"");print_r(array_slice($a,-2,1));?>\n', '\n <?php$a=array(""red"",""green"",""blue"",""yellow"",""brown"");print_r(array_slice($a,1,2,true));?>\n', '\n <?php\n $a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"",""e""=>""brown"");\n print_r(array_slice($a,1,2));\n $a=array(""0""=>""red"",""1""=>""green"",""2""=>""blue"",""3""=>""yellow"",""4""=>""brown"");\n print_r(array_slice($a,1,2));?>\n']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&start|||Required. Numeric value. Specifies where the function will start the slice.\n    0 = the first element.\n    If this value is set to a negative number, the function will start slicing that far from the last element.\n    -2 means start at the second last element of the array.|||&&&length|||Optional. Numeric value. Specifies the length of the returned array.\n    \n    If this value is set to a negative number, the function will stop slicing that far from the last element. If this value is not set, the function will return all elements, starting from the position set by the start-parameter.\n    |||&&&preserve|||Optional. Specifies if the function should preserve or reset the keys. Possible values:true - Preserve keysfalse - \n      Default. Reset keys\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_splice(),https://www.w3schools.com/php/func_array_splice.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_splice() function removes selected elements from an array and \nreplaces it with new elements. The function also returns an array with the removed elements.Tip: If the function does not remove any elements (length=0), the \nreplaced array will be inserted from the position of the start parameter (See Example 2).Note: The keys in the replaced array are not preserved.', '', '', '', '']","['\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""a""=>""purple"",""b""=>""orange"");array_splice($a1,0,2,$a2);\n print_r($a1);\n?>\n', '\n<?php\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"");\n $a2=array(""a""=>""purple"",""b""=>""orange"");print_r(array_splice($a1,0,2,$a2));?>\n', '\n<?php\n $a1=array(""0""=>""red"",""1""=>""green"");\n $a2=array(""0""=>""purple"",""1""=>""orange"");array_splice($a1,1,0,$a2);\n print_r($a1);?>\n', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&start|||Required. Numeric value. Specifies where the function will start \n    removing elements.\n    0 = the first element.\n    If this value is set to a negative number, the function will start that far from the last element.\n    -2 means start at the second last element of the array.|||&&&length|||Optional. Numeric value. Specifies how many elements will \n    be removed, and also length of the returned array.\n    \n    If this value is set to a negative number, the function will stop that far from the last element. If this value is not set, the function will \n    remove all elements, starting from the position set by the start-parameter.\n    |||&&&array|||Optional. Specifies an array with the elements that will be \n    inserted to the original array. If it's only one element, it can be a \n    string, and does not have to be an array.|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_sum(),https://www.w3schools.com/php/func_array_sum.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_sum() function returns the sum of all the values in the array.', '', '', '', '']","['\n<?php\n$a=array(5,15,25);\necho array_sum($a);\n?>\n', '\n<?php\n $a=array(""a""=>52.2,""b""=>13.7,""c""=>0.9);echo array_sum($a);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_udiff(),https://www.w3schools.com/php/func_array_udiff.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_udiff() function compares the values of two or \nmore arrays, and returns the differences.Note: This function uses a user-defined function to compare the values!This function compares the values of two (or more) arrays, and return an \narray that contains the entries from array1 that are not present in \narray2 or array3, etc.', '', '', '', '']","['\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}$a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\n $a2=array(""a""=>""blue"",""b""=>""black"",""e""=>""blue"");$result=array_udiff($a1,$a2,""myfunction"");\n print_r($result);?>\n', '\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}$a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""yellow"");\n $a2=array(""A""=>""red"",""b""=>""GREEN"",""yellow"",""black"");$a3=array(""a""=>""green"",""b""=>""red"",""yellow"",""black"");\n$result=array_udiff($a1,$a2,$a3,""myfunction"");print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_udiff_assoc(),https://www.w3schools.com/php/func_array_udiff_assoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_udiff_assoc() function compares the keys and values of two or more arrays, and returns the differences.Note: This function uses a built-in function to compare the keys, and a user-defined function to compare the values!This function compares the keys and values of two (or more) arrays, and return an \narray that contains the entries from array1 that are not present in array2 or array3, etc.', '', '', '']","['\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}$a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\n $a2=array(""a""=>""red"",""b""=>""blue"",""c""=>""green"");$result=array_udiff_assoc($a1,$a2,""myfunction"");\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_udiff_uassoc(),https://www.w3schools.com/php/func_array_udiff_uassoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_udiff_uassoc() function compares the keys and values of two or more arrays, and returns the differences.Note: This function uses two user-defined functions for \ncomparison; the key is used in the first function and the value is used in the second!This function compares the keys and values of two (or more) arrays, and return an \narray that contains the entries from array1 that are not present in array2or array3, etc.', '', '', '']","['\n<?php\n function myfunction_key($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}function myfunction_value($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""red"",""b""=>""green"",""c""=>""green"");\n$result=array_udiff_uassoc($a1,$a2,""myfunction_value"",""myfunction_key"");\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunc_key|||Required. The name of the user-defined function that compares \n    the array keys.A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&myfunc_value|||Required. The name of the user-defined function that compares \n    the array values.A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_uintersect(),https://www.w3schools.com/php/func_array_uintersect.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_uintersect() function compares the values of two or more arrays, and returns the matches.Note: This function uses a user-defined function to compare the values!This function compares the values of two (or more) arrays, and return an array that contains the entries from array1 that are present in \narray2, array3, etc.', '', '', '', '']","['\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}$a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\n $a2=array(""a""=>""blue"",""b""=>""black"",""e""=>""blue"");$result=array_uintersect($a1,$a2,""myfunction"");\n print_r($result);?>\n', '\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}$a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""yellow"");\n $a2=array(""A""=>""red"",""b""=>""GREEN"",""yellow"",""black"");$a3=array(""a""=>""green"",""b""=>""red"",""yellow"",""black"");\n$result=array_uintersect($a1,$a2,$a3,""myfunction"");print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_uintersect_assoc(),https://www.w3schools.com/php/func_array_uintersect_assoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_uintersect_assoc() function compares the keys and values of \ntwo or more arrays, and returns the matches.Note: This function uses a built-in function to compare the \nkeys, and a user-defined function to compare the values!This function compares the keys and values of two (or more) arrays, and return an \narray that contains the entries from array1 that are present in array2, array3, etc.', '', '', '']","['\n<?php\n function myfunction($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}$a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\n $a2=array(""a""=>""red"",""b""=>""blue"",""c""=>""green"");$result=array_uintersect_assoc($a1,$a2,""myfunction"");\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunction|||Required. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_uintersect_uassoc(),https://www.w3schools.com/php/func_array_uintersect_uassoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_uintersect_uassoc() function compares the keys and values of two or more arrays,\nand returns the matches.Note: This function uses two user-defined functions for comparison;\nthe key is used in the first function and the value is used in the second!This function compares the keys and values of two (or more) arrays, and return an \narray that contains the entries from array1 that are present in array2, array3, etc.', '', '', '']","['\n<?php\n function myfunction_key($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}function myfunction_value($a,$b){if ($a===$b)\xa0 {\xa0 return 0;\xa0 }\xa0 return ($a>$b)?1:-1;}\n $a1=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");$a2=array(""a""=>""red"",""b""=>""green"",""c""=>""green"");\n$result=array_uintersect_uassoc($a1,$a2,""myfunction_key"",""myfunction_value"");\n print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array1|||Required. The array to compare from|||&&&array2|||Required. An array to compare against|||&&&array3,...|||Optional. More arrays to compare against|||&&&myfunc_key|||Required. The name of the user-defined function that compares \n    the array keys.A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&myfunc_value|||Required. The name of the user-defined function that compares \n    the array values.A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_unique(),https://www.w3schools.com/php/func_array_unique.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The array_unique() function removes duplicate values from an array. If two or \nmore array values are the same, the first appearance will be kept and the other will be removed.Note: The returned array will keep the first array item's key type."", '', '', '']","['\n<?php\n $a=array(""a""=>""red"",""b""=>""green"",""c""=>""red"");print_r(array_unique($a));\n?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifying an array|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \nSORT_STRING - Default. Compare items as strings\nSORT_REGULAR - Compare items normally (don't change types)\nSORT_NUMERIC - Compare items numerically\nSORT_LOCALE_STRING - Compare items as strings, based on current locale\n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_unshift(),https://www.w3schools.com/php/func_array_unshift.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The array_unshift() function inserts new elements to an array. The new array \nvalues will be inserted in the beginning of the array. Tip: You can add one value, or as many as you like.Note: Numeric keys will start at 0 and increase by 1. String keys will remain the same.', '', '', '', '']","['\n<?php\n $a=array(""a""=>""red"",""b""=>""green"");array_unshift($a,""blue"");print_r($a);\n?>\n', '\n<?php\n $a=array(""a""=>""red"",""b""=>""green"");print_r(array_unshift($a,""blue""));?>\n &&&&&& \n<?php\n $a=array(0=>""red"",1=>""green"");array_unshift($a,""blue"");print_r($a);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifying an array|||&&&value1|||Optional. Specifies a value to insert (Required in PHP versions before 7.3)|||&&&value2|||Optional. Specifies a value to insert|||&&&value3|||Optional. Specifies a value to insert|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||array_values(),https://www.w3schools.com/php/func_array_values.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The array_values() function returns an array containing all the values of an array.Tip: The returned array will have numeric keys, starting at 0 and increase by 1.', '', '', '']","['\n<?php\n $a=array(""Name""=>""Peter"",""Age""=>""41"",""Country""=>""USA"");print_r(array_values($a));\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifying an array|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_walk(),https://www.w3schools.com/php/func_array_walk.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","[""The array_walk() function runs each array element in a user-defined function. \nThe array's keys and values are parameters in the function.Note: You can change an array element's value in the user-defined \nfunction by specifying the first parameter as a reference: &$value (See Example 2).Tip: To work with deeper arrays (an array inside an array),\nuse the array_walk_recursive() function."", '', '', '', '']","['\n<?php\nfunction myfunction($value,$key)\n{\necho ""The key $key has the value $value<br>"";\n}\n$a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\narray_walk($a,""myfunction"");\n?>\n', '\n<?php\nfunction myfunction($value,$key,$p)\n{\necho ""$key $p $value<br>"";\n}\n$a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\narray_walk($a,""myfunction"",""has the value"");?>\n', '\n<?php\nfunction myfunction(&$value,$key)\n{\n$value=""yellow"";\n}\n$a=array(""a""=>""red"",""b""=>""green"",""c""=>""blue"");\narray_walk($a,""myfunction"");\nprint_r($a);?>\n', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifying an array|||&&&myfunction|||Required. The name of the user-defined function|||&&&parameter,...|||Optional. Specifies a parameter to the user-defined function. You can assign one parameter to the function, or as many as you like|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||array_walk_recursive(),https://www.w3schools.com/php/func_array_walk_recursive.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The array_walk_recursive() function runs each array element in a user-defined function.\nThe array's keys and values are parameters in the function. The difference \nbetween this function and the array_walk() \nfunction is that with this function you can work with deeper arrays (an array \ninside an array)."", '', '', '']","['\n<?php\n function myfunction($value,$key){echo ""The key $key has the value $value<br>"";}$a1=array(""a""=>""red"",""b""=>""green"");\n $a2=array($a1,""1""=>""blue"",""2""=>""yellow"");array_walk_recursive($a2,""myfunction"");\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifying an array|||&&&myfunction|||Required. The name of the user-defined function|||&&&parameter,...|||Optional. Specifies a parameter to the user-defined function. You can assign one parameter to the function, or as many as you like.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||arsort(),https://www.w3schools.com/php/func_array_arsort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The arsort() function sorts an associative array in descending order, according \nto the value.Tip: Use the asort() \nfunction to sort an associative array in ascending order, according to the \nvalue.Tip: Use the krsort() \nfunction to sort an associative array in descending order, according to the key.', '', '', '']","['\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");arsort($age);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \n0 = SORT_REGULAR - Default. Compare items normally (don't change types)\n1 = SORT_NUMERIC - Compare items numerically\n2 = SORT_STRING - Compare items as strings\n3 = SORT_LOCALE_STRING - Compare items as strings, based on current locale\n4 = SORT_NATURAL - Compare items as strings using natural ordering\n5 = SORT_FLAG_CASE - \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||asort(),https://www.w3schools.com/php/func_array_asort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The asort() function sorts an associative array in ascending order, according to the value.Tip: Use the arsort() \nfunction to sort an associative array in descending order, according to the value.Tip: Use the ksort() \nfunction to sort an associative array in ascending order, according to the key.', '', '', '']","['\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");asort($age);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \n0 = SORT_REGULAR - Default. Compare items normally (don't change types)\n1 = SORT_NUMERIC - Compare items numerically\n2 = SORT_STRING - Compare items as strings\n3 = SORT_LOCALE_STRING - Compare items as strings, based on current locale\n4 = SORT_NATURAL - Compare items as strings using natural ordering\n5 = SORT_FLAG_CASE - \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||compact(),https://www.w3schools.com/php/func_array_compact.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The compact() function creates an array from variables and their values.Note: Any strings that does not match variable names will be skipped.', '', '', '', '']","['\n<?php\n$firstname = ""Peter"";\n$lastname = ""Griffin"";\n$age = ""41"";\n\n$result = compact(""firstname"", ""lastname"", ""age"");\nprint_r($result);\n?>\n', '\n<?php\n$firstname = ""Peter"";\n$lastname = ""Griffin"";\n$age = ""41"";\n\n$name = array(""firstname"", ""lastname"");\n$result = compact($name, ""location"", ""age"");\n\nprint_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&var1|||Required. Can be a string with the variable name, or an array of variables|||&&&var2,...|||Optional. Can be a string with the variable name, or an array of variables. Multiple parameters are allowed.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Change log:|||&&&']",[]
php||count(),https://www.w3schools.com/php/func_array_count.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The count() function returns the number of elements in an array.', '', '', '', '']","['\n<?php\n $cars=array(""Volvo"",""BMW"",""Toyota"");echo count($cars);?>\n', '\n<?php\n $cars=array\xa0 (\xa0 ""Volvo""=>array\xa0 (\xa0 ""XC60"",\xa0 ""XC90""\xa0 ),\xa0 ""BMW""=>array\xa0 (\xa0 ""X3"",\xa0 ""X5""\xa0 ),\xa0 ""Toyota""=>array\xa0 (\n \xa0 ""Highlander""\xa0 )\xa0 ); echo ""Normal count: "" . count($cars).""<br>"";echo ""Recursive count: "" . count($cars,1);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array|||&&&mode|||Optional. Specifies the mode. Possible values:\n0 - Default. Does not count all elements of multidimensional arrays\n1 - Counts the array recursively (counts all the elements of  multidimensional arrays)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||current(),https://www.w3schools.com/php/func_array_current.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The current() function returns the value of the current element in an array.Every array has an internal pointer to its ""current"" element, which is \ninitialized to the first element inserted into the array. Tip: This function does not move the arrays internal pointer. Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n\necho current($people) . ""<br>"";\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||end() - moves the internal pointer to, and outputs, the last element in the array|||next() - moves the internal pointer to, and outputs, the next element in the array|||prev() - moves the internal pointer to, and outputs, the previous element in the array|||reset() - moves the internal pointer to the first element of the array|||each() - returns the current element key and value, and moves the internal pointer forward|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||each(),https://www.w3schools.com/php/func_array_each.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The each() function returns the current element key and value, and moves the internal pointer forward.This element key and value is returned in an array with four elements. Two \nelements (1 and Value) for the element value, and two elements (0 and Key) for the element key. Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\nprint_r (each($people));\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n reset($people);while (list($key, $val) = each($people))\xa0 {\xa0 echo ""$key => $val<br>"";\xa0 }?> &&&&&& \n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||current() - returns the value of the current element in an array|||end() - moves the internal pointer to, and outputs, the last element in the array|||next() - moves the internal pointer to, and outputs, the next element in the array|||prev() - moves the internal pointer to, and outputs, the previous element in the array|||reset() - moves the internal pointer to the first element of the array|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||end(),https://www.w3schools.com/php/func_array_end.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The end() function moves the internal pointer to, and outputs, the last element in the array.Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\necho current($people) . ""<br>"";\necho end($people); \n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||current() - returns the value of the current element in an array|||next() - moves the internal pointer to, and outputs, the next element in the array|||prev() - moves the internal pointer to, and outputs, the previous element in the array|||reset() - moves the internal pointer to the first element of the array|||each() - returns the current element key and value, and moves the internal pointer forward|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||extract(),https://www.w3schools.com/php/func_array_extract.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The extract() function imports variables into the local symbol table from an \narray.This function uses array keys as variable names and values as variable \nvalues. For each element it will create a variable in the current symbol table. This function returns the number of variables extracted on success.', '', '', '', '']","['\n<?php\n$a = ""Original"";\n$my_array = array(""a"" => ""Cat"",""b"" => ""Dog"", ""c"" => ""Horse"");\nextract($my_array);\necho ""\\$a = $a; \\$b = $b; \\$c = $c"";\n?>\n', '\n<?php\n$a = ""Original"";\n$my_array = array(""a"" => ""Cat"", ""b"" => ""Dog"", ""c"" => ""Horse"");\n\nextract($my_array, EXTR_PREFIX_SAME, ""dup"");\n\necho ""\\$a = $a; \\$b = $b; \\$c = $c; \\$dup_a = $dup_a"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&extract_rules|||Optional. The extract() function checks for invalid variable names and collisions with existing variable names. This parameter specifies how invalid and colliding names are treated.Possible values:\n\nEXTR_OVERWRITE - Default. On collision, the existing variable is  overwritten\nEXTR_SKIP - On collision, the existing variable is not overwritten\nEXTR_PREFIX_SAME - On collision, the variable name will be given a  prefix\nEXTR_PREFIX_ALL - All variable names will be given a prefix\nEXTR_PREFIX_INVALID - Only invalid or numeric variable names will be  given a prefix\nEXTR_IF_EXISTS - Only overwrite existing variables in the current  symbol table, otherwise do nothing\nEXTR_PREFIX_IF_EXISTS - Only add prefix to variables if the same  variable exists in the current symbol table\nEXTR_REFS - Extracts variables as references. The imported variables  are still referencing the values of the array parameter\n\n|||&&&prefix|||Optional. If EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, EXTR_PREFIX_INVALID or EXTR_PREFIX_IF_EXISTS are used in the extract_rules parameter, a specified prefix is required.\n    This parameter specifies the prefix. The prefix is automatically separated from the array key by an underscore character.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||in_array(),https://www.w3schools.com/php/func_array_in_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The in_array() function searches an array for a specific value.Note: If the search parameter is a string and the type parameter is \nset to TRUE, the search is case-sensitive.', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n\nif (in_array(""Glenn"", $people))\n\xa0\xa0{\n\xa0\xa0echo ""Match found"";\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""Match not found"";\n\xa0\xa0}\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"", 23);if (in_array(""23"", $people, TRUE))\xa0 {\xa0 echo ""Match found<br>"";\xa0 }\n else\xa0 {\xa0 echo ""Match not found<br>"";\xa0 } if (in_array(""Glenn"",$people, TRUE))\xa0 {\xa0 echo ""Match found<br>"";\xa0 }else\xa0 {\xa0 echo ""Match not found<br>"";\xa0 }if (in_array(23,$people, TRUE))\xa0 {\xa0 echo ""Match found<br>"";\xa0 }else\xa0 {\xa0 echo ""Match not found<br>"";\xa0 }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&search|||Required. Specifies the what to search for|||&&&array|||Required. Specifies the array to search|||&&&type|||\n Optional. If this parameter is set to TRUE, the in_array() function searches for the search-string and specific type in the array.\n    |||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||key(),https://www.w3schools.com/php/func_array_key.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The key() function returns the element key from the current internal pointer position.This function returns FALSE on error.', '', '', '']","['\n<?php\n$people=array(""Peter"",""Joe"",""Glenn"",""Cleveland"");\necho ""The key from the current position is: "" . key($people);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||krsort(),https://www.w3schools.com/php/func_array_krsort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The krsort() function sorts an associative array in descending order, according to the key.Tip: Use the ksort() \nfunction to sort an associative array in ascending order, according to the key.Tip: Use the arsort() \nfunction to sort an associative array in descending order, according to the value.', '', '', '']","['\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");\n krsort($age);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \n0 = SORT_REGULAR - Default. Compare items normally (don't change types)\n1 = SORT_NUMERIC - Compare items numerically\n2 = SORT_STRING - Compare items as strings\n3 = SORT_LOCALE_STRING - Compare items as strings, based on current locale\n4 = SORT_NATURAL - Compare items as strings using natural ordering\n5 = SORT_FLAG_CASE - \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ksort(),https://www.w3schools.com/php/func_array_ksort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ksort() function sorts an associative array in ascending order, according to the key.Tip: Use the krsort() \nfunction to sort an associative array in descending order, according to the key.Tip: Use the asort() \nfunction to sort an associative array in ascending order, according to the value.', '', '', '']","['\n<?php\n $age=array(""Peter""=>""35"",""Ben""=>""37"",""Joe""=>""43"");\n ksort($age);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \n0 = SORT_REGULAR - Default. Compare items normally (don't change types)\n1 = SORT_NUMERIC - Compare items numerically\n2 = SORT_STRING - Compare items as strings\n3 = SORT_LOCALE_STRING - Compare items as strings, based on current locale\n4 = SORT_NATURAL - Compare items as strings using natural ordering\n5 = SORT_FLAG_CASE - \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||list(),https://www.w3schools.com/php/func_array_list.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The list() function is used to assign values to a list of variables in one operation.Note: Prior to PHP 7.1, this function only worked on \nnumerical arrays.', '', '', '', '']","['\n<?php\n$my_array = array(""Dog"",""Cat"",""Horse"");\n\nlist($a, $b, $c) = $my_array;\necho ""I have several animals, a $a, a $b and a $c."";\n?>\n', '\n<?php\n$my_array = array(""Dog"",""Cat"",""Horse"");\n\nlist($a, , $c) = $my_array;\necho ""Here I only use the $a and $c variables."";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&var1|||Required. The first variable to assign a value to|||&&&var2,...|||Optional. More variables to assign values to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||natcasesort(),https://www.w3schools.com/php/func_array_natcasesort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The natcasesort() function sorts an array by using a ""natural order"" algorithm. The values keep their original keys.In a natural algorithm, the number 2 is less than the number 10. In computer \nsorting, 10 is less than 2, because the first number in ""10"" is less than 2.This function is case-insensitive.', '', '', '']","['\n<?php\n$temp_files = array(""temp15.txt"",""Temp10.txt"",\n""temp1.txt"",""Temp22.txt"",""temp2.txt"");\n\nnatsort($temp_files);\necho ""Natural order: "";\nprint_r($temp_files);\necho ""<br />"";\n\nnatcasesort($temp_files);\necho ""Natural order case insensitve: "";\nprint_r($temp_files);\n?>\n', '\nNatural order:\nArray\n(\n[0] => Temp10.txt\n[1] => Temp22.txt\n[2] => temp1.txt\n[4] => temp2.txt\n[3] => temp15.txt\n)\nNatural order case insensitve:\nArray\n(\n[2] => temp1.txt\n[4] => temp2.txt\n[0] => Temp10.txt\n[3] => temp15.txt\n[1] => Temp22.txt\n)\n', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||natsort(),https://www.w3schools.com/php/func_array_natsort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The natsort() function sorts an array by using a ""natural order"" algorithm. The values keep their original keys.In a natural algorithm, the number 2 is less than the number 10. In computer \nsorting, 10 is less than 2, because the first number in ""10"" is less than 2.', '', '', '']","['\n<?php\n$temp_files = array(""temp15.txt"",""temp10.txt"",\n""temp1.txt"",""temp22.txt"",""temp2.txt"");\n\nsort($temp_files);\necho ""Standard sorting: "";\nprint_r($temp_files);\necho ""<br>"";\n\nnatsort($temp_files);\necho ""Natural order: "";\nprint_r($temp_files);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||next(),https://www.w3schools.com/php/func_array_next.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The next() function moves the internal pointer to, and outputs, the next element in the array.Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n\necho current($people) . ""<br>"";\necho next($people);\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||prev() - moves the internal pointer to, and outputs, the previous element in the array|||current() - returns the value of the current element in an array|||end() - moves the internal pointer to, and outputs, the last element in the array|||reset() - moves the internal pointer to the first element of the array|||each() - returns the current element key and value, and moves the internal pointer forward|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||pos(),https://www.w3schools.com/php/func_array_pos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The pos() function returns the value of the current element in an array.This function is an alias of the current() function.Every array has an internal pointer to its ""current"" element, which is \ninitialized to the first element inserted into the array. Tip: This function does not move the arrays internal pointer. Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n\necho pos($people) . ""<br>"";\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||current() - returns the value of the current element in an array|||end() - moves the internal pointer to, and outputs, the last element in the array|||next() - moves the internal pointer to, and outputs, the next element in the array|||prev() - moves the internal pointer to, and outputs, the previous element in the array|||reset() - moves the internal pointer to the first element of the array|||each() - returns the current element key and value, and moves the internal pointer forward|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||prev(),https://www.w3schools.com/php/func_array_prev.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The prev() function moves the internal pointer to, and outputs, the previous element in the array.Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n\necho current($people) . ""<br>"";\necho next($people) . ""<br>"";\necho prev($people);\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||next() - moves the internal pointer to, and outputs, the next element in the array|||current() - returns the value of the current element in an array|||end() - moves the internal pointer to, and outputs, the last element in the array|||reset() - moves the internal pointer to the first element of the array|||each() - returns the current element key and value, and moves the internal pointer forward|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||range(),https://www.w3schools.com/php/func_array_range.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The range() function creates an array containing a range of elements.This function returns an array of elements from low to high.Note: If the low parameter is higher than the high parameter, the \nrange array will be from high to low.', '', '', '', '']","['\n<?php\n$number = range(0,5);\nprint_r ($number);\n?>\n', '\n<?php\n$number = range(0,50,10);\nprint_r ($number);?>\n &&&&&& \n<?php\n$letter = range(""a"",""d"");\nprint_r ($letter);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&low|||Required. Specifies the lowest value of the array|||&&&high|||Required. Specifies the highest value of the array|||&&&step|||Optional. Specifies the increment used in the range. Default is 1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||reset(),https://www.w3schools.com/php/func_array_reset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The reset() function moves the internal pointer to the first element of the array.Related methods:', '', '', '', '']","['\n<?php\n$people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");\n\necho current($people) . ""<br>"";\necho next($people) . ""<br>"";\n\necho reset($people);\n?>\n', '\n<?php\n $people = array(""Peter"", ""Joe"", ""Glenn"", ""Cleveland"");echo current($people) . ""<br>""; // The current element is Peterecho next($people) . ""<br>""; // The next element of Peter is Joeecho current($people) . ""<br>""; // Now the current element is Joeecho prev($people) . ""<br>""; // The previous element of Joe is Peterecho end($people) . ""<br>""; // The last element is Clevelandecho prev($people) . ""<br>""; // The previous element of Cleveland is Glennecho current($people) . ""<br>""; // Now the current element is Glennecho reset($people) . ""<br>""; // Moves the internal pointer to the first element of the array, which is Peter\n echo next($people) . ""<br>""; // The next element of Peter is Joe\n print_r (each($people)); // Returns the key and value of the current element (now Joe), and moves the internal pointer forward?>\n', '', '', '']","['Definition and Usage###&&&|||current() - returns the value of the current element in an array|||end() - moves the internal pointer to, and outputs, the last element in the array|||next() - moves the internal pointer to, and outputs, the next element in the array|||prev() - moves the internal pointer to, and outputs, the previous element in the array|||each() - returns the current element key and value, and moves the internal pointer forward|||']","['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||rsort(),https://www.w3schools.com/php/func_array_rsort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The rsort() function sorts an indexed array in descending order.Tip: Use the sort() \nfunction to sort an indexed array in ascending order.', '', '', '', '']","['\n<?php\n $cars=array(""Volvo"",""BMW"",""Toyota"");rsort($cars);?>\n', '\n<?php\n $numbers=array(4,6,2,22,11);rsort($numbers);?>\n &&&&&& \n<?php\n $cars=array(""Volvo"",""BMW"",""Toyota"");rsort($cars,SORT_NUMERIC);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \n0 = SORT_REGULAR - Default. Compare items normally (don't change types)\n1 = SORT_NUMERIC - Compare items numerically\n2 = SORT_STRING - Compare items as strings\n3 = SORT_LOCALE_STRING - Compare items as strings, based on current locale\n4 = SORT_NATURAL - Compare items as strings using natural ordering\n5 = SORT_FLAG_CASE - \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||shuffle(),https://www.w3schools.com/php/func_array_shuffle.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The shuffle() function randomizes the order of the elements in the array.This function assigns new keys for the elements in the array. Existing keys \nwill be removed (See Example below).', '', '', '', '']","['\n<?php\n $my_array = array(""red"",""green"",""blue"",""yellow"",""purple"");shuffle($my_array);\n print_r($my_array);\n?>\n', '\n<?php\n $my_array = array(""a""=>""red"",""b""=>""green"",""c""=>""blue"",""d""=>""yellow"",""e""=>""purple"");\nshuffle($my_array);print_r($my_array);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||sizeof(),https://www.w3schools.com/php/func_array_sizeof.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The sizeof() function returns the number of elements in an array.The sizeof() function is an alias of the count() function.', '', '', '', '']","['\n<?php\n $cars=array(""Volvo"",""BMW"",""Toyota"");echo sizeof($cars);?>\n', '\n<?php\n $cars=array\xa0 (\xa0 ""Volvo""=>array\xa0 (\xa0 ""XC60"",\xa0 ""XC90""\xa0 ),\xa0 ""BMW""=>array\xa0 (\xa0 ""X3"",\xa0 ""X5""\xa0 ),\xa0 ""Toyota""=>array\xa0 (\n \xa0 ""Highlander""\xa0 )\xa0 ); echo ""Normal count: "" . sizeof($cars).""<br>"";echo ""Recursive count: "" . sizeof($cars,1);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array|||&&&mode|||Optional. Specifies the mode. Possible values:\n0 - Default. Does not count all elements of multidimensional arrays\n1 - Counts the array recursively (counts all the elements of  multidimensional arrays)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||sort(),https://www.w3schools.com/php/func_array_sort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The sort() function sorts an indexed array in ascending order.Tip: Use the rsort() \nfunction to sort an indexed array in descending order.', '', '', '', '']","['\n<?php\n $cars=array(""Volvo"",""BMW"",""Toyota"");sort($cars);?>\n', '\n<?php\n $numbers=array(4,6,2,22,11);sort($numbers);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&sorttype|||Optional. Specifies how to compare the array elements/items. Possible values:\n    \n0 = SORT_REGULAR - Default. Compare items normally (don't change types)\n1 = SORT_NUMERIC - Compare items numerically\n2 = SORT_STRING - Compare items as strings\n3 = SORT_LOCALE_STRING - Compare items as strings, based on current locale\n4 = SORT_NATURAL - Compare items as strings using natural ordering\n5 = SORT_FLAG_CASE - \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||uasort(),https://www.w3schools.com/php/func_array_uasort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The uasort() function sorts an array by values using a user-defined comparison function.Tip: Use the uksort() \nfunction to sort an array by keys using a user-defined comparison function.', '', '', '']","['\n<?php\n function my_sort($a,$b){if ($a==$b) return 0;return ($a<$b)?-1:1;}$arr=array(""a""=>4,""b""=>2,""c""=>8,""d""=>6);\n uasort($arr,""my_sort"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&myfunction|||Optional. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||uksort(),https://www.w3schools.com/php/func_array_uksort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The uksort() function sorts an array by keys using a user-defined comparison function.Tip: Use the uasort() \nfunction to sort an array by values using a user-defined comparison function.', '', '', '']","['\n<?php\n function my_sort($a,$b){if ($a==$b) return 0;return ($a<$b)?-1:1;}$arr=array(""a""=>4,""b""=>2,""c""=>8,""d""=>6);\n uksort($arr,""my_sort"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&myfunction|||Optional. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||usort(),https://www.w3schools.com/php/func_array_usort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The usort() function sorts an array using a user-defined comparison function.', '', '', '']","['\n<?php\n function my_sort($a,$b){if ($a==$b) return 0;return ($a<$b)?-1:1;}$a=array(4,2,8,6);usort($a,""my_sort"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array|||Required. Specifies the array to sort|||&&&myfunction|||Optional. A string that define a callable comparison function. The comparison function must return an integer <, =, or > than 0 if the first argument is <, =, or > than the second argument|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Calendar,https://www.w3schools.com/php/php_ref_calendar.asp,,"['PHP Calendar Introduction', 'Installation', 'PHP Calendar Functions', 'PHP Predefined Calendar Constants']","['The calendar extension contains functions that simplifies converting between different calendar formats.It is based on the Julian Day Count, which is a count of days starting from January 1st, 4713 B.C.Note: To convert between calendar formats, you must first convert to Julian Day Count, then to the calendar of your choice.Note: The Julian Day Count is not the same as the Julian Calendar!', 'For these functions to work, you have to compile PHP with \n--enable-calendar.The Windows version of PHP has built-in support for this extension.', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&cal_days_in_month()|||Returns the number of days in a month for a specified year and calendar|||&&&cal_from_jd()|||Converts a Julian Day Count into a date of a specified calendar|||&&&cal_info()|||Returns information about a specified calendar|||&&&cal_to_jd()|||Converts a date in a specified calendar to Julian Day Count|||&&&easter_date()|||Returns the Unix timestamp for midnight on Easter of a specified year|||&&&easter_days()|||Returns the number of days after March 21, that the Easter Day is in a specified year|||&&&frenchtojd()|||Converts a French Republican date to a Julian Day Count|||&&&gregoriantojd()|||Converts a Gregorian date to a Julian Day Count|||&&&jddayofweek()|||Returns the day of the week|||&&&jdmonthname()|||Returns a month name|||&&&jdtofrench()|||Converts a Julian Day Count to a French Republican date|||&&&jdtogregorian()|||Converts a Julian Day Count to a Gregorian date|||&&&jdtojewish()|||Converts a Julian Day Count to a Jewish date|||&&&jdtojulian()|||Converts a Julian Day Count to a Julian date|||&&&jdtounix()|||Converts Julian Day Count to Unix timestamp|||&&&jewishtojd()|||Converts a Jewish date to a Julian Day Count|||&&&juliantojd()|||Converts a Julian date to a Julian Day Count|||&&&unixtojd()|||Converts Unix timestamp to Julian Day Count|||&&&', 'Constant|||Type|||PHP Version|||&&&CAL_GREGORIAN|||Integer|||PHP 4|||&&&CAL_JULIAN|||Integer|||PHP 4|||&&&CAL_JEWISH|||Integer|||PHP 4|||&&&CAL_FRENCH|||Integer|||PHP 4|||&&&CAL_NUM_CALS|||Integer|||PHP 4|||&&&CAL_DOW_DAYNO|||Integer|||PHP 4|||&&&CAL_DOW_SHORT|||Integer|||PHP 4|||&&&CAL_DOW_LONG|||Integer|||PHP 4|||&&&CAL_MONTH_GREGORIAN_SHORT|||Integer|||PHP 4|||&&&CAL_MONTH_GREGORIAN_LONG|||Integer|||PHP 4|||&&&CAL_MONTH_JULIAN_SHORT|||Integer|||PHP 4|||&&&CAL_MONTH_JULIAN_LONG|||Integer|||PHP 4|||&&&CAL_MONTH_JEWISH|||Integer|||PHP 4|||&&&CAL_MONTH_FRENCH|||Integer|||PHP 4|||&&&CAL_EASTER_DEFAULT|||Integer|||PHP 4.3|||&&&CAL_EASTER_ROMAN|||Integer|||PHP 4.3|||&&&CAL_EASTER_ALWAYS_GREGORIAN|||Integer|||PHP 4.3|||&&&CAL_EASTER_ALWAYS_JULIAN|||Integer|||PHP 4.3|||&&&CAL_JEWISH_ADD_ALAFIM_GERESH|||Integer|||PHP 5.0|||&&&CAL_JEWISH_ADD_ALAFIM|||Integer|||PHP 5.0|||&&&CAL_JEWISH_ADD_GERESHAYIM|||Integer|||PHP 5.0|||&&&']",[]
php||cal_days_in_month(),https://www.w3schools.com/php/func_cal_cal_days_in_month.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The cal_days_in_month() function returns the number of days in a month for a specified year and calendar.', '', '', '']","['\n<?php\n $d=cal_days_in_month(CAL_GREGORIAN,10,2005);echo ""There was $d days in October 2005"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&calendar|||Required. Specifies the calendar to use. Look at the\n PHP Calendar Constants|||&&&month|||Required. Specifies the month in the selected calendar|||&&&year|||Required. Specifies the year in the selected calendar|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||cal_from_jd(),https://www.w3schools.com/php/func_cal_cal_from_jd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The cal_from_jd() function converts a Julian Day Count into a date of a specified calendar.', '', '', '']","['\n<?php\n $d=unixtojd(mktime(0,0,0,6,20,2007));\n print_r(cal_from_jd($d,CAL_GREGORIAN));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. Specifies a Julian Day as an integer|||&&&calendar|||Required. Specifies the calendar to convert to. Must be one of the following values:\n \nCAL_GREGORIAN\nCAL_JULIAN\nCAL_JEWISH\nCAL_FRENCH\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||cal_info(),https://www.w3schools.com/php/func_cal_cal_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The cal_info() function returns information about a specified calendar.', '', '', '']","['\n<?php\n print_r(cal_info(0));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&calendar|||Optional. Specifies a number that indicates which calendar to return information about:\n \n0 = CAL_GREGORIAN\n1 = CAL_JULIAN\n2 = CAL_JEWISH\n3 = CAL_FRENCH\n\nTip: If the calendar parameter is omitted,   cal_info() returns info about all calendars\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||cal_to_jd(),https://www.w3schools.com/php/func_cal_cal_to_jd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The cal_to_jd() function converts a date in a specified calendar to Julian Day Count.', '', '', '']","['\n<?php\n $d=cal_to_jd(CAL_GREGORIAN,6,20,2007);echo $d;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&calendar|||Required. Specifies the calendar to convert from. Must be one of the following values:\n \nCAL_GREGORIAN\nCAL_JULIAN\nCAL_JEWISH\nCAL_FRENCH\n\n|||&&&month|||Required. Specifies the month as a number|||&&&day|||Required. Specifies the day as a number|||&&&year|||Required. Specifies the year as a number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||easter_date(),https://www.w3schools.com/php/func_cal_easter_date.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The easter_date() function returns the Unix timestamp for midnight on Easter of a given year.Tip: The date of Easter Day is defined as the Sunday after the first full moon which\nfalls on or after the Spring Equinox (21st March).', '', '', '']","['\n<?php\n echo easter_date() . ""<br />"";echo date(""M-d-Y"",easter_date()) . ""<br />"";echo date(""M-d-Y"",easter_date(1975)) . ""<br />"";echo date(""M-d-Y"",easter_date(1998)) . ""<br />"";echo date(""M-d-Y"",easter_date(2007));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&year|||Optional. Specifies a year between 1970 and 2037. Default is the current year, local time|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||easter_days(),https://www.w3schools.com/php/func_cal_easter_days.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The easter_days() function returns the number of days after March 21, that the Easter Day is in the given year.Tip: The date of Easter Day is defined as the Sunday after the first full moon which falls\non or after the Spring Equinox (21st March).', '', '', '']","['\n<?php\n echo ""Easter Day is "". easter_days() . "" days after March 21 this year.<br />"";echo ""Easter Day was "". easter_days(1990) . "" days after March 21 in 1990.<br />"";echo ""Easter Day was "". easter_days(1342) . "" days after March 21 in 1342.<br />"";echo ""Easter Day will be "". easter_days(2050) . "" days after March 21 in 2050."";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&year|||Optional. Specifies a year as a number. Default is the current year, local time|||&&&method|||Optional. Allows you to calculate easter dates based on other calendars. E.g. it uses the Gregorian calendar during the years 1582 - 1752 when set to CAL_EASTER_ROMAN|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||frenchtojd(),https://www.w3schools.com/php/func_cal_frenchtojd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The frenchtojd() function converts a date from the French Republican Calendar to a Julian Day Count.Tip: The French Republican Calendar is a calendar proposed during the French Revolution,\nand used by the French government for about twelve years from late 1793. This function only convert dates in\nyears 1 through 14 (Gregorian dates 22 September 1792 - 22 September 1806).Tip: Look at the jdtofrench() function\nto convert a Julian Day Count to a French Republican date.', '', '', '']","['\n<?php\n $jd=frenchtojd(3,3,14);echo $jd . ""<br>"";echo jdtofrench($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&month|||Required. Specifies the month as a number from 1 to 13|||&&&day|||Required. Specifies the day as a number from 1 to 30|||&&&year|||Required. Specifies the year as a number from 1 to 14|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||gregoriantojd(),https://www.w3schools.com/php/func_cal_gregoriantojd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gregoriantojd() function converts a date from the Gregorian Calendar to a Julian Day Count.Note: Although this function can handle dates back to 4714 B.C., notice that the Gregorian\ncalendar was not instituted until 1582, and some countries did not accept it until much later (Britain converted in 1752,\nUSSR in 1918, and Greece in 1923). Most European countries used the Julian calendar prior the Gregorian.Tip: Look at the jdtogregorian() function to convert\na Julian Day Count to a Gregorian date.', '', '', '']","['\n<?php\n $jd=gregoriantojd(6,20,2007);echo $jd . ""<br>"";echo jdtogregorian($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&month|||Required. Specifies the month as a number from 1 to 12|||&&&day|||Required. Specifies the day as a number from 1 to 31|||&&&year|||Required. Specifies the year as a number between -4714 and 9999|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jddayofweek(),https://www.w3schools.com/php/func_cal_jddayofweek.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jddayofweek() function returns the day of the week.', '', '', '']","['\n<?php\n$jd=gregoriantojd(1,13,1998);echo jddayofweek($jd,1);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number|||&&&mode|||Optional. Specifies how to return the weekday. Can have one of the following values:\n    \n0 - Default. Returns the weekday as an integer (0=Sunday, 1=Monday,  etc.)\n1 - Returns the weekday as a string (Sunday, Monday, etc.)\n2 - Returns the weekday as a string, abbreviated form (Sun, Mon,  etc.)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jdmonthname(),https://www.w3schools.com/php/func_cal_jdmonthname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jdmonthname() function returns a month name.', '', '', '']","['\n<?php\n $jd=gregoriantojd(1,13,1998);echo jdmonthname($jd,0);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number|||&&&mode|||Optional. Specifies which calendar to convert the Julian Day Count to, and how the month name is to be returned. Mode values:\n \n0 - Gregorian - abbreviated form (Jan, Feb, Mar, etc.)\n1 - Gregorian (January, February, March, etc.)\n2 - Julian - abbreviated form (Jan, Feb, Mar, etc.)\n3 - Julian (January, February, March, etc.)\n4 - Jewish (Tishri, Heshvan, Kislev, etc.)\n5 - French Republican (Vendemiaire, Brumaire, Frimaire, etc.)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jdtofrench(),https://www.w3schools.com/php/func_cal_jdtofrench.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jdtofrench() function converts a Julian Day Count to a French Republican date.Tip: Look at the frenchtojd() function to\nconvert a French Republican date to a Julian Day Count.', '', '', '']","['\n<?php\n $jd=frenchtojd(3,3,14);echo $jd . ""<br>"";echo jdtofrench($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jdtogregorian(),https://www.w3schools.com/php/func_cal_jdtogregorian.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jdtogregorian() function converts a Julian Day Count to a Gregorian date.Tip: Look at the gregoriantojd() function to\nconvert a Gregorian date to a Julian Day Count.', '', '', '']","['\n<?php\n$jd=gregoriantojd(6,20,2007);echo $jd . ""<br>"";echo jdtogregorian($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jdtojewish(),https://www.w3schools.com/php/func_cal_jdtojewish.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jdtojewish() function converts a Julian Day Count to a Jewish date.Tip: Look at the jewishtojd() function to convert\na Jewish date to a Julian Day Count.', '', '', '']","['\n<?php\n$jd=jdtojewish(1789430); echo $jd;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number|||&&&hebrew|||Optional. When set to TRUE it indicates Hebrew output format. FALSE is default|||&&&fl|||Optional. Defines the Hebrew output format. The available formats are:\n    \nCAL_JEWISH_ADD_ALAFIM_GERESH\nCAL_JEWISH_ADD_ALAFIM\nCAL_JEWISH_ADD_GERESHAYIM\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||jdtojulian(),https://www.w3schools.com/php/func_cal_jdtojulian.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jdtojulian() function converts a Julian Day Count to a Julian date.Tip: Look at the juliantojd() function to convert\na Julian date to a Julian Day Count.', '', '', '']","['\n<?php\n $jd=juliantojd(6,20,2007);echo $jd . ""<br>"";echo jdtojulian($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jdtounix(),https://www.w3schools.com/php/func_cal_jdtounix.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jdtounix() function converts Julian Day Count to Unix timestamp.Note: This function will return false if the parameter jd is not inside the Unix epoch\n(which means that the Gregorian years must be between 1970 and 2037 OR that jd >= 2440588 and jd <= 2465342).\nThe time returned is local time.Tip: Look at the unixtojd() function to convert \nUnix timestamp to Julian Day Count.', '', '', '']","['\n<?php\n $jd=gregoriantojd(10,3,1975);echo jdtounix($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&jd|||Required. A Julian Day number between 2440588 and 2465342|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||jewishtojd(),https://www.w3schools.com/php/func_cal_jewishtojd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The jewishtojd() function converts a date from the Jewish Calendar to a Julian Day Count.Note: Although this function can handle dates back to year 1 (3761 B.C.), notice that\nin the beginning there was no formula to determine the start of a month. A new month was started when the\nnew moon was first observed.Tip: Look at the jdtojewish() function to convert\na Julian Day Count to a Jewish date.', '', '', '']","['\n<?php\n $jd=jewishtojd(6,20,2007);echo $jd;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&month|||Required. Specifies the month as a number from 1 to 13|||&&&day|||Required. Specifies the day as a number from 1 to 30|||&&&year|||Required. Specifies the year as a number between 1 and 9999|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||juliantojd(),https://www.w3schools.com/php/func_cal_juliantojd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The juliantojd() function converts a date from the Julian Calendar to a Julian Day Count.Note: Although this function can handle dates back to 4713 B.C., notice that the Julian\ncalendar was created in 46 B.C., and it did not stabilize until at least 8 A.D. Also, the beginning of a year\nvaried from one culture to another - not all accepted January as the first month. Remember that the current calendar\nbeing used worldwide is the Gregorian calendar. The gregoriantojd() function\ncan be used to convert such dates to their Julian Day count.Tip: Look at the jdtojulian() function to convert a\nJulian Day Count to a Julian date.', '', '', '']","['\n<?php\n $jd=juliantojd(6,20,2007);echo $jd . ""<br>"";echo jdtojulian($jd);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&month|||Required. Specifies the month as a number from 1 to 12|||&&&day|||Required. Specifies the day as a number from 1 to 31|||&&&year|||Required. Specifies the year as a number between -4713 and 9999|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||unixtojd(),https://www.w3schools.com/php/func_cal_unixtojd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The unixtojd() function converts Unix timestamp to Julian Day Count.Note: Unix timestamp indicates the number of seconds since midnight of January 1, 1970 (Gregorian Calendar).Tip: Look at the jdtounix() function to convert\nJulian Day Count to Unix timestamp.', '', '', '']","['\n<?php\necho unixtojd();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Optional. Specifies A unix timestamp to convert|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Date/Time,https://www.w3schools.com/php/php_ref_date.asp,,"['PHP Date/Time Introduction', 'Installation', 'Runtime Configuration', 'PHP Date/Time Functions', 'PHP Predefined Date/Time Constants']","['The date/time functions allow you to get the date and time from \nthe server where your PHP script runs. You can then use the date/time functions \nto format the date and time in several ways.Note: These functions depend on the locale settings of your server. \nRemember to take daylight saving time and leap years into consideration when \nworking with these functions.', 'The PHP date/time functions are part of the PHP core. No installation is required to use these functions.', 'The behavior of these functions is affected by settings in php.ini:', '', '']","['', '', '', '', '']",[''],"['Name|||Description|||Default|||PHP Version|||&&&date.timezone|||The default timezone (used by all date/time functions)|||""""|||PHP 5.1|||&&&date.default_latitude|||The default latitude (used by date_sunrise() and date_sunset())|||\xa0""31.7667""|||PHP 5.0|||&&&date.default_longitude|||The default longitude (used by date_sunrise() and date_sunset())|||""35.2333""|||PHP 5.0|||&&&date.sunrise_zenith|||The default sunrise zenith (used by date_sunrise() and date_sunset())|||""90.83""|||PHP 5.0|||&&&date.sunset_zenith|||The default sunset zenith (used by date_sunrise() and date_sunset())|||""90.83""|||PHP 5.0|||&&&', 'Function|||Description|||&&&checkdate()|||Validates a Gregorian date|||&&&date_add()|||Adds days, months, years, hours, minutes, and seconds to a date|||&&&date_create_from_format()|||Returns a new DateTime object formatted according to a specified format|||&&&date_create()|||Returns a new DateTime object|||&&&date_date_set()|||Sets a new date|||&&&date_default_timezone_get()|||Returns the default timezone used by all date/time functions|||&&&date_default_timezone_set()|||Sets the default timezone used by all date/time functions|||&&&date_diff()|||Returns the difference between two dates|||&&&date_format()|||Returns a date formatted according to a specified format|||&&&date_get_last_errors()|||Returns the warnings/errors found in a date string|||&&&date_interval_create_from_date_string()|||Sets up a DateInterval from the relative parts of the string|||&&&date_interval_format()|||Formats the interval|||&&&date_isodate_set()|||Sets the ISO date|||&&&date_modify()|||Modifies the timestamp|||&&&date_offset_get()|||Returns the timezone offset|||&&&date_parse_from_format()|||Returns an associative array with detailed info about a specified date, according to a specified format|||&&&date_parse()|||Returns an associative array with detailed info about a specified date|||&&&date_sub()|||Subtracts days, months, years, hours, minutes, and seconds from a date|||&&&date_sun_info()|||Returns an array containing info about sunset/sunrise and twilight begin/end, for a specified day and location|||&&&date_sunrise()|||Returns the sunrise time for a specified day and location|||&&&date_sunset()|||Returns the sunset time for a specified day and location|||&&&date_time_set()|||Sets the time|||&&&date_timestamp_get()|||Returns the Unix timestamp|||&&&date_timestamp_set()|||Sets the date and time based on a Unix timestamp|||&&&date_timezone_get()|||Returns the time zone of the given DateTime object|||&&&date_timezone_set()|||Sets the time zone for the DateTime object|||&&&date()|||Formats a local date and time|||&&&getdate()|||Returns date/time information of a timestamp or the current local date/time|||&&&gettimeofday()|||Returns the current time|||&&&gmdate()|||Formats a GMT/UTC date and time|||&&&gmmktime()|||Returns the Unix timestamp for a GMT date|||&&&gmstrftime()|||Formats a GMT/UTC date and time according to locale settings|||&&&idate()|||Formats a local time/date as integer|||&&&localtime()|||Returns the local time|||&&&microtime()|||Returns the current Unix timestamp with microseconds|||&&&mktime()|||Returns the Unix timestamp for a date|||&&&strftime()|||Formats a local time and/or date according to locale settings|||&&&strptime()|||Parses a time/date generated with strftime()|||&&&strtotime()|||Parses an English textual datetime into a Unix timestamp|||&&&time()|||Returns the current time as a Unix timestamp|||&&&timezone_abbreviations_list()|||Returns an associative array containing dst, offset, and the timezone name|||&&&timezone_identifiers_list()|||Returns an indexed array with all timezone identifiers|||&&&timezone_location_get()|||Returns location information for a specified timezone|||&&&timezone_name_from_ abbr()|||Returns the timezone name from abbreviation|||&&&timezone_name_get()|||Returns the name of the timezone|||&&&timezone_offset_get()|||Returns the timezone offset from GMT|||&&&timezone_open()|||Creates new DateTimeZone object|||&&&timezone_transitions_get()|||Returns all transitions for the timezone|||&&&timezone_version_get()|||Returns the version of the timezonedb|||&&&', 'Constant|||Description|||&&&DATE_ATOM|||Atom (example: 2019-01-18T14:13:03+00:00)|||&&&DATE_COOKIE|||HTTP Cookies (example: Fri, 18 Jan 2019 14:13:03 UTC)|||&&&DATE_ISO8601|||ISO-8601 (example: 2019-01-18T14:13:03+0000)|||&&&DATE_RFC822|||RFC 822 (example: Fri, 18 Jan 2019 14:13:03 +0000)|||&&&DATE_RFC850|||RFC 850 (example: Friday, 18-Jan-19 14:13:03 UTC)|||&&&DATE_RFC1036|||RFC 1036 (example: Friday, 18-Jan-19 14:13:03 +0000)|||&&&DATE_RFC1123|||RFC 1123 (example: Fri, 18 Jan 2019 14:13:03 +0000)|||&&&DATE_RFC2822|||RFC 2822 (example: Fri, 18 Jan 2019 14:13:03 +0000)|||&&&DATE_RFC3339|||Same as DATE_ATOM (since PHP 5.1.3)|||&&&DATE_RFC3339_EXTENDED|||RFC3339 Extended format (since PHP 7.0.0) (example: \n    2019-01-18T16:34:01.000+00:00)|||&&&DATE_RSS|||RSS (Fri, 18 Jan 2019 14:13:03 +0000)|||&&&DATE_W3C|||World Wide Web Consortium (example: 2019-01-18T14:13:03+00:00)|||&&&SUNFUNCS_RET_TIMESTAMP|||Timestamp (since PHP 5.1.2)|||&&&SUNFUNCS_RET_STRING|||Hours:minutes (example: 09:41) (since PHP 5.1.2)|||&&&SUNFUNCS_RET_DOUBLE|||Hours as a floating point number (example: 9.75) (since PHP 5.1.2)|||&&&']",[]
php||checkdate(),https://www.w3schools.com/php/func_date_checkdate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The checkdate() function is used to validate a Gregorian date.', '', '', '']","['\n<?php\n var_dump(checkdate(12,31,-400));echo ""<br>"";\n var_dump(checkdate(2,29,2003));echo ""<br>"";\n var_dump(checkdate(2,29,2004));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&month|||Required. Specifies the month as a number between 1 and 12|||&&&day|||Required. Specifies the day as a number between 1 and 31|||&&&year|||Required. Specifies the year as a number between 1 and 32767|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_add(),https://www.w3schools.com/php/func_date_date_add.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_add() function adds some days, months, years, hours, minutes, and seconds to a date.', '', '', '']","['\n<?php\n$date=date_create(""2013-03-15"");\ndate_add($date,date_interval_create_from_date_string(""40 days""));\necho date_format($date,""Y-m-d"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&interval|||Required. Specifies a DateInterval object|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_create_from_format(),https://www.w3schools.com/php/func_date_create_from_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_create_from_format() function returns a new DateTime object formatted according to \nthe specified format.', '', '', '']","['\n<?php\n $date=date_create_from_format(""j-M-Y"",""15-Mar-2013"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the format to use. The following characters can be used in the format parameter string:\n \nd - Day of the month; with leading zeros\nj - Day of the month; without leading zeros\nD - Day of the month (Mon - Sun)\nl - Day of the month (Monday - Sunday)\nS - English suffix for day of the month (st, nd, rd, th)\nF - Monthname (January - December)\nM - Monthname (Jan-Dec)\nm - Month (01-12)\nn - Month (1-12)\nY - Year (e.g 2013)\ny - Year (e.g 13)\na and A - am or pm\ng - 12 hour format without leading zeros\nG - 24 hour format without leading zeros\nh - 12 hour format with leading zeros\nH - 24 hour format with leading zeros\ni - Minutes with leading zeros\ns - Seconds with leading zeros\nu - Microseconds (up to six digits)\ne, O, P and T - Timezone identifier\nU - Seconds since Unix Epoch\n(space)\n# - One of the following separation symbol: ;,:,/,.,,,-,(,)\n? - A random byte\n* - Random bytes until next separator/digit\n! - Resets all fields to Unix Epoch\n| - Resets all fields to Unix Epoch if they have not been parsed yet\n+ - If present, trailing data in the string will cause a warning,  not an error\n\n|||&&&time|||Required. Specifies a date/time string. NULL indicates the current date/time|||&&&timezone|||Optional. Specifies the timezone of time. Default is the current timezone|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_create(),https://www.w3schools.com/php/func_date_date_create.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The date_create() function returns a new DateTime object.', '', '', '', '']","['\n<?php\n $date=date_create(""2013-03-15"");\n echo date_format($date,""Y/m/d"");?>\n', '\n<?php\n $date=date_create(""2013-03-15 23:40:00"",timezone_open(""Europe/Oslo""));\n echo date_format($date,""Y/m/d H:iP"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&time|||Optional. Specifies a date/time string. NULL indicates the current time|||&&&timezone|||Optional. Specifies the timezone of time. Default is the current timezone.Tip:\nLook at a list of all supported timezones in PHP|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_date_set(),https://www.w3schools.com/php/func_date_date_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_date_set() function sets a new date.', '', '', '']","['\n<?php\n $date=date_create();date_date_set($date,2020,10,30);echo date_format($date,""Y/m/d"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&year|||Required. Specifies the year of the date|||&&&month|||Required. Specifies the month of the date|||&&&day|||Required. Specifies the day of the date|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_default_timezone_get(),https://www.w3schools.com/php/func_date_default_timezone_get.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The date_default_timezone_get() function returns the default timezone used by all date/time functions in the script.', '', '']","['\n<?php\n echo date_default_timezone_get();?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&'],[]
php||date_default_timezone_set(),https://www.w3schools.com/php/func_date_default_timezone_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_default_timezone_set() function sets the default timezone used by all date/time functions in the script.', '', '', '']","['\n<?php\n date_default_timezone_set(""Asia/Bangkok"");echo date_default_timezone_get();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timezone|||Required. Specifies the timezone to use, like ""UTC"" or ""Europe/Paris"". List of valid timezones:\n \n http://www.php.net/manual/en/timezones.php|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_diff(),https://www.w3schools.com/php/func_date_date_diff.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_diff() function returns the difference between two DateTime objects.', '', '', '']","['\n<?php\n $date1=date_create(""2013-03-15"");$date2=date_create(""2013-12-12"");\n $diff=date_diff($date1,$date2);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&datetime1|||Required. Specifies a DateTime object|||&&&datetime2|||Required. Specifies a DateTime object|||&&&absolute|||Optional. Specifies a Boolean value. TRUE indicates that the interval/difference MUST be positive. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_format(),https://www.w3schools.com/php/func_date_date_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_format() function returns a date formatted according to the specified format.Note: This function does not use locales (all output is in \nEnglish).Tip: Also look at the date() \nfunction, which formats a local date/time. ', '', '', '']","['\n<?php\n $date=date_create(""2013-03-15"");echo date_format($date,""Y/m/d H:i:s"");?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&format|||Required. Specifies the format for the date. The following characters can be used:\n    \nd - The day of the month (from 01 to 31)\nD - A textual representation of a day (three letters)\nj - The day of the month without leading zeros (1 to 31)\nl (lowercase 'L') - A full textual representation of a day\nN - The ISO-8601 numeric representation of a day (1 for Monday, 7 for Sunday)\nS - The English ordinal suffix for the day of the month (2 characters st, nd, rd or th. Works well with j)\nw - A numeric representation of the day (0 for Sunday, 6 for Saturday)\nz - The day of the year (from 0 through 365)\nW - The ISO-8601 week number of year (weeks starting on Monday)\nF - A full textual representation of a month (January through December)\nm - A numeric representation of a month (from 01 to 12)\nM - A short textual representation of a month (three letters)\nn - A numeric representation of a month, without leading zeros (1 to 12)\nt - The number of days in the given month\nL - Whether it's a leap year (1 if it is a leap year, 0 otherwise)\no - The ISO-8601 year number\nY - A four digit representation of a year\ny - A two digit representation of a year\na - Lowercase am or pm\nA - Uppercase AM or PM\nB - Swatch Internet time (000 to 999)\ng - 12-hour format of an hour (1 to 12)\nG - 24-hour format of an hour (0 to 23)\nh - 12-hour format of an hour (01 to 12)\nH - 24-hour format of an hour (00 to 23)\ni - Minutes with leading zeros (00 to 59)\ns - Seconds, with leading zeros (00 to 59)\nu - Microseconds (added in PHP 5.2.2)\ne - The timezone identifier (Examples: UTC, GMT, Atlantic/Azores)\nI (capital i) - Whether the date is in daylights savings time (1 if Daylight Savings Time, 0 otherwise)\nO - Difference to Greenwich time (GMT) in hours (Example: +0100)\nP - Difference to Greenwich time (GMT) in hours:minutes (added in  PHP 5.1.3)\nT - Timezone abbreviations (Examples: EST, MDT)\nZ - Timezone offset in seconds. The offset for timezones west of UTC is negative (-43200 to  50400)\nc - The ISO-8601 date (e.g. 2013-05-05T16:34:42+00:00)\nr - The RFC 2822 formatted date (e.g. Fri, 12 Apr 2013 12:01:05 +0200)\nU - The seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\n\nand the following predefined constants can also be used (available since PHP 5.1.0):\n\nDATE_ATOM - Atom (example: 2013-04-12T15:52:01+00:00)\nDATE_COOKIE - HTTP Cookies (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_ISO8601 - ISO-8601 (example: 2013-04-12T15:52:01+0000)\nDATE_RFC822 - RFC 822 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC850 - RFC 850 (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_RFC1036 - RFC 1036 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC1123 - RFC 1123 (example: Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC2822 - RFC 2822 (Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC3339 - Same as DATE_ATOM (since PHP 5.1.3)\nDATE_RSS - RSS (Fri, 12 Aug 2013 15:52:01 +0000)\nDATE_W3C - World Wide Web Consortium (example:  2013-04-12T15:52:01+00:00)\n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_get_last_errors(),https://www.w3schools.com/php/func_date_get_last_errors.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The date_get_last_errors() function returns the warnings/errors found while parsing a date string.', '', '']","['\n<?php\n date_create(""gyuiyiuyui%&&/"");\n print_r(date_get_last_errors());?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||date_interval_create_from_date_string(),https://www.w3schools.com/php/func_date_interval_create_from_date_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_interval_create_from_date_string() function sets up a DateInterval from the relative parts of the string.', '', '', '']","[""\n<?php\n  $date = date_create('2019-01-01');date_add($date, \n  date_interval_create_from_date_string('1 year 35 days'));echo date_format($date, \n  'Y-m-d');?>\n"", '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required. Specifies a DateInterval|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_interval_format(),https://www.w3schools.com/php/func_date_interval_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_interval_format() function is an alias of DateInterval::format().The DateInterval::format() function is used to format the interval.\xa0', '', '', '']","['\n<?php\n $date1=date_create(""2013-01-01"");$date2=date_create(""2013-02-10"");\n $diff=date_diff($date1,$date2);// %a outputs the total number of daysecho $diff->format(""Total number of days: %a."");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the format. The following characters can be used in the format parameter string:\n \n% - Literal %\nY - Year, at least 2 digits with leading zero (e.g 03)\ny - Year (e.g 3)\nM - Month, with leading zero (e.g 06)\nm - Month (e.g 6)\nD - Day, with leading zero (e.g 09)\nd - Day (e.g 9)\na - Total number of days as a result of date_diff()\nH - Hours, with leading zero (e.g 08, 23)\nh - Hours (e.g 8, 23)\nI - Minutes, with leading zero (e.g 08, 23)\ni - Minutes (e.g 8, 23)\nS - Seconds, with leading zero (e.g 08, 23)\ns - Seconds (e.g 8, 23)\nF - Microseconds, at least 6 digits (e.g 004403, 235689)\nf - Microseconds (e.g 4403, 235689)\nR - Sign ""-"" when negative, ""+"" when positive\nr - Sign ""-"" when negative, empty when positive\n\nNote: Each format character must be prefixed by a % sign!\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_isodate_set(),https://www.w3schools.com/php/func_date_isodate_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_isodate_set() function sets a date according to the ISO 8601 standard, using weeks and day\noffsets (instead of using a specific date).', '', '', '']","['\n<?php\n $date=date_create();date_isodate_set($date,2013,5);echo date_format($date,""Y-m-d"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&year|||Required. Specifies the year of the date|||&&&week|||Required. Specifies the week of the date|||&&&day|||Optional. Specifies the offset from the first day of the week. Default is 1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_modify(),https://www.w3schools.com/php/func_date_modify.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_modify() function modifies the timestamp.', '', '', '']","['\n<?php\n $date=date_create(""2013-05-01"");date_modify($date,""+15 days"");echo date_format($date,""Y-m-d"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&modify|||Required. Specifies a date/time string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_offset_get(),https://www.w3schools.com/php/func_date_offset_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_offset_get() function returns the timezone offset.', '', '', '']","['\n<?php\n $winter=date_create(""2013-12-31"",timezone_open(""Europe/Oslo""));\n $summer=date_create(""2013-06-30"",timezone_open(""Europe/Oslo""));echo date_offset_get($winter) . "" seconds.<br>"";echo date_offset_get($summer) . "" seconds."";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_parse_from_format(),https://www.w3schools.com/php/func_date_parse_from_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_parse_from_format() function returns an associative array with detailed information about \na specified date, according to the specified format.', '', '', '']","['\n<?php\nprint_r(date_parse_from_format(""mmddyyyy"",""05122013""));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the format (a format accepted by\n date_create_from_format())|||&&&date|||Required. A string that specifies a date|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_parse(),https://www.w3schools.com/php/func_date_date_parse.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_parse() function returns an associative array with detailed information about a specified date.', '', '', '']","['\n<?php\n print_r(date_parse(""2013-05-01 12:30:45.5""));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. Specifies a date (in a format accepted by\n strtotime())|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_sub(),https://www.w3schools.com/php/func_date_date_sub.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_sub() function subtracts some days, months, years, hours, minutes, and seconds from a date.', '', '', '']","['\n<?php\n $date=date_create(""2013-03-15"");\n date_sub($date,date_interval_create_from_date_string(""40 days""));echo date_format($date,""Y-m-d"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&interval|||Required. Specifies a DateInterval object|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_sun_info(),https://www.w3schools.com/php/func_date_sun_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_sun_info() function returns an array containing information about sunset/sunrise \nand twilight begin/end, for a specified day and location.Tip: Look at the date_sunrise() function \nto return the sunrise time for a specified day and location.Tip: Look at the \ndate_sunset() function to return the sunset time for a specified day and location.', '', '', '']","['\n<?php\n $sun_info=date_sun_info(strtotime(""2013-01-01""),31.7667,35.2333);foreach ($sun_info as $key=>$val)\xa0 {\xa0 echo ""$key: "" . date(""H:i:s"",$val) . ""<br>"";\xa0 }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Required. Specifies a timestamp|||&&&latitude|||Required. Specifies the latitude in degrees|||&&&longitude|||Required. Specifies the longitude in degrees|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_sunrise(),https://www.w3schools.com/php/func_date_sunrise.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_sunrise() function returns the sunrise time for a specified day and location.Tip: Look at the date_sunset() function \nto return the sunset time for a specified day and location.', '', '', '']","['\n<?php\n// Lisbon, Portugal:\n// Latitude: 38.4 North, Longitude: 9 West\n// Zenith ~= 90, offset: +1 GMT\necho(""Lisbon, Portugal: Date: "" . date(""D M d Y""));\necho(""<br>Sunrise time: "");\necho(date_sunrise(time(),SUNFUNCS_RET_STRING,38.4,-9,90,1));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Required. Specifies the timestamp of the day from which the sunrise time is taken|||&&&format|||\nOptional. Specifies how to return the result:\n\nSUNFUNCS_RET_STRING (returns the result as string. e.g. 16:46) (This  is default)\nSUNFUNCS_RET_DOUBLE (returns the result as float. e.g. 16.78243132)\nSUNFUNCS_RET_TIMESTAMP (returns the result as integer (timestamp).  e.g. 1095034606)\n\n|||&&&latitude|||Optional. Specifies the latitude of the location. Defaults to North. To specify a value for South, pass in a negative value|||&&&longitude|||Optional. Specifies the longitude of the location. Defaults to East. To specify a value for West, pass in a negative value|||&&&zenith|||Optional. Defaults to date.sunrise_zenith|||&&&gmtoffset|||Optional. Specifies the difference between GMT and local time in hours|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_sunset(),https://www.w3schools.com/php/func_date_sunset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_sunset() function returns the sunset time for a specified day and location.Tip: Look at the date_sunrise() function \nto return the sunrise time for a specified day and location.', '', '', '']","['\n<?php\n// Lisbon, Portugal:\n// Latitude: 38.4 North, Longitude: 9 West\n// Zenith ~= 90, offset: +1 GMT\necho(""Lisbon, Portugal: Date: "" . date(""D M d Y""));\necho(""<br>Sunset time: "");\necho(date_sunset(time(),SUNFUNCS_RET_STRING,38.4,-9,90,1));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Required. Specifies the timestamp of the day from which the sunset time is taken|||&&&format|||\nOptional. Specifies how to return the result:\n\nSUNFUNCS_RET_STRING (returns the result as string. e.g. 16:46) (This  is default)\nSUNFUNCS_RET_DOUBLE (returns the result as float. e.g. 16.78243132)\nSUNFUNCS_RET_TIMESTAMP (returns the result as integer (timestamp).  e.g. 1095034606)\n\n|||&&&latitude|||Optional. Specifies the latitude of the location. Defaults to North. To specify a value for South, pass in a negative value|||&&&longitude|||Optional. Specifies the longitude of the location. Defaults to East. To specify a value for West, pass in a negative value|||&&&zenith|||Optional. Defaults to date.sunset_zenith|||&&&gmtoffset|||Optional. Specifies the difference between GMT and local time in hours|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||date_time_set(),https://www.w3schools.com/php/func_date_time_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_time_set() function sets the time.', '', '', '']","['\n<?php\n $date=date_create(""2013-05-01"");date_time_set($date,13,24);echo date_format($date,""Y-m-d H:i:s"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&hour|||Required. Specifies the hour of the time|||&&&minute|||Required. Specifies the minute of the time|||&&&second|||Optional. Specifies the second of the time. Default is 0|||&&&microseconds|||Optional. Specifies the microsecond of the time. Default is 0|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||date_timestamp_get(),https://www.w3schools.com/php/func_date_timestamp_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_timestamp_get() function returns the Unix timestamp.', '', '', '']","['\n<?php\n $date=date_create();echo date_timestamp_get($date);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_timestamp_set(),https://www.w3schools.com/php/func_date_timestamp_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_timestamp_set() function sets the date and time based on a Unix timestamp.', '', '', '']","['\n<?php\n $date=date_create();date_timestamp_set($date,1371803321);echo date_format($date,""U = Y-m-d H:i:s"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create(). This function modifies this object|||&&&unixtimestamp|||Required. Specifies a Unix timestamp representing the date|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_timezone_get(),https://www.w3schools.com/php/func_date_timezone_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_timezone_get() function returns the time zone of the given DateTime object.', '', '', '']","['\n<?php\n $date=date_create(null,timezone_open(""Europe/Paris""));\n $tz=date_timezone_get($date);echo timezone_name_get($tz);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create().|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||date_timezone_set(),https://www.w3schools.com/php/func_date_timezone_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date_timezone_set() function sets the time zone for the DateTime object.', '', '', '']","['\n<?php\n $date=date_create(""2013-05-25"",timezone_open(""Indian/Kerguelen""));echo date_format($date,""Y-m-d H:i:sP"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTime object returned by\n date_create(). This function modifies this object|||&&&timezone|||Required. Specifies a DateTimeZone object that represents the desired time zone.Tip:\nLook at a list of all supported timezones in PHP|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||date(),https://www.w3schools.com/php/func_date_date.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The date() function formats a local date and time, and returns the formatted date string.', '', '', '']","['\n<?php\n // Prints the dayecho date(""l"") . ""<br>"";// Prints the day, date, month, year, time, AM or PMecho date(""l jS \\of F Y h:i:s A"");?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&format|||Required. Specifies the format of the outputted date string. The following characters can be used:\n    \nd - The day of the month (from 01 to 31)\nD - A textual representation of a day (three letters)\nj - The day of the month without leading zeros (1 to 31)\nl (lowercase 'L') - A full textual representation of a day\nN - The ISO-8601 numeric representation of a day (1 for Monday, 7 for Sunday)\nS - The English ordinal suffix for the day of the month (2 characters st, nd, rd or th. Works well with j)\nw - A numeric representation of the day (0 for Sunday, 6 for Saturday)\nz - The day of the year (from 0 through 365)\nW - The ISO-8601 week number of year (weeks starting on Monday)\nF - A full textual representation of a month (January through December)\nm - A numeric representation of a month (from 01 to 12)\nM - A short textual representation of a month (three letters)\nn - A numeric representation of a month, without leading zeros (1 to 12)\nt - The number of days in the given month\nL - Whether it's a leap year (1 if it is a leap year, 0 otherwise)\no - The ISO-8601 year number\nY - A four digit representation of a year\ny - A two digit representation of a year\na - Lowercase am or pm\nA - Uppercase AM or PM\nB - Swatch Internet time (000 to 999)\ng - 12-hour format of an hour (1 to 12)\nG - 24-hour format of an hour (0 to 23)\nh - 12-hour format of an hour (01 to 12)\nH - 24-hour format of an hour (00 to 23)\ni - Minutes with leading zeros (00 to 59)\ns - Seconds, with leading zeros (00 to 59)\nu - Microseconds (added in PHP 5.2.2)\ne - The timezone identifier (Examples: UTC, GMT, Atlantic/Azores)\nI (capital i) - Whether the date is in daylights savings time (1 if Daylight Savings Time, 0 otherwise)\nO - Difference to Greenwich time (GMT) in hours (Example: +0100)\nP - Difference to Greenwich time (GMT) in hours:minutes (added in  PHP 5.1.3)\nT - Timezone abbreviations (Examples: EST, MDT)\nZ - Timezone offset in seconds. The offset for timezones west of UTC is negative (-43200 to  50400)\nc - The ISO-8601 date (e.g. 2013-05-05T16:34:42+00:00)\nr - The RFC 2822 formatted date (e.g. Fri, 12 Apr 2013 12:01:05 +0200)\nU - The seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\n\nand the following predefined constants can also be used (available since PHP 5.1.0):\n\nDATE_ATOM - Atom (example: 2013-04-12T15:52:01+00:00)\nDATE_COOKIE - HTTP Cookies (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_ISO8601 - ISO-8601 (example: 2013-04-12T15:52:01+0000)\nDATE_RFC822 - RFC 822 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC850 - RFC 850 (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_RFC1036 - RFC 1036 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC1123 - RFC 1123 (example: Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC2822 - RFC 2822 (Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC3339 - Same as DATE_ATOM (since PHP 5.1.3)\nDATE_RSS - RSS (Fri, 12 Aug 2013 15:52:01 +0000)\nDATE_W3C - World Wide Web Consortium (example:  2013-04-12T15:52:01+00:00)\n\n|||&&&timestamp|||Optional. Specifies an integer Unix timestamp. Default is the current local time (time())|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||getdate(),https://www.w3schools.com/php/func_date_getdate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getdate() function returns date/time information of a timestamp or the current local date/time.', '', '', '']","['\n\n<?php\nprint_r(getdate());?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Optional. Specifies an integer Unix timestamp. Default is the current local time (time())|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||gettimeofday(),https://www.w3schools.com/php/func_date_gettimeofday.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gettimeofday() function returns the current time.', '', '', '']","['\n\n<?php\n // Print the array from gettimeofday()print_r(gettimeofday());// Print the float from gettimeofday()echo gettimeofday(true);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&return_float|||Optional. When set to TRUE, a float instead of an array is returned. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||gmdate(),https://www.w3schools.com/php/func_date_gmdate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gmdate() function formats a GMT/UTC date and time, and returns the formatted date string.', '', '', '']","['\n<?php\n // Prints the dayecho gmdate(""l"") . ""<br>"";// Prints the day, date, month, year, time, AM or PMecho gmdate(""l jS \\of F Y h:i:s A"");?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&format|||Required. Specifies the format of the outputted date string. The following characters can be used:\n    \nd - The day of the month (from 01 to 31)\nD - A textual representation of a day (three letters)\nj - The day of the month without leading zeros (1 to 31)\nl (lowercase 'L') - A full textual representation of a day\nN - The ISO-8601 numeric representation of a day (1 for Monday, 7 for Sunday)\nS - The English ordinal suffix for the day of the month (2 characters st, nd, rd or th. Works well with j)\nw - A numeric representation of the day (0 for Sunday, 6 for Saturday)\nz - The day of the year (from 0 through 365)\nW - The ISO-8601 week number of year (weeks starting on Monday)\nF - A full textual representation of a month (January through December)\nm - A numeric representation of a month (from 01 to 12)\nM - A short textual representation of a month (three letters)\nn - A numeric representation of a month, without leading zeros (1 to 12)\nt - The number of days in the given month\nL - Whether it's a leap year (1 if it is a leap year, 0 otherwise)\no - The ISO-8601 year number\nY - A four digit representation of a year\ny - A two digit representation of a year\na - Lowercase am or pm\nA - Uppercase AM or PM\nB - Swatch Internet time (000 to 999)\ng - 12-hour format of an hour (1 to 12)\nG - 24-hour format of an hour (0 to 23)\nh - 12-hour format of an hour (01 to 12)\nH - 24-hour format of an hour (00 to 23)\ni - Minutes with leading zeros (00 to 59)\ns - Seconds, with leading zeros (00 to 59)\nu - Microseconds (added in PHP 5.2.2)\ne - The timezone identifier (Examples: UTC, GMT, Atlantic/Azores)\nI (capital i) - Whether the date is in daylights savings time (1 if Daylight Savings Time, 0 otherwise)\nO - Difference to Greenwich time (GMT) in hours (Example: +0100)\nP - Difference to Greenwich time (GMT) in hours:minutes (added in  PHP 5.1.3)\nT - Timezone abbreviations (Examples: EST, MDT)\nZ - Timezone offset in seconds. The offset for timezones west of UTC is negative (-43200 to  50400)\nc - The ISO-8601 date (e.g. 2013-05-05T16:34:42+00:00)\nr - The RFC 2822 formatted date (e.g. Fri, 12 Apr 2013 12:01:05 +0200)\nU - The seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\n\nand the following predefined constants can also be used (available since PHP 5.1.0):\n\nDATE_ATOM - Atom (example: 2013-04-12T15:52:01+00:00)\nDATE_COOKIE - HTTP Cookies (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_ISO8601 - ISO-8601 (example: 2013-04-12T15:52:01+0000)\nDATE_RFC822 - RFC 822 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC850 - RFC 850 (example: Friday, 12-Apr-13 15:52:01 UTC)\nDATE_RFC1036 - RFC 1036 (example: Fri, 12 Apr 13 15:52:01 +0000)\nDATE_RFC1123 - RFC 1123 (example: Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC2822 - RFC 2822 (Fri, 12 Apr 2013 15:52:01 +0000)\nDATE_RFC3339 - Same as DATE_ATOM (since PHP 5.1.3)\nDATE_RSS - RSS (Fri, 12 Aug 2013 15:52:01 +0000)\nDATE_W3C - World Wide Web Consortium (example:  2013-04-12T15:52:01+00:00)\n\n|||&&&timestamp|||Optional. Specifies an integer Unix timestamp. Default is the current local time (time())|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||gmmktime(),https://www.w3schools.com/php/func_date_gmmktime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gmmktime() function returns the Unix timestamp for a GMT date.Tip: This function is identical to mktime()\nexcept the passed parameters represents a GMT date.', '', '', '']","['\n\n<?php\n // Prints: October 3, 1975 was on a Fridayecho ""Oct 3, 1975 was on a "".date(""l"", gmmktime(0,0,0,10,3,1975));?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&hour|||Optional. Specifies the hour|||&&&minute|||Optional. Specifies the minute|||&&&second|||Optional. Specifies the second|||&&&month|||Optional. Specifies the month|||&&&day|||Optional. Specifies the day|||&&&year|||Optional. Specifies the year|||&&&is_dst|||Optional. Parameters always represent a GMT date so is_dst doesn't influence the result.\n Note: This parameter is removed in PHP 7.0. The new timezone handling features should be used instead|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||gmstrftime(),https://www.w3schools.com/php/func_date_gmstrftime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gmstrftime() function formats a GMT/UTC time and/or date according to locale settings.Tip: Also look at the strftime() function, \nwhich formats a local time and/or date according to locale settings.', '', '', '']","['\n\n<?php\n echo(gmstrftime(""%B %d %Y, %X %Z"",mktime(20,0,0,12,31,98)).""<br>"");\n setlocale(LC_ALL,""hu_HU.UTF8"");echo(gmstrftime(""%Y. %B %d. %A. %X %Z""));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies how to return the result:\n%a - abbreviated weekday name\n%A - full weekday name\n%b - abbreviated month name\n%B - full month name\n%c - preferred date and time representation\n%C - century number (the year divided by 100, range 00 to 99)\n%d - day of the month (01 to 31)\n%D - same as %m/%d/%y\n%e - day of the month (1 to 31)\n%g - like %G, but without the century\n%G - 4-digit year corresponding to the ISO week number (see %V).\n%h - same as %b\n%H - hour, using a 24-hour clock (00 to 23)\n%I - hour, using a 12-hour clock (01 to 12)\n%j - day of the year (001 to 366)\n%m - month (01 to 12)\n%M - minute\n%n - newline character\n%p - either am or pm according to the given time value\n%r - time in a.m. and p.m. notation\n%R - time in 24 hour notation\n%S - second\n%t - tab character\n%T - current time, equal to %H:%M:%S\n%u - weekday as a number (1 to 7), Monday=1. Warning: In Sun Solaris  Sunday=1\n%U - week number of the current year, starting with the first Sunday  as the first day of the first week\n%V - The ISO 8601 week number of the current year (01 to 53), where  week 1 is the first week that has at least 4 days in the current year,  and with Monday as the first day of the week\n%W - week number of the current year, starting with the first Monday  as the first day of the first week\n%w - day of the week as a decimal, Sunday=0\n%x - preferred date representation without the time\n%X - preferred time representation without the date\n%y - year without a century (range 00 to 99)\n%Y - year including the century\n%Z or %z - time zone or name or abbreviation\n%% - a literal % character\n\n|||&&&timestamp|||Optional. Specifies a Unix timestamp that represents the date and/or time to be formatted. Default is the current local time (time())|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||idate(),https://www.w3schools.com/php/func_date_idate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The idate() function formats a local time and/or date as integer.Note: The idate() function accepts just one character in the format parameter!', '', '', '']","['\n<?php\n echo idate(""B"") . ""<br>"";echo idate(""d"") . ""<br>"";echo idate(""h"") . ""<br>"";echo idate(""H"") . ""<br>"";echo idate(""i"") . ""<br>"";echo idate(""I"") . ""<br>"";echo idate(""L"") . ""<br>"";echo idate(""m"") . ""<br>"";echo idate(""s"") . ""<br>"";echo idate(""t"") . ""<br>"";echo idate(""U"") . ""<br>"";echo idate(""w"") . ""<br>"";echo idate(""W"") . ""<br>"";echo idate(""y"") . ""<br>"";echo idate(""Y"") . ""<br>"";echo idate(""z"") . ""<br>"";echo idate(""Z"") . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies how to return the result. One of the following \n    characters is allowed:\nB - Swatch Beat/Internet Time\nd - Day of the month\nh - Hour (12 hour format)\nH - Hour (24 hour format)\ni - Minutes\nI - returns 1 if DST (daylight saving time) is activated, 0  otherwise\nL - returns 1 for leap year, 0 otherwise\nm - Month number\ns - Seconds\nt - Days in current month\nU - Seconds since the Unix Epoch (January 1 1970 00:00:00 GMT)\nw - Day of the week (Sunday=0)\nW - ISO-8601 week number of year (week starts on Monday)\ny - Year (1 or 2 digits)\nY - Year (4 digits)\nz - Day of the year\nZ - Timezone offset in seconds\n\n|||&&&timestamp|||Optional. Specifies a Unix timestamp that represents the date and/or time to be formatted. Default is the current local time (time())|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||localtime(),https://www.w3schools.com/php/func_date_localtime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The localtime() function returns the local time.', '', '', '']","['\n\n<?php\n print_r(localtime());echo ""<br><br>"";\n print_r(localtime(time(),true));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Optional. Specifies a Unix timestamp that defaults to the current local time, time(), if no timestamp is specified|||&&&is_assoc|||Optional. Specifies whether to return an associative or indexed array. FALSE = the array returned is an indexed array. TRUE = the array returned is an associative array. FALSE is default.\nThe keys of the associative array are:\n\n[tm_sec] - seconds\n[tm_min] - minutes\n[tm_hour] - hour\n[tm_mday] - day of the month\n[tm_mon] - month of the year (January=0)\n[tm_year] - Years since 1900\n[tm_wday] - Day of the week (Sunday=0)\n[tm_yday] - Day of the year\n[tm_isdst] - Is daylight savings time in effect\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||microtime(),https://www.w3schools.com/php/func_date_microtime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The microtime() function returns the current Unix timestamp with microseconds.', '', '', '']","['\n<?php\n echo(microtime());?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&return_float|||Optional. When set to TRUE it specifies that the function should return a float, instead of a string. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mktime(),https://www.w3schools.com/php/func_date_mktime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mktime() function returns the Unix timestamp for a date.Tip: This function is identical to gmmktime() except the passed parameters \nrepresents a date (not a GMT date).', '', '', '']","['\n<?php\n // Prints: October 3, 1975 was on a Fridayecho ""Oct 3, 1975 was on a "".date(""l"", mktime(0,0,0,10,3,1975));?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&hour|||Optional. Specifies the hour|||&&&minute|||Optional. Specifies the minute|||&&&second|||Optional. Specifies the second|||&&&month|||Optional. Specifies the month|||&&&day|||Optional. Specifies the day|||&&&year|||Optional. Specifies the year|||&&&is_dst|||Optional. Set this parameter to 1 if the time is during daylight savings time (DST), 0 if it is not, or -1 (the default) if it is unknown. If it's unknown, PHP tries to find out itself (which may cause unexpected results).\n Note: This parameter is removed in PHP 7.0. The new timezone handling features should be used instead|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||strftime(),https://www.w3schools.com/php/func_date_strftime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strftime() function formats a local time and/or date according to locale settings.Tip: Also look at the gmstrftime() function,\nwhich formats a GMT/UTC time and/or date according to locale settings.', '', '', '']","['\n<?php\n echo(strftime(""%B %d %Y, %X %Z"",mktime(20,0,0,12,31,98)).""<br>"");\n setlocale(LC_ALL,""hu_HU.UTF8"");echo(strftime(""%Y. %B %d. %A. %X %Z""));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies how to return the result:\n%a - abbreviated weekday name\n%A - full weekday name\n%b - abbreviated month name\n%B - full month name\n%c - preferred date and time representation\n%C - century number (the year divided by 100, range 00 to 99)\n%d - day of the month (01 to 31)\n%D - same as %m/%d/%y\n%e - day of the month (1 to 31)\n%g - like %G, but without the century\n%G - 4-digit year corresponding to the ISO week number (see %V).\n%h - same as %b\n%H - hour, using a 24-hour clock (00 to 23)\n%I - hour, using a 12-hour clock (01 to 12)\n%j - day of the year (001 to 366)\n%m - month (01 to 12)\n%M - minute\n%n - newline character\n%p - either am or pm according to the given time value\n%r - time in a.m. and p.m. notation\n%R - time in 24 hour notation\n%S - second\n%t - tab character\n%T - current time, equal to %H:%M:%S\n%u - weekday as a number (1 to 7), Monday=1. Warning: In Sun Solaris  Sunday=1\n%U - week number of the current year, starting with the first Sunday  as the first day of the first week\n%V - The ISO 8601 week number of the current year (01 to 53), where  week 1 is the first week that has at least 4 days in the current year,  and with Monday as the first day of the week\n%W - week number of the current year, starting with the first Monday  as the first day of the first week\n%w - day of the week as a decimal, Sunday=0\n%x - preferred date representation without the time\n%X - preferred time representation without the date\n%y - year without a century (range 00 to 99)\n%Y - year including the century\n%Z or %z - time zone or name or abbreviation\n%% - a literal % character\n\n|||&&&timestamp|||Optional. Specifies a Unix timestamp that represents the date and/or time to be formatted. Default is the current local time (time())|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||strptime(),https://www.w3schools.com/php/func_date_strptime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strptime() function parses a time/date generated with strftime().Note: This function is not implemented on Windows platforms!', '', '', '']","['\n<?php\n$format=""%d/%m/%Y %H:%M:%S"";\n$strf=strftime($format);\necho(""$strf"");\nprint_r(strptime($strf,$format));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The string to parse (e.g. returned from strftime())|||&&&format|||Required. Specifies the format used in the date:\n%a - abbreviated weekday name\n%A - full weekday name\n%b - abbreviated month name\n%B - full month name\n%c - preferred date and time representation\n%C - century number (the year divided by 100, range 00 to 99)\n%d - day of the month (01 to 31)\n%D - same as %m/%d/%y\n%e - day of the month (1 to 31)\n%g - like %G, but without the century\n%G - 4-digit year corresponding to the ISO week number (see %V).\n%h - same as %b\n%H - hour, using a 24-hour clock (00 to 23)\n%I - hour, using a 12-hour clock (01 to 12)\n%j - day of the year (001 to 366)\n%m - month (01 to 12)\n%M - minute\n%n - newline character\n%p - either am or pm according to the given time value\n%r - time in a.m. and p.m. notation\n%R - time in 24 hour notation\n%S - second\n%t - tab character\n%T - current time, equal to %H:%M:%S\n%u - weekday as a number (1 to 7), Monday=1. Warning: In Sun Solaris  Sunday=1\n%U - week number of the current year, starting with the first Sunday  as the first day of the first week\n%V - The ISO 8601 week number of the current year (01 to 53), where  week 1 is the first week that has at least 4 days in the current year,  and with Monday as the first day of the week\n%W - week number of the current year, starting with the first Monday  as the first day of the first week\n%w - day of the week as a decimal, Sunday=0\n%x - preferred date representation without the time\n%X - preferred time representation without the date\n%y - year without a century (range 00 to 99)\n%Y - year including the century\n%Z or %z - time zone or name or abbreviation\n%% - a literal % character\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strtotime(),https://www.w3schools.com/php/func_date_strtotime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strtotime() function parses an English textual datetime into a \nUnix timestamp (the number of seconds since January 1 1970 00:00:00 GMT).Note: If the year is specified in a two-digit format,  values between 0-69 are mapped to 2000-2069\nand values between 70-100 are mapped to 1970-2000.Note: Be aware of dates in the m/d/y or d-m-y formats; if \nthe separator is a slash (/), then the American m/d/y is assumed. If the \nseparator is a dash (-) or a dot (.), then the European d-m-y format is assumed. \nTo avoid potential errors, you should YYYY-MM-DD dates or \ndate_create_from_format() when possible.', '', '', '']","['\n<?php\necho(strtotime(""now"") . ""<br>"");\necho(strtotime(""3 October 2005"") . ""<br>"");\necho(strtotime(""+5 hours"") . ""<br>"");\necho(strtotime(""+1 week"") . ""<br>"");\necho(strtotime(""+1 week 3 days 7 hours 5 seconds"") . ""<br>"");\necho(strtotime(""next Monday"") . ""<br>"");\necho(strtotime(""last Sunday""));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&time|||Required. Specifies a date/time string|||&&&now|||Optional. Specifies the timestamp used as a base for the calculation of relative dates|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||time(),https://www.w3schools.com/php/func_date_time.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The time() function returns the current time in the number of seconds since \nthe Unix Epoch (January 1 1970 00:00:00 GMT).', '', '']","['\n<?php\n$t=time();\necho($t . ""<br>"");\n echo(date(""Y-m-d"",$t));?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||timezone_abbreviations_list(),https://www.w3schools.com/php/func_date_timezone_abbreviations_list.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The timezone_abbreviations_list() returns an associative array containing dst, offset, and the timezone name.', '', '']","['\n<?php\n  $tzlist = DateTimeZone::listAbbreviations();print_r($tzlist[""acst""]);?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||timezone_identifiers_list(),https://www.w3schools.com/php/func_date_timezone_identifiers_list.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_identifiers_list() returns an indexed array containing all timezone identifiers.', '', '', '']","['\n<?php\n print_r(timezone_identifiers_list(1));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&what|||Optional. Specifies a DateTimeZone class constant1 = AFRICA2 = AMERICA4 = ANTARCTICA8 = ARCTIC16 = ASIA32 = ATLANTIC\n 64 = AUSTRALIA128 = EUROPE256 = INDIAN512 = PACIFIC1024 = UTC2047 = ALL4095 = ALL_WITH_BC4096 = PER_COUNTRY|||&&&country|||Optional. Specifies a two-letter ISO 3166-1 compatible country code|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||timezone_location_get(),https://www.w3schools.com/php/func_date_timezone_location_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_location_get() returns location information for the given timezone.', '', '', '']","['\n<?php\n $tz=timezone_open(""Asia/Taipei"");\n  print_r(timezone_location_get($tz));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTimeZone object returned by\n timezone_open()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||timezone_name_from_abbr(),https://www.w3schools.com/php/func_date_timezone_name_from_abbr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_name_from_abbr() returns the timezone name from abbreviation.', '', '', '']","['\n<?php\n echo timezone_name_from_abbr(""EST"") . ""<br>"";echo timezone_name_from_abbr("""",7200,0);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&abbr|||Required. Specifies the timezone abbreviation|||&&&gmtoffset|||Optional. Specifies the offset from GMT in seconds. Default is -1, which means that first found timezone corresponding to abbr is returned. Otherwise exact offset is searched. If not found, the first timezone with any offset is returned|||&&&isdst|||\n Optional. Specifies daylight saving time indicator.\n-1 = Default. Whether the timezone has daylight saving or not is not  taken into consideration when searching\n\xa01 = Means that the gmtoffset is an offset with daylight saving in effect\n0 = Means that the gmtoffset is an offset without daylight saving in effect\n  \n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||timezone_name_get(),https://www.w3schools.com/php/func_date_timezone_name_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_name_get() returns the name of the timezone.', '', '', '']","['\n<?php\n $tz=timezone_open(""Europe/Paris"");\n echo timezone_name_get($tz);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTimeZone object|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||timezone_offset_get(),https://www.w3schools.com/php/func_date_timezone_offset_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_offset_get() returns the timezone offset from GMT.', '', '', '']","['\n<?php\n $tz=timezone_open(""Asia/Taipei"");\n $dateTimeOslo=date_create(""now"",timezone_open(""Europe/Oslo""));echo timezone_offset_get($tz,$dateTimeOslo);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required. Specifies a DateTimeZone object returned by\n timezone_open()|||&&&datetime|||Required. Specifies a date/time to compute the offset from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||timezone_open(),https://www.w3schools.com/php/func_date_timezone_open.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_open() creates a new DateTimeZone object.', 'The two functions below are equivalent and any of the functions can be used \nas shown in the example above.Procedural style:Object oriented style:', '', '']","['\n<?php\n $tz=timezone_open(""Europe/Paris"");\n echo timezone_name_get($tz);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&timezone|||Required. Specifies a timezoneTip:\nLook at a list of all supported timezones in PHP|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||timezone_transitions_get(),https://www.w3schools.com/php/func_date_timezone_transitions_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The timezone_transitions_get() returns all transitions for the timezone.', 'The two functions below are equivalent and any of the functions can be used \nas shown in the example above.Procedural style:Object oriented style:', '', '']","['\n<?php\n  $timezone = new DateTimeZone(""Europe/Paris"");\n  // Procedural styleprint_r(reset(timezone_transitions_get($timezone)));\necho ""<br><br>""// Object oriented styleprint_r(reset($timezone->getTransitions()));\n  ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&object|||Required (for procedural style). Specifies a DateTimeZone object|||&&&timestamp_start|||Optional. Begin timestamp|||&&&timestamp_end|||Optional. End timestamp|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||timezone_version_get(),https://www.w3schools.com/php/func_date_timezone_version_get.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The timezone_version_get() function returns the version of the timezonedb.', '', '']","['\n<?php\n echo timezone_version_get();?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||Directory,https://www.w3schools.com/php/php_ref_directory.asp,,"['PHP Directory Introduction', 'Installation', 'PHP Directory Functions']","['The directory functions allow you to retrieve information about directories \nand their contents.', 'The PHP directory functions are part of the PHP core. No installation is required to use these functions.', '']","['', '', '']",[''],['Function|||Description|||&&&chdir()|||Changes the current directory|||&&&chroot()|||Changes the root directory|||&&&closedir()|||Closes a directory handle|||&&&dir()|||Returns an instance of the Directory class|||&&&getcwd()|||Returns the current working directory|||&&&opendir()|||Opens a directory handle|||&&&readdir()|||Returns an entry from a directory handle|||&&&rewinddir()|||Resets a directory handle|||&&&scandir()|||Returns an array of files and directories of a specified directory|||&&&'],[]
php||chdir(),https://www.w3schools.com/php/func_directory_chdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The chdir() function changes the current directory.', '', '', '']","['\n<?php// Get current directory\n echo getcwd() . ""<br>"";// Change directory\n chdir(""images"");// Get current directory\n echo getcwd();\n ?>\n', '\n /home/php/home/php/images\n', '', '']",[''],"['Parameter|||Description|||&&&directory|||Required. Specifies the new current directory|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||chroot(),https://www.w3schools.com/php/func_directory_chroot.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The chroot() function changes the root directory of the current process to\ndirectory, and changes the current working directory to ""/"".Note: This function requires root privileges, and is only \navailable to GNU and BSD systems, and only when using the CLI, CGI or Embed \nSAPI.Note: This function is not implemented on Windows platforms.', '', '', '']","['\n<?php// Change root directory\n chroot(""/path/to/chroot/"");// Get current directory\n echo getcwd();?>', '\n /', '', '']",[''],"['Parameter|||Description|||&&&directory|||Required. Specifies the path to change the root directory to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||closedir(),https://www.w3schools.com/php/func_directory_closedir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The closedir() function closes a directory handle.', '', '', '']","['\n<?php$dir = ""/images/"";// Open a directory, and read its contentsif (is_dir($dir)){\xa0 if ($dh = opendir($dir)){\xa0\xa0\xa0 while (($file = readdir($dh)) !== false){\xa0\xa0\xa0\xa0\xa0 echo ""filename:"" . $file . ""<br>"";\xa0\xa0\xa0\xa0}\xa0\xa0\xa0 closedir($dh);\xa0 }}?>', '\nfilename: cat.gif\nfilename: dog.gif\nfilename: horse.gif\n', '', '']",[''],"['Parameter|||Description|||&&&dir|||Optional. Specifies the directory handle resource previously opened with\n opendir(). If this parameter is not specified, the last link opened by opendir() is assumed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||dir(),https://www.w3schools.com/php/func_directory_dir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dir() function returns an instance of the Directory class. This function \nis used to read a directory, which includes the following:', '', '', '']","['\n <?php $d = dir(getcwd());echo ""Handle: "" . $d->handle . ""<br>"";\n echo ""Path: "" . $d->path . ""<br>"";while (($file = $d->read()) !== false){ \xa0 echo ""filename: "" . $file . ""<br>""; } \n $d->close(); ?>', '\n Handle: Resource id #2Path: /etc/phpfilename: .filename: ..\n filename: ajax.giffilename: books.xmlfilename: cdcatalog.xml\n filename: cd_catalog.xmlfilename: default.aspfilename: demo_array.aspfilename: demo_array.htm...\n ......', '', '']","['Definition and Usage###&&&|||The given directory is opened|||The two properties handle and path of dir() are available|||Both handle and path properties have three methods: read(), rewind(), and close()|||']","['Parameter|||Description|||&&&directory|||Required. Specifies the directory to open|||&&&context|||Optional.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||getcwd(),https://www.w3schools.com/php/func_directory_getcwd.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The getcwd() function returns the current working directory.', '', '']","['\n<?phpecho getcwd();?>\n', '\n /home/php', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||opendir(),https://www.w3schools.com/php/func_directory_opendir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The opendir() function opens a directory handle.', '', '', '']","['\n<?php$dir = ""/images/"";// Open a directory, and read its contentsif (is_dir($dir)){\xa0 if ($dh = opendir($dir)){\xa0\xa0\xa0 while (($file = readdir($dh)) !== false){\xa0\xa0\xa0\xa0\xa0 echo ""filename:"" . $file . ""<br>"";\xa0\xa0\xa0\xa0}\xa0\xa0\xa0 closedir($dh);\xa0 }}?>', '\nfilename: cat.gif\nfilename: dog.gif\nfilename: horse.gif\n', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies the directory path to be opened|||&&&context|||Optional. Specifies the context of the directory handle. Context is a set of options that can modify the behavior of a stream|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||readdir(),https://www.w3schools.com/php/func_directory_readdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The readdir() function returns the name of the next entry in a directory.', '', '', '']","['\n<?php$dir = ""/images/"";// Open a directory, and read its contentsif (is_dir($dir)){\xa0 if ($dh = opendir($dir)){\xa0\xa0\xa0 while (($file = readdir($dh)) !== false){\xa0\xa0\xa0\xa0\xa0 echo ""filename:"" . $file . ""<br>"";\xa0\xa0\xa0\xa0}\xa0\xa0\xa0 closedir($dh);\xa0 }}?>', '\nfilename: cat.gif\nfilename: dog.gif\nfilename: horse.gif\n', '', '']",[''],"['Parameter|||Description|||&&&dir|||Optional. Specifies the directory handle resource previously opened with\n opendir(). If this parameter is not specified, the last link opened by opendir() is assumed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||rewinddir(),https://www.w3schools.com/php/func_directory_rewinddir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rewinddir() function resets the directory handle created by opendir().', '', '', '']","['\n<?php$dir = ""/images/"";// Open a directory, and read its contentsif (is_dir($dir)){\xa0 if ($dh = opendir($dir)){\xa0\xa0\xa0 // List files in images directory\xa0\xa0\xa0 while (($file = readdir($dh)) !== false){\xa0\xa0\xa0\xa0\xa0 echo ""filename:"" . $file . ""<br>"";\xa0\xa0\xa0\xa0}\xa0\xa0\xa0 rewinddir();\xa0\xa0\xa0 // List once again files in images directory\xa0\xa0\xa0 while (($file = readdir($dh)) !== false){\xa0\xa0\xa0\xa0\xa0 echo ""filename:"" . $file . ""<br>"";\xa0\xa0\xa0\xa0}\xa0\xa0\xa0 closedir($dh);\xa0 }}?>', '\nfilename: cat.gif\nfilename: dog.gif\nfilename: horse.giffilename: cat.gif\nfilename: dog.gif\nfilename: horse.gif\n', '', '']",[''],"['Parameter|||Description|||&&&dir|||Optional. Specifies the directory handle resource previously opened with\n opendir(). If this parameter is not specified, the last link opened by opendir() is assumed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||scandir(),https://www.w3schools.com/php/func_directory_scandir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The scandir() function returns an array of files and directories of the specified directory.', '', '', '']","['\n<?php$dir = ""/images/"";// Sort in ascending order - this is default$a = scandir($dir);// Sort in descending order$b = scandir($dir,1);print_r($a);print_r($b);?>', '\n Array([0] => .[1] => ..[2] => cat.gif[3] => dog.gif\n [4] => horse.gif[5] => myimages)Array([0] => myimages[1] => horse.gif[2] => dog.gif[3] => cat.gif[4] => ..[5] => .) \n', '', '']",[''],"['Parameter|||Description|||&&&directory|||Required. Specifies the directory to be scanned|||&&&order|||Optional. Specifies the sorting order. Default sort order is alphabetical in ascending order (0). Set to SCANDIR_SORT_DESCENDING or 1 to sort in alphabetical descending order, or SCANDIR_SORT_NONE to return the result unsorted\xa0 |||&&&context|||Optional. Specifies the context of the directory handle. Context is a set of options that can modify the behavior of a stream|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||Error,https://www.w3schools.com/php/php_ref_error.asp,,"['PHP Error Introduction', 'Installation', 'Runtime Configuration', 'PHP Error and Logging Functions', 'PHP Predefined Error and Logging Constants']","['The error functions are used to deal with error handling and logging.The error functions allow us to define own error handling rules, and modify \nthe way the errors can be logged.The logging functions allow us to send messages \ndirectly to other machines, emails, or system logs.The error reporting functions allow us to customize what level and kind of \nerror feedback is given. ', 'The PHP error functions are part of the PHP core. No installation is required \nto use these functions.', 'The behavior of the error functions is affected by settings in php.ini.Errors and logging configuration options:', '', '']","['', '', '', '', '']",[''],"['Name|||Default|||Description|||Changeable|||&&&error_reporting|||NULL|||Sets the error reporting level (either an integer or\xa0 named constants)|||PHP_INI_ALL|||&&&display_errors|||""1""|||Specifies whether errors should be printed to the screen, or if they should be hidden from the user.Note: This feature should never be used on production systems (only to support your development)|||PHP_INI_ALL|||&&&display_startup_errors|||""0""|||Even when display_errors is on, errors that occur during PHP\'s startup sequence are not displayedNote: It is strongly recommended to keep display_startup_errors off, except for debugging|||PHP_INI_ALL|||&&&log_errors|||""0""|||Defines whether script error messages should be logged to the server\'s error log or error_log. Note: It is strongly advised to use error logging instead of error displaying on production web sites|||PHP_INI_ALL|||&&&log_errors_max_len|||""1024""|||Sets the maximum length of log_errors in bytes. The value ""0"" can be used to not apply any maximum length at all. This length is applied to logged errors, displayed errors, and also to $php_errormsg (available since PHP 4.3)|||PHP_INI_ALL|||&&&ignore_repeated_errors|||""0""|||Specifies whether to log repeated error messages. When set to ""1"" it will not log errors with repeated errors from the same file on the same line (available since PHP 4.3)|||PHP_INI_ALL|||&&&ignore_repeated_source|||""0""|||Specifies whether to log repeated error messages. When set to ""1"" it will not log errors with repeated errors from different files or source lines (available since PHP 4.3)|||PHP_INI_ALL|||&&&report_memleaks|||""1""|||If set to ""1"" (the default), this parameter will show a report of memory leaks detected by the Zend memory manager (available since PHP 4.3)|||PHP_INI_ALL|||&&&track_errors|||""0""|||If set to ""1"", the last error message will always be present in the variable $php_errormsg|||PHP_INI_ALL|||&&&html_errors|||""1""|||Turns off HTML tags in error messages|||PHP_INI_ALLPHP_INI_SYSTEM in PHP <= 4.2.3.|||&&&xmlrpc_errors|||""0""|||Turns off normal error reporting and formats errors as XML-RPC error message (available since PHP 4.1)|||PHP_INI_SYSTEM|||&&&xmlrpc_error_number|||""0""|||Used as the value of the XML-RPC faultCode element (available since PHP 4.1)|||PHP_INI_ALL|||&&&docref_root|||""""|||(available since PHP 4.3)|||PHP_INI_ALL|||&&&docref_ext|||""""|||(available since PHP 4.3.2)|||PHP_INI_ALL|||&&&error_prepend_string|||NULL|||Specifies a string to output before an error message|||PHP_INI_ALL|||&&&error_append_string|||NULL|||Specifies a string to output after an error message|||PHP_INI_ALL|||&&&error_log|||NULL|||Specifies the name of the file where script errors should be logged. The file should be writable by the web server\'s user. If the special value syslog is used, the errors are sent to the system logger instead|||PHP_INI_ALL|||&&&', 'Function|||Description|||&&&debug_backtrace()|||Generates a backtrace|||&&&debug_print_backtrace()|||Prints a backtrace|||&&&error_clear_last()|||Clears the last error|||&&&error_get_last()|||Returns the last error that occurred|||&&&error_log()|||Sends an error message to a log, \nto a file, or to a mail account|||&&&error_reporting()|||Specifies which errors are reported|||&&&restore_error_handler()|||Restores the previous error handler|||&&&restore_exception_handler()|||Restores the previous exception handler|||&&&set_error_handler()|||Sets a user-defined error handler function|||&&&set_exception_handler()|||Sets a user-defined exception handler function|||&&&trigger_error()|||Creates a user-level error message|||&&&user_error()|||Alias of trigger_error()|||&&&', 'Value|||Constant|||Description|||&&&1|||E_ERROR|||Fatal run-time errors. Errors that cannot be recovered from. Execution of the script is halted|||&&&2|||E_WARNING|||Run-time warnings (non-fatal errors). Execution of the script is not halted|||&&&4|||E_PARSE|||Compile-time parse errors. Parse errors should only be generated by the parser|||&&&8|||E_NOTICE|||Run-time notices. The script found something that might be an error, but could also happen when running a script normally|||&&&16|||E_CORE_ERROR|||Fatal errors at PHP startup. This is like E_ERROR, except it is generated by the core of PHP|||&&&32|||E_CORE_WARNING|||Non-fatal errors at PHP startup. This is like E_WARNING, except it is generated by the core of PHP|||&&&64|||E_COMPILE_ERROR|||Fatal compile-time errors. This is like E_ERROR, except it is generated by the Zend Scripting Engine|||&&&128|||E_COMPILE_WARNING|||Non-fatal compile-time errors. This is like E_WARNING, except it is generated by the Zend Scripting Engine|||&&&256|||E_USER_ERROR|||Fatal user-generated error. This is like E_ERROR, except it is generated in PHP code by using the PHP function trigger_error()|||&&&512|||E_USER_WARNING|||Non-fatal user-generated warning. This is like E_WARNING, except it is generated in PHP code by using the PHP function trigger_error()|||&&&1024|||E_USER_NOTICE|||User-generated notice. This is like E_NOTICE, except it is generated in PHP code by using the PHP function trigger_error()|||&&&2048|||E_STRICT|||Enable to have PHP suggest changes to your code which will ensure the best interoperability and forward compatibility of your code (Since PHP 5 but not included in E_ALL until PHP 5.4)|||&&&4096|||E_RECOVERABLE_ERROR|||Catchable fatal error. Indicates that a probably dangerous error occurred, but did not leave the Engine in an unstable state. If the error is not caught by a user defined handle, the application aborts as it was an E_ERROR (Since PHP 5.2)|||&&&8192|||E_DEPRECATED|||Run-time notices. Enable this to receive warnings about code that will not work in future versions (Since PHP 5.3)|||&&&16384|||E_USER_DEPRECATED|||User-generated warning message. This is like E_DEPRECATED, except it is generated in PHP code by using the PHP function trigger_error() (Since PHP 5.3)|||&&&32767|||E_ALL|||Enable all PHP errors and warnings (except E_STRICT in versions < 5.4)|||&&&']",[]
php||debug_backtrace(),https://www.w3schools.com/php/func_error_debug_backtrace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The debug_backtrace() function generates a PHP backtrace.This function displays data from the code that led up to the debug_backtrace() function.Returns an array of associative arrays. The possible returned elements are: ', '', '', '']","['\n<?php\nfunction a($txt) {\n\xa0\xa0\xa0 b(""Glenn"");\n }\nfunction b($txt) {\n\xa0\n\xa0\xa0c(""Cleveland"");}\nfunction c($txt)\xa0{\n\xa0\n\xa0\xa0var_dump(debug_backtrace());\n }\n a(""Peter"");\n?>\n', '', '', '']",[''],"['Name|||Type |||Description|||&&&function|||string|||The current function name|||&&&line|||integer|||The current line number|||&&&file|||string|||The current file name|||&&&class|||string|||The current class name|||&&&object|||object|||The current object|||&&&type|||string|||The current call type. Possible calls:\nReturns: ""->""\xa0 - Method call\nReturns: ""::""\xa0 - Static method call\nReturns nothing - Function call\n\n|||&&&args|||array|||If inside a function, it lists the functions arguments. If inside \nan included file, it lists the included file names |||&&&', 'Parameter|||Description|||&&&options|||Optional. Specifies a bitmask for the following options:DEBUG_BACKTRACE_PROVIDE_OBJECT (Whether or not to populate the ""object"" indexDEBUG_BACKTRACE_IGNORE_ARGS (Whether or not to omit the ""args"" index, and all the function/method arguments, to save memory)|||&&&limit|||Optional. Limits the number of stack frames printed. By default (limit=0) it prints all stack frames |||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||debug_print_backtrace(),https://www.w3schools.com/php/func_error_debug_print_backtrace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The debug_print_backtrace() function prints a PHP backtrace.This function displays data from the code that led up to the debug_print_backtrace() function.', '', '', '']","['\n<?php\nfunction a($txt) {\n\xa0\xa0\xa0 b(""Glenn"");\n }\nfunction b($txt) {\n\xa0\n\xa0\xa0c(""Cleveland"");}\nfunction c($txt)\xa0{\n\xa0\n\xa0\xa0debug_print_backtrace();\n }\n a(""Peter"");\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&options|||Optional. Specifies a bitmask for the following option: DEBUG_BACKTRACE_IGNORE_ARGS (Whether or not to omit the ""args"" index, and all the function/method arguments, to save memory)|||&&&limit|||Optional. Limits the number of stack frames printed. By default (limit=0) it prints all stack frames |||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||error_get_last(),https://www.w3schools.com/php/func_error_get_last.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The error_get_last() function returns the last error that occurred (as an \nassociative array).The associative array contains four keys:', '', '']","['\n<?php\necho $test;\nprint_r(error_get_last());\n?>\n', '', '']",['Definition and Usage###&&&|||[type] - Describes the error type|||[message] - Describes the error message|||[file] - Describes the file where the error occurred|||[line] - Describes the line where the error occurred|||'],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||error_log(),https://www.w3schools.com/php/func_error_log.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The error_log() function sends an error message to a log, to a file, or to a mail account.', '', '', '']","['\n<?php\n // Send error message to the server log if error connecting to the databaseif (!mysqli_connect(""localhost"",""bad_user"",""bad_password"",""my_db"")) {\xa0\xa0\xa0 error_log(""Failed to connect to database!"", 0);}// Send email to administrator if we run out of FOOif (!($foo = allocate_new_foo())) {\xa0\xa0\xa0 error_log(""Oh no! We are out of FOOs!"", 1, ""admin@example.com"");}?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&message|||Required. Specifies the error message to log|||&&&type|||Optional. Specifies where the error message should go.\n Possible values:\n0 - Default. Message is sent to PHP's system logger,  using the OS' system logging mechanism or a file, depending on what the error_log configuration is set  to in php.ini\n1 - Message is sent by email to the address in the destination  parameter \n2 - No longer in use (only available in PHP 3)\n3 - Message is appended to the file specified in destination\n4 - Message is sent directly to the SAPI logging handler\n\n|||&&&destination|||Optional. Specifies the destination of the error message. This value depends on the value of the type parameter|||&&&headers|||Optional. Only used if the type parameter is set to 1. Specifies additional headers, like From, Cc, and Bcc. Multiple headers should be separated with a CRLF (\\r\\n)|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&PHP Changelog:|||&&&']",[]
php||error_reporting(),https://www.w3schools.com/php/func_error_reporting.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The error_reporting() function specifies which errors are reported.PHP has many levels of errors, and using this function sets that level for the current script.', '', '', '']","['\n\n<?php\n// Turn off error reporting\nerror_reporting(0);\n\n// Report runtime errors\nerror_reporting(E_ERROR | E_WARNING | E_PARSE);\n\n// Report all errors\nerror_reporting(E_ALL);// Same as error_reporting(E_ALL);ini_set(""error_reporting"", E_ALL);// Report all errors except E_NOTICE\nerror_reporting(E_ALL & ~E_NOTICE);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&level|||Optional. Specifies the error-report level for the current script. Error numbers and named constants are accepted.\n Note: Named constants are recommended to ensure compatibility for future PHP versions|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||restore_error_handler(),https://www.w3schools.com/php/func_error_restore_error_handler.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The restore_error_handler() function restores the previous error handler.This function is used to restore the previous error handler after changing \nit with the set_error_handler() function. Tip: The previous error handler could be the built-in error handler or \na user-defined error handler function.', '', '']","['\n<?php\n// A user-defined error handler function\nfunction myErrorHandler($errno, $errstr, $errfile, $errline) {\n\xa0\n\xa0\xa0echo ""<b>Custom error:</b> [$errno] $errstr<br>"";\n\xa0\xa0\xa0 echo "" Error on line $errline in $errfile<br>"";\n }\n\n// Set user-defined error handler function\nset_error_handler(""myErrorHandler"");\n\n$test=2;\n\n// Trigger error\nif ($test>1) {\n\xa0\xa0\xa0 trigger_error(""A custom error has been triggered"");\n }\n\n// Restore previous error handler\nrestore_error_handler();\n\n// Trigger error again\nif ($test>1) {\n\xa0\xa0\xa0 trigger_error(""A custom error has been triggered"");\n }?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||restore_exception_handler(),https://www.w3schools.com/php/func_error_restore_exception_handler.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The restore_exception_handler() function restores the previous exception handler.This function is used to restore the previous exception handler after changing \nit with the set_exception_handler() function. Tip: The previous exception handler could be the built-in exception handler or \na user-defined exception handler function.', '', '']","['\n<?php// Two user-defined exception handler functions\nfunction myException1($exception)\n{\n\xa0\xa0\xa0\necho ""["" . __FUNCTION__ . ""]"" . $exception->getMessage();\n}\nfunction myException2($exception)\n{\n\xa0\xa0\xa0\necho ""["" . __FUNCTION__ . ""]"" . $exception->getMessage();\n}\n\nset_exception_handler(""myException1"");set_exception_handler(""myException2"");\nrestore_exception_handler();\n// Throw exceptionthrow new Exception(""This triggers the first exception handler..."");\n ?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||set_error_handler(),https://www.w3schools.com/php/func_error_set_error_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The set_error_handler() function sets a user-defined error handler function.Note: The standard PHP error handler is completely bypassed if this function is used,\nand the user-defined error handler must terminate the script, die(), if necessary.Note: If errors occur before the script is executed the custom error handler cannot be used since it is not registered at that time.', '', '', '']","['\n<?php\n// A user-defined error handler function\nfunction myErrorHandler($errno, $errstr, $errfile, $errline) {\n\xa0\n\xa0\xa0echo ""<b>Custom error:</b> [$errno] $errstr<br>"";\n\xa0\xa0\xa0 echo "" Error on line $errline in $errfile<br>"";\n }\n\n// Set user-defined error handler function\nset_error_handler(""myErrorHandler"");\n\n$test=2;\n\n// Trigger error\nif ($test>1) {\n\xa0\xa0\xa0 trigger_error(""A custom error has been triggered"");\n }\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&errorhandler|||Required. Specifies the name of the function to be run at errors|||&&&E_ALL|E_STRICT|||Optional. Specifies on which error report level the user-defined error will be shown. Default is ""E_ALL""|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||set_exception_handler(),https://www.w3schools.com/php/func_error_set_exception_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The set_exception_handler() function sets a user-defined exception handler function.The script will stop executing after the exception handler is called.', '', '', '']","['\n<?php// A user-defined exception handler function\nfunction myException($exception)\n{\n\xa0\xa0\xa0\necho ""<b>Exception:</b> "", $exception->getMessage();\n}\n\n// Set user-defined exception handler function\nset_exception_handler(""myException"");\n// Throw exceptionthrow new Exception(""Uncaught exception occurred!"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&exceptionhandler|||Required. Specifies the name of the function to be run when an uncaught exception occurs. NULL can be passed instead, to reset this handler to its default state|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||trigger_error(),https://www.w3schools.com/php/func_error_trigger_error.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The trigger_error() function creates a user-level error message.The trigger_error() function can be used with \nthe built-in error handler, or with a user-defined function set by the\nset_error_handler() function.', '', '', '']","['\n<?php\nif ($usernum>10) {\n\xa0\xa0\xa0 trigger_error(""Number cannot be larger than 10"");\n }\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&message|||Required. Specifies the error message for this error. Max 1024 bytes in length|||&&&type|||Optional. Specifies the error type for this error. Possible values:\n \nE_USER_ERROR\nE_USER_WARNING\nE_USER_NOTICE (this is default)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Exception,https://www.w3schools.com/php/php_ref_exception.asp,,['PHP Exception Object'],"['Exceptions are used by functions and methods to send information about errors and\nunexpected behaviour.The Exception object has no public properties, but it has private and protected properties\nwhich can be written to or read from using the constructor and methods.The Exception object has the following methods:']",[''],[''],"['Method|||Description|||&&&Exception()|||The contructor of the Exception object|||&&&getCode()|||Returns the exception code|||&&&getFile()|||Returns the full path of the file in which the exception was thrown|||&&&getMessage()|||Returns a string describing why the exception was thrown|||&&&getLine()|||Returns the line number of the line of code which threw the exception|||&&&getPrevious()|||If this exception was triggered by another one, this method returns the previous exception. If not, then it returns null|||&&&getTrace()|||Returns an array with information about all of the functions that were running at the time the exception was thrown|||&&&getTraceAsString()|||Returns the same information as getTrace(), but in a string|||&&&']",[]
php||Exception,https://www.w3schools.com/php/ref_exception_obj.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Related Pages']","['The Exception() constructor is used to create an Exception object and set some of its\nproperties.', 'Read more about Exceptions in our PHP Exceptions Chapter.', '', '']","['\n<?php...\n  throw new Exception(""Division by zero"", 1);...?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&message|||Optional. A string describing why the exception was thrown|||&&&code|||Optional. An integer that can be used used to easily distinguish this exception from others of the same type|||&&&previous|||Optional. If this exception was thrown in a catch block of another exception, it is recommended to pass that exception into this parameter|||&&&']",[]
php||Exception,https://www.w3schools.com/php/ref_exception_getcode.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['The getCode() method returns an integer which can be used to identify the exception.', 'Read more about Exceptions in our PHP Exceptions Chapter.', '', '']","['\n<?phptry {\xa0 throw new Exception(""An error occurred"", 120);} \n  catch(Exception $e) {\xa0 echo ""Error code: "" . $e->getCode();}?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Exception,https://www.w3schools.com/php/ref_exception_getfile.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['The getFile() method returns the absolute path to the file where an exception occurred.', 'Read more about Exceptions in our PHP Exceptions Chapter.', '', '']","['\n<?phptry {\xa0 throw new Exception(""An error occurred"");} \n  catch(Exception $e) {\xa0 echo ""Error in this file: "" . $e->getFile();\n  }?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Exception,https://www.w3schools.com/php/ref_exception_getmessage.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['The getMessage() method returns a description of the error or behaviour that caused the exception to be thrown.', 'Read more about Exceptions in our PHP Exceptions Chapter.', '', '']","['\n<?phptry {\xa0 throw new Exception(""An error occurred"");} \n  catch(Exception $e) {\xa0 echo $e->getMessage();}?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Exception,https://www.w3schools.com/php/ref_exception_getline.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['The getLine() method returns the line number of the line of code which threw the exception.', 'Read more about Exceptions in our PHP Exceptions Chapter.', '', '']","['\n<?phptry {\xa0 throw new Exception(""An error occurred"");} \n  catch(Exception $e) {\xa0 echo $e->getLine();}?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Exception,https://www.w3schools.com/php/ref_exception_getprevious.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['If the exception was triggered by another one, then the getPrevious() method returns the other exception. Otherwise it returns null.', 'Read more about Exceptions in our PHP Exceptions Chapter.', '', '']","['\n<?phptry {\xa0 try {\xa0\xa0\xa0 throw new Exception(""An \n  error occurred"", 1);\xa0 } catch(Exception $e1) {\xa0\xa0\xa0 \n  throw new Exception(""Another error occurred"", 2, $e1);\xa0 }} \n  catch (Exception $e2) {\xa0 echo $previous = $e2->getPrevious();\xa0 \n  echo $previous->getMessage();}?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Exception,https://www.w3schools.com/php/ref_exception_gettrace.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['The getTrace() method returns a stack trace in the form of an array.Stack traces contain information about all of the functions that are running at a given\nmoment. The stack trace provided by this method has information about the stack at the\ntime that the exception was thrown.', 'Read more about Exceptions in our PHP Exceptions Chapter.PHP Reference: The getTraceAsString() Method.', '', '']","['\n<?phpfunction myFunction($num) {\xa0 throw new Exception(""An error \n  occurred"");}try {\xa0 myFunction(5);} catch (Exception \n  $e) {\xa0 print_r($e->getTrace());}?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Exception,https://www.w3schools.com/php/ref_exception_gettraceasstring.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'Related Pages']","['The getTraceAsString() method returns a stack trace in the form of a string.Stack traces contain information about all of the functions that are running at a given\nmoment. The stack trace provided by this method has information about the stack at the\ntime that the exception was thrown.', 'Read more about Exceptions in our PHP Exceptions Chapter.PHP Reference: The getTrace() Method.', '', '']","['\n<?phpfunction myFunction($num) {\xa0 throw new Exception(""An error \n  occurred"");}try {\xa0 myFunction(5);} catch (Exception \n  $e) {\xa0 print_r($e->getTraceAsString());}?>\n', '', '', '']",[''],['Return Value:|||&&&'],[]
php||Filesystem,https://www.w3schools.com/php/php_ref_filesystem.asp,,"['PHP Filesystem Introduction', 'Installation', 'Unix / Windows Compatibility', 'Runtime Configuration', 'PHP Filesystem Functions']","['The filesystem functions allow you to access and manipulate the filesystem.', 'The filesystem functions are part of the PHP core. There is no installation \nneeded to use these functions.', 'When specifying a path on Unix platforms, a forward slash (/) is used as directory separator.On Windows platforms, both \nforward slash (/) and backslash (\\) can be used.', 'The behavior of the filesystem functions is affected by settings in php.ini.', '']","['', '', '', '', '']",[''],"['Name|||Default|||Description|||Changeable|||&&&allow_url_fopen|||""1""|||Allows fopen()-type functions to work with URLs|||PHP_INI_SYSTEM |||&&&allow_url_include|||""0""|||(available since PHP 5.2)|||PHP_INI_SYSTEM|||&&&user_agent|||NULL|||Defines the user agent for PHP to send (available since PHP 4.3)|||PHP_INI_ALL|||&&&default_socket_timeout|||""60""|||Sets the default timeout, in seconds, for socket based streams (available since PHP 4.3) |||PHP_INI_ALL|||&&&from|||""""|||Defines the email address to be used on unauthenticated FTP connections \n    and in the From header for HTTP connections when using ftp and http wrappers|||PHP_INI_ALL|||&&&auto_detect_line_endings|||""0""|||When set to ""1"", PHP will examine the data read by fgets() and file() to see if it is using Unix, MS-Dos or Mac line-ending characters (available since PHP 4.3)|||PHP_INI_ALL|||&&&sys_temp_dir|||""""|||(available since PHP 5.5)|||PHP_INI_SYSTEM|||&&&', 'Function|||Description|||&&&basename()|||Returns the filename component of a path|||&&&chgrp()|||Changes the file group|||&&&chmod()|||Changes the file mode|||&&&chown()|||Changes the file owner|||&&&clearstatcache()|||Clears the file status cache|||&&&copy()|||Copies a file|||&&&delete()|||See unlink()|||&&&dirname()|||Returns the directory name component of a path|||&&&disk_free_space()|||Returns the free space of a filesystem or disk|||&&&disk_total_space()|||Returns the total size of a filesystem or disk|||&&&diskfreespace()|||Alias of disk_free_space()|||&&&fclose()|||Closes an open file|||&&&feof()|||Checks if the ""end-of-file"" (EOF) has been reached for an open file|||&&&fflush()|||Flushes buffered output to an open file|||&&&fgetc()|||Returns a single character from an open file|||&&&fgetcsv()|||Returns a line from an open CSV file|||&&&fgets()|||Returns a line from an open file|||&&&fgetss()|||Deprecated from PHP 7.3. Returns a line from an open file - stripped \n    from HTML and PHP tags|||&&&file()|||Reads a file into an array|||&&&file_exists()|||Checks whether or not a file or directory exists|||&&&file_get_contents()|||Reads a file into a string|||&&&file_put_contents()|||Writes data to a file|||&&&fileatime()|||Returns the last access time of a file|||&&&filectime()|||Returns the last change time of a file|||&&&filegroup()|||Returns the group ID of a file|||&&&fileinode()|||Returns the inode number of a file|||&&&filemtime()|||Returns the last modification time of a file|||&&&fileowner()|||Returns the user ID (owner) of a file|||&&&fileperms()|||Returns the file\'s permissions|||&&&filesize()|||Returns the file size|||&&&filetype()|||Returns the file type|||&&&flock()|||Locks or releases a file|||&&&fnmatch()|||Matches a filename or string against a specified pattern|||&&&fopen()|||Opens a file or URL|||&&&fpassthru()|||Reads from the current position in a file - until EOF, and writes the result \n    to the output buffer|||&&&fputcsv()|||Formats a line as CSV and writes it to an open file|||&&&fputs()|||Alias of fwrite()|||&&&fread()|||Reads from an open file (binary-safe)|||&&&fscanf()|||Parses input from an open file according to a specified format|||&&&fseek()|||Seeks in an open file|||&&&fstat()|||Returns information about an open file|||&&&ftell()|||Returns the current position in an open file|||&&&ftruncate()|||Truncates an open file to a specified length|||&&&fwrite()|||Writes to an open file (binary-safe)|||&&&glob()|||Returns an array of filenames / directories matching a specified pattern|||&&&is_dir()|||Checks whether a file is a directory|||&&&is_executable()|||Checks whether a file is executable|||&&&is_file()|||Checks whether a file is a regular file|||&&&is_link()|||Checks whether a file is a link|||&&&is_readable()|||Checks whether a file is readable|||&&&is_uploaded_file()|||Checks whether a file was uploaded via HTTP POST|||&&&is_writable()|||Checks whether a file is writable|||&&&is_writeable()|||Alias of is_writable()|||&&&lchgrp()|||Changes the group ownership of a symbolic link|||&&&lchown()|||Changes the user ownership of a symbolic link|||&&&link()|||Creates a hard link|||&&&linkinfo()|||Returns information about a hard link|||&&&lstat()|||Returns information about a file or symbolic link|||&&&mkdir()|||Creates a directory|||&&&move_uploaded_file()|||Moves an uploaded file to a new location|||&&&parse_ini_file()|||Parses a configuration file|||&&&parse_ini_string()|||Parses a configuration string|||&&&pathinfo()|||Returns information about a file path|||&&&pclose()|||Closes a pipe opened by popen()|||&&&popen()|||Opens a pipe|||&&&readfile()|||Reads a file and writes it to the output buffer|||&&&readlink()|||Returns the target of a symbolic link|||&&&realpath()|||Returns the absolute pathname|||&&&realpath_cache_get()|||Returns realpath cache entries|||&&&realpath_cache_size()|||Returns realpath cache size|||&&&rename()|||Renames a file or directory|||&&&rewind()|||Rewinds a file pointer|||&&&rmdir()|||Removes an empty directory|||&&&set_file_buffer()|||Alias of stream_set_write_buffer(). Sets the buffer size for write \n    operations on the given file|||&&&stat()|||Returns information about a file|||&&&symlink()|||Creates a symbolic link|||&&&tempnam()|||Creates a unique temporary file|||&&&tmpfile()|||Creates a unique temporary file|||&&&touch()|||Sets access and modification time of a file|||&&&umask()|||Changes file permissions for files|||&&&unlink()|||Deletes a file|||&&&']",[]
php||basename(),https://www.w3schools.com/php/func_filesystem_basename.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The basename() function returns the filename from a path.', '', '', '']","['\n<?php\n$path = ""/testweb/home.php"";\n\n//Show filenameecho basename($path) .""<br/>"";\n\n//Show filename, but cut off file extension for "".php"" files\necho basename($path,"".php"");\n?> \n', '\nhome.php\nhome\n', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies a file path|||&&&suffix|||Optional. A file extension.\n If the filename has this file extension, the file extension will be cut off|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||chgrp(),https://www.w3schools.com/php/func_filesystem_chgrp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The chgrp() function changes the usergroup of the specified file.', '', '', '']","['\n<?php\nchgrp(""test.txt"",""admin"")\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to change user group for|||&&&group|||Required. Specifies the new group name or number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||chmod(),https://www.w3schools.com/php/func_filesystem_chmod.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The chmod() function changes permissions of the specified file.', '', '', '']","['\n<?php\n// Read and write for owner, nothing for everybody else\nchmod(""test.txt"",0600);\n\n// Read and write for owner, read for everybody else\nchmod(""test.txt"",0644);\n\n// Everything for owner, read and execute for everybody else\nchmod(""test.txt"",0755);\n\n// Everything for owner, read for owner\'s group\nchmod(""test.txt"",0740);\n?> \n', '', '', '']",[''],"[""Parameter|||Description|||&&&file|||Required. Specifies the path to the file|||&&&mode|||Required. Specifies the new permissions.The mode parameter consists of four numbers:\n\nThe first number is always zero\nThe second number specifies permissions for the owner\nThe third number specifies permissions for the owner's user group\nThe fourth number specifies permissions for everybody else\n\nPossible values (to set multiple permissions, add up the following numbers):\n\n1 = execute permissions\n2 = write permissions\n4 = read permissions\n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||chown(),https://www.w3schools.com/php/func_filesystem_chown.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The chown() function changes the owner of the specified file.', '', '', '']","['\n<?php\nchown(""test.txt"",""charles"")\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to change owner for|||&&&owner|||Required. Specifies the new owner. Can be a user name or a user ID.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||clearstatcache(),https://www.w3schools.com/php/func_filesystem_clearstatcache.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Tips and Notes', 'Technical Details']","['The clearstatcache() function clears the file status cache.PHP caches data for some functions for better performance. If a file is \nto be checked several times in a script, you probably want to avoid caching to get \ncorrect results. To do this, use the clearstatcache() function.', 'Tip: Functions that are caching:', '', '', '']","['\n<?php\n//output filesize\necho filesize(""test.txt"");\necho ""<br />"";\n\n$file = fopen(""test.txt"", ""a+"");\n// truncate file\nftruncate($file,100);\nfclose($file);\n\n//Clear cache and check filesize again\nclearstatcache();\necho filesize(""test.txt"");\n?>\n', '\n792\n100\n', '', '', '']",['Tips and Notes###&&&|||stat()|||lstat()|||file_exists()|||is_writable()|||is_readable()|||is_executable()|||is_file()|||is_dir()|||is_link()|||filectime()|||fileatime()|||filemtime()|||fileinode()|||filegroup()|||fileowner()|||filesize()|||filetype()|||fileperms()|||'],"['Parameter|||Description|||&&&clear_realpath_cache|||Optional. Indicates whether to clear the realpath cache or not. Default \n    is FALSE, which indicates not to clear realpath cache|||&&&filename|||Optional. Specifies a filename, and clears the realpath and cache for \n    that file only|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||copy(),https://www.w3schools.com/php/func_filesystem_copy.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The copy() function copies a file.Note: If the to_file file already exists, it will be overwritten.', '', '', '']","['\n<?php\necho copy(""source.txt"",""target.txt"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&from_file|||Required. Specifies the path to the file to copy from|||&&&to_file|||Required. Specifies the path to the file to copy to|||&&&context|||Optional. Specifies a context resource created with \n    stream_context_create()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||delete(),https://www.w3schools.com/php/func_filesystem_delete.asp,,['Definition and Usage'],"['There is no delete() function in PHP.If you need to delete a file, look at the\nunlink() function.']",[''],[''],[],[]
php||dirname(),https://www.w3schools.com/php/func_filesystem_dirname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dirname() function returns the path of the parent directory.', '', '', '']","['\n<?php\necho dirname(""c:/testweb/home.php"") . ""<br />"";echo dirname(""c:/testweb/home.php"", \n  2) . ""<br />"";\necho dirname(""/testweb/home.php"");\n?> \n', '\nc:/testwebc:\n/testweb\n', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies a path to check|||&&&levels|||Optional. An integer that specifies the number of parent directories to \n    go up. Default is 1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&PHP Changelog:|||&&&']",[]
php||disk_free_space(),https://www.w3schools.com/php/func_filesystem_disk_free_space.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The disk_free_space() function returns the free space, in bytes, of the specified filesystem or disk.Tip: Look at the disk_total_space()\nto get the total size of a filesystem or disk.', '', '', '']","['\n<?php\necho disk_free_space(""C:"");\n?> \n', '\n109693288448\n', '', '']",[''],"['Parameter|||Description|||&&&directory|||Required. Specifies the filesystem or disk to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||disk_total_space(),https://www.w3schools.com/php/func_filesystem_disk_total_space.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The disk_total_space() function returns the total size, in bytes, of the \nspecified filesystem or disk.Tip: Look at the\ndisk_free_space() to get the \nfree space of a filesystem or disk.\xa0', '', '', '']","['\n<?php\necho disk_total_space(""C:"");\n?> \n', '\n119990349824\n', '', '']",[''],"['Parameter|||Description|||&&&directory|||Required. Specifies the filesystem or disk to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||diskfreespace(),https://www.w3schools.com/php/func_filesystem_diskfreespace.asp,,['Definition and Usage'],['The diskfreespace() function is an alias of the\ndisk_free_space() function.'],[''],[''],[],[]
php||fclose(),https://www.w3schools.com/php/func_filesystem_fclose.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fclose() function closes an open file pointer.Note: The file must have been opened by \nfopen() or fsockopen().', '', '', '']","['\n<?php\n$file = fopen(""test.txt"", ""r"");\nfclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&filepointer|||Required. Specifies the file to close|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||feof(),https://www.w3schools.com/php/func_filesystem_feof.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The feof() function checks if the ""end-of-file"" (EOF) has been reached \nfor an open file.Tip: This function is useful for looping through data of unknown length.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"", ""r"");\n//Output lines until EOF is reached\nwhile(! feof($file)) {\xa0 $line = fgets($file);\xa0 echo $line. ""<br>"";}\n\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies an open file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fflush(),https://www.w3schools.com/php/func_filesystem_fflush.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fflush() function writes all buffered output to an open file.', '', '', '']","['\n<?php\n $file = fopen(""test.txt"",""r+"");\n  rewind($file);fwrite($file, \'Hello World\');fflush($file);\n  fclose($file);?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to write the buffered output to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fgetc(),https://www.w3schools.com/php/func_filesystem_fgetc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The fgetc() function returns a single character from an open file.Note: This function is slow and should not be used on large files. If \nyou need to read one character at a time from a large file, use \nfgets() to read \ndata one line at a time and then process the line one single character at a time with fgetc().', '', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");\necho fgetc($file);\nfclose($file);\n?> \n', '\n<?php\n$file = fopen(""test.txt"",""r"");\nwhile (! feof($file)) {\n\xa0\xa0echo fgetc($file);\n\xa0\xa0}\nfclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to return a single character from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&']",[]
php||fgetcsv(),https://www.w3schools.com/php/func_filesystem_fgetcsv.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The fgetcsv() function parses a line from an open file, checking for CSV fields.Tip: Also see the fputcsv() function.', '', '', '', '']","['\n<?php\n$file = fopen(""contacts.csv"",""r"");\nprint_r(fgetcsv($file));\nfclose($file);\n?> \n', '\n<?php\n$file = fopen(""contacts.csv"",""r"");\n\nwhile(! feof($file))\n\xa0\xa0{\n\xa0\xa0print_r(fgetcsv($file));\n\xa0\xa0}\n\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to return and parse a line from|||&&&length|||Optional. Specifies the maximum length of a line. Must be greater than the longest line (in characters) in the CSV file. Omitting this parameter (or setting it to 0) the line length is not limited, which is slightly slower. Note: This parameter is required in versions prior to PHP 5|||&&&separator|||Optional. Specifies the field separator. Default is comma ( , )|||&&&enclosure|||Optional. Specifies the field enclosure character. Default is ""|||&&&escape|||Optional. Specifies the escape character. Default is ""\\\\""|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&PHP Changelog:|||&&&']",[]
php||fgets(),https://www.w3schools.com/php/func_filesystem_fgets.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The fgets() function returns a line from an open file.', '', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");\necho fgets($file);\nfclose($file);\n?> \n', '\n<?php\n$file = fopen(""test.txt"",""r"");\n\nwhile(! feof($file))\n\xa0\xa0{\n\xa0\xa0echo fgets($file). ""<br />"";\n\xa0\xa0}\n\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to return a line from|||&&&length|||Optional. Specifies the number of bytes to read. Reading stops when \n    length-1 bytes have been reached, or when a new line occurs, or on \n    EOF. If no length is specified, it reads until end of the line|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&']",[]
php||fgetss(),https://www.w3schools.com/php/func_filesystem_fgetss.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fgetss() function returns a line from an open file - stripped from HTML and PHP tags.', '', '', '']","['\n<?php\n$file = fopen(""test.htm"",""r"");\necho fgetss($file);\nfclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to return a line from|||&&&length|||Optional. Specifies the number of bytes to read. Reading stops when \n    length-1 bytes have been reached, or a when a new line occurs, or on \n    EOF. Note: This parameter is required in versions prior to PHP 5|||&&&tags|||Optional. Specifies which tags that will not be removed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||file(),https://www.w3schools.com/php/func_filesystem_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The file() reads a file into an array.Each array element contains a line from the file, with the newline character still attached.', '', '', '']","['\n<?php\nprint_r(file(""test.txt""));\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to read|||&&&flag|||\n    Optional. Can be one or more of the following constants:\n    \nFILE_USE_INCLUDE_PATH - Search for the file in the include_path (in php.ini)\nFILE_IGNORE_NEW_LINES - Skip the newline at the end of each array \n      element\nFILE_SKIP_EMPTY_LINES - Skip empty lines in the file\n\n|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream. Can be skipped by using NULL.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&']",[]
php||file_exists(),https://www.w3schools.com/php/func_filesystem_file_exists.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The file_exists() function checks whether a file or directory exists.Note: The result of this function is cached. Use \nclearstatcache() to \nclear the cache.', '', '', '']","['\n<?php\necho file_exists(""test.txt"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies the path to the file or directory to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||file_get_contents(),https://www.w3schools.com/php/func_filesystem_file_get_contents.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The file_get_contents() reads a file into a string.This function is the preferred way to read the contents of a file into \na string. It will use memory mapping techniques, if this is supported by the server, to enhance performance.', '', '', '']","['\n<?php\necho file_get_contents(""test.txt"");\n?> \n', '', '', '']",[''],"[""Parameter|||Description|||&&&path|||Required. Specifies the path to the file to read|||&&&include_path|||Optional. Set this parameter to '1' if you want to search for the file in the include_path (in php.ini) as well|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream. Can be skipped by using NULL.|||&&&start|||Optional. Specifies where in the file to start reading. Negative values \n    count from the end of the file|||&&&max_length|||Optional. Specifies the maximum length of data read. Default is read to \n    EOF|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&PHP Changelog:|||&&&']",[]
php||file_put_contents(),https://www.w3schools.com/php/func_filesystem_file_put_contents.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The file_put_contents() writes data to a file.This function follows these rules when accessing a file:Note: Use FILE_APPEND to avoid deleting the existing content of the \nfile.', '', '', '']","['\n<?php\necho file_put_contents(""test.txt"",""Hello World. Testing!"");\n?> \n', '\n21', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to write to. If the file does not exist, this function will create one |||&&&data|||Required. The data to write to the file. Can be a string, array, or a data stream|||&&&mode|||Optional. Specifies how to open/write to the file. Possible values:\nFILE_USE_INCLUDE_PATH - search for filename in the include directory\nFILE_APPEND - if file already exists, append the data to it - instead of \n    overwriting it\nLOCK_EX - Put an exclusive lock on the file while writing to it\n\n|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&PHP Changelog:|||&&&']",[]
php||fileatime(),https://www.w3schools.com/php/func_filesystem_fileatime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fileatime() function returns the last access time of the specified file.Note: The result of this function is cached. Use \nclearstatcache() to \nclear the cache.Note: The atime of a file changes each time the data of a file are \nbeing read. This can decrease the performance if an application accesses a\xa0 \nlarge number of files or directories. Some Unix systems have access time updates disabled \nto increase performance. In this case this function is useless.', '', '', '']","['\n<?php\necho fileatime(""webdictionary.txt"");\necho ""<br>"";\necho ""Last access: "".date(""F d Y H:i:s."", fileatime(""webdictionary.txt""));\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filectime(),https://www.w3schools.com/php/func_filesystem_filectime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filectime() function returns the last time a file was changed.This function checks for inode changes as well as regular changes. Inode \nchanges is when permissions, owner, group or other metadata is changed.Tip: Use the filemtime() function to return the last time the file \ncontent was changed.Note: The result of this function is cached. Use \nclearstatcache() to \nclear the cache.', '', '', '']","['\n<?php\necho filectime(""webdictionary.txt"");\necho ""<br>"";\necho ""Last changed: "".date(""F d Y H:i:s."", filectime(""webdictionary.txt""));\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filegroup(),https://www.w3schools.com/php/func_filesystem_filegroup.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filegroup() function returns the group ID of a file.Tip: Use the posix_getgrgid() function to convert the group ID to a group name.Note: The result of this function is cached. Use \nclearstatcache() to \nclear the cache.', '', '', '']","['\n<?php\necho filegroup(""test.txt"");\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fileinode(),https://www.w3schools.com/php/func_filesystem_fileinode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fileinode() function returns the inode of the specified file.Note: The result of this function is cached. Use \nclearstatcache() to \nclear the cache.', '', '', '']","['\n<?php\necho fileinode(""test.txt"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filemtime(),https://www.w3schools.com/php/func_filesystem_filemtime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filemtime() function returns the last time the file content was modified.Note: The result of this function is cached. Use \nclearstatcache() to \nclear the cache.', '', '', '']","['\n<?php\necho filemtime(""webdictionary.txt"");\necho ""<br>"";\necho ""Content last changed: "".date(""F d Y H:i:s."", filemtime(""webdictionary.txt""));\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fileowner(),https://www.w3schools.com/php/func_filesystem_fileowner.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fileowner() function returns the user ID (owner) of the specified file.Tip: Use posix_getpwuid() to convert the user ID to a user name.Note: The result of this function is cached. Use \nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\necho fileowner(""test.txt"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fileperms(),https://www.w3schools.com/php/func_filesystem_fileperms.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The fileperms() function returns the permissions for a file.Note: The result of this function is cached. Use \nclearstatcache() to clear the cache.', '', '', '', '']","['\n<?php\necho fileperms(""test.txt"");\n?> \n', '\n<?php\necho substr(sprintf(""%o"",fileperms(""test.txt"")),-4);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filesize(),https://www.w3schools.com/php/func_filesystem_filesize.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filesize() function returns the size of a file.Note: The result of this function is cached. Use \nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\necho filesize(""test.txt"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filetype(),https://www.w3schools.com/php/func_filesystem_filetype.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The filetype() function returns the file type of a file.Possible return values:Note: The result of this function is cached. Use \nclearstatcache() to clear the cache.', '', '', '', '']","['\n<?php\necho filetype(""test.txt"");\n?> \n', '\n<?php\necho filetype(""/images/"");\n?> \n', '', '', '']",['Definition and Usage###&&&|||fifo|||char|||dir|||block|||link|||file|||socket|||unknown|||'],"['Parameter|||Description|||&&&filename|||Required. Specifies the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||flock(),https://www.w3schools.com/php/func_filesystem_flock.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The flock() function locks and releases a file.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""w+"");\n\n// exclusive lock\nif (flock($file,LOCK_EX)) {\n\xa0\xa0fwrite($file,""Add some text to the file."");\xa0 \n  fflush($file);\n\xa0\xa0// release lock\n\xa0\xa0flock($file,LOCK_UN);\n  }\nelse {\n\xa0\xa0echo ""Error locking file!"";\n  }\nfclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies an open file to lock or release|||&&&lock|||Required. Specifies what kind of lock to use.Possible values:\n\nLOCK_SH - A shared lock (reader). Allow other processes to access the  file\nLOCK_EX - An exclusive lock (writer). Prevent other  processes from accessing the file\nLOCK_UN - Release the lock\nLOCK_NB - Avoid blocking other processes while locking\n\n|||&&&block|||Optional. Set to 1 to block other processes while locking|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||fnmatch(),https://www.w3schools.com/php/func_filesystem_fnmatch.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fnmatch() function checks if a string or filename matches the given shell \nwildcard pattern.', '', '', '']","['\n<?php\n$txt = ""My car is a dark color"";\nif (fnmatch(""*col[ou]r"",$txt))\n\xa0\xa0{\n\xa0\xa0echo ""hmm..."";\n\xa0\xa0}\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. Specifies the shell wildcard pattern|||&&&string|||Required. Specifies the string or file to check|||&&&flags|||Optional. Can be one or a combination of the following:\n\nFNM_NOESCAPE - Disable backslash escaping\nFNM_PATHNAME - Slash in string only matches slash in the \n      given pattern\nFNM_PERIOD - Leading period in string must be exactly matched \n      by period in pattern\nFNM_CASEFOLD - Caseless match. Part of the GNU extension\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||fopen(),https://www.w3schools.com/php/func_filesystem_fopen.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The fopen() function opens a file or URL.Note: When writing to a text file, be sure to use the correct \nline-ending character! Unix systems use \\n, Windows systems use \\r\\n, and Macintosh \nsystems use \\r as the line ending character.\nWindows offers a translation flag ('t') which will translate \\n to \\r\\n when working with the file. \nYou can also use 'b' to force binary mode. To use \nthese flags, specify either 'b' or 't' as the last character of the mode parameter."", '', '', '']","['\n<?php\n$file = fopen(""test.txt"", ""r"");\n//Output lines until EOF is reached\nwhile(! feof($file)) {\xa0 $line = fgets($file);\xa0 echo $line. ""<br>"";}\n\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the file or URL to open|||&&&mode|||Required. Specifies the type of access you require to the file/stream.Possible values:\n\n""r"" - Read only. Starts at the beginning of the file\n""r+"" - Read/Write. Starts at the beginning of the file\n""w"" - Write only. Opens and truncates the file; or creates a new  file if it doesn\'t exist. \n    Place file pointer at the beginning of the file\n""w+"" - Read/Write. Opens and truncates the file; or creates a new  file if it doesn\'t exist. \n    Place file pointer at the beginning of the file\n""a"" - Write only. Opens and writes to the end of the file or \n    creates a new file if it doesn\'t exist\n""a+"" - Read/Write. Preserves file content by writing to the \n    end of the file\n""x"" - Write only. Creates a new file. Returns FALSE and an \n    error if file already exists\n""x+"" - Read/Write. Creates a new file. Returns FALSE and an \n    error if file already exists\n""c"" - Write only. Opens the file; or creates a new  file if it doesn\'t exist. \n    Place file pointer at the beginning of the file\n""c+"" - Read/Write. Opens the file; or creates a new  file if it doesn\'t exist. \n    Place file pointer at the beginning of the file\n""e"" - Only available in PHP compiled on POSIX.1-2008 conform systems. \n\n|||&&&include_path|||Optional. Set this parameter to \'1\' if you want to search for the file in the include_path (in php.ini) as well|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||fpassthru(),https://www.w3schools.com/php/func_filesystem_fpassthru.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fpassthru() function reads from the current position in a file - until EOF, and \nthen writes the result to the output buffer.Note: When using fpassthru() on a binary file on Windows, remember to open the file in binary mode.Tip: Call rewind() to set the file pointer to the beginning of \nthe file if you have already written to the file.Tip: To just dump the contents of a file to the output buffer, use the\nreadfile() function instead.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");\n// Read first line\nfgets($file);\n\n// Read from the current position in file \n  - until EOF, and then write the result to the output buffer\necho fpassthru($file);\n\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to read from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fputcsv(),https://www.w3schools.com/php/func_filesystem_fputcsv.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fputcsv() function formats a line as CSV and writes it to an open file.Tip: Also see the fgetcsv() function.', '', '', '']","['\n<?php\n$list = array\n(\n\xa0 array(""Peter"", ""Griffin"" ,""Oslo"", ""Norway""),\n\xa0 array(""Glenn"", ""Quagmire"", ""Oslo"", ""Norway"")\n);\n\n$file = fopen(""contacts.csv"",""w"");\nforeach ($list as $line) {\n\xa0\xa0fputcsv($file, $line);\n  }\nfclose($file);?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to write to|||&&&fields |||Required. Specifies which array to get the data from|||&&&separator|||Optional. A character that specifies the field separator. Default is comma ( , )|||&&&enclosure|||Optional. A character that specifies the field enclosure character. Default is ""|||&&&escape|||Optional. Specifies the escape character. Default is ""\\\\"". Can also \n    be an empty string ("""") which disables the escape mechanism|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||fputs(),https://www.w3schools.com/php/func_filesystem_fputs.asp,,['Definition and Usage'],['The fputs() function is an alias of the fwrite() function.'],[''],[''],[],[]
php||fread(),https://www.w3schools.com/php/func_filesystem_fread.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The fread() reads from an open file.The function will stop at the end of the file or when it reaches the specified length, whichever comes first.', '', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");\nfread($file,""10"");\nfclose($file);\n?>\n', '\n<?php\n$file = fopen(""test.txt"",""r"");\nfread($file,filesize(""test.txt""));\nfclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to read from|||&&&length|||Required. Specifies the maximum number of bytes to read|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&']",[]
php||fscanf(),https://www.w3schools.com/php/func_filesystem_fscanf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fscanf() function parses the input from an open file according to the specified format.Note: Any whitespace in the format string matches any whitespace in the input \nstream. This means that a tab (\\t) in the format string can match a single space \ncharacter in the input stream.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the file to check|||&&&format|||Required. Specifies the format.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number\n%e - Scientific notation (e.g. 1.2e+2)\n%u - Unsigned decimal number\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&mixed|||Optional.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fseek(),https://www.w3schools.com/php/func_filesystem_fseek.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fseek() function seeks in an open file.This function moves the file pointer from its current position to a new \nposition, forward or backward, specified by the number of bytes.Tip: You can find the current position by using ftell()!', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");// Read first line\necho fgets($file);// Move back to beginning of filefseek($file,0);\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to seek in|||&&&offset|||Required. Specifies the new position (measured in bytes from the beginning of the file)|||&&&whence|||Optional. Possible values:\nSEEK_SET - Set position equal to offset. Default\nSEEK_CUR - Set position to current location plus offset\nSEEK_END - Set position to EOF plus offset (to move  to a position before EOF, the offset must be a negative value)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fstat(),https://www.w3schools.com/php/func_filesystem_fstat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fstat() function returns information about an open file.Note: The results from this function will differ from server to server. The array \nmay contain the number index, the name index, or both.Tip: This function is similar to stat(), except that with this function the file must be open.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");print_r(fstat($file));\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftell(),https://www.w3schools.com/php/func_filesystem_ftell.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftell() function returns the current position of the read/write pointer in an open file.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");// Print current position\necho ftell($file);\n\n// Change current position\nfseek($file,""15"");\n\n// Print current position again\necho ""<br>"" . ftell($file);\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftruncate(),https://www.w3schools.com/php/func_filesystem_ftruncate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftruncate() function truncates an open file to the specified length.', '', '', '']","['\n<?php\n// Check filesize\necho filesize(""test.txt"");\necho ""<br>"";\n\n$file = fopen(""test.txt"", ""a+"");\nftruncate($file,100);\nfclose($file);\n\n// Clear cache and check filesize again\nclearstatcache();\necho filesize(""test.txt"");\n?> \n', '\n792\n100\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to truncate|||&&&size|||Required. Specifies the new file size|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||fwrite(),https://www.w3schools.com/php/func_filesystem_fwrite.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fwrite() writes to an open file.The function will stop at the end of the file (EOF) or when it reaches the specified length, whichever comes first.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""w"");\necho fwrite($file,""Hello World. Testing!"");\nfclose($file);\n?> \n', '\n21\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file to write to|||&&&string|||Required. Specifies the string to write to the open file|||&&&length|||Optional. Specifies the maximum number of bytes to write|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Binary Safe:|||&&&']",[]
php||glob(),https://www.w3schools.com/php/func_filesystem_glob.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The glob() function returns an array of filenames or directories matching a specified pattern.', '', '', '', '']","['\n<?php\nprint_r(glob(""*.txt""));\n?> \n', '\nArray\n(\n\xa0\n[0] => target.txt\n\xa0\n[1] => source.txt\n\xa0\n[2] => test.txt\n\xa0\n[3] => test2.txt\n)\n', '\n<?php\nprint_r(glob(""*.*""));\n?> \n', '\nArray\n(\n\xa0\n[0] => contacts.csv\n\xa0\n[1] => default.php\n\xa0\n[2] => target.txt\n\xa0\n[3] => source.txt\n\xa0\n[4] => tem1.tmp\n\xa0\n[5] => test.htm\n\xa0\n[6] => test.ini\n\xa0\n[7] => test.php\n\xa0\n[8] => test.txt\n\xa0\n[9] => test2.txt\n)\n', '']",[''],"[""Parameter|||Description|||&&&pattern|||Required. Specifies the pattern to search for|||&&&flags|||Optional. Specifies special settings.Possible values:\n\nGLOB_MARK - Adds a slash to each item returned\nGLOB_NOSORT - Return files as they appear in the directory (unsorted)\nGLOB_NOCHECK - Returns the search pattern if no match were found\nGLOB_NOESCAPE - Backslashes do not quote metacharacters\nGLOB_BRACE - Expands {a,b,c} to match 'a', 'b', or 'c'\nGLOB_ONLYDIR - Return only directories which match the pattern\nGLOB_ERR - (added in PHP 5.1) Stop on errors (errors are ignored by  default)\n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||is_dir(),https://www.w3schools.com/php/func_filesystem_is_dir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_dir() function checks whether the specified filename is a directory.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\n$file = ""images"";\nif(is_dir($file)) {\n\xa0\xa0echo (""$file is a directory"");\n  }\nelse {\n\xa0 echo (""$file is not a directory"");\n  }\n?> \n', '\nimages is a directory\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_executable(),https://www.w3schools.com/php/func_filesystem_is_executable.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_executable() function checks whether the specified filename is executable.Note: The result of this function is cached. Use\nclearstatcache() to \nclear the cache.', '', '', '']","['\n<?php\n$file = ""setup.exe"";\nif(is_executable($file)) {\n\xa0 echo (""$file is executable"");\n  }\nelse {\n\xa0 echo (""$file is not executable"");\n  }\n?>\n', '\nsetup.exe is executable\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_file(),https://www.w3schools.com/php/func_filesystem_is_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_file() function checks whether the specified filename is a regular file.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.\xa0', '', '', '']","['\n<?php\n$file = ""test.txt"";\nif(is_file($file)) {\n\xa0 echo (""$file is a regular file"");\n  } else {\n\xa0 echo (""$file is not a regular file"");\n  }\n?> \n', '\ntest.txt is a regular file\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_link(),https://www.w3schools.com/php/func_filesystem_is_link.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_link() function checks whether the specified filename is a symbolic link.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\n$link = ""images"";\nif(is_link($link)) {\n\xa0\xa0echo (""$link is a link"");\n  } else {\n\xa0 echo (""$link is not a link"");\n  }\n?> \n', '\nimages is not a link\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_readable(),https://www.w3schools.com/php/func_filesystem_is_readable.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_readable() function checks whether the specified filename is readable.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\n$file = ""test.txt"";\nif(is_readable($file)) {\n\xa0 echo (""$file is readable"");\n  } else {\n\xa0\xa0echo (""$file is not readable"")}\n?> \n', '\ntest.txt is readable\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_uploaded_file(),https://www.w3schools.com/php/func_filesystem_is_uploaded_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_uploaded_file() function checks whether the specified file is uploaded via HTTP POST.', '', '', '']","['\n<?php\n$file = ""test.txt"";\nif(is_uploaded_file($file)) {\n\xa0 echo (""$file is uploaded via HTTP POST"");\n  } else {\n\xa0 echo (""$file is not uploaded via HTTP POST"");\n  }\n?> \n', '\ntest.txt is not uploaded via HTTP POST\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_writable(),https://www.w3schools.com/php/func_filesystem_is_writable.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_writable() function checks whether the specified filename is writable.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\n$file = ""test.txt"";\nif(is_writable($file)) {\n\xa0\xa0echo (""$file is writable"");\n  }\nelse {\n\xa0\xa0echo (""$file is not writable"");\n  }\n?> \n', '\ntest.txt is writable\n', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||is_writeable(),https://www.w3schools.com/php/func_filesystem_is_writeable.asp,,['Definition and Usage'],['The is_writeable() function is an alias of the\nis_writable() function.'],[''],[''],[],[]
php||lchgrp(),https://www.w3schools.com/php/func_filesystem_lchgrp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The lchgrp() function changes the group ownership of a symbolic link.Note: This is not an HTML link, but a link in the filesystem.Note: This function does not work on Windows platforms.', '', '', '']","['\n<?php\n  $target = ""downloads.php"";$link = ""downloads"";symlink($target, $link);\nlchgrp($link, 8)?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the symlink|||&&&group|||Required. Specifies the new group by name or number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||lchown(),https://www.w3schools.com/php/func_filesystem_lchown.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The lchown() function changes the user ownership of a symbolic link.Note: This is not an HTML link, but a link in the filesystem.Note: This function does not work on Windows platforms.', '', '', '']","['\n<?php\n  $target = ""downloads.php"";$link = ""downloads"";symlink($target, $link);\nlchown($link, 8)?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the symlink|||&&&group|||Required. Specifies the new user by name or number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||link(),https://www.w3schools.com/php/func_filesystem_link.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The link() function creates a hard link.', '', '', '']","['\n<?php\n  $target = ""text.txt"";$linkname = ""mylink"";link($target, $linkname);\n  ?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&target|||Required. Specifies the target|||&&&link|||Required. Specifies the name of the link|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||linkinfo(),https://www.w3schools.com/php/func_filesystem_linkinfo.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The linkinfo() function returns information about a hard link, and is used to \nverify if a link really exists.', '', '', '']","['\n<?php\n  echo linkinfo(/rubbish);\n  ?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies the path to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||lstat(),https://www.w3schools.com/php/func_filesystem_lstat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The lstat() function returns information about a file or symbolic link.Note: The results from this function will differ from server to server. The array \nmay contain the number index, the name index, or both.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.Tip: This function is similar to stat(), except that if the\nfilename \nparameter is a symbolic link, the status of the symbolic link is returned.', '', '', '']","['\n<?php\nprint_r(lstat(""test.txt""));\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file or a symbolic link to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mkdir(),https://www.w3schools.com/php/func_filesystem_mkdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mkdir() function creates a directory specified by a pathname.', '', '', '']","['\n<?php\nmkdir(""test"");\n  ?> \n', '', '', '']",[''],"[""Parameter|||Description|||&&&path|||Required. Specifies the directory path to create|||&&&mode|||Optional. Specifies permissions. By default, the mode is 0777 (widest possible access).Note: \n    The mode parameters is ignored on Windows platforms!\nThe mode parameter consists of four numbers:\n\nThe first number is always zero\nThe second number specifies permissions for the owner\nThe third number specifies permissions for the owner's user group\nThe fourth number specifies permissions for everybody else \n\nPossible values (to set multiple permissions, add up the following numbers):\n\n1 = execute permissions\n2 = write permissions\n4 = read permissions\n\n|||&&&recursive|||Optional. Specifies if the recursive mode is set (added in PHP 5)|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream (added in PHP 5)|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||move_uploaded_file(),https://www.w3schools.com/php/func_filesystem_move_uploaded_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The move_uploaded_file() function moves an uploaded file to a new destination.Note: This function only works on files uploaded via PHP's HTTP POST upload mechanism.Note: If the destination file already exists, it will be overwritten."", '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the filename of the uploaded file|||&&&dest|||Required. Specifies the new location for the file|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||parse_ini_file(),https://www.w3schools.com/php/func_filesystem_parse_ini_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The parse_ini_file() function parses a configuration (ini) file and returns \nthe settings.Tip: This function can be used to read in your own  \nconfiguration files, and has nothing to do with the php.ini file.Note: The following reserved words must not be used as keys for ini \nfiles: null, yes, no, true, false, on, off, none. Furthermore, the following reserved \ncharacters must not be used in the key: {}|&~!()^"".', '', '', '', '']","['\n[names]\nme = Robert\nyou = Peter\n\n[urls]\nfirst = ""http://www.example.com""\nsecond = ""https://www.w3schools.com""\n', '\n<?php\nprint_r(parse_ini_file(""test.ini""));\n?>\n', '\nArray\n(\n\xa0\n[me] => Robert\n\xa0\n[you] => Peter\n\xa0\n[first] => http://www.example.com\n\xa0\n[second] => https://www.w3schools.com\n)\n', '\n[names]\nme = Robert\nyou = Peter\n\n[urls]\nfirst = ""http://www.example.com""\nsecond = ""https://www.w3schools.com""\n', '\n<?php\nprint_r(parse_ini_file(""test.ini"",true));\n?>\n', '\nArray\n(\n[names] => Array\n\xa0\xa0(\n\xa0\xa0[me] => Robert\n\xa0\xa0[you] => Peter\n\xa0\xa0)\n[urls] => Array\n\xa0\xa0(\n\xa0\xa0[first] => http://www.example.com\n\xa0\xa0[second] => https://www.w3schools.com\n\xa0\xa0)\n)\n']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the ini file to parse|||&&&process_sections|||Optional. If set to TRUE, it returns is a multidimensional array with section names and settings included. Default is FALSE|||&&&scanner_mode|||\nOptional. Can be one of the following values:\n\nINI_SCANNER_NORMAL (default)\nINI_SCANNER_RAW (means option values will not be parsed)\nINI_SCANNER_TYPED (means that boolean, null and integer types are \n      preserved when possible. ""true"", ""on"", ""yes"" are converted to TRUE. \n      ""false"", ""off"", ""no"", ""none"" are converted to FALSE. ""null"" is converted \n      to NULL. Numeric strings are converted to integer type if possible)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||parse_ini_string(),https://www.w3schools.com/php/func_filesystem_parse_ini_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The parse_ini_file() function parses a configuration (ini) string and returns \nthe settings.Tip: This function can be used to read in your own  \nconfiguration files, and has nothing to do with the php.ini file.Note: The following reserved words must not be used as keys for ini \nfiles: null, yes, no, true, false, on, off, none. Furthermore, the following reserved \ncharacters must not be used in the key: {}|&~!()^"".', '', '', '']","['\n  $ini = \'[names]\nme = ""Robert""\nyou = ""Peter""\n\n[urls]\nfirst = ""http://www.example.com""\nsecond = ""https://www.w3schools.com""\n  \';print_r(parse_ini_string($ini));', '\nArray\n(\n[names] => Array\n\xa0\xa0(\n\xa0\xa0[me] => Robert\n\xa0\xa0[you] => Peter\n\xa0\xa0)\n[urls] => Array\n\xa0\xa0(\n\xa0\xa0[first] => http://www.example.com\n\xa0\xa0[second] => https://www.w3schools.com\n\xa0\xa0)\n)\n', '', '']",[''],"['Parameter|||Description|||&&&ini|||Required. Specifies the ini file to parse|||&&&process_sections|||Optional. If set to TRUE, it returns is a multidimensional array with section names and settings included. Default is FALSE|||&&&scanner_mode|||\nOptional. Can be one of the following values:\n\nINI_SCANNER_NORMAL (default)\nINI_SCANNER_RAW (means option values will not be parsed)\nINI_SCANNER_TYPED (means that boolean, null and integer types are \n      preserved when possible. ""true"", ""on"", ""yes"" are converted to TRUE. \n      ""false"", ""off"", ""no"", ""none"" are converted to FALSE. ""null"" is converted \n      to NULL. Numeric strings are converted to integer type if possible)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||pathinfo(),https://www.w3schools.com/php/func_filesystem_pathinfo.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The pathinfo() function returns information about a file path.', '', '', '', '']","['\n<?php\nprint_r(pathinfo(""/testweb/test.txt""));\n?>\n', '\nArray\n(\n[dirname] => /testweb\n[basename] => test.txt\n[extension] => txt\n)\n', '', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies the path to be checked|||&&&options|||Optional. Specifies which array element to return. If not specified, it \n    returns all elements.Possible values:\n\nPATHINFO_DIRNAME - return only dirname\nPATHINFO_BASENAME - return only basename\nPATHINFO_EXTENSION - return only extension\nPATHINFO_FILENAME - return only filename\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||pclose(),https://www.w3schools.com/php/func_filesystem_pclose.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The pclose() function closes a pipe opened by \npopen().', '', '', '']","['\n<?php\n$file = popen(""/bin/ls"",""r"");\n//some code to be executed\npclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pipe|||Required. Specifies the pipe opened by popen()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||popen(),https://www.w3schools.com/php/func_filesystem_popen.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The popen() function opens a pipe to the program specified in the command parameter.', '', '', '']","['\n<?php\n$file = popen(""/bin/ls"",""r"");\n//some code to be executed\npclose($file);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&command|||Required. Specifies the command to execute|||&&&mode|||Required. Specifies the connection mode. Can be ""r"" (Read only) or ""w"" (Write only - opens and clears existing file or creates a new file)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||readfile(),https://www.w3schools.com/php/func_filesystem_readfile.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The readfile() function reads a file and writes it to the output buffer.Tip: You can use a URL as a filename with this function if the fopen \nwrappers have been enabled in the php.ini file.', '', '', '']","['\n<?php\necho readfile(""test.txt"");\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the file to read|||&&&include_path|||Optional. Set this parameter to TRUE if you want to search for the file in the include_path (in php.ini) as well|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||readlink(),https://www.w3schools.com/php/func_filesystem_readlink.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The readlink() function returns the target of a symbolic link.', '', '', '']","['\n<?php\necho readlink(""/user/testlink"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&linkpath|||Required. Specifies the link path to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||realpath(),https://www.w3schools.com/php/func_filesystem_realpath.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The realpath() function returns the absolute pathname.This function removes all symbolic links (like '/./', '/../' and extra '/') \nand returns the absolute pathname."", '', '', '']","['\n<?php\necho realpath(""test.txt"");\n?> \n', '\n\nC:\\Inetpub\\testweb\\test.txt\n\n', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies the path to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||realpath_cache_get(),https://www.w3schools.com/php/func_filesystem_realpath_cache_get.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The realpath_cache_get() function returns realpath cache entries.', '', '']","['\n<?php\n  var_dump(realpath_cache_get());\n?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||realpath_cache_size(),https://www.w3schools.com/php/func_filesystem_realpath_cache_size.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The realpath_cache_size() function returns realpath cache size.', '', '']","['\n<?php\n  var_dump(realpath_cache_size());\n?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||rename(),https://www.w3schools.com/php/func_filesystem_rename.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rename() function renames a file or directory.', '', '', '']","['\n<?php\nrename(""images"",""pictures"");rename(""/test/file1.txt"",""/home/docs/my_file.txt"");\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&old|||Required. Specifies the file or directory to be renamed|||&&&new|||Required. Specifies the new name for the file or directory|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||rewind(),https://www.w3schools.com/php/func_filesystem_rewind.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rewind() function ""rewinds"" the position of the file pointer to the beginning of the file.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""r"");\n\n//Change position of file pointer\nfseek($file,""15"");\n\n//Set file pointer to 0\nrewind($file);\n\nfclose($file);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the open file|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||rmdir(),https://www.w3schools.com/php/func_filesystem_rmdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rmdir() function removes an empty directory.', '', '', '']","['\n<?php\n$path = ""images"";\nif(!rmdir($path)) {\n\xa0\xa0echo (""Could not remove $path"");\n  }\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&dir|||Required. Specifies the path to the directory to be removed|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||set_file_buffer(),https://www.w3schools.com/php/func_filesystem_set_file_buffer.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The set_file_buffer() function specifies the number of bytes to buffer on the \ngiven file.Output using fwrite() is normally buffered at 8K. So, if two processes \nwrites to the same file, each will write up to 8K \nbefore pausing, and allow the other to write. If buffer is 0, write operations are unbuffered \n(meaning that the first write process will be completed before allowing other \nprocesses to write).Tip: This function is an alias of stream_set_write_buffer().', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""w"");\nif ($file) {\n\xa0\xa0set_file_buffer($file,0);\n\xa0\xa0fwrite($file,""Hello World. Testing!"");\n\xa0\xa0fclose($file);\n  }\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies a file pointer|||&&&buffer|||Required. Specifies the number of bytes to buffer|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||stat(),https://www.w3schools.com/php/func_filesystem_stat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The stat() function returns information about a file.Note: The results from this function will differ from server to server. The array \nmay contain the number index, the name index, or both.Note: The result of this function is cached. Use\nclearstatcache() to clear the cache.', '', '', '']","['\n<?php\n  $stat = stat(""test.txt"");\n  echo ""Access time: "" .$stat[""atime""];\necho ""<br>Modification time: "" .$stat[""mtime""];\necho ""<br>Device number: "" .$stat[""dev""];\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||symlink(),https://www.w3schools.com/php/func_filesystem_symlink.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The symlink() function creates a symbolic link from the existing target with the specified name link.Note: This is not an HTML link, but a link in the filesystem.', '', '', '']","['\n<?php\n  $target = ""downloads.php"";$link = ""downloads"";symlink($target, $link);\n  echo readlink($link);\n?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&target|||Required. Specifies the target of the link|||&&&link|||Required. Specifies the link name|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||tempnam(),https://www.w3schools.com/php/func_filesystem_tempnam.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The tempnam() function creates a temporary file with a unique name in the specified directory.Note: If the specified directory does not exist, tempnam() may \ngenerate a file in the system's temporary directory.Tip: See also the tmpfile() \nfunction."", '', '', '']","['\n<?php\necho tempnam(""C:\\inetpub\\testweb"",""TMP0"");\n?> \n', '\nC:\\inetpub\\testweb\\TMP1.tmp\n', '', '']",[''],"['Parameter|||Description|||&&&dir|||Required. Specifies the directory of where to create the temp file|||&&&prefix|||Required. Specifies the start of the filename|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||tmpfile(),https://www.w3schools.com/php/func_filesystem_tmpfile.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The tmpfile() function creates a temporary file with a unique name in read-write (w+) mode.Note: The file is automatically removed when closed, with fclose() or when the script ends.Tip: See also the tempnam() \nfunction.', '', '']","['\n<?php\n$temp = tmpfile();\n\nfwrite($temp, ""Testing, testing."");\n//Rewind to the start of file\nrewind($temp);\n//Read 1k from file\necho fread($temp,1024);\n\n//This removes the file\nfclose($temp);\n?> \n', '\nTesting, testing.\n', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||touch(),https://www.w3schools.com/php/func_filesystem_touch.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The touch() function sets the access and modification time of the specified file.Note: If the specified file does not exist, it will be created.', '', '', '']","['\n<?php\n  filename = ""test.txt"";if (touch($filename)) {\xa0 echo \n  $filename . "" modification time has been changed to present time"";} else {\xa0 \n  echo ""Sorry, could not change modification time of "" . $filename;}\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the file to touch|||&&&time|||Optional. Sets the touch time. The current system time is set by default|||&&&atime|||Optional. Sets the access time. Default is the current system time if no parameters are set, or the same as the time parameter if that parameter is set|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||umask(),https://www.w3schools.com/php/func_filesystem_umask.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The umask() function changes the file permissions for files.This function sets PHP's umask to mask & 0777 and returns the old \numask."", '', '', '']","['\n<?php\n$file = ""test.txt"";\n  echo (umask());\n?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&mask|||Optional. Specifies the new permissions. Default is 0777\n The mask parameter consists of four numbers:\n\nThe first number is always zero  \nThe second number specifies permissions for the owner  \nThe third number specifies permissions for the owner's user group  \nThe fourth number specifies permissions for everybody else \n\nPossible values (to set multiple permissions, add up the following numbers):\n\n1 = execute permissions  \n2 = write permissions  \n4 = read permissions \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||unlink(),https://www.w3schools.com/php/func_filesystem_unlink.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The unlink() function deletes a file.', '', '', '']","['\n<?php\n$file = fopen(""test.txt"",""w"");\necho fwrite($file,""Hello World. Testing!"");\nfclose($file);unlink(""test.txt"");\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the path to the file to delete|||&&&context|||Optional. Specifies the context of the file handle. Context is a set of options that can modify the behavior of a stream |||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||Filter,https://www.w3schools.com/php/php_ref_filter.asp,,"['PHP Filter Introduction', 'Installation', 'Runtime Configurations', 'PHP Filter Functions', 'PHP Predefined Filter Constants']","['This PHP filters is used to validate and filter data coming from insecure sources, \nlike user input.', 'From PHP 5.2.0, the filter functions are enabled by default. There is no installation \nneeded to use these functions.', 'The behavior of these functions is affected by settings in php.ini:', '', '']","['', '', '', '', '']",[''],"['Name|||Description|||Default|||Changeable|||&&&filter.default|||Filter all $_GET, $_POST, $_COOKIE, $_REQUEST and $_SERVER data by this filter. Accepts the name of the filter you like to use by default. See the filter list for the list of the filter names|||""unsafe_raw""|||PHP_INI_PERDIR|||&&&filter.default_flags|||Default flags to apply when the default filter is set. This is set to FILTER_FLAG_NO_ENCODE_QUOTES by default for backwards compatibility reasons|||NULL|||PHP_INI_PERDIR|||&&&', 'Function|||Description|||&&&filter_has_var()|||Checks whether a variable of a specified input type exist|||&&&filter_id()|||Returns the filter ID of a specified filter name|||&&&filter_input()|||Gets an external variable (e.g. from form input) and optionally filters it|||&&&filter_input_array()|||Gets external variables (e.g. from form input) and optionally filters them|||&&&filter_list()|||Returns a list of all supported filter names|||&&&filter_var()|||Filters a variable with a specified filter|||&&&filter_var_array()|||Gets multiple variables and filter them|||&&&', 'Constant|||Description|||&&&INPUT_POST|||POST variables|||&&&INPUT_GET|||GET variables|||&&&INPUT_COOKIE|||COOKIE variables|||&&&INPUT_ENV|||ENV variables|||&&&INPUT_SERVER|||SERVER variables|||&&&FILTER_DEFAULT|||Do nothing, optionally strip/encode special characters. Equivalent to \n  FILTER_UNSAFE_RAW|||&&&FILTER_FLAG_NONE|||Allows no flags|||&&&FILTER_FLAG_ALLOW_OCTAL|||Only for inputs that starts with a zero (0) as octal numbers. This only \n  allows the succeeding digits to be 0-7|||&&&FILTER_FLAG_ALLOW_HEX|||Only for inputs that starts with 0x/0X as hexadecimal numbers. This only \n  allows succeeding characters to be a-fA-F0-9 |||&&&FILTER_FLAG_STRIP_LOW|||Strip characters with ASCII value lower than 32|||&&&FILTER_FLAG_STRIP_HIGH|||Strip characters with ASCII value greater than 127|||&&&FILTER_FLAG_ENCODE_LOW|||Encode characters with ASCII value lower than 32|||&&&FILTER_FLAG_ENCODE_HIGH|||Encode characters with ASCII value greater than 127|||&&&FILTER_FLAG_ENCODE_AMP|||Encode &|||&&&FILTER_FLAG_NO_ENCODE_QUOTES|||Do not encode \' and ""|||&&&FILTER_FLAG_EMPTY_STRING_NULL|||Not in use|||&&&FILTER_FLAG_ALLOW_FRACTION|||Allows a period (.) as a fractional separator in numbers|||&&&FILTER_FLAG_ALLOW_THOUSAND|||Allows a comma (,) as a thousands separator in numbers|||&&&FILTER_FLAG_ALLOW_SCIENTIFIC|||Allows an e or E for scientific notation in numbers|||&&&FILTER_FLAG_PATH_REQUIRED|||The URL must contain a path part|||&&&FILTER_FLAG_QUERY_REQUIRED|||The URL must contain a query string|||&&&FILTER_FLAG_IPV4|||Allows the IP address to be in IPv4 format|||&&&FILTER_FLAG_IPV6|||Allows the IP address to be in IPv6 format|||&&&FILTER_FLAG_NO_RES_RANGE|||Fails validation for the reserved IPv4 ranges: 0.0.0.0/8, 169.254.0.0/16, \n  127.0.0.0/8 and 240.0.0.0/4, and for the reserved IPv6 ranges: ::1/128, \n  ::/128, ::ffff:0:0/96 and fe80::/10|||&&&FILTER_FLAG_NO_PRIV_RANGE|||Fails validation for the private IPv4 ranges: 10.0.0.0/8, 172.16.0.0/12 \n  and 192.168.0.0/16, and for the IPv6 addresses starting with FD or FC|||&&&FILTER_FLAG_EMAIL_UNICODE|||Allows the local part of the email address to contain Unicode characters|||&&&FILTER_REQUIRE_SCALAR|||The value must be a scalar|||&&&FILTER_REQUIRE_ARRAY|||The value must be an array|||&&&FILTER_FORCE_ARRAY|||Treats a scalar value as array with the scalar value as only element|||&&&FILTER_NULL_ON_FAILURE|||Return NULL on failure for unrecognized boolean values|||&&&FILTER_VALIDATE_BOOLEAN|||Validates a boolean|||&&&FILTER_VALIDATE_EMAIL|||Validates value as a valid e-mail address|||&&&FILTER_VALIDATE_FLOAT|||Validates value as float|||&&&FILTER_VALIDATE_INT|||Validates value as integer|||&&&FILTER_VALIDATE_IP|||Validates value as IP address|||&&&FILTER_VALIDATE_MAC|||Validates value as MAC address|||&&&FILTER_VALIDATE_REGEXP|||Validates value against a regular expression|||&&&FILTER_VALIDATE_URL|||Validates value as URL|||&&&FILTER_SANITIZE_EMAIL|||Removes all illegal characters from an e-mail address|||&&&FILTER_SANITIZE_ENCODED|||Removes/Encodes special characters|||&&&FILTER_SANITIZE_MAGIC_QUOTES|||Apply addslashes()|||&&&FILTER_SANITIZE_NUMBER_FLOAT|||Remove all characters, except digits, +- signs, and optionally .,eE|||&&&FILTER_SANITIZE_NUMBER_INT|||Removes all characters except digits and + - signs|||&&&FILTER_SANITIZE_SPECIAL_CHARS|||Removes special characters|||&&&FILTER_SANITIZE_STRING|||Removes tags/special characters from a string|||&&&FILTER_SANITIZE_STRIPPED|||Alias of FILTER_SANITIZE_STRING|||&&&FILTER_SANITIZE_URL|||Removes all illegal character from a URL|||&&&FILTER_UNSAFE_RAW|||Do nothing, optionally strip/encode special characters|||&&&FILTER_CALLBACK|||Call a user-defined function to filter data|||&&&']",[]
php||filter_has_var(),https://www.w3schools.com/php/func_filter_has_var.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filter_has_var() function checks whether a variable of a specified input type exist.This function checks the content received by the PHP page, so the variable \nmust be sent to the page via e.g a querystring.', '', '', '']","['\n <?phpif (!filter_has_var(INPUT_GET, ""email"")) {\xa0\xa0\xa0 echo(""Email not found"");} else {\xa0\xa0\xa0 echo(""Email found"");}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&type|||Required. The input type to check for. Can be one of the following:\n  \nINPUT_GET\nINPUT_POST\nINPUT_COOKIE\nINPUT_SERVER\nINPUT_ENV\n\n|||&&&variable|||Required. The variable name to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filter_id(),https://www.w3schools.com/php/func_filter_id.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The filter_id() function returns filter ID of a specified filter name.', '', '', '', '']","['\n <?phpecho(filter_id(""validate_email""));?>\n', ""\n <table>\xa0 <tr>\xa0\xa0\xa0 <td>Filter Name</td>\xa0\xa0\xa0 <td>Filter ID</td>\xa0 </tr>\xa0 <?php\xa0 foreach (filter_list() as $id =>$filter) {\xa0\xa0\xa0 echo '<tr><td>' . $filter . '</td><td>' . filter_id($filter) . '</td></tr>';\xa0 }?>\n </table>\n"", '', '', '']",[''],"['Parameter|||Description|||&&&filter_name|||Required. The filter name to get the id from. Tip: Use \n    \n  filter_list() to list all available filters|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filter_input(),https://www.w3schools.com/php/func_filter_input.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filter_input() function gets an external variable (e.g. from form input) and optionally filters it.This function is used to validate variables from insecure sources, such as user input.', '', '', '']","['\n <?phpif (!filter_input(INPUT_GET, ""email"", FILTER_VALIDATE_EMAIL)) {\xa0\xa0\xa0 echo(""Email is not valid"");} else {\xa0\xa0\xa0 echo(""Email is valid"");}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&type|||Required. The input type to check for. Can be one of the following:\n  \nINPUT_GET\nINPUT_POST\nINPUT_COOKIE\nINPUT_SERVER\nINPUT_ENV\n\n|||&&&variable|||Required. The variable name to check|||&&&filter|||Optional. Specifies the ID or name of the filter to use. Default is FILTER_DEFAULT, which results in no filtering|||&&&options|||Optional. Specifies one or more flags/options to use. Check each filter for possible options and flags|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filter_input_array(),https://www.w3schools.com/php/func_filter_input_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filter_input_array() function gets external variables (e.g. from form input) and optionally filters them.This function is useful for retrieving/filtering many values instead of \ncalling filter_input() many times.', '', '', '']","['\n<?php\n$filters = array\xa0(\n\xa0\xa0""name"" => array (""filter""=>FILTER_CALLBACK,\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ""flags""=>FILTER_FORCE_ARRAY,\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 ""options""=>""ucwords""\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n\xa0\xa0\xa0),\n\xa0\xa0""age""\xa0\xa0 => array ( ""filter""=>FILTER_VALIDATE_INT,\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n\xa0\xa0\xa0\xa0""options""=>array(""min_range""=>1,""max_range""=>120)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n\xa0\xa0\xa0),\n\xa0\xa0""email"" => FILTER_VALIDATE_EMAIL\n\xa0\xa0);\nprint_r(filter_input_array(INPUT_POST, $filters));\n?>\n', '\nArray\n\xa0\xa0(\n\xa0\xa0[name] => Peter\n\xa0\xa0[age] => 41\n\xa0\xa0[email] => peter@example.com\n\xa0\xa0)\n', '', '']",[''],"['Parameter|||Description|||&&&type|||Required. The input type to check for. Can be one of the following:\n  \nINPUT_GET\nINPUT_POST\nINPUT_COOKIE\nINPUT_SERVER\nINPUT_ENV\n\n|||&&&definition|||Optional. Specifies an array of filter arguments. A valid array key is a variable name, and a valid value is a filter name or ID, or an array specifying the filter, flags and options. This parameter can also be a single filter name/ID; then all values in the input array are filtered by the specified filter|||&&&add_empty|||Optional. A Boolean value. TRUE adds missing keys as NULL to the return value. Default value is TRUE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||filter_list(),https://www.w3schools.com/php/func_filter_list.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The filter_list() function returns a list of all the supported filter names.', '', '', '']","['\n <?phpprint_r(filter_list());?>\n', ""\n <table>\xa0 <tr>\xa0\xa0\xa0 <td>Filter Name</td>\xa0\xa0\xa0 <td>Filter ID</td>\xa0 </tr>\xa0 <?php\xa0 foreach (filter_list() as $id =>$filter) {\xa0\xa0\xa0 echo '<tr><td>' . $filter . '</td><td>' . filter_id($filter) . '</td></tr>';\xa0 }?>\n </table>\n"", '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||filter_var(),https://www.w3schools.com/php/func_filter_var.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The filter_var() function filters a variable with the specified filter.', 'The example below both sanitizes and validates an email address:', '', '', '']","['\n <?php$email = ""john.doe@example.com"";if (filter_var($email, FILTER_VALIDATE_EMAIL)) {\xa0 echo(""$email is a valid email address"");} else {\xa0 echo(""$email is not a valid email address"");}?>\n', '\n <?php$email = ""john.doe@example.com"";// Remove all illegal characters from email$email = filter_var($email, FILTER_SANITIZE_EMAIL);\n// Validate e-mailif (filter_var($email, FILTER_VALIDATE_EMAIL)) {\xa0\xa0\xa0 echo(""$email is a valid email address"");} else {\xa0\xa0\xa0 echo(""$email is not a valid email address"");\n }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&var|||Required. The variable to filter|||&&&filtername|||Optional. Specifies the ID or name of the filter to use. Default is FILTER_DEFAULT, which results in no filtering |||&&&options|||Optional. Specifies one or more flags/options to use. Check each filter for possible options and flags|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||filter_var_array(),https://www.w3schools.com/php/func_filter_var_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The filter_var_array() function gets multiple variables and optionally filters them.This function is useful for filtering many values without calling filter_var() many times.Tip: Check the PHP Filter \nReference for possible filters to use with this function.', '', '', '']","[""\n<?php\n$data = array(\n\xa0\xa0'fullname' => 'Peter Griffin',\n\xa0\xa0'age' => '41',\n\xa0\xa0'email' => 'peter@example.com',\n  );\n  $mydata = filter_var_array($data);\n  var_dump($mydata);\n?>\n"", '\n  array(3) {\xa0 [""fullname""]=>\xa0 string(13) ""Peter Griffin""\xa0 \n  [""age""]=>\xa0 string(2) ""41""\xa0 [""email""]=>\xa0 string(17) \n  ""peter@example.com""}\n', '', '']",[''],"['Parameter|||Description|||&&&data_array|||Required. Specifies an array with string keys  containing the data to filter|||&&&args|||Optional. Specifies an array of filter arguments. A valid array key is a \n    variable name and a valid value is a filter ID, or an array specifying the \n    filter, flags and option. This parameter can also be a single filter ID, if so,\n    all values in the input array are filtered by the specified filter.\n    A filter ID can be an ID name (like FILTER_VALIDATE_EMAIL) or an ID number (like 274)|||&&&add_empty|||Optional. A Boolean value. TRUE adds missing keys as NULL to the return value. Default value is TRUE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||FTP,https://www.w3schools.com/php/php_ref_ftp.asp,,"['PHP FTP Introduction', 'Installation', 'PHP FTP Functions', 'PHP Predefined FTP Constants']","['The FTP functions give client access to file servers through the File \nTransfer Protocol (FTP).The FTP functions are used to open, login and close connections, as well as \nupload, download, rename, delete, and get information on files from file \nservers. Not all of the FTP functions will work with every server or return the \nsame results. The FTP functions became available with PHP 3.If you only \nwish to read from or write to a file on an FTP server, consider using the ftp:// \nwrapper with the Filesystem functions which provide a simpler and more intuitive \ninterface.', 'For these functions to work, you have to compile PHP with --enable-ftp.The Windows version of PHP has built-in support for this extension.', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&ftp_alloc()|||Allocates space for a file to be uploaded to the FTP server|||&&&ftp_cdup()|||Changes to the parent directory on the FTP server|||&&&ftp_chdir()|||Changes the current directory on the FTP server|||&&&ftp_chmod()|||Sets permissions on a file via FTP|||&&&ftp_close()|||Closes an FTP connection|||&&&ftp_connect()|||Opens an FTP connection|||&&&ftp_delete()|||Deletes a file on the FTP server|||&&&ftp_exec()|||Executes a command on the FTP server|||&&&ftp_fget()|||Downloads a file from the FTP server and saves it into an open local file|||&&&ftp_fput()|||Uploads from an open file and saves it to a file on the FTP server|||&&&ftp_get()|||Downloads a file from the FTP server|||&&&ftp_get_option()|||Returns runtime options of the FTP connection|||&&&ftp_login()|||Logs in to the FTP connection|||&&&ftp_mdtm()|||Returns the last modified time of a specified file|||&&&ftp_mkdir()|||Creates a new directory on the FTP server|||&&&ftp_mlsd()|||Returns the list of files in the specified directory|||&&&ftp_nb_continue()|||Continues retrieving/sending a file (non-blocking)|||&&&ftp_nb_fget()|||Downloads a file from the FTP server and saves it into an open file (non-blocking)|||&&&ftp_nb_fput()|||Uploads from an open file and saves it to a file on the FTP server (non-blocking)|||&&&ftp_nb_get()|||Downloads a file from the FTP server (non-blocking)|||&&&ftp_nb_put()|||Uploads a file to the FTP server (non-blocking)|||&&&ftp_nlist()|||Returns a list of files in the specified directory on the FTP server|||&&&ftp_pasv()|||Turns passive mode on or off|||&&&ftp_put()|||Uploads a file to the FTP server|||&&&ftp_pwd()|||Returns the current directory name|||&&&ftp_quit()|||Alias of ftp_close()|||&&&ftp_raw()|||Sends a raw command to the FTP server|||&&&ftp_rawlist()|||Returns a list of files with file information from a specified directory|||&&&ftp_rename()|||Renames a file or directory on the FTP server|||&&&ftp_rmdir()|||Deletes an empty directory on the FTP server|||&&&ftp_set_option()|||Sets runtime options for the FTP connection|||&&&ftp_site()|||Sends an FTP SITE command to the FTP server|||&&&ftp_size()|||Returns the size of the specified file|||&&&ftp_ssl_connect()|||Opens a secure SSL-FTP connection|||&&&ftp_systype()|||Returns the system type identifier of the FTP server|||&&&', 'Constant|||Type|||Description|||&&&FTP_ASCII|||Integer|||\xa0|||&&&FTP_AUTOSEEK|||Integer|||\xa0|||&&&FTP_AUTORESUME|||Integer|||\xa0|||&&&FTP_BINARY|||Integer|||\xa0|||&&&FTP_FAILED|||Integer|||Asynchronous transfer has failed|||&&&FTP_FINISHED|||Integer|||Asynchronous transfer is completed|||&&&FTP_IMAGE|||Integer|||Alias of FTP_BINARY|||&&&FTP_MOREDATA|||Integer|||Asynchronous transfer is in progress|||&&&FTP_TEXT|||Integer|||Alias of FTP_ASCII|||&&&FTP_TIMEOUT_SEC|||Integer|||The timeout used for network operations|||&&&FTP_USEPASVADDRESS|||Boolean|||\xa0|||&&&']",[]
php||ftp_alloc(),https://www.w3schools.com/php/func_ftp_alloc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_alloc() function allocates space for a file to be uploaded to the FTP server.Note: Many FTP servers do not support this command!', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$file = ""/test/myfile"";// allocate spaceif (ftp_alloc($ftp_conn, filesize($file), $result))\xa0 {\xa0 echo ""Space allocated on server. Sending $file."";\xa0 ftp_put($ftp_conn, ""/files/myfile"", $file, FTP_BINARY);\xa0 }else\xa0 {\xa0 echo ""Error! Server said: $result"";\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&filesize|||Required. Specifies the number of bytes to allocate|||&&&result|||Optional. Specifies a variable to store the server response in|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_cdup(),https://www.w3schools.com/php/func_ftp_cdup.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_cdup() function changes to the parent directory on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// change the current directory to php\n ftp_chdir($ftp_conn, ""php"");\n// change to the parent directoryif (ftp_cdup($ftp_conn))\xa0 { \xa0 echo ""Successfully changed to parent directory."";\xa0 }\n else\xa0 {\xa0 echo ""cdup failed."";\xa0 }// output current directory nameecho ftp_pwd($ftp_conn);// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_chdir(),https://www.w3schools.com/php/func_ftp_chdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_chdir() function changes the current directory on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// change the current directory to phpftp_chdir($ftp_conn, ""php"");// output current directory name (/php)\n echo ftp_pwd($ftp_conn);\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&directory|||Required. Specifies the directory to change to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_chmod(),https://www.w3schools.com/php/func_ftp_chmod.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_chmod() function sets permissions on the specified file via FTP.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$file = ""php/test.txt"";\n// Try to set read and write for owner and read for everybody else\n if (ftp_chmod($ftp_conn, 0644, $file) !== false)\xa0 {\xa0 echo ""Successfully chmoded $file to 644."";\xa0 }else\xa0 {\xa0 echo ""chmod failed."";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&mode|||Required. Specifies the new permissions.This parameter consists of four numbers:\n\nThe first number is always zero\nThe second number specifies permissions for the OWNER\nThe third number specifies permissions for the OWNER's USER GROUP\nThe fourth number specifies permissions for EVERYBODY ELSE\n\nPossible values (to set multiple permissions, add up the following numbers):\n\n1 = execute permissions\n2 = write permissions\n4 = read permissions\n\n|||&&&file|||Required. Specifies the file to set permissions on|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_close(),https://www.w3schools.com/php/func_ftp_close.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_close() function closes an FTP connection.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// then do something...// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to close|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_connect(),https://www.w3schools.com/php/func_ftp_connect.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_connect() function opens an FTP connection to the specified host.When the connection is open, you can run FTP functions against the server. ', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// then do something...// close connectionftp_close($ftp_conn); ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&host|||Required. Specifies the FTP server to connect to. Can be a domain address or an IP address. This parameter should not be prefixed with ""ftp://"" or have any trailing slashes|||&&&port|||Optional. Specifies the port of the FTP server. Default is port 21|||&&&timeout|||Optional. Specifies the timeout for all subsequent network operations. Default is 90 seconds|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_delete(),https://www.w3schools.com/php/func_ftp_delete.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_delete() function deletes a file on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$file = ""php/test.txt"";// try to delete fileif (ftp_delete($ftp_conn, $file))\xa0 {\xa0 echo ""$file deleted"";\xa0 }else\xa0 {\xa0 echo ""Could not delete $file"";\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&file|||Required. Specifies the path of the file to delete|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_exec(),https://www.w3schools.com/php/func_ftp_exec.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_exec() function requests for execution of a command on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$command = ""ls-al > somefile.txt"";\n// execute command\nif (ftp_exec($ftp_conn,$command))\n\xa0\xa0{\n\xa0\xa0echo ""$command executed successfully."";\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""Execution of $command failed."";\n\xa0\xa0}\n\n // close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&command|||Required. Specifies the command to execute|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_fget(),https://www.w3schools.com/php/func_ftp_fget.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_fget() function gets (downloads) a file from the FTP server, and saves it into an open local file.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$server_file = ""somefile.txt"";// open local file to write to$local_file = ""local.txt"";$fp = fopen($local_file,""w"");// download server file and save it to open local fileif (ftp_fget($ftp_conn, $fp, $server_file, FTP_ASCII, 0))\xa0 {\xa0 echo ""Successfully written to $local_file."";\xa0 }else\xa0 {\xa0 echo ""Error downloading $server_file."";\xa0 }// close connection and file handlerftp_close($ftp_conn);fclose($fp);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&open_file|||Required. Specifies an open local file in which we store the data|||&&&server_file|||Required. Specifies the server file to download|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start downloading from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_fput(),https://www.w3schools.com/php/func_ftp_fput.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_fput() function uploads from an open file and saves it to a file on the FTP server.', '', '', '']","['\n<?php\n // connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// open file for reading$file = ""test.txt"";$fp = fopen($file,""r"");// upload fileif (ftp_fput($ftp_conn, ""somefile.txt"", $fp, FTP_ASCII))\xa0 {\xa0 echo ""Successfully uploaded $file."";\xa0 }else\xa0 {\xa0 echo ""Error uploading $file."";\xa0 }// close this connection and file handlerftp_close($ftp_conn);\n fclose($fp);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&remote_file|||Required. Specifies the file path to upload to|||&&&open_file|||Required. Specifies an open local file. Reading stops at end of file|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start uploading to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_get(),https://www.w3schools.com/php/func_ftp_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_get() function gets (downloads) a file from the FTP server, and saves it into a local file.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$local_file = ""local.zip"";$server_file = ""server.zip"";// download server fileif (ftp_get($ftp_conn, $local_file, $server_file, FTP_ASCII))\xa0 {\xa0 echo ""Successfully written to $local_file."";\xa0 }else\xa0 {\xa0 echo ""Error downloading $server_file."";\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&local_file|||Required. Specifies the local file path (will be overwritten if the file already exists)|||&&&server_file|||Required. Specifies the server file to download|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start downloading from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_get_option(),https://www.w3schools.com/php/func_ftp_get_option.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_get_option() function returns runtime options of the current FTP connection.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// could return 90echo ftp_get_option($ftp_conn,FTP_TIMEOUT_SEC);\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&option|||Required. Specifies the runtime option to return. Possible values:\nFTP_TIMEOUT_SEC - Returns the timeout used for  network operations\nFTP_AUTOSEEK - Returns TRUE if this option is on, FALSE otherwise\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_login(),https://www.w3schools.com/php/func_ftp_login.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_login() function logs in to the specified FTP connection.', '', '', '']","['\n<?php// connect to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");// loginif (@ftp_login($ftp_conn, $ftp_username, $ftp_userpass))\xa0 {\xa0 echo ""Connection established."";\xa0 }else\xa0 {\xa0 echo ""Couldn\'t establish a connection."";\xa0 }// do something...// close connectionftp_close($ftp_conn); ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&username|||Required. Specifies the username to login with|||&&&password|||Required. Specifies the password to login with|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_mdtm(),https://www.w3schools.com/php/func_ftp_mdtm.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_mdtm() function returns when the specified file was last modified.Note: Not all servers support this function, and this function does not work with directories.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$file = ""somefile.txt"";\n// get the last modified time$lastchanged = ftp_mdtm($ftp_conn, $file);if ($lastchanged != -1)\xa0 {\xa0 echo ""$file was last modified on : "" . date(""F d Y H:i:s."",$lastchanged);\xa0 }\n else\xa0 {\xa0 echo ""Could not get last modified"";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to login to|||&&&file|||Required. Specifies the file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_mkdir(),https://www.w3schools.com/php/func_ftp_mkdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_mkdir() function creates a new directory on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$dir = ""images"";\n// try to create directory $dirif (ftp_mkdir($ftp_conn, $dir))\xa0 {\xa0 echo ""Successfully created $dir"";\xa0 }else\xa0 {\xa0 echo ""Error while creating $dir"";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&dir|||Required. Specifies the name of the directory to create|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_mlsd(),https://www.w3schools.com/php/func_ftp_mlsd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_mlsd() function returns the list of files in the specified directory.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$dir = ""/images"";\n  $dirlist = ftp_mlsd($ftp_conn, $dir);// output directory listecho($dirlist);\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&dir|||Required. Specifies the name of the directory to be listed. Use ""."" to \n    get the current directory|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_nb_continue(),https://www.w3schools.com/php/func_ftp_nb_continue.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_nb_continue() function continues to receive/send a file to the FTP server.', '', '', '']","['\n<?php// initiate download$d = ftp_nb_get($ftp_conn, ""local.txt"", ""server.txt"", FTP_BINARY)while ($d == FTP_MOREDATA)\xa0 {\xa0 // do whatever you want\xa0 // continue downloading\xa0 $d = ftp_nb_continue($ftp_conn);\xa0 }\nif ($d != FTP_FINISHED)\xa0 {\xa0 echo ""Error downloading file."";\xa0 exit(1);\xa0 }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_nb_fget(),https://www.w3schools.com/php/func_ftp_nb_fget.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_nb_fget() function gets (downloads) a file from the FTP server, and saves it \ninto an open local file (non-blocking).Tip: This function (as opposite to\nftp_fget()) \nretrieves the file asynchronously, so you can perform other operations \nwhile the file is being downloaded. \xa0', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$server_file = ""somefile.txt"";// open local file to write to$local_file = ""local.txt"";$fp = fopen($local_file,""w"");// initiate download$d = ftp_nb_fget($ftp_conn, $fp, $server_file, FTP_BINARY)while ($d == FTP_MOREDATA)\xa0 {\xa0 // do whatever you want\xa0 // continue downloading\xa0 $d = ftp_nb_continue($ftp_conn);\xa0 }\nif ($d != FTP_FINISHED)\xa0 {\xa0 echo ""Error downloading $server_file"";\xa0 exit(1);\xa0 }// close connection and file handlerftp_close($ftp_conn);fclose($fp);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&open_file|||Required. Specifies an open local file in which we store the data|||&&&server_file|||Required. Specifies the server file to download|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start downloading from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_nb_fput(),https://www.w3schools.com/php/func_ftp_nb_fput.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_nb_fput() function uploads an open local file to the FTP server (non-blocking).Tip: This function (as opposite to\nftp_fput()) \nretrieves the file asynchronously, so you can perform other operations \nwhile the file is being downloaded.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$server_file = ""serverfile.txt"";// open local file$local_file = ""localfile.txt"";$fp = fopen($local_file,""r"");// initiate upload$d = ftp_nb_fput($ftp_conn, $server_file, $fp, FTP_BINARY)while ($d == FTP_MOREDATA)\xa0 {\xa0 // do whatever you want\xa0 // continue uploading\xa0 $d = ftp_nb_continue($ftp_conn);\xa0 }\nif ($d != FTP_FINISHED)\xa0 {\xa0 echo ""Error uploading $local_file"";\xa0 exit(1);\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&remote_file|||Required. Specifies the file path to upload to|||&&&open_file|||Required. Specifies a pointer to the open local file|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start uploading to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_nb_get(),https://www.w3schools.com/php/func_ftp_nb_get.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_nb_get() function gets (downloads) a file from the FTP server, and saves it \ninto a local file (non-blocking).Tip: This function (as opposite to\nftp_get()) \nretrieves the file asynchronously, so you can perform other operations \nwhile the file is being downloaded. ', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$local_file = ""local.zip"";$server_file = ""server.zip"";// initiate download$d = ftp_nb_get($ftp_conn, $local_file, $server_file, FTP_ASCII)while ($d == FTP_MOREDATA)\xa0 {\xa0 // do whatever you want\xa0 // continue downloading\xa0 $d = ftp_nb_continue($ftp_conn);\xa0 }\nif ($d != FTP_FINISHED)\xa0 {\xa0 echo ""Error downloading $server_file"";\xa0 exit(1);\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&local_file|||Required. Specifies the local file path (will be overwritten if the file already exists)|||&&&server_file|||Required. Specifies the server file to download|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start downloading from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_nb_put(),https://www.w3schools.com/php/func_ftp_nb_put.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_nb_put() function uploads a file to the FTP server (non-blocking).Tip: This function (as opposite to\nftp_put()) \nretrieves the file asynchronously, so you can perform other operations \nwhile the file is being downloaded. \xa0\xa0', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$local_file = ""localfile.txt"";$server_file = ""serverfile.txt"";// initiate upload$d = ftp_nb_put($ftp_conn, $server_file, $local_file, FTP_BINARY)while ($d == FTP_MOREDATA)\xa0 {\xa0 // do whatever you want\xa0 // continue uploading\xa0 $d = ftp_nb_continue($ftp_conn);\xa0 }\nif ($d != FTP_FINISHED)\xa0 {\xa0 echo ""Error uploading $local_file"";\xa0 exit(1);\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&remote_file|||Required. Specifies the file path to upload to|||&&&local_file|||Required. Specifies the path of the local file to upload|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start uploading to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_nlist(),https://www.w3schools.com/php/func_ftp_nlist.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_nlist() function returns a list of files in the specified directory on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// get file list of current directory$file_list = ftp_nlist($ftp_conn, ""."");var_dump($file_list);// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&dir|||Required. Specifies the directory to be listed. Use ""."" to get the current directory|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_pasv(),https://www.w3schools.com/php/func_ftp_pasv.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_pasv() function turns passive mode on or off.In passive mode, data connections are initiated by the client, \nnot the server. This is useful if the client is behind a firewall.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// turn passive mode onftp_pasv($ftp_conn, true);$file = ""localfile.txt"";// upload fileif (ftp_put($ftp_conn, ""serverfile.txt"", $file, FTP_ASCII))\xa0 {\xa0 echo ""Successfully uploaded $file."";\xa0 }else\xa0 {\xa0 echo ""Error uploading $file."";\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&pasv|||Required. Specifies the passive mode. Possible values:\nTRUE (passive mode on)\nFALSE (passive mode off)\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_put(),https://www.w3schools.com/php/func_ftp_put.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_put() function uploads a file to the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$file = ""localfile.txt"";// upload fileif (ftp_put($ftp_conn, ""serverfile.txt"", $file, FTP_ASCII))\xa0 {\xa0 echo ""Successfully uploaded $file."";\xa0 }else\xa0 {\xa0 echo ""Error uploading $file."";\xa0 }// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&remote_file|||Required. Specifies the file path to upload to|||&&&local_file|||Required. Specifies the path of the file to upload|||&&&mode|||Optional. Specifies the transfer mode. Possible values: FTP_ASCII or FTP_BINARY|||&&&startpos|||Optional. Specifies the position in the remote file to start uploading to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_pwd(),https://www.w3schools.com/php/func_ftp_pwd.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_pwd() function returns the current directory name.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// change the current directory to phpftp_chdir($ftp_conn, ""php"");// output current directory name (/php)\n echo ftp_pwd($ftp_conn);\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_quit(),https://www.w3schools.com/php/func_ftp_quit.asp,,['Definition and Usage'],['The ftp_quit() function is an alias of ftp_close().'],[''],[''],[],[]
php||ftp_raw(),https://www.w3schools.com/php/func_ftp_raw.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_raw() function sends a raw command to the FTP server.', '', '', '']","['\n<?php// connect to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");// the two lines below is the same as: ftp_login($ftp_conn,""john"",""secretpassword"");\n ftp_raw($ftp_conn, ""USER john"");ftp_raw($ftp_conn, ""PASS secretpassword"");?>', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&command|||Required. Specifies the command to execute|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_rawlist(),https://www.w3schools.com/php/func_ftp_rawlist.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_rawlist() function returns a list of files with file information \n(from a specified directory on the FTP server).', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// get the file list for /$filelist = ftp_rawlist($ftp_conn, ""/"");// close connectionftp_close($ftp_conn);\n// output $filelistvar_dump($filelist);?>\n', '\narray(3) \n{\n[0] => string(57) ""drw-rw-rw- 1 user group 0 Jan 03 08:33 images""\n[1] => string(62) ""-rw-rw-rw- 1 user group 160 Feb 16 13:54 php""\n[2] => string(75) ""-rw-rw-rw- 1 user group 20 Feb 14 12:22 test""\n} \n', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&dir|||Required. Specifies the directory path. May include arguments for the LIST command. Tip: Use ""."" to specify the current directory|||&&&recursive|||Optional. By default, this function sends a ""LIST"" command to the server. However, if the recursive parameter is set to TRUE, it sends a ""LIST -R"" command|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_rename(),https://www.w3schools.com/php/func_ftp_rename.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_rename() function renames a file or directory on the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$old_file = ""oldfile.txt"";\n $new_file = ""newfile.txt"";// try to rename $old_file to $new_file\n if (ftp_rename($ftp_conn, $old_file, $new_file))\xa0 {\xa0 echo ""Renamed $old_file to $new_file"";\xa0 }else\xa0 {\xa0 echo ""Problem renaming $old_file to $new_file"";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&oldname|||Required. Specifies the file or directory to rename|||&&&newname|||Required. Specifies the new name of the file or directory|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_rmdir(),https://www.w3schools.com/php/func_ftp_rmdir.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_rmdir() function deletes a directory on the FTP server.Note: A directory must be empty before it can be deleted!Tip: Use the ftp_mkdir() \nfunction to create a new directory.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$dir = ""php/"";\n// try to delete $dir\n if (ftp_rmdir($ftp_conn, $dir))\xa0 {\xa0 echo ""Directory $dir deleted"";\xa0 }else\xa0 {\xa0 echo ""Problem deleting $dir"";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&dir|||Required. Specifies the empty directory to delete|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_set_option(),https://www.w3schools.com/php/func_ftp_set_option.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_set_option() function sets runtime options of the current FTP connection.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// set network operation timeout to 120 secondsecho ftp_set_option($ftp_conn,FTP_TIMEOUT_SEC,120);\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&option|||Required. Specifies the runtime option to set. Possible values:\nFTP_TIMEOUT_SEC\nFTP_AUTOSEEK\nFTP_USEPASVADDRESS\n\n|||&&&value|||Required. Specifies the value of the option parameter|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_site(),https://www.w3schools.com/php/func_ftp_site.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_site() function sends a SITE command to the FTP server.Note: SITE commands vary from server to server. \nThey are useful for handling OS specific features such as file permissions and group membership.Tip: To see what SITE commands are available, send the REMOTEHELP command using \nthe ftp_raw() function.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// try to send SITE command\n if (ftp_site($ftp_conn, ""chmod 777 serverfile.txt""))\xa0 {\xa0 echo ""Command executed successfully"";\xa0 }else\xa0 {\xa0 echo ""Command failed"";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&command|||Required. Specifies the SITE command (this parameter is not escaped)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_size(),https://www.w3schools.com/php/func_ftp_size.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_size() function returns the size of a specified file on the FTP server.Note: Not all FTP servers support this function!', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);$file = ""serverfile.txt"";\n// get size of $file$fsize = ftp_size($ftp_conn, $file);if ($fsize != -1)\xa0 {\xa0 echo ""$file is $fsize bytes."";\xa0 }else\xa0 {\xa0 echo ""Error getting file size."";\xa0 }\n// close connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&file|||Required. Specifies the server file to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ftp_ssl_connect(),https://www.w3schools.com/php/func_ftp_ssl_connect.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_ssl_connect() function opens a secure SSL-FTP connection.When the connection is open, you can run FTP functions against the server.Note: This function is only available if both the ftp module \nand the OpenSSL support is built statically into PHP. ', '', '', '']","['\n<?php// set up basic SSL connection$ftp_server = ""123.123.123.123"";\n $ftp_conn = ftp_ssl_connect($ftp_server) or die(""Could not connect to $ftp_server"");// login$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// then do something...\n// close SSL connectionftp_close($ftp_conn);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&host|||Required. Specifies the FTP server address. Can be a domain address or an IP address. This parameter should not be prefixed with ""ftp://"" or have any trailing slashes|||&&&port|||Optional. Specifies the port to connect to. Default is 21|||&&&timeout|||Optional. Specifies the timeout for network operations. Default is 90 seconds|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ftp_systype(),https://www.w3schools.com/php/func_ftp_systype.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ftp_systype() function returns the system type identifier of the FTP server.', '', '', '']","['\n<?php// connect and login to FTP server\n $ftp_server = ""ftp.example.com"";$ftp_conn = ftp_connect($ftp_server) or die(""Could not connect to $ftp_server"");$login = ftp_login($ftp_conn, $ftp_username, $ftp_userpass);// get system typeif ($type = ftp_systype($ftp_conn))\xa0 {\xa0 echo ""System type is: $type"";\xa0 }else\xa0 {\xa0 echo ""Could not get system type."";\xa0 }// close connectionftp_close($ftp_conn);?>\n', '\n System type is: UNIX\n', '', '']",[''],"['Parameter|||Description|||&&&ftp_conn|||Required. Specifies the FTP connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||JSON,https://www.w3schools.com/php/php_ref_json.asp,,"['PHP JSON Introduction', 'Installation', 'PHP JSON Functions', 'PHP Predefined JSON Constants']","['The JSON extension implements the JavaScript Object Notation data-interchange \nformat.In PHP 5, the decoding is handled by a parser based on the JSON_checker by \nDouglas Crockford.PHP 7 has a new and improved parser specifically written for PHP and licensed \nunder the PHP license.', 'From PHP 5.2.0, the JSON functions are enabled by default. There is no \ninstallation needed to use these functions.', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&json_decode()|||Decodes a JSON string|||&&&json_encode()|||Encode a value to JSON format|||&&&json_last_error()|||Returns the last error occurred|||&&&json_last_error_msg()|||Returns the error string of the last json_encode() or json_decode() call|||&&&', 'Constant|||Type|||Description|||&&&JSON_ERROR_NONE|||Integer|||No error has occurred|||&&&JSON_ERROR_DEPTH|||Integer|||Maximum stack depth has been exceeded|||&&&JSON_ERROR_STATE_MISMATCH|||Integer|||Invalid/Malformed JSON|||&&&JSON_ERROR_CTRL_CHAR|||Integer|||Control character error|||&&&JSON_ERROR_SYNTAX|||Integer|||Syntax error|||&&&JSON_ERROR_UTF8|||Integer|||Malformed UTF-8 characters. PHP 5.3|||&&&JSON_ERROR_RECURSION|||Integer|||Invalid recursive reference values. PHP 5.5|||&&&JSON_ERROR_INF_OR_NAN|||Integer|||Invalid NAN or INF values. PHP 5.5|||&&&JSON_ERROR_UNSUPPORTED_TYPE|||Integer|||Invalid type. PHP 5.5|||&&&JSON_ERROR_INVALID_PROPERTY_NAME|||Integer|||Invalid property name. PHP 7.0|||&&&JSON_ERROR_UTF16|||Integer|||Malformed UTF-16 characters. PHP 7.0|||&&&JSON_BIGINT_AS_STRING|||Integer|||\xa0|||&&&JSON_OBJECT_AS_ARRAY|||Integer|||\xa0|||&&&JSON_HEX_TAG|||Integer|||\xa0|||&&&JSON_HEX_AMP|||Integer|||\xa0|||&&&JSON_HEX_APOS|||Integer|||\xa0|||&&&JSON_HEX_QUOT|||Integer|||\xa0|||&&&JSON_FORCE_OBJECT|||Integer|||\xa0|||&&&JSON_NUMERIC_CHECK|||Integer|||\xa0|||&&&JSON_PRETTY_PRINT|||Integer|||\xa0|||&&&JSON_UNESCAPED_SLASHES|||Integer|||\xa0|||&&&JSON_PARTIAL_OUTPUT_ON_ERROR|||Integer|||\xa0|||&&&JSON_PRESERVE_ZERO_FRACTION|||Integer|||\xa0|||&&&JSON_UNESCAPED_LINE_TERMINATORS|||Integer|||\xa0|||&&&JSON_INVALID_UTF8_IGNORE|||Integer|||\xa0|||&&&JSON_INVALID_UTF8_SUBSTITUTE|||Integer|||\xa0|||&&&JSON_THROWN_ON_ERROR|||Integer|||\xa0|||&&&']",[]
php||json_decode(),https://www.w3schools.com/php/func_json_decode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The json_decode() function is used to decode or convert a JSON object to a PHP object.', '', '', '', '']","['\n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';var_dump(json_decode($jsonobj));?>', '\n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';var_dump(json_decode($jsonobj, \n  true));?> &&&&&& \n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';\n  $obj = json_decode($jsonobj);echo $obj->Peter;echo $obj->Ben;\n  echo $obj->Joe;?> &&&&&& \n  <?php$jsonobj = \'{""Peter"":35,""Ben"":37,""Joe"":43}\';\n  $arr = json_decode($jsonobj, true);echo $arr[""Peter""];echo $arr[""Ben""];\n  echo $arr[""Joe""];?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the value to be decoded|||&&&assoc|||Optional. Specifies a Boolean value. When set to true, the returned \n    object will be converted into an associative array. When set to false, it \n    returns an object. False is default|||&&&depth|||Optional. Specifies the recursion depth. Default recursion depth is 512|||&&&options|||Optional. Specifies a bitmask (JSON_BIGINT_AS_STRING, \n    JSON_INVALID_UTF8_IGNORE, JSON_INVALID_UTF8_SUBSTITUTE, \n    JSON_OBJECT_AS_ARRAY, JSON_THROW_ON_ERROR)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||json_encode(),https://www.w3schools.com/php/func_json_encode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The json_encode() function is used to encode a value to JSON format.', '', '', '', '']","['\n  <?php$age = array(""Peter""=>35, ""Ben""=>37, ""Joe""=>43);\necho json_encode($age);?>', '\n  <?php$cars = array(""Volvo"", ""BMW"", ""Toyota"");echo json_encode($cars);?>', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. Specifies the value to be encoded|||&&&options|||Optional. Specifies a bitmask (JSON_FORCE_OBJECT, JSON_HEX_QUOT, \n    JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_INVALID_UTF8_IGNORE, \n    JSON_INVALID_UTF8_SUBSTITUTE, JSON_NUMERIC_CHECK, \n    JSON_PARTIAL_OUTPUT_ON_ERROR, JSON_PRESERVE_ZERO_FRACTION, \n    JSON_PRETTY_PRINT, JSON_UNESCAPED_LINE_TERMINATORS, JSON_UNESCAPED_SLASHES, \n    JSON_UNESCAPED_UNICODE, JSON_THROW_ON_ERROR)|||&&&depth|||Optional. Specifies the maximum depth|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||Keywords,https://www.w3schools.com/php/php_ref_keywords.asp,,['PHP Keywords'],"['PHP has a set of keywords that are reserved words which cannot be used as function\nnames, class names or method names. Prior to PHP 7, these keywords could not be used as\nclass property names either:']",[''],[''],"[""Keyword|||Description|||&&&abstract|||Declare a class as abstract|||&&&and|||A logical operator|||&&&as|||Used in the foreach loop|||&&&break|||Break out of loops and switch statements|||&&&callable|||A data type which can be executed as a function|||&&&case|||Used in the switch conditional|||&&&catch|||Used in the try..catch statement|||&&&class|||Declare a class|||&&&clone|||Create a copy of an object|||&&&const|||Define a class constant|||&&&continue|||Jump to the next iteration of a loop|||&&&declare|||Set directives for a block of code|||&&&default|||Used in the switch statement|||&&&do|||Create a do...while loop|||&&&echo|||Output text|||&&&else|||Used in conditional statements|||&&&elseif|||Used in conditional statements|||&&&empty|||Check if an expression is empty|||&&&enddeclare|||End a declare block|||&&&endfor|||End a for block|||&&&endforeach|||End a foreach block|||&&&endif|||End an if or elseif block|||&&&endswitch|||End a switch block|||&&&endwhile|||End a while block|||&&&extends|||Extends a class or interface|||&&&final|||Declare a class, property or method as final|||&&&finally|||Used in the try...catch statement|||&&&fn|||Declare an arrow function|||&&&for|||Create a for loop|||&&&foreach|||Create a foreach loop|||&&&function|||Create a function|||&&&global|||Import variables from the global scope|||&&&goto|||Jump to a line of code|||&&&if|||Create a conditional statement|||&&&implements|||Implement an interface|||&&&include|||Embed code from another file|||&&&include_once|||Embed code from another file|||&&&instanceof|||Test an object's class|||&&&insteadof|||Resolve conflicts with traits|||&&&interface|||Declare an interface|||&&&isset|||Check if a variable exists and is not null|||&&&list|||Assigns array elements into variables|||&&&namespace|||Declares a namespace|||&&&new|||Creates an object|||&&&or|||A logical operator|||&&&print|||Output text|||&&&private|||Declare a property, method or constant as private|||&&&protected|||Declare a property, method or constant as protected|||&&&public|||Declare a property, method or constant as public|||&&&require|||Embed code from another file|||&&&require_once|||Embed code from another file|||&&&return|||Exit a function and return a value|||&&&static|||Declare a property or method as static|||&&&switch|||Create a switch block|||&&&throw|||Throw an exception|||&&&trait|||Declare a trait|||&&&try|||Create a try...catch structure|||&&&unset|||Delete a variable or array element|||&&&use|||Use a namespace|||&&&var|||Declare a variable|||&&&while|||Create a while loop or end a do...while loop|||&&&xor|||A logical operator|||&&&yield|||Used in generator functions|||&&&yield from|||Used in generator functions|||&&&""]",[]
php||abstract,https://www.w3schools.com/php/keyword_abstract.asp,,"['Definition and Usage', 'Related Pages']","['The abstract keyword declares a class as abstract.Abstract classes cannot be instantiated but they can be extended.', 'Read more about abstract classes in our PHP OOP - Abstract Classes Tutorial.']","['\n<?php\n  abstract class MyClass {\xa0 public function hello() {\xa0\xa0\xa0 \n  echo ""Hello World!"";\xa0 }}class AnotherClass extends \n  MyClass {}$item = new AnotherClass();$item->hello();\n?>\n', '']",[''],[],[]
php||and,https://www.w3schools.com/php/keyword_and.asp,,"['Definition and Usage', 'Related Pages']","['The and keyword is a logical operator.Logical operators are used to combine conditional statements.The return value will only be true if both statements return true, otherwise it will return\nfalse.Tip: The difference between and and && is that and has very low precedence, meaning that\nmost other operations get evaluated first.', 'Read more about operators in our PHP Operators Tutorial.']","['\n<?php\n  if (5 > 3 and 5 < 10) {\xa0 echo ""true"";} else {\xa0 echo \n  ""false"";}\n?>\n', '']",[''],[],[]
php||as,https://www.w3schools.com/php/keyword_as.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The as keyword is used by the foreach loop to establish which variables contain the key and value of an element.The as keyword can also be used by namespaces and traits to give them an alias.', 'The foreach keyword.The trait keyword.The use keyword.Read more about loops in our PHP Loops Tutorial.Read more about traits in our PHP OOP - Traits Tutorial.', '']","['\n<?php\n  $list = [1, 2, 3, 4];foreach($list as $item) {\xa0 echo $item;\xa0 \n  echo ""<br>"";}\n?>\n', '\n<?php\n  $people = [\xa0 ""Peter"" => ""35"",\xa0 ""Ben"" => ""37"",\xa0 ""Joe"" => ""43""];\n  foreach($people as $person => $age) {\xa0 echo ""$person is $age years old"";\xa0 echo \n  ""<br>"";}\n?>\n &&&&&& \n<?php\n  trait message1 {\xa0 public function msg1() {\xa0\xa0\xa0 echo \n  ""OOP is fun! "";\xa0 }}class Welcome {\xa0 use message1 \n  {\xa0\xa0\xa0 message1::msg1 as msg;\xa0 }}\n$obj = new Welcome();$obj->msg();\n?>\n &&&&&& \n<?php\n  namespace Html;class Table {\xa0 public $title = """";\xa0 \n  public $numRows = 0;\xa0 public function message() {\xa0\xa0\xa0 \n  echo ""<p>Table \'{$this->title}\' has {$this->numRows} rows.</p>"";\xa0 }\n  }use \\Html as H;$table = new H\\Table();$table->title = ""My table"";$table->numRows = 5;\n  $table->message();\n?>\n', '']",[''],[],[]
php||break,https://www.w3schools.com/php/keyword_break.asp,,"['Definition and Usage', 'Related Pages']","['The break keyword is used to break out of for loops, foreach loops, while loops,\ndo..while loops and switch conditions.In the switch block, all of the code following a case statement will be executed until a\nbreak keyword is found. This could also be code belonging to another case.', 'The switch keyword.\nUse the continue keyword to end the current iteration in a loop, but continue with the next.\nRead more about break and continue in our PHP Break and Continue Tutorial.\nRead more about loops in our PHP Loops Tutorial.\nRead more about switch conditionals in our PHP switch Statement Tutorial.\n\nMore Examples\n\nExample\nUsing break in a switch statement:\n\n <?php\n $favcolor = ""red"";\n switch ($favcolor)\n {\n \xa0\xa0case ""red"":\n  \xa0\xa0\xa0 echo ""Your favorite color is red!"";\n  \xa0\xa0\xa0 break;\n \xa0\n case ""blue"":\n  \xa0\xa0\xa0 echo ""Your favorite color is blue!"";\n  \xa0\xa0\xa0 break;\n \xa0\n case ""green"":\n \xa0\xa0\xa0\xa0echo ""Your favorite color is green!"";\n \xa0\xa0\xa0\n break;\n \xa0\n default:\n  \xa0\xa0\xa0 echo ""Your favorite color is neither red, blue, nor green!"";\n }\n ?>\n\nTry it Yourself »\n\n\n❮ PHP Keywords\n\n\n']","['\n<?php\n  $cars = [""Ford"", ""Volvo"", ""BMW""];foreach($cars as $car) {\xa0 echo \n  $car;\xa0 echo ""<br>"";\xa0 if($car == ""Volvo"") {\xa0\xa0\xa0 \n  break;\xa0 }}\n?>\n', '\n <?php\n $favcolor = ""red"";\n switch ($favcolor)\n {\n \xa0\xa0case ""red"":\n  \xa0\xa0\xa0 echo ""Your favorite color is red!"";\n  \xa0\xa0\xa0 break;\n \xa0\n case ""blue"":\n  \xa0\xa0\xa0 echo ""Your favorite color is blue!"";\n  \xa0\xa0\xa0 break;\n \xa0\n case ""green"":\n \xa0\xa0\xa0\xa0echo ""Your favorite color is green!"";\n \xa0\xa0\xa0\n break;\n \xa0\n default:\n  \xa0\xa0\xa0 echo ""Your favorite color is neither red, blue, nor green!"";\n }\n ?>\n']",[''],[],[]
php||callable,https://www.w3schools.com/php/keyword_callable.asp,,"['Definition and Usage', 'More Examples']","['The callable keyword is used to force a function argument to be a reference to a\nfunction.A callable can be one of the following:', '']","['\n<?php\n  function printFormatted(callable $format, $str) {\xa0 echo $format($str);\xa0 \n  echo ""<br>"";}function exclaim($str) { return $str . ""!""; }\n  printFormatted(""exclaim"", ""Hello World"");?>\n', '\n <?php\n  function printFormatted(callable $format, $str) {\xa0 echo \n  $format($str);\xa0 echo ""<br>"";}class MyClass {\xa0 public static function \n  ask($str) {\xa0\xa0\xa0 return $str . ""?"";\xa0 }\xa0 \n  public function brackets($str) {\xa0\xa0\xa0 return ""[$str]"";\xa0 \n  }}// An anonymous function$func = function($str) \n  { return substr($str, 0, 5); };printFormatted($func , ""Hello World"");\n// A string containing the name of a function\n  printFormatted(""strtoupper"", ""Hello World"");// An array describing a \n  static class methodprintFormatted([""MyClass"", ""ask""], ""Hello World"");\n// An array describing an object method$obj = new MyClass();\n  printFormatted([$obj, ""brackets""], ""Hello World"");\n ?>\n']",['Definition and Usage###&&&|||An anonymous function|||A string containing the name of a function|||An array describing a static class method|||An array describing an object method|||'],[],[]
php||case,https://www.w3schools.com/php/keyword_case.asp,,"['Definition and Usage', 'Related Pages']","['The case keyword is used to jump to a line of code when an expression has a specific\nvalue in a switch conditional.', 'The switch keyword.\nRead more about the switch conditional in our PHP switch Statement Tutorial.\n\n❮ PHP Keywords\n\n\n']","['\n<?php\n  $a = 3;switch($a) {\xa0 case 1:\xa0\xa0\xa0 echo ""One"";\xa0\xa0\xa0 \n  break;\xa0 case 2:\xa0\xa0\xa0 echo ""Two"";\xa0\xa0\xa0 \n  break;\xa0 case 3:\xa0\xa0\xa0 echo ""Three"";\xa0\xa0\xa0 \n  break;}\n?>\n', '']",[''],[],[]
php||catch,https://www.w3schools.com/php/keyword_catch.asp,,"['Definition and Usage', 'Related Pages']","['The catch keyword is used to handle exceptions that are thrown by the code in a\npreceding try block.', 'The throw keyword.\nThe try keyword.\nThe finally keyword.\nRead more about try..catch.finally (Exceptions) in our PHP Exceptions Tutorial.\n\nMore Examples\n\nExample\nUse catch for multiple types of exception:\n\n <?php\n  try {\xa0 $rand = rand(0, 2);\xa0 switch($rand) {\xa0\xa0\xa0 \n  case 0: throw new Exception();\xa0\xa0\xa0 case 1: throw new \n  OutOfBoundsException();\xa0\xa0\xa0 case 2: throw new \n  LogicException();}} catch(OutOfBoundsException $e) {\xa0 \n  echo ""Caught an out of bounds exception"";} catch(LogicException $e) {\xa0 \n  echo ""Caught a logic exception"";} catch(Exception $e) {\xa0 echo \n  ""Caught an ordinary exception"";}\n ?>\n\nTry it Yourself »\n\n\n❮ PHP Keywords\n\n\n']","['\n<?php\n  try {\xa0 throw new Exception(""This is an exception"");} \n  catch(Exception $e) {\xa0 echo $e->getMessage();}\n?>\n', '\n <?php\n  try {\xa0 $rand = rand(0, 2);\xa0 switch($rand) {\xa0\xa0\xa0 \n  case 0: throw new Exception();\xa0\xa0\xa0 case 1: throw new \n  OutOfBoundsException();\xa0\xa0\xa0 case 2: throw new \n  LogicException();}} catch(OutOfBoundsException $e) {\xa0 \n  echo ""Caught an out of bounds exception"";} catch(LogicException $e) {\xa0 \n  echo ""Caught a logic exception"";} catch(Exception $e) {\xa0 echo \n  ""Caught an ordinary exception"";}\n ?>\n']",[''],[],[]
php||class,https://www.w3schools.com/php/keyword_class.asp,,"['Definition and Usage', 'Related Pages']","['The class keyword is used to create classes.', 'Read more about classes in our PHP Classes and Objects Tutorial.']","['\n<?php\n  class MyClass {\xa0 public $number = 5;}$obj = new MyClass();echo \n  $obj->number;\n?>\n', '']",[''],[],[]
php||clone,https://www.w3schools.com/php/keyword_clone.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The clone keyword is used to create a copy of an object.If any of the properties was a reference to another variable or object, then only the\nreference is copied. Objects are always passed by reference, so if the original object has\nanother object in its properties, the copy will point to the same object. This behavior can be\nchanged by creating a __clone() method in the class.', 'Read more about classes in our PHP Classes and Objects Tutorial.', '']","['\n<?php\n  class MyClass {\xa0 public $color;\xa0 public $amount;}\n$obj = new MyClass();$obj->color = ""red"";$obj->amount = 5;$copy = clone $obj;\n  print_r($copy);\n?>\n', '\n<?php\n  class MyClass {\xa0 public $amount;}// Create an object with a \n  reference$value = 5;$obj = new MyClass();$obj->amount = &$value;\n// Clone the object$copy = clone $obj;// Change the value in the \n  original object$obj->amount = 6;// The copy is changed\n  print_r($copy);\n?>\n &&&&&& \n<?php\n  class MyClass {\xa0 public $amount;\xa0 public function __clone() {\n  \xa0\xa0\xa0\n  $value = $this->amount;\xa0\xa0\xa0 unset($this->amount); // Unset breaks references\n  \xa0\xa0\xa0\n  $this->amount = $value;\xa0 }}// Create an object with a reference\n  $value = 5;$obj = new MyClass();$obj->amount = &$value;// Clone \n  the object$copy = clone $obj;// Change the value in the original \n  object$obj->amount = 6;// The copy is not changedprint_r($copy);\n?>\n', '']",[''],[],[]
php||const,https://www.w3schools.com/php/keyword_const.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The const keyword is used to create constants. Unlike with the define() function,\nconstants created using the const keyword must be declared in the global scope.', 'Read more about constants in our PHP Constants Tutorial.', '']","['\n<?php\n  const MY_CONSTANT = 5;echo MY_CONSTANT;\n?>\n', '\n<?php\n  class MyClass {\xa0 const MY_CONSTANT = 5;}echo \n  MyClass::MY_CONSTANT;\n?>\n', '']",[''],[],[]
php||continue,https://www.w3schools.com/php/keyword_continue.asp,,"['Definition and Usage', 'Related Pages']","['The continue keyword is used to is used to end the current iteration in a for, foreach, while\nor do..while loop, and continues to the next iteration.', 'Use the break keyword to end the loop completelyRead more about break and continue in our PHP Break and Continue Tutorial.Read more about loops in our PHP Loops Tutorial.']","['\n<?php\n  for($i = 1; $i <= 10; $i++) {\xa0 if($i == 5) {\xa0\xa0\xa0 \n  continue;\xa0 }echo ""$i <br>"";}\n?>\n', '']",[''],[],[]
php||declare,https://www.w3schools.com/php/keyword_declare.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The declare keyword sets an execution directive for a block of code. If the declare \nstatement is not followed by a block then the directive applies to the rest of the code in the\nfile.There are three directives which can be declared: ticks, encoding and\nstrict_types.The ticks directive will send a tick event each time a specified number of instructions\nhave been executed. A tick function can be registered which will run each time a tick event\nfires.The encoding directive is used to indicate what character encoding the file is using. It\ncannot be used on a block, it has to apply to the whole file.When the strict_types directive is set, values of the wrong type passed into function\narguments with type hints will throw a fatal error instead of being cast to the correct type.', 'The enddeclare keyword.', '']","['\n<?php\n  $count = 0;function example() {\xa0 global $count;\xa0 \n  $count++;\xa0 echo ""$count instructions executed<br>"";}\n  register_tick_function(\'example\');declare(ticks=1) {\xa0 $cars = \n  [""Ford"", ""Volvo"", ""BMW""];\xa0 foreach($cars as $car) {\xa0\xa0\xa0 \n  echo ""$car <br>"";\xa0 }}\n?>\n', '\n  <?phpdeclare(strict_types=1);function sum(int $a, int $b) {\xa0 \n  return $a + $b;}// Throws a fatal error because \'5\' is a string instead \n  of a numbersum(""5"", 1);?>', '']",[''],[],[]
php||default,https://www.w3schools.com/php/keyword_default.asp,,"['Definition and Usage', 'Related Pages']","['The default keyword is used in a switch block to specify which code to run when none\nof the case statements were matched by the expression.', 'The switch keyword.Read more about the switch conditional in our PHP switch Statement Tutorial.']","['\n<?php\n  $a = 4;switch($a) {\xa0 case 1: echo ""One""; break;\xa0 case 2: \n  echo ""Two""; break;\xa0 case 3: echo ""Three""; break;\xa0 default: \n  echo ""Many""; break;}\n?>\n', '']",[''],[],[]
php||do,https://www.w3schools.com/php/keyword_do.asp,,"['Definition and Usage', 'Related Pages']","['The do keyword creates a loop which always runs at least once. It is used together with\nthe while keyword to create a do...while loop.', 'The while keyword.Read more about do...while loops in our PHP do while Loop Tutorial.']","['\n  <?php$i = 5;do {\xa0 echo $i;\xa0 echo ""<br>"";\xa0 \n  $i--;} while($i > 6);?>', '']",[''],[],[]
php||echo,https://www.w3schools.com/php/keyword_echo.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The echo keyword is used to output text. The echo statement can output multiple strings\nseparated by commas.', 'The print keyword', '']","['\n  <?phpecho ""Hello World!"";?>', '\n  <?phpecho ""Hello "", ""World"", ""!"";?>', '']",[''],[],[]
php||else,https://www.w3schools.com/php/keyword_else.asp,,"['Definition and Usage', 'Related Pages']","['The else keyword specifies a block of code which should run when the condition of an if\nstatement is not met.', 'The if keyword.The elseif keyword.Read more about the if...elseif...else conditional in our PHP if else Tutorial.']","['\n  <?phpif (5 < 3) {\xa0 echo ""Five is less than three"";} else {\xa0 \n  echo ""Five is not less than three"";}?>', '']",[''],[],[]
php||elseif,https://www.w3schools.com/php/keyword_elseif.asp,,"['Definition and Usage', 'Related Pages']","['The elseif keyword tests a new condition if the condition of a previous if or elseif\nstatement was not met. It is equivalent to putting an if statement inside an else block.The following blocks of code are equivalent:', 'The if keyword.Read more about the if...elseif...else conditional in our PHP if else Tutorial.']","['\n  <?phpif(5 < 3) {\xa0 echo ""Five is less than three"";} else \n  if(5 > 4) {\xa0 echo ""Five is greater than four"";}?>', '\n  <?phpif (...) {some code here} elseif (...) {some \n  code here}?>', '\n  <?phpif (...) {\xa0 some code here} else{\xa0 if (...) \n  {\xa0\xa0\xa0 some code here\xa0 }}?>']",[''],[],[]
php||empty,https://www.w3schools.com/php/keyword_empty.asp,,"['Definition and Usage', 'More Examples']","['The empty keyword acts as a function which returns true if a variable does not exist, or if\nits value is considered empty. The empty keyword also evaluates expressions which are\nnot in a variable.A value is considered empty if its value is any of the following:', '']","['\n  <?php$str = """";if(empty($str)) {\xa0 echo ""The string is \n  empty"";}?>', '\n  <?php// A variable that does not existif(empty($x)) {\xa0 \n  echo \'$x does not exist<br>\';}// An empty integerif(empty(0)) {\xa0 \n  echo \'0 is empty<br>\';}// An empty floatif(empty(0.0)) {\xa0 \n  echo \'0.0 is empty<br>\';}// An empty stringif(empty("""")) {\xa0 \n  echo \'"""" is an empty string<br>\';}// nullif(empty(null)) {\xa0 \n  echo \'null is empty<br>\';}// A value that is not empty\n  if(empty(\'A\')) {\xa0 echo \'""A"" is empty<br>\';} else {\xa0 echo \n  \'""A"" is not empty<br>\';}?>']","['Definition and Usage###&&&|||An empty string|||An empty array|||The integer 0|||The floating point number 0.0|||The string ""0""|||Boolean false|||null|||']",[],[]
php||enddeclare,https://www.w3schools.com/php/keyword_enddeclare.asp,,"['Definition and Usage', 'Related Pages']","['The enddeclare keyword is used to close a declare block which was started using the\ndeclare(...): syntax.', 'The declare keyword.']","['\n  <?php$count = 0;function example() {\xa0 global $count;\xa0 \n  $count++;\xa0 echo ""$count instructions executed<br>"";}\n  register_tick_function(\'example\');declare(ticks=1):\xa0 $cars = \n  [""Ford"", ""Volvo"", ""BMW""];\xa0 foreach($cars as $car) {\xa0\xa0\xa0 \n  echo ""$car <br>"";\xa0 }enddeclare;?>', '']",[''],[],[]
php||endfor,https://www.w3schools.com/php/keyword_endfor.asp,,"['Definition and Usage', 'Related Pages']","['The endfor keyword is used to close the code block of a for loop which was started\nusing the for(...): syntax.', 'The for keyword.Read more about for loops in our PHP for Loop Tutorial.']","['\n  <?phpfor($i = 0; $i < 10; $i += 2):\xa0 echo ""$i <br>"";\n  endfor;?>', '']",[''],[],[]
php||endforeach,https://www.w3schools.com/php/keyword_endforeach.asp,,"['Definition and Usage', 'Related Pages']","['The endforeach keyword is used to close the code block of a foreach loop which was\nstarted using the foreach(...): syntax.', 'The foreach keyword.Read more about for loops in our PHP foreach Loop Tutorial.']","['\n  <?php$cars = [""Ford"", ""Volvo"", ""BMW""];foreach($cars as $car):\xa0 \n  echo ""$car <br>"";endforeach;?>', '']",[''],[],[]
php||endif,https://www.w3schools.com/php/keyword_endif.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The endif keyword is used to mark the end of an if conditional which was started with\nthe if(...): syntax. It also applies to any variation of the if conditional, such as\nif...elseif and if...else.', 'The if keyword.The else keyword.The elseif keyword.Read more about conditional statements in our PHP if else Tutorial.', '']","['\n  <?php$a = 4;if($a < 5):\xa0 echo ""Less than five"";endif;?>', '', '']",[''],[],[]
php||endswitch,https://www.w3schools.com/php/keyword_endswitch.asp,,"['Definition and Usage', 'Related Pages']","['The endswitch keyword is used to mark the end of a switch conditional which was\nstarted with the switch(...): syntax.', 'The switch keyword.Read more about the switch statement in our PHP switch Statement Tutorial.']","['\n  <?php$a = 4;switch($a):\xa0 case 1: echo ""One""; break;\xa0 case 2: \n  echo ""Two""; break;\xa0 case 3: echo ""Three""; break;\xa0 default: echo ""Many""; \n  break;endswitch;?>', '']",[''],[],[]
php||extends,https://www.w3schools.com/php/keyword_extends.asp,,"['Definition and Usage', 'Related Pages']","['The extends keyword is used to derive a class from another class. This is called\ninheritance. A derived class has all of the public and protected properties of the class that it\nis derived from.', 'Read more about inheritance in our PHP OOP - Inheritance Tutorial.']","['\n  <?phpclass MyClass {\xa0 public function hello() {\xa0\xa0\xa0 echo \n  ""Hello \n  World!"";\xa0 }}class AnotherClass extends MyClass {}$obj = new \n  AnotherClass();$obj->hello();?>', '']",[''],[],[]
php||final,https://www.w3schools.com/php/keyword_final.asp,,"['Definition and Usage', 'Related Pages']","['The final keyword is used to prevent a class from being inherited and to prevent\ninherited method from being overridden.', 'Read more about inheritance in our PHP OOP - Inheritance Tutorial.']","['\n  <?phpfinal class MyClass {\xa0 public $name = ""John"";}\n// This code will throw an errorclass AnotherClass extends MyClass{};?>', '']",[''],[],[]
php||finally,https://www.w3schools.com/php/keyword_finally.asp,,"['Definition and Usage', 'Related Pages']","['The finally keyword is used in try...finally and try...catch...finally\nstructures to run a block of code whether or not an exception occurred.', 'The throw keyword.\nThe catch keyword.\nThe finally keyword.\nRead more about exceptions in our PHP Exceptions Tutorial.\n\n❮ PHP Keywords\n\n\n']","['\n  <?phpecho ""Starting the process."";try {\xa0 // Select \n  randomly between 0 and 1, throw an exception if 1 is selected.\xa0 \n  $random = rand(0, 1);\xa0 if($random == 1) {\xa0\xa0\xa0 throw \n  new Exception(""Exception"");\xa0 }} finally {\xa0 echo ""Process \n  complete"";}?>', '']",[''],[],[]
php||fn,https://www.w3schools.com/php/keyword_fn.asp,,['Definition and Usage'],['The fn keyword is used to create arrow functions. Arrow functions are only available in\nPHP versions 7.4 and up.Arrow functions have access to all variables from the scope in which they were created.The general syntax of an arrow function is:'],"['\n  <?php// This only works in PHP 7.4 and above$str = ""Hello World"";\n  $my_function = fn($a) => $str . $a;echo $my_function(""!"");?>', '\n  fn(arguments) => expression to be returned;']",[''],[],[]
php||for,https://www.w3schools.com/php/keyword_for.asp,,"['Definition and Usage', 'Related Pages']","['The for keyword is used to create a for \nloop, which loops through a block of code a specified number of times.', 'Read more about for loops in our PHP for Loop Tutorial.']","['\n<?php\n  for($i = 0; $i < 10; $i += 2) {\xa0 echo ""$i <br>"";}\n?>\n', '']",[''],[],[]
php||foreach,https://www.w3schools.com/php/keyword_foreach.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The foreach keyword is used to create \nforeach loops, which loops through a block of code for each element in an array.', 'Read more about foreach loops in our PHP foreach Loop Tutorial.', '']","['\n<?php\n  $cars = [""Ford"", ""Volvo"", ""BMW""];foreach($cars as $car) {\xa0 echo \n  ""$car <br>"";}\n?>\n', '\n<?php\n  $people = [\xa0 ""Peter"" => ""35"",\xa0 ""Ben"" => ""37"",\xa0 \n  ""Joe"" => ""43""];\nforeach($people as $person => $age) {\xa0 echo ""$person is $age \n  years old"";\xa0 echo ""<br>"";}\n?>\n', '']",[''],[],[]
php||function,https://www.w3schools.com/php/keyword_function.asp,,"['Definition and Usage', 'Related Pages']","['The function keyword is used to create a function.', 'Read more about functions in our PHP Functions Tutorial.']","['\n<?php\n  function hello($a) {\xa0 return ""Hello $a!"";}echo hello(""World"");\n?>\n', '']",[''],[],[]
php||global,https://www.w3schools.com/php/keyword_global.asp,,"['Definition and Usage', 'Related Pages']","['The global keyword imports variables from the global scope into the local scope of a\nfunction.', 'Read more about Variable Scope in our PHP Variables Tutorial.']","['\n<?php\n  $x = 5;function add($y) {\xa0 global $x;\xa0 return $x + $y;\n  }\n  echo ""$x + 5 is "" . add(5);\n?>\n', '']",[''],[],[]
php||if,https://www.w3schools.com/php/keyword_if.asp,,"['Definition and Usage', 'Related Pages']","['The if keyword is used to create an if conditional. The elseif and else keywords can\nbe used to specify code that runs when the condition is not met.', 'The elseif keywordThe else keywordRead more about conditionals in our PHP Conditionals Tutorial.']","['\n<?php\n  $a = 4;if($a < 5) {\xa0 echo ""Less than five"";}\n?>\n', '']",[''],[],[]
php||implements,https://www.w3schools.com/php/keyword_implements.asp,,"['Definition and Usage', 'Related Pages']","['The implements keyword is used to declare that a class must have the methods\ndescribed in the specified interface. This is called polymorphism. Polymorphism makes it\neasy to use a variety of different objects in the same way.', 'The interface keywordThe else keywordRead more about objects, classes and interfaces in our PHP OOP Tutorial.']","['\n<?php\n  interface Machine {\xa0 public function activate();\xa0 public \n  function deactivate();\xa0 public function isActive();}class Kettle \n  implements Machine {\xa0 private $isOn = false;\xa0 public \n  function activate() {\xa0\xa0\xa0 $this->isOn = true;\xa0 }\n\xa0 public function deactivate() {\xa0\xa0\xa0 $this->isOn = \n  false;\xa0 }\xa0 public function isActive() {\xa0\xa0\xa0 \n  return $this->isOn;\xa0 }}$machine = new Kettle();\n  $machine->activate();if($machine->isActive()) {\xa0 echo ""The \n  machine is on"";} else {\xa0 echo ""The machine is off"";}echo ""<br>"";\n  $machine->deactivate();if($machine->isActive()) {\xa0 echo ""The \n  machine is on"";} else {\xa0 echo ""The machine is off"";}\n?>\n', '']",[''],[],[]
php||include,https://www.w3schools.com/php/keyword_include.asp,,"['Definition and Usage', 'Related Pages']","['The include keyword is used to embed PHP code from another file. If the file is not\nfound, a warning is shown and the program continues to run.', 'The include_once keywordThe require keywordThe require_once keywordRead more about including files in our PHP Include Files Tutorial.']","[""\n  <!DOCTYPE html><html><body><h1>Welcome to my home \n  page!</h1><p>Some text.</p><p>Some more text.</p><?php include \n  'footer.php';?></body></html>"", '']",[''],[],[]
php||include_once,https://www.w3schools.com/php/keyword_include_once.asp,,"['Definition and Usage', 'Related Pages']","['The include_once keyword is used to embed PHP code from another file. If the file is\nnot found, a warning is shown and the program continues to run. If the file was already\nincluded previously, this statement will not include it again.', 'The include keywordThe require keywordThe require_once keywordRead more about including files in our PHP Include Files Tutorial.']","[""\n  <!DOCTYPE html><html><body><h1>Welcome to my home \n  page!</h1><p>Some text.</p><p>Some more text.</p><?php include_once \n  'footer.php';?></body></html>"", '']",[''],[],[]
php||instanceof,https://www.w3schools.com/php/keyword_instanceof.asp,,"['Definition and Usage', 'Related Pages']","['The instanceof keyword is used to check if an object belongs to a class. The\ncomparison returns true if the object is an instance of the class, it returns false if it is not.', 'Read more about object and classes in our PHP OOP Tutorial.']","['\n<?php\n  class MyClass {}class AnotherClass extends MyClass{}$obj = new \n  AnotherClass();if($obj instanceof AnotherClass) {\xa0 echo ""The \n  object is AnotherClass"";}// The object is also an instance of the class \n  it is derived fromif($obj instanceof MyClass) {\xa0 echo ""The object \n  is MyClass<br>"";}\n?>\n', '']",[''],[],[]
php||insteadof,https://www.w3schools.com/php/keyword_insteadof.asp,,"['Definition and Usage', 'Related Pages']","['The insteadof keyword allows you to select from which trait a method should be taken if\nmore than one trait has a method with the same name.', 'The trait keywordRead more about traits in our PHP OOP - Traits Tutorial.']","['\n<?php\n  trait message1 {\xa0 public function msgA() {\xa0\xa0\xa0 echo \n  ""My favorite color is red. "";\xa0 }\xa0 public function msgB() \n  {\xa0\xa0\xa0 echo ""My favorite number is 5. "";\xa0 }}\ntrait message2 {\xa0 public function msgA() {\xa0\xa0\xa0 \n  echo ""My favorite color is blue. "";\xa0 }\xa0 public function \n  msgB() {\xa0\xa0\xa0 echo ""My favorite number is 7. "";\xa0 }\n  }class MyClass {\xa0 use message1, message2 {\xa0\xa0\xa0 \n  message1::msgA insteadof message2;\xa0\xa0\xa0 message2::msgB \n  insteadof message1;\xa0 }}$obj = new MyClass();\n  $obj->msgA();$obj->msgB();\n?>\n', '']",[''],[],[]
php||interface,https://www.w3schools.com/php/keyword_interface.asp,,"['Definition and Usage', 'Related Pages']","['The interface keyword is used to create interfaces.An interface is a structure which defines a list of methods that must exist in a class.Interfaces are a good way to allow many different classes to be used in the same way. can be used to make a class use an interface.', 'The implements keyword']","['\n<?php\n  interface Machine {\xa0 public function activate();\xa0 public \n  function deactivate();\xa0 public function isActive();}class Kettle \n  implements Machine {\xa0 private $isOn = false;\xa0 public \n  function activate() {\xa0\xa0\xa0 $this->isOn = true;\xa0 }\n\xa0 public function deactivate() {\xa0\xa0\xa0 $this->isOn = \n  false;\xa0 }\xa0 public function isActive() {\xa0\xa0\xa0 \n  return $this->isOn;\xa0 }}$machine = new Kettle();\n  $machine->activate();if($machine->isActive()) {\xa0 echo ""The \n  machine is on"";} else {\xa0 echo ""The machine is off"";}echo ""<br>"";\n  $machine->deactivate();if($machine->isActive()) {\xa0 echo ""The \n  machine is on"";} else {\xa0 echo ""The machine is off"";}\n?>\n', '']",[''],[],[]
php||isset(),https://www.w3schools.com/php/keyword_isset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The isset() function checks whether a variable is set, which means that it \nhas to be declared and is not NULL.This function returns true if the variable exists and is not NULL, otherwise it returns \nfalse.Note: If multiple variables are supplied, then this function \nwill return true only if all of the variables are set. Tip: A variable can be unset with the unset() function.', '', '', '']","['\n<?php\n  $a = 0;// True because $a is setif (isset($a)) {\xa0 echo \n  ""Variable \'a\' is set.<br>"";}$b = null;// False because $b is \n  NULLif (isset($b)) {\xa0 echo ""Variable \'b\' is set."";}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&...|||Optional. Another variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||list,https://www.w3schools.com/php/keyword_list.asp,,"['Definition and Usage', 'More Examples']","['The list keyword keyword assigns elements of an array to a list of variables.If there are not enough elements in the array it will output a notice and assign null to the\nremaining variables.Note: Since PHP 7.1.0, which elements are assigned to the variables can be selected using\narrow => syntax.', '']","['\n<?php\n  list($a, $b, $c) = [1, 2, 3];echo ""$a is "" . $a . ""<br>"";echo ""$b is "" \n  . $b . ""<br>"";echo ""$c is "" . $c . ""<br>"";\n?>\n', '\n<?php\n  list(2 => $a, 0 => $b, 1 => $c) = [1, 2, 3];echo ""$a is "" . $a . ""<br>"";\n  echo ""$b is "" . $b . ""<br>"";echo ""$c is "" . $c . ""<br>"";\n?>\n']",[''],[],[]
php||namespace,https://www.w3schools.com/php/keyword_namespace.asp,,"['Definition and Usage', 'Related Pages']","['The namespace keyword is used to declare in which namespace a PHP file is operating.\nNamespaces prevent conflicts between classes that have the same name and can be\nused to organize code by grouping related classes together.', 'Read more about namespaces in our PHP Namespaces Tutorial.']","['\n    <?phpnamespace Html;class Table {\xa0 public $title = """";\xa0 public \n    $numRows = 0;\xa0 public function message() {\xa0\xa0\xa0 echo ""<p>Table \n    \'{$this->title}\' has {$this->numRows} rows.</p>"";\xa0 }}$table = new \n    Table();$table->title = ""My table"";$table->numRows = 5;?>\n<!DOCTYPE html>\n    <html><body><?php $table->message(); ?></body></html>', '']",[''],[],[]
php||new,https://www.w3schools.com/php/keyword_new.asp,,"['Definition and Usage', 'Related Pages']","['The new keyword is used to create an object from a class.', 'Learn more about classes and objects in our PHP OOP - Classes and Objects Tutorial.']","['\n<?php\n  class MyClass {\xa0 public $name = ""John"";}$obj = new \n  MyClass();\n  echo ""The name is "" . $obj->name;\n?>\n', '']",[''],[],[]
php||or,https://www.w3schools.com/php/keyword_or.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The or keyword is a logical operator.Logical operators are used to combine conditional statements.The return value will be true if any one of the statements returns true, otherwise it will\nreturn false.The difference between or and || is that or has very low precedence, meaning that most\nother operations get evaluated first.', 'Read more about operators in our PHP Operators Tutorial.', '']","['\n<?phpif (5 > 3 or 5 > 10) {\xa0 echo ""true"";} else {\xa0 echo ""false"";}\n?>\n', '\n<?php$result1 = false || true;echo ""false || true = "";echo \n  $result1 ? ""true"" : ""false"";echo ""<br>"";$result2 = false or \n  true;echo ""false or true = "";echo $result2 ? ""true"" : ""false"";\n?>\n', '']",[''],[],[]
php||print,https://www.w3schools.com/php/keyword_print.asp,,"['Definition and Usage', 'Related Pages']","['The print keyword is used to output text.Unlike echo, print can only output one string at a time. Unlike echo, print has a return\nvalue, which is always 1.', 'The echo keyword']","['\n<?php\n  print ""Hello World!"";\n?>\n', '']",[''],[],[]
php||private,https://www.w3schools.com/php/keyword_private.asp,,"['Definition and Usage', 'Related Pages']","['The private keyword is an access modifier. It marks a property or method as private.Private properties and methods can only be used by the class in which the property or\nmethod was defined. Derived classes and outside code cannot use them.', 'The protected keywordThe public keywordLearn more about access modifiers in our PHP OOP - Access Modifiers Tutorial.']","['\n<?php\n  class MyClass {\xa0 private $number = 0;\xa0 public function \n  add1() {\xa0\xa0\xa0 $this->number++;\xa0}\xa0 \n  public function getNumber() {\xa0\xa0\xa0 return $this->number;\xa0 \n  }}$obj = new MyClass();$obj->add1();echo ""The number is "" \n  . $obj->getNumber();\n?>\n', '']",[''],[],[]
php||protected,https://www.w3schools.com/php/keyword_protected.asp,,"['Definition and Usage', 'Related Pages']","['The protected keyword is an access modifier. It marks a property or method as protected.Protected properties and methods can only be used by the class in which the property or\nmethod was defined and any classes that derive from it. Any other code cannot use them.', 'The private keywordThe public keywordLearn more about access modifiers in our PHP OOP - Access Modifiers Tutorial.']","['\n<?php\n  class MyClass {\xa0 protected $number = 0;}class \n  AnotherClass {\xa0 public function add1() {\xa0\xa0\xa0 \n  $this->number++;\xa0 }\xa0 public function getNumber() {\xa0\xa0\xa0 \n  return $this->number;\xa0 }}$obj = new AnotherClass();\n  $obj->add1();echo ""The number is "" . $obj->getNumber();\n?>\n', '']",[''],[],[]
php||public,https://www.w3schools.com/php/keyword_public.asp,,"['Definition and Usage', 'Related Pages']","['The public keyword is an access modifier. It marks a property or method as public.Public properties and methods can be used by any code that can access the object.', 'The protected keywordThe private keywordLearn more about access modifiers in our PHP OOP - Access Modifiers Tutorial.']","['\n<?php\n  class MyClass {\xa0 public $number = 0;}$obj = new MyClass();\n  $obj->number = 5;echo ""The number is "" . $obj->number;\n?>\n', '']",[''],[],[]
php||require,https://www.w3schools.com/php/keyword_require.asp,,"['Definition and Usage', 'Related Pages']","['The require keyword is used to embed PHP code from another file. If the file is not\nfound, a fatal error is thrown and the program stops.', 'The include keywordThe include_once keywordThe require_once keywordRead more about including files in our PHP Include Files Tutorial.']","[""\n  <!DOCTYPE html><html><body><h1>Welcome to my home \n  page!</h1><p>Some text.</p><p>Some more text.</p><?php \n  require \n  'footer.php';?></body></html>"", '']",[''],[],[]
php||require_once,https://www.w3schools.com/php/keyword_require_once.asp,,"['Definition and Usage', 'Related Pages']","['The require_once keyword is used to embed PHP code from another file. If the file is\nnot found, a fatal error is thrown and the program stops. If the file was already included\npreviously, this statement will not include it again.', 'The require keywordThe include keywordThe include_once keywordRead more about including files in our PHP Include Files Tutorial.']","[""\n  <!DOCTYPE html><html><body><h1>Welcome to my home \n  page!</h1><p>Some text.</p><p>Some more text.</p><?php \n  require_once \n  'footer.php';?></body></html>"", '']",[''],[],[]
php||return,https://www.w3schools.com/php/keyword_return.asp,,"['Definition and Usage', 'Related Pages']","['The return keyword ends a function and, optionally, uses the result of an expression as\nthe return value of the function.If return is used outside of a function, it stops PHP code in the file from running. If the file\nwas included using include, include_once, require or require_once, the result of\nthe expression is used as the return value of the include statements.', 'Learn more functions in our PHP Functions Tutorial.']","['\n<?php\n  function add1($x) {\xa0 return $x + 1;}echo ""5 + 1 is "" . add1(5);\n?>\n', '']",[''],[],[]
php||static,https://www.w3schools.com/php/keyword_static.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The static keyword is used to declare properties and methods of a class as static. Static\nproperties and methods can be used without creating an instance of the class.The static keyword is also used to declare variables in a function which keep their value\nafter the function has ended.', 'Read more about static methods in our PHP OOP - Static Methods Tutorial.Read more about static properties in our PHP OOP - Static Properties Tutorial.', '']","['\n<?php\n  class MyClass {\xa0 public static $str = ""Hello World!"";\xa0 \n  public static function hello() {\xa0\xa0\xa0 echo MyClass::$str;\xa0 \n  }}echo MyClass::$str;\n  echo ""<br>"";echo MyClass::hello();\n?>\n', '\n<?php\n  function add1() {\xa0 static $number = 0;\xa0 $number++;\xa0 \n  return $number;}echo add1();echo ""<br>"";echo add1();echo ""<br>"";echo \n  add1();\n?>\n', '']",[''],[],[]
php||switch,https://www.w3schools.com/php/keyword_switch.asp,,"['Definition and Usage', 'Related Pages']","['The switch keyword is used to create a switch conditional.Switch conditionals choose a block of code to run based on the value of an expression.', 'The break keyword.\nThe case keyword.\nThe default keyword.\nRead more about switch conditionals in our PHP switch Statement Tutorial.\n\n❮ PHP Keywords\n\n\n']","['\n<?php\n  $favcolor = ""red"";switch ($favcolor) {\xa0 case ""red"":\xa0\xa0\xa0 \n  echo ""Your favorite color is red!"";\xa0\xa0\xa0 break;\xa0 \n  case ""blue"":\xa0\xa0\xa0 echo ""Your favorite color is blue!"";\xa0\xa0\xa0 \n  break;\xa0 case ""green"":\xa0\xa0\xa0 echo ""Your favorite color \n  is green!"";\xa0\xa0\xa0 break;\xa0 default:\xa0\xa0\xa0 \n  echo ""Your favorite color is neither red, blue, nor green!"";}\n?>\n', '']",[''],[],[]
php||throw,https://www.w3schools.com/php/keyword_throw.asp,,"['Definition and Usage', 'Related Pages']","['The throw keyword is used to throw exceptions. Exceptions are a way to change the\nprogram flow if an unexpected situation arises, such as invalid data.The try...catch...finally structure can be used to handle exceptions.', 'The try keyword.\nThe catch keyword.\nThe finally keyword.\nRead more about try..catch.finally (Exceptions) in our PHP Exceptions Tutorial.\n\n❮ PHP Keywords\n\n\n']","['\n<?php\n  try {\xa0 throw new Exception(""This is an exception"");} \n  catch(Exception $e) {\xa0 echo $e->getMessage();}\n?>\n', '']",[''],[],[]
php||trait,https://www.w3schools.com/php/keyword_trait.asp,,"['Definition and Usage', 'Related Pages']","['The trait keyword is used to create traits. Traits are a way to allow classes to inherit\nmultiple behaviours.', 'Read more about traits in our PHP OOP - Traits Tutorial.']","['\n<?php\n  trait message1 {\xa0 public function msg1() {\xa0\xa0\xa0 echo \n  ""OOP is fun! "";\xa0 }}class Welcome {\xa0 use \n  message1;}$obj = new Welcome();$obj->msg1();\n?>\n', '']",[''],[],[]
php||try,https://www.w3schools.com/php/keyword_try.asp,,"['Definition and Usage', 'Related Pages']","['The try keyword is used to create a try...catch, or a try...catch...finally\nstatement.', 'The throw keyword.\nThe catch keyword.\nThe finally keyword.\nRead more about try..catch.finally (Exceptions) in our PHP Exceptions Tutorial.\n\n❮ PHP Keywords\n\n\n']","['\n<?php\n  try {\xa0 throw new Exception(""This is an exception"");} \n  catch(Exception $e) {\xa0 echo $e->getMessage();}\n?>\n', '']",[''],[],[]
php||use,https://www.w3schools.com/php/keyword_use.asp,,"['Definition and Usage', 'Related Pages']","['The use keyword has two purposes: it tells a class to inherit a trait and it gives an alias to\na namespace.', 'Read more about traits in our PHP OOP - Traits Tutorial.Read more about namespaces our PHP Namespaces Tutorial.']","['\n<?php\n  trait message1 {\xa0 public function msg1() {\xa0\xa0\xa0 echo \n  ""OOP is fun! "";\xa0 }}class Welcome {\xa0 use \n  message1;}$obj = new Welcome();$obj->msg1();\n?>\n', '']",[''],[],[]
php||var,https://www.w3schools.com/php/keyword_var.asp,,"['Definition and Usage', 'Related Pages']","['The var keyword creates a property in a class. Since PHP 5, it is equivalent to the\npublic keyword.', 'The public keyword.The protected keywordThe private keyword']","['\n<?php\n  class MyClass {\xa0 var $name = ""John"";}$obj = new MyClass();\n  echo $obj->name;\n?>\n', '']",[''],[],[]
php||while,https://www.w3schools.com/php/keyword_while.asp,,"['Definition and Usage', 'Related Pages']","['The while keyword is used to create a while loop and is also used to set the looping\ncondition of a do...while.', 'The do keyword.Read more about while loops in our PHP while Loop Tutorial.Read more about do...while loops in our PHP do while Loop Tutorial.']","['\n<?php\n  $i = 1;while($i <= 5) {\xa0 echo $i;\xa0 echo ""<br>"";\xa0 \n  $i++;}\n?>\n', '']",[''],[],[]
php||xor,https://www.w3schools.com/php/keyword_xor.asp,,"['Definition and Usage', 'Related Pages', 'More Examples']","['The xor keyword is a logical operator.Logical operators are used to combine conditional statements.The return value will only be true if one of the statements is true and the other one is\nfalse.', 'Read more about operators in our PHP Operators Tutorial.', '']","['\n<?phpif(5 < 3 xor 5 < 10) {\xa0 echo ""Only one of the expressions \n  was true"";}\n?>\n', '\n<?php$result1 = false || true;echo ""false || true = "";echo \n  $result1 ? ""true"" : ""false"";echo ""<br>"";$result2 = false or \n  true;echo ""false or true = "";echo $result2 ? ""true"" : ""false"";\n?>\n', '']",[''],[],[]
php||yield,https://www.w3schools.com/php/keyword_yield.asp,,"['Definition and Usage', 'Related Pages']","['The yield keyword is used to create a generator function. Generator functions act as\niterators which can be looped through with a foreach loop.The value given by the yield keyword is used as a value in one of the iterations of the\nloop.', 'The foreach keyword.The yield from keyword.']","['\n<?php\n  function countTo3() {\xa0 yield ""1"";\xa0 yield ""2"";\xa0 \n  yield ""3"";}foreach(countTo3() as $number) {\xa0 echo \n  $number;\xa0 echo ""<br>"";}\n?>\n', '']",[''],[],[]
php||yield from,https://www.w3schools.com/php/keyword_yield_from.asp,,"['Definition and Usage', 'Related Pages']","['The yield from keyword is used to create a generator function. Generator functions act as\niterators which can be looped through with a foreach loop.The yield from keyword provides the values from an iterator one by one each time the\ngenerator function is called until there are no items left in the iterator, then the generator\nwill move on to the next yield keyword.', 'The yield keyword.The foreach keyword.']","['\n<?php\n  function countTo4() {\xa0 yield from [1, 2, 3];\xa0 yield 4;}\n  foreach(countTo4() as $number) {\xa0 echo $number;\xa0 echo \n  ""<br>"";}\n?>\n', '']",[''],[],[]
php||libxml,https://www.w3schools.com/php/php_ref_libxml.asp,,"['PHP libxml Introduction', 'Installation', 'PHP libxml Functions', 'PHP Predefined libxml Constants']","['The libxml functions and constants are used together with SimpleXML, XSLT and \nDOM functions.', 'These functions require the libxml package. \nDownload at xmlsoft.org', 'PHP: indicates the earliest version of PHP that supports the \n  function.', '']","['', '', '', '']",[''],"['Function|||Description|||&&&libxml_clear_errors()|||Clears the libxml error buffer|||&&&libxml_disable_entity_loader()|||Enables the ability to load external entities|||&&&libxml_get_errors()|||Gets the errors from the the libxml error buffer|||&&&libxml_get_last_error()|||Gets the last error from the the libxml error buffer|||&&&libxml_set_external_entity_loader()|||Changes the default external entity loader|||&&&libxml_set_streams_context()|||Sets the streams context for the next libxml document load or write|||&&&libxml_use_internal_errors()|||Disables the standard libxml errors and enables user error handling|||&&&', 'Constant|||Description|||&&&LIBXML_BIGLINES|||Make line numbers greater than 65535 to be reported correctly|||&&&LIBXML_COMPACT|||Set small nodes allocation optimization. This may improve the application performance|||&&&LIBXML_DTDATTR|||Set default DTD attributes|||&&&LIBXML_DTDLOAD|||Load external subset|||&&&LIBXML_DTDVALID|||Validate with the DTD|||&&&LIBXML_HTML_NOIMPLIED|||Set HTML_PARSE_NOIMPLIED flag. This turns off automatic adding of \n    implied html/body elements |||&&&LIBXML_HTML_NODEFDTD|||Set HTML_PARSE_NODEFDTD flag. This prevents a default doctype to be \n    added, if no doctype is found|||&&&LIBXML_NOBLANKS|||Remove blank nodes|||&&&LIBXML_NOCDATA|||Set CDATA as text nodes|||&&&LIBXML_NOEMPTYTAG|||Change empty tags (e.g. <br/> to <br></br>),  only available in the DOMDocument->save() and DOMDocument->saveXML()  functions|||&&&LIBXML_NOENT|||Substitute entities|||&&&LIBXML_NOERROR|||Do not show error reports|||&&&LIBXML_NONET|||Stop network access while loading documents|||&&&LIBXML_NOWARNING|||Do not show warning reports|||&&&LIBXML_NOXMLDECL|||Drop the XML declaration when saving a document|||&&&LIBXML_NSCLEAN|||Remove excess namespace declarations|||&&&LIBXML_PARSEHUGE|||Set XML_PARSE_HUGE flag. This relaxes any hardcoded limit from the \n    parser, such as maximum depth of a document or the size of text nodes|||&&&LIBXML_PEDANTIC|||Set XML_PARSE_PEDANTIC flag. This enables pedantic error reporting|||&&&LIBXML_XINCLUDE|||Use XInclude substitution|||&&&LIBXML_ERR_ERROR|||Get recoverable errors|||&&&LIBXML_ERR_FATAL|||Get fatal errors|||&&&LIBXML_ERR_NONE|||Get no errors|||&&&LIBXML_ERR_WARNING|||Get simple warnings|||&&&LIBXML_VERSION|||Get libxml version (e.g. 20605 or 20617)|||&&&LIBXML_DOTTED_VERSION|||Get dotted libxml version (e.g. 2.6.5 or 2.6.17)|||&&&LIBXML_SCHEMA_CREATE|||Create default or fixed value nodes during XSD schema validation |||&&&']",[]
php||libxml_clear_errors(),https://www.w3schools.com/php/func_libxml_clear_errors.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The libxml_clear_errors() function clears the libxml error buffer.', '', '']","['\n<?php\nlibxml_clear_errors()\n?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||libxml_disable_entity_loader(),https://www.w3schools.com/php/func_libxml_disable_entity_loader.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The libxml_disable_entity_loader() function enables the ability to load external entities.', '', '', '']","['\n<?php\nlibxml_disable_entity_loader(false)\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&bool|||Optional. Disable (TRUE) or enable (FALSE) libxml extensions to load external entities. Default is \n    TRUE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||libxml_get_errors(),https://www.w3schools.com/php/func_libxml_get_errors.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The libxml_get_errors() function gets the errors from the the libxml error buffer.', '', '']","['\n<?php\nlibxml_get_errors()\n?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||libxml_get_last_error(),https://www.w3schools.com/php/func_libxml_get_last_error.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The libxml_get_last_error() function gets the last error from the libxml error buffer.', '', '']","['\n<?php\nlibxml_get_last_error()\n?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||libxml_set_external_entity_loader(),https://www.w3schools.com/php/func_libxml_set_external_entity_loader.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The libxml_set_external_entity_loader() function changes the default external entity loader.', '', '', '']","['\n  <?php$xml = <<<XML<!DOCTYPE foo PUBLIC ""-//FOO/BAR"" ""http://example.com/foobar"">\n  <foo>bar</foo>XML;$dtd = <<<DTD<!ELEMENT foo (#PCDATA)>\n  DTD;libxml_set_external_entity_loader(\xa0 function ($public, \n  $system, $context) use($dtd) {\xa0\xa0\xa0 var_dump($public);\xa0\xa0\xa0 \n  var_dump($system);\xa0\xa0\xa0 var_dump($context);\xa0\xa0\xa0 \n  $f = fopen(""php://temp"", ""r+"");\xa0\xa0\xa0 fwrite($f, $dtd);\xa0\xa0\xa0 \n  rewind($f);\xa0\xa0\xa0 return $f;\xa0 });$dd = \n  new DOMDocument;$r = $dd->loadXML($xml);var_dump($dd->validate());\n  ?>', '', '', '']",[''],"['Parameter|||Description|||&&&function|||Required. A function that takes three arguments. Two strings, a public \n    id and system id, and a context (an array with four keys) as the third \n    argument. This callback should return a resource, a string from which a \n    resource can be opened, or NULL. |||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||libxml_set_streams_context(),https://www.w3schools.com/php/func_libxml_set_streams_context.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The libxml_set_streams_context() function sets the streams context for the next libxml document load or write.', '', '', '']","['\n  <?php$xml = <<<XML<!DOCTYPE foo PUBLIC ""-//FOO/BAR"" ""http://example.com/foobar"">\n  <foo>bar</foo>XML;$dtd = <<<DTD<!ELEMENT foo (#PCDATA)>\n  DTD;libxml_set_external_entity_loader(\xa0 function ($public, \n  $system, $context) use($dtd) {\xa0\xa0\xa0 var_dump($public);\xa0\xa0\xa0 \n  var_dump($system);\xa0\xa0\xa0 var_dump($context);\xa0\xa0\xa0 \n  $f = fopen(""php://temp"", ""r+"");\xa0\xa0\xa0 fwrite($f, $dtd);\xa0\xa0\xa0 \n  rewind($f);\xa0\xa0\xa0 return $f;\xa0 });$dd = \n  new DOMDocument;$r = $dd->loadXML($xml);var_dump($dd->validate());\n  ?>', '', '', '']",[''],"['Parameter|||Description|||&&&function|||Required. A function that takes three arguments. Two strings, a public \n    id and system id, and a context (an array with four keys) as the third \n    argument. This callback should return a resource, a string from which a \n    resource can be opened, or NULL. |||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||libxml_use_internal_errors(),https://www.w3schools.com/php/func_libxml_use_internal_errors.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The libxml_use_internal_errors() function disables the standard libxml errors and \nenables user error handling.', '', '', '']","['\n<?php\nlibxml_use_internal_errors(true)\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&user_errors|||Optional. Enable user error handling (TRUE) or disable user error \n    handling (FALSE). Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Mail,https://www.w3schools.com/php/php_ref_mail.asp,,"['PHP Mail Introduction', 'Requirements', 'Installation', 'Runtime Configuration', 'PHP Mail Functions']","['The mail() function allows you to send emails directly from a script.', 'For the mail functions to be available, PHP requires an installed and working \nemail system. The program to be used is defined by \nthe configuration settings in the php.ini file.', 'The mail functions are part of the PHP core. There is no installation \nneeded to use these functions.', 'The behavior of the mail functions is affected by settings in php.ini:', '']","['', '', '', '', '']",[''],"['Name|||Default|||Description|||Changeable|||&&&mail.add_x_header|||""0""|||Add X-PHP-Originating-Script that will include UID of the script followed by the filename. For PHP 5.3.0 and above|||PHP_INI_PERDIR|||&&&mail.log|||NULL|||The path to a log file that will log all mail() calls. Log\xa0 include full path of script, line number, To address and headers. For PHP 5.3.0 and above |||PHP_INI_PERDIR|||&&&SMTP|||""localhost""|||Windows only: The DNS name or IP address of the SMTP server|||PHP_INI_ALL|||&&&smtp_port|||""25""|||Windows only: The SMTP port number. For PHP 4.3.0 and above|||PHP_INI_ALL|||&&&sendmail_from|||NULL|||Windows only: Specifies the ""from"" address to be used when sending mail from mail()|||PHP_INI_ALL|||&&&sendmail_path|||""/usr/sbin/sendmail -t -i""|||Specifies where the sendmail program can be found. This directive works also under Windows. If set, SMTP, smtp_port and sendmail_from are ignored |||PHP_INI_SYSTEM|||&&&', 'Function|||Description|||&&&ezmlm_hash()|||Calculates the hash value needed by EZMLM|||&&&mail()|||Allows you to send emails directly from a script|||&&&']",[]
php||ezmlm_hash(),https://www.w3schools.com/php/func_mail_ezmlm_hash.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ezmlm_hash() function calculates the hash value needed when keeping EZMLM \nmailing lists in a MySQL database.This function accepts an email address, for which it calculates an integer \nhash value. This value is compatible with the EZMLM mailing list manager, and \ncan then be used with the EZMLM database for user management. ', '', '', '']","['\n<?php$user = ""someone@example.com"";$hash = ezmlm_hash($user);\n echo ""The hash value for $user is: $hash."";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&address|||Required. Specifies the email address being hashed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mail(),https://www.w3schools.com/php/func_mail_mail.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The mail() function allows you to send emails directly from a script.', 'Send an email with extra headers:Send an HTML email:', '', '', '']","['\n<?php// the message$msg = ""First line of text\\nSecond line of text"";\n\n// use wordwrap() if lines are longer than 70 characters\n$msg = wordwrap($msg,70);\n\n// send email\nmail(""someone@example.com"",""My subject"",$msg);?>\n', '', '', '', '']",[''],"['Parameter|||Description|||&&&to|||Required. Specifies the receiver / receivers of the email|||&&&subject|||Required. Specifies the subject of the email. Note: This parameter cannot contain any newline characters|||&&&message|||Required. Defines the message to be sent. Each line should be separated with a LF (\\n).\n    Lines should not exceed 70 characters.\n Windows note: If a full stop is found on the beginning of a line in the message, it might be removed. To solve this problem, replace the full stop with a double dot:\n <?php\n $txt = str_replace(""\\n."", ""\\n.."", $txt);\n ?>|||&&&headers|||Optional. Specifies additional headers, like From, Cc, and Bcc. The additional headers should be separated with a CRLF (\\r\\n).\n Note: When sending an email, it must contain a From header.\n This can be set with this parameter or in the php.ini file.|||&&&parameters|||Optional. Specifies an additional parameter to the sendmail program\n    (the one defined in the sendmail_path configuration setting).\n    (i.e. this can be used to set the envelope sender address when using sendmail\n    with the -f sendmail option)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||Math,https://www.w3schools.com/php/php_ref_math.asp,,"['PHP Math Introduction', 'Installation', 'PHP Math Functions', 'PHP Predefined Math Constants']","['The math functions can handle values within the range of integer and float types.', 'The PHP math functions are part of the PHP core. No installation is required to use these functions.', '', '']","['', '', '', '']",[''],"[""Function|||Description|||&&&abs()|||Returns the absolute (positive) value of a number|||&&&acos()|||Returns the arc cosine of a number|||&&&acosh()|||Returns the inverse hyperbolic cosine of a number |||&&&asin()|||Returns the arc sine of a number|||&&&asinh()|||Returns the inverse hyperbolic sine of a number|||&&&atan()|||Returns the arc tangent of a number in radians|||&&&atan2()|||Returns the arc tangent of two variables x and y|||&&&atanh()|||Returns the inverse hyperbolic tangent of a number|||&&&base_convert()|||Converts a number from one number base to another|||&&&bindec()|||Converts a binary number to a decimal number|||&&&ceil()|||Rounds a number up to the nearest integer|||&&&cos()|||Returns the cosine of a number|||&&&cosh()|||Returns the hyperbolic cosine of a number|||&&&decbin()|||Converts a decimal number to a binary number|||&&&dechex()|||Converts a decimal number to a hexadecimal number|||&&&decoct()|||Converts a decimal number to an octal number|||&&&deg2rad()|||Converts a degree value to a radian value|||&&&exp()|||Calculates the exponent of e|||&&&expm1()|||Returns exp(x) - 1|||&&&floor()|||Rounds a number down to the nearest integer|||&&&fmod()|||Returns the remainder of x/y|||&&&getrandmax()|||Returns the largest possible value returned by rand()|||&&&hexdec()|||Converts a hexadecimal number to a decimal number|||&&&hypot()|||Calculates the hypotenuse of a right-angle triangle|||&&&intdiv()|||Performs integer division|||&&&is_finite()|||Checks whether a value is finite or not|||&&&is_infinite()|||Checks whether a value is infinite or not|||&&&is_nan()|||Checks whether a value is 'not-a-number'|||&&&lcg_value()|||Returns a pseudo random number in a range between 0 and 1|||&&&log()|||Returns the natural logarithm of a number|||&&&log10()|||Returns the base-10 logarithm of a number|||&&&log1p()|||Returns log(1+number)|||&&&max()|||Returns the highest value in an array, or the highest value of several specified values|||&&&min()|||Returns the lowest value in an array, or the lowest value of several specified values|||&&&mt_getrandmax()|||Returns the largest possible value returned by mt_rand()|||&&&mt_rand()|||Generates a random integer using Mersenne Twister algorithm|||&&&mt_srand()|||Seeds the Mersenne Twister random number generator|||&&&octdec()|||Converts an octal number to a decimal number|||&&&pi()|||Returns the value of PI|||&&&pow()|||Returns x raised to the power of y|||&&&rad2deg()|||Converts a radian value to a degree value|||&&&rand()|||Generates a random integer|||&&&round()|||Rounds a floating-point number|||&&&sin()|||Returns the sine of a number|||&&&sinh()|||Returns the hyperbolic sine of a number|||&&&sqrt()|||Returns the square root of a number|||&&&srand()|||Seeds the random number generator|||&&&tan()|||Returns the tangent of a number|||&&&tanh()|||Returns the hyperbolic tangent of a number|||&&&"", 'Constant|||Value|||Description|||&&&INF|||INF|||The infinite|||&&&M_E|||2.7182818284590452354|||Returns e|||&&&M_EULER|||0.57721566490153286061|||Returns Euler constant|||&&&M_LNPI|||1.14472988584940017414|||Returns the natural logarithm of PI: log_e(pi)|||&&&M_LN2|||0.69314718055994530942|||Returns the natural logarithm of 2: log_e 2|||&&&M_LN10|||2.30258509299404568402|||Returns the natural logarithm of 10: log_e 10|||&&&M_LOG2E|||1.4426950408889634074|||Returns the base-2 logarithm of E: log_2 e|||&&&M_LOG10E|||0.43429448190325182765|||Returns the base-10 logarithm of E: log_10 e|||&&&M_PI|||3.14159265358979323846|||Returns Pi|||&&&M_PI_2|||1.57079632679489661923|||Returns Pi/2|||&&&M_PI_4|||0.78539816339744830962|||Returns Pi/4|||&&&M_1_PI|||0.31830988618379067154|||Returns 1/Pi|||&&&M_2_PI|||0.63661977236758134308|||Returns 2/Pi|||&&&M_SQRTPI|||1.77245385090551602729|||Returns the square root of PI: sqrt(pi)|||&&&M_2_SQRTPI|||1.12837916709551257390|||Returns 2/square root of PI: 2/sqrt(pi)|||&&&M_SQRT1_2|||0.70710678118654752440|||Returns the square root of 1/2: 1/sqrt(2)|||&&&M_SQRT2|||1.41421356237309504880|||Returns the square root of 2: sqrt(2)|||&&&M_SQRT3|||1.73205080756887729352|||Returns the square root of 3: sqrt(3)|||&&&NAN|||NAN|||Not A Number|||&&&PHP_ROUND_HALF_UP|||1|||Round halves up|||&&&PHP_ROUND_HALF_DOWN|||2|||Round halves down|||&&&PHP_ROUND_HALF_EVEN|||3|||Round halves to even numbers|||&&&PHP_ROUND_HALF_ODD|||4|||Round halves to odd numbers|||&&&']",[]
php||abs(),https://www.w3schools.com/php/func_math_abs.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The abs() function returns the absolute (positive) value of a number.', '', '', '']","['\n<?php\necho(abs(6.7) . ""<br>"");echo(abs(-6.7) . ""<br>"");\necho(abs(-3) . ""<br>"");\necho(abs(3));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number. If the number is of type float, the return type is also float, otherwise it is integer|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||acos(),https://www.w3schools.com/php/func_math_acos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The acos() function returns the arc cosine of a number.Tip: acos(-1) returns the value of Pi.', '', '', '']","['\n<?php\necho(acos(0.64) . ""<br>"");echo(acos(-0.4) . ""<br>"");\necho(acos(0) . ""<br>"");\necho(acos(-1) . ""<br>"");\necho(acos(1) . ""<br>"");\necho(acos(2));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number in range -1 to 1|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||acosh(),https://www.w3schools.com/php/func_math_acosh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The acosh() function returns the inverse hyperbolic cosine of a number.', '', '', '']","['\n<?php\necho(acosh(7) . ""<br>"");echo(acosh(56) . ""<br>"");\necho(acosh(2.45));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||asin(),https://www.w3schools.com/php/func_math_asin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The asin() function returns the arc sine of a number.Tip: asin(1) returns the value of Pi/2.', '', '', '']","['\n<?php\necho(asin(0.64) . ""<br>"");echo(asin(-0.4) . ""<br>"");\necho(asin(0) . ""<br>"");\necho(asin(-1) . ""<br>"");\necho(asin(1) . ""<br>"");\necho(asin(2));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number in range -1 to 1|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||asinh(),https://www.w3schools.com/php/func_math_asinh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The asinh() function returns the inverse hyperbolic sine of a number.', '', '', '']","['\n<?php\necho(asinh(7) . ""<br>"");echo(asinh(56) . ""<br>"");\necho(asinh(2.45));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||atan(),https://www.w3schools.com/php/func_math_atan.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The atan() function returns the arc tangent of arg as a numeric value between -Pi/2 and Pi/2 radians.', '', '', '']","['\n<?php\necho(atan(0.50) . ""<br>"");\necho(atan(-0.50) . ""<br>"");\necho(atan(5) . ""<br>"");\necho(atan(-5) . ""<br>"");\necho(atan(100) . ""<br>"");\necho(atan(-100));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&arg|||Required. Specifies an argument to process|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||atan2(),https://www.w3schools.com/php/func_math_atan2.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The atan2() function returns the arc tangent of y/x, in radians. Where x and y are the coordinates of a point (x,y).', '', '', '']","['\n<?php\necho(atan2(0.50,0.50) . ""<br>"");\necho(atan2(-0.50,-0.50) . ""<br>"");\necho(atan2(5,5) . ""<br>"");\necho(atan2(10,20) . ""<br>"");\necho(atan2(-5,-5) . ""<br>"");\necho(atan2(-10,10));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&y|||Required. Specifies a positive or negative number|||&&&x|||Required. Specifies a positive or negative number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||atanh(),https://www.w3schools.com/php/func_math_atanh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The atanh() function returns the inverse hyperbolic tangent of a number.', '', '', '']","['\n<?php\n echo(atanh(M_PI_4) . ""<br>"");echo(atanh(0.50) . ""<br>"");\n echo(atanh(-0.50) . ""<br>"");echo(atanh(1) . ""<br>"");echo(atanh(-1));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||base_convert(),https://www.w3schools.com/php/func_math_base_convert.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The base_convert() function converts a number from one number base to another.', '', '', '', '']","['\n<?php\n $hex = ""E196""; echo base_convert($hex,16,8); ?>\n', '\n<?php\n$oct = ""0031"";\n echo base_convert($oct,8,10);\n ?>\n &&&&&& \n<?php\n$oct = ""364"";\n echo base_convert($oct,8,16);\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the number to convert|||&&&frombase|||Required. Specifies the original base of number. Has to be between 2 and 36, inclusive. Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35|||&&&tobase|||Required. Specifies the base to convert to. Has to be between 2 and 36, inclusive. Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||bindec(),https://www.w3schools.com/php/func_math_bindec.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The bindec() function converts a binary number to a decimal number.Tip: To convert decimal to binary, look at the decbin() function.', '', '', '']","['\n<?php\necho bindec(""0011"") . ""<br>"";\necho bindec(""01"") . ""<br>"";\necho bindec(""11000110011"") . ""<br>"";\necho bindec(""111"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&binary_string|||Required. Specifies the binary string to convert.Note: \n    Must be a string!|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||ceil(),https://www.w3schools.com/php/func_math_ceil.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ceil() function rounds a number UP to the nearest integer, if necessary.Tip: To round a number DOWN to the nearest integer, look at the\nfloor() function.Tip: To round a floating-point number, look at the\nround() function.', '', '', '']","['\n<?php\necho(ceil(0.60) . ""<br>"");\necho(ceil(0.40) . ""<br>"");\necho(ceil(5) . ""<br>"");\necho(ceil(5.1) . ""<br>"");\necho(ceil(-5.1) . ""<br>"");\necho(ceil(-5.9));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the value to round up|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||cos(),https://www.w3schools.com/php/func_math_cos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The cos() function returns the cosine of a number.Note: The cos() \nfunction returns a numeric value between -1 and 1, which represents the cosine of the angle.', '', '', '']","['\n<?php\necho(cos(3) . ""<br>"");\necho(cos(-3) . ""<br>"");\necho(cos(0) . ""<br>"");\necho(cos(M_PI) . ""<br>"");\n echo(cos(2*M_PI));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||cosh(),https://www.w3schools.com/php/func_math_cosh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The cosh() function returns the  hyperbolic cosine of a number (equivalent to (exp(number) + exp(-number)) / 2).', '', '', '']","['\n<?php\necho(cosh(3) . ""<br>"");\necho(cosh(-3) . ""<br>"");\necho(cosh(0) . ""<br>"");\necho(cosh(M_PI) . ""<br>"");\n echo(cosh(2*M_PI));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||decbin(),https://www.w3schools.com/php/func_math_decbin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The decbin() function converts a decimal number to a binary number.Tip: To convert binary to decimal, look at the bindec() function.', '', '', '']","['\n<?php\necho decbin(""3"") . ""<br>"";\necho decbin(""1"") . ""<br>"";\necho decbin(""1587"") . ""<br>"";\necho decbin(""7"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the decimal value to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||dechex(),https://www.w3schools.com/php/func_math_dechex.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dechex() function converts a decimal number to a hexadecimal number.Tip: To convert hexadecimal to decimal, look at the hexdec() function.', '', '', '']","['\n<?php\necho dechex(""30"") . ""<br>"";\necho dechex(""10"") . ""<br>"";\necho dechex(""1587"") . ""<br>"";\necho dechex(""70"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the decimal value to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||decoct(),https://www.w3schools.com/php/func_math_decoct.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The decoct() function converts a decimal number to an octal number.Tip: To convert octal to decimal, look at the octdec() function.', '', '', '']","['\n<?php\necho decoct(""30"") . ""<br>"";\necho decoct(""10"") . ""<br>"";\necho decoct(""1587"") . ""<br>"";\necho decoct(""70"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the decimal value to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||deg2rad(),https://www.w3schools.com/php/func_math_deg2rad.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The deg2rad() function converts a degree value to a radian value.Tip: To convert a radian value to a degree value, look at the\nrad2deg() function.', '', '', '', '']","['\n<?php\necho deg2rad(""45"") . ""<br>"";\necho deg2rad(""90"") . ""<br>"";\necho deg2rad(""360"");\n ?>\n', '\n<?php\n$deg = 180;\n$rad = deg2rad($deg);\necho ""$deg degrees is equal to $rad radians."";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the degree to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||exp(),https://www.w3schools.com/php/func_math_exp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The exp() function returns E raised to the power of x (Ex).'E' is the base of the natural system of logarithms (approximately 2.718282) and x is the number passed to it."", '', '', '']","['\n<?php\necho(exp(0) . ""<br>"");echo(exp(1) . ""<br>"");\necho(exp(10) . ""<br>"");\necho(exp(4.8));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. Specifies the exponent|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||expm1(),https://www.w3schools.com/php/func_math_expm1.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The expm1() function returns exp(x) - 1.', '', '', '']","['\n<?php\necho(expm1(0) . ""<br>"");echo(expm1(1) . ""<br>"");\necho(expm1(10) . ""<br>"");\necho(expm1(4.8));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. Specifies the exponent|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||floor(),https://www.w3schools.com/php/func_math_floor.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The floor() function rounds a number DOWN to the nearest integer, if necessary, \nand returns the result.Tip: To round a number UP to the nearest integer, look at the\nceil() function.Tip: To round a floating-point number, look at the\nround() function.', '', '', '']","['\n<?php\necho(floor(0.60) . ""<br>"");\necho(floor(0.40) . ""<br>"");\necho(floor(5) . ""<br>"");\necho(floor(5.1) . ""<br>"");\necho(floor(-5.1) . ""<br>"");\necho(floor(-5.9));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the number to round down|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||fmod(),https://www.w3schools.com/php/func_math_fmod.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fmod() function returns the remainder (modulo) of x/y.', '', '', '']","['\n<?php\necho(fmod(20, 4) . ""<br>"");\necho(fmod(20, 3) . ""<br>"");\necho(fmod(15, 6) . ""<br>"");\n  echo(fmod(-10, 3) . ""<br>"");\n  echo(fmod(0, 0));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. Specifies the dividend|||&&&y|||Required. Specifies the divisor|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||getrandmax(),https://www.w3schools.com/php/func_math_getrandmax.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The getrandmax() function returns the largest possible value that can be \nreturned by rand().', '', '']","['\n<?php\necho(getrandmax()); \n ?>\n', '', '']",[''],['Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&'],[]
php||hexdec(),https://www.w3schools.com/php/func_math_hexdec.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The hexdec() function converts a hexadecimal number to a decimal number.Tip: To convert decimal to hexadecimal, look at the\ndechex() function.', '', '', '']","['\n<?php\necho hexdec(""1e"") . ""<br>"";\necho hexdec(""a"") . ""<br>"";\necho hexdec(""11ff"") . ""<br>"";\necho hexdec(""cceeff"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&hex_string|||Required. Specifies the hexadecimal string to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||hypot(),https://www.w3schools.com/php/func_math_hypot.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The hypot() function calculates the hypotenuse of a right-angle triangle.Tip: This function is equivalent to sqrt(x*x + y*y).', '', '', '']","['\n<?php\necho hypot(3,4) . ""<br>"";\necho hypot(4,6) . ""<br>"";\n echo hypot(1,3) . ""<br>"";echo sqrt(3*3+4*4);\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. Specifies the length of first side|||&&&y|||Required. Specifies the length of second side|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||intdiv(),https://www.w3schools.com/php/func_math_intdiv.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The intdiv() function is used for integer division.', '', '', '']","['\n<?php\necho \n  intdiv(8, 4) . ""<br>"";\necho intdiv(5, 2) . ""<br>"";\necho intdiv(-5, -2);\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&dividend|||Required. Specifies a number that will be divided|||&&&divisor|||Required. Specifies the number to divide the dividend by|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_finite(),https://www.w3schools.com/php/func_math_is_finite.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_finite() function checks whether a value is finite or not.This function returns true (1) if the specified value is a finite number, otherwise it returns false/nothing.The value is finite if it is within the allowed range for a PHP float on this platform.', '', '', '']","['\n<?php\necho is_finite(2) . ""<br>"";\necho is_finite(log(0)) . ""<br>"";\necho is_finite(2000);\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. Specifies the value to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_infinite(),https://www.w3schools.com/php/func_math_is_infinite.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_infinite() function checks whether a value is infinite or not.This function returns true (1) if the specified value is an infinite number, otherwise it returns false/nothing.The value is infinite if it is outside the allowed range for a PHP float on this platform.', '', '', '']","['\n<?php\necho is_infinite(2) . ""<br>"";\necho is_infinite(log(0)) . ""<br>"";\necho is_infinite(2000);\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. Specifies the value to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_nan(),https://www.w3schools.com/php/func_math_is_nan.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The is_nan() function checks whether a value is 'not a number'.This function returns true (1) if the specified value is 'not-a-number', otherwise it returns false/nothing."", '', '', '']","['\n<?php\n echo is_nan(200) . ""<br>"";echo is_nan(acos(1.01));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. Specifies the value to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||lcg_value(),https://www.w3schools.com/php/func_math_lcg_value.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The lcg_value() function returns a pseudo random number in a range between 0 and 1.', '', '']","['\n<?php\necho lcg_value();?>\n', '', '']",[''],['Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&'],[]
php||log(),https://www.w3schools.com/php/func_math_log.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The log() function returns the natural logarithm of a number, or the \nlogarithm of number to base.', '', '', '']","['\n<?php\necho(log(2.7183) . ""<br>"");\necho(log(2) . ""<br>"");\necho(log(1) . ""<br>"");\necho(log(0);\n ?>\n', '', '', '']",[''],"[""Parameter|||Description|||&&&number|||Required. Specifies the value to calculate the logarithm for|||&&&base|||Optional. The logarithmic base to use. Default is 'e'|||&&&"", 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||log10(),https://www.w3schools.com/php/func_math_log10.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The log10() function returns the base-10 logarithm of a number.', '', '', '']","['\n<?php\necho(log10(2.7183) . ""<br>"");\necho(log10(2) . ""<br>"");\necho(log10(1) . ""<br>"");\necho(log10(0));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the value to calculate the logarithm for|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||log1p(),https://www.w3schools.com/php/func_math_log1p.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The log1p() function returns log(1+number), computed in a way that is \naccurate even when the value of number is close to zero.', '', '', '']","['\n<?php\necho(log1p(2.7183) . ""<br>"");\necho(log1p(2) . ""<br>"");\necho(log1p(1) . ""<br>"");\necho(log1p(0));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the number to process|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||max(),https://www.w3schools.com/php/func_math_max.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The max() function returns the highest value in an array, or the highest value of several specified values.', '', '', '']","['\n<?php\n echo(max(2,4,6,8,10) . ""<br>"");echo(max(22,14,68,18,15) . ""<br>"");\n echo(max(array(4,6,8,10)) . ""<br>"");echo(max(array(44,16,81,12)));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array_values|||Required. Specifies an array containing the values|||&&&value1,value2,...|||Required. Specifies the values to compare (must be at least two values)|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||min(),https://www.w3schools.com/php/func_math_min.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The min() function returns the lowest value in an array, or the lowest value of several specified values.', '', '', '']","['\n<?php\n echo(min(2,4,6,8,10) . ""<br>"");echo(min(22,14,68,18,15) . ""<br>"");\n echo(min(array(4,6,8,10)) . ""<br>"");echo(min(array(44,16,81,12)));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&array_values|||Required. Specifies an array containing the values|||&&&value1,value2,...|||Required. Specifies the values to compare (must be at least two values)|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||mt_getrandmax(),https://www.w3schools.com/php/func_math_mt_getrandmax.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The mt_getrandmax() function returns the largest possible value that can be returned by\nmt_rand().', '', '']","['\n<?php\necho(mt_getrandmax()); \n ?>\n', '', '']",[''],['Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&'],[]
php||mt_rand(),https://www.w3schools.com/php/func_math_mt_rand.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mt_rand() function generates a random integer using the Mersenne Twister algorithm.Example tip: If you want a random integer between 10 and 100 (inclusive), use mt_rand (10,100).', '', '', '']","['\n<?php\necho(mt_rand() . ""<br>"");\necho(mt_rand() . ""<br>"");\necho(mt_rand(10,100));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&min|||Optional. Specifies the lowest number to return. Default is 0|||&&&max|||Optional. Specifies the highest number to return. Default is\n mt_getrandmax()|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mt_srand(),https://www.w3schools.com/php/func_math_mt_srand.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mt_srand() function seeds the Mersenne Twister random number generator.', '', '', '']","['\n<?php\nmt_srand(mktime());\necho(mt_rand());?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&seed|||Optional. Specifies the seed value|||&&&mode|||Optional. Specifies the algorithm to use. Can be one of the following constants:\n    \nMT_RAND_MT19937\n      - uses the fixed, correct Mersenne Twister implementation (which is used \n      from PHP 7.1)\nMT_RAND_PHP - uses the incorrect Mersenne Twister implementation \n      (which was used up to PHP 7.1)\n\n|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||octdec(),https://www.w3schools.com/php/func_math_octdec.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The octdec() function converts an octal number to a decimal number.Tip: To convert decimal to octal, look at the decoct() function.', '', '', '']","['\n<?php\necho octdec(""36"") . ""<br>"";\necho octdec(""12"") . ""<br>"";\necho octdec(""3063"") . ""<br>"";\necho octdec(""106"");\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&octal_string|||Required. Specifies the octal string to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||pi(),https://www.w3schools.com/php/func_math_pi.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The pi() function returns the value of PI.Tip: The named constant M_PI is identical to pi().', '', '']","['\n<?php\necho(pi());?>\n', '', '']",[''],['Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&'],[]
php||pow(),https://www.w3schools.com/php/func_math_pow.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The pow() function returns x raised to the power of y.', '', '', '']","['\n<?php\n echo(pow(2,4) . ""<br>"");echo(pow(-2,4) . ""<br>"");echo(pow(-2,-4) . ""<br>"");echo(pow(-2,-3.2));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. Specifies the base to use|||&&&y|||Required. Specifies the exponent|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||rad2deg(),https://www.w3schools.com/php/func_math_rad2deg.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rad2deg() function converts a radian value to a degree value.Tip: To convert a degree value to a radian value, look at the\ndeg2rad() function.', '', '', '']","['\n<?php\necho rad2deg(pi()) . ""<br>"";\necho rad2deg(pi()/4);\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a radian value to convert|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||rand(),https://www.w3schools.com/php/func_math_rand.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rand() function generates a random integer.Example tip: If you want a random integer between 10 and 100 (inclusive), use rand (10,100).Tip: As of PHP 7.1, the rand() function has been an alias of the mt_rand() function.', '', '', '']","['\n<?php\necho(rand() . ""<br>"");\necho(rand() . ""<br>"");\necho(rand(10,100));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&min|||Optional. Specifies the lowest number to return. Default is 0|||&&&max|||Optional. Specifies the highest number to return. Default is\n getrandmax()|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||round(),https://www.w3schools.com/php/func_math_round.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The round() function rounds a floating-point number.Tip: To round a number UP to the nearest integer, look at the\nceil() function.Tip: To round a number DOWN to the nearest integer, look at the\nfloor() function.', '', '', '', '']","['\n<?php\necho(round(0.60) . ""<br>"");\necho(round(0.50) . ""<br>"");\necho(round(0.49) . ""<br>"");\necho(round(-4.40) . ""<br>"");\necho(round(-4.60));\n ?>\n', '\n<?php\n echo(round(4.96754,2) . ""<br>"");echo(round(7.045,2) . ""<br>"");\n echo(round(7.055,2));\n ?>\n &&&&&& \n<?php\n echo(round(1.5,0,PHP_ROUND_HALF_UP) . ""<br>"");\n echo(round(-1.5,0,PHP_ROUND_HALF_UP) . ""<br>"");\n echo(round(1.5,0,PHP_ROUND_HALF_DOWN) . ""<br>"");\n echo(round(-1.5,0,PHP_ROUND_HALF_DOWN) . ""<br>"");\n echo(round(1.5,0,PHP_ROUND_HALF_EVEN) . ""<br>"");\n echo(round(-1.5,0,PHP_ROUND_HALF_EVEN) . ""<br>"");\n echo(round(1.5,0,PHP_ROUND_HALF_ODD) . ""<br>"");\n echo(round(-1.5,0,PHP_ROUND_HALF_ODD));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies the value to round|||&&&precision|||Optional. Specifies the number of decimal digits to round to. Default is 0|||&&&mode|||Optional. Specifies a constant to specify the rounding mode:\n \nPHP_ROUND_HALF_UP - Default. Rounds number up to precision  decimal, when it is half way there. Rounds 1.5 to 2 and -1.5 to -2\nPHP_ROUND_HALF_DOWN - Round number down to precision  decimal places, when it is half way there. Rounds 1.5 to 1 and -1.5 to -1\nPHP_ROUND_HALF_EVEN - Round number to precision decimal  places towards the next even value\nPHP_ROUND_HALF_ODD - Round number to precision  decimal places towards the next odd value\n\n|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||sin(),https://www.w3schools.com/php/func_math_sin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The sin() function returns the sine of a number.', '', '', '']","['\n<?php\necho(sin(3) . ""<br>"");\necho(sin(-3) . ""<br>"");\necho(sin(0) . ""<br>"");\necho(sin(M_PI) . ""<br>"");\necho(sin(M_PI_2));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a value in radians|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||sinh(),https://www.w3schools.com/php/func_math_sinh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The sinh() function returns the hyperbolic sine of a number, which is equal to (exp(number) - exp(-number))/2).', '', '', '']","['\n<?php\necho(sinh(3) . ""<br>"");\necho(sinh(-3) . ""<br>"");\necho(sinh(0) . ""<br>"");\necho(sinh(M_PI) . ""<br>"");\necho(sinh(M_PI_2));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||sqrt(),https://www.w3schools.com/php/func_math_sqrt.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The sqrt() function returns the square root of a number.', '', '', '']","['\n<?php\necho(sqrt(0) . ""<br>"");\necho(sqrt(1) . ""<br>"");\necho(sqrt(9) . ""<br>"");\necho(sqrt(0.64) . ""<br>"");\necho(sqrt(-9));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||srand(),https://www.w3schools.com/php/func_math_srand.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The srand() function seeds the random number generator (rand()).Tip: From PHP 4.2.0, the random number generator is seeded automatically \nand there is no need to use this function. ', '', '', '']","['\n<?php\n srand(mktime());\necho(rand());?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&seed|||Optional. Specifies the seed value|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||tan(),https://www.w3schools.com/php/func_math_tan.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The tan() function returns the tangent of a number.', '', '', '']","['\n<?php\necho(tan(M_PI_4) . ""<br>"");\necho(tan(0.50) . ""<br>"");\necho(tan(-0.50) . ""<br>"");\necho(tan(5) . ""<br>"");\necho(tan(10) . ""<br>"");\necho(tan(-5) . ""<br>"");\necho(tan(-10));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a value in radians|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||tanh(),https://www.w3schools.com/php/func_math_tanh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The tanh() function returns the hyperbolic tangent of a number, which is equal to sinh(x)/cosh(x).', '', '', '']","['\n<?php\necho(tanh(M_PI_4) . ""<br>"");\necho(tanh(0.50) . ""<br>"");\necho(tanh(-0.50) . ""<br>"");\necho(tanh(5) . ""<br>"");\necho(tanh(10) . ""<br>"");\necho(tanh(-5) . ""<br>"");\necho(tanh(-10));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. Specifies a number|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||Misc.,https://www.w3schools.com/php/php_ref_misc.asp,,"['PHP Miscellaneous Introduction', 'Installation', 'Runtime Configuration', 'PHP Miscellaneous Functions', 'PHP Predefined Misc. Constants']","['The misc. functions were only placed here because none of the other \ncategories seemed to fit.', 'The misc. functions are part of the PHP core. No installation is required to \nuse these functions.', 'The behavior of the misc. functions is affected by settings in the php.ini file.Misc. configuration options:', '', '']","['', '', '', '', '']",[''],"['Name|||Description|||Default|||Changeable|||&&&ignore_user_abort|||FALSE indicates that scripts will be terminated as soon as they try to output something after a client has aborted their connection|||""0""|||PHP_INI_ALL|||&&&highlight.string|||Color for highlighting a string in PHP syntax|||""#DD0000""|||PHP_INI_ALL|||&&&highlight.comment|||Color for highlighting PHP comments|||""#FF8000""|||PHP_INI_ALL|||&&&highlight.keyword|||Color for syntax highlighting PHP keywords (e.g. parenthesis and semicolon) |||""#007700""|||PHP_INI_ALL|||&&&highlight.default|||Default color for PHP syntax|||""#0000BB""|||PHP_INI_ALL|||&&&highlight.html|||Color for HTML code|||""#000000""|||PHP_INI_ALL|||&&&browscap|||Name and location of browser-capabilities file (e.g. browscap.ini) |||NULL|||PHP_INI_SYSTEM|||&&&', ""Function|||Description|||&&&\n connection_aborted()|||Checks whether the client has disconnected|||&&&\n connection_status()|||Returns the current connection status|||&&&connection_timeout()|||Deprecated from PHP 4.0.5. Checks whether the script has timed out|||&&&constant()|||Returns the value of a constant|||&&&define()|||Defines a constant|||&&&defined()|||Checks whether a constant exists|||&&&die()|||Alias of exit()|||&&&eval()|||Evaluates a string as PHP code|||&&&exit()|||Prints a message and exits the current script|||&&&get_browser()|||Returns the capabilities of the user's browser|||&&&__halt_compiler()|||Halts the compiler execution|||&&&highlight_file()|||Outputs a file with the PHP syntax highlighted|||&&&highlight_string()|||Outputs a string with the PHP syntax highlighted|||&&&hrtime()|||Returns the system's high resolution time|||&&&\n ignore_user_abort()|||Sets whether a remote client can abort the running of a script|||&&&pack()|||Packs data into a binary string|||&&&\n php_strip_whitespace()|||Returns the source code of a file with PHP comments and whitespace removed|||&&&show_source()|||Alias of highlight_file()|||&&&sleep()|||Delays code execution for a number of seconds|||&&&sys_getloadavg()|||Returns the system load average|||&&&time_nanosleep()|||Delays code execution for a number of seconds and nanoseconds|||&&&time_sleep_until()|||Makes a script sleep until the specified time|||&&&uniqid()|||Generates a unique ID|||&&&unpack()|||Unpacks data from a binary string|||&&&usleep()|||Delays code execution for a number of microseconds|||&&&"", 'Constant|||Description|||&&&CONNECTION_ABORTED|||Connection is aborted by user or network error|||&&&CONNECTION_NORMAL|||Connection is running normally|||&&&CONNECTION_TIMEOUT|||Connection timed out|||&&&__COMPILER_HALT_OFFSET__|||\xa0|||&&&']",[]
php||connection_aborted(),https://www.w3schools.com/php/func_misc_connection_aborted.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The connection_aborted() function checks whether the client has disconnected.', '', '']","['\n\n<?phpfunction check_abort()\n\xa0\xa0{\n\xa0\xa0if (connection_aborted())\n\xa0\xa0error_log (""Script $GLOBALS[SCRIPT_NAME]"" .\n\xa0\xa0""$GLOBALS[SERVER_NAME] was aborted by the user."");\n\xa0\xa0}\n\n// Some script to be executed here\n\n// Call the check_abort function when the script ends\nregister_shutdown_function(""check_abort"");\n?>', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||connection_status(),https://www.w3schools.com/php/func_misc_connection_status.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The connection_status() function returns the current connection status.Possible values that can be returned are: ', '', '']","[""\n<?phpswitch (connection_status())\n{\ncase CONNECTION_NORMAL:\n\xa0\xa0$txt = 'Connection is in a normal state';\n\xa0\xa0break;\ncase CONNECTION_ABORTED:\n\xa0\xa0$txt = 'Connection aborted';\n\xa0\xa0break;\ncase CONNECTION_TIMEOUT:\n\xa0\xa0$txt = 'Connection timed out';\n\xa0\xa0break;\ncase (CONNECTION_ABORTED & CONNECTION_TIMEOUT):\n\xa0\xa0$txt = 'Connection aborted and timed out';\n\xa0\xa0break;\ndefault:\n\xa0\xa0$txt = 'Unknown';\n\xa0\xa0break;\n}\n\necho $txt;\n?>"", '', '']",['Definition and Usage###&&&|||0 - CONNECTION_NORMAL - connection is running normally|||1 - CONNECTION_ABORTED - connection is aborted by user or network error|||2 - CONNECTION_TIMEOUT -\xa0 connection timed out|||3 - CONNECTION_ABORTED & CONNECTION_TIMEOUT|||'],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||connection_timeout(),https://www.w3schools.com/php/func_misc_connection_timeout.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The connection_timeout() function was deprecated and removed in PHP version 4.0.5.The connection_timeout() function checks whether the script has timed out.', '', '']","['', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||constant(),https://www.w3schools.com/php/func_misc_constant.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The constant() function returns the value of a constant.Note:\nThis function also works with class constants. ', '', '', '']","['\n\n<?php//define a constant\ndefine(""GREETING"",""Hello you! How are you today?"");\n\necho constant(""GREETING"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&constant|||Required. Specifies the name of the constant to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||define(),https://www.w3schools.com/php/func_misc_define.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The define() function defines a constant.Constants are much like variables, except for the following differences: ', '', '', '']","['\n<?phpdefine(""GREETING"",""Hello you! How are you today?"");\necho constant(""GREETING"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&name|||Required. Specifies the name of the constant|||&&&value|||Required. Specifies the value of the constant.|||&&&case_insensitive|||Optional. Specifies whether the constant name should be case-insensitive. Possible values:\nTRUE - Case-insensitive (deprecated in PHP 7.3)\nFALSE - Case-sensitive (this is default)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||defined(),https://www.w3schools.com/php/func_misc_defined.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The defined() function checks whether a constant exists.', '', '', '']","['\n<?phpdefine(""GREETING"",""Hello you! How are you today?"");\necho defined(""GREETING"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&name|||Required. Specifies the name of the constant to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||die(),https://www.w3schools.com/php/func_misc_die.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The die() function is an alias of the exit() function.', '', '', '']","['\n\n<?php$site = ""https://www.w3schools.com/"";\nfopen($site,""r"")\nor die(""Unable to connect to $site"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&message|||Required. A message or status number to print before terminating the script.\n    A status number will not be written to the output, just used as the exit \n    status.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||eval(),https://www.w3schools.com/php/func_misc_eval.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The eval() function evaluates a string as PHP code.The string must be valid PHP code and must end with semicolon.Note: A return statement will terminate the evaluation of the string immediately.Tip: This function can be useful for storing PHP code in a database.', '', '', '']","['\n<?php$string = ""beautiful"";\n$time = ""winter"";\n\n$str = \'This is a $string $time morning!\';\necho $str. ""<br>"";\n\neval(""\\$str = \\""$str\\"";"");\necho $str;\n?>', '\nThis is a $string $time morning!\nThis is a beautiful winter morning! \n', '', '']",[''],"['Parameter|||Description|||&&&phpcode|||Required. Specifies the PHP code to be evaluated|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||exit(),https://www.w3schools.com/php/func_misc_exit.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The exit() function prints a message and terminates the current script.', '', '', '']","['\n<?php$site = ""https://www.w3schools.com/"";\nfopen($site,""r"")\nor exit(""Unable to connect to $site"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&message|||Required. A message or status number to print before terminating the script.\n    A status number will not be written to the output, just used as the exit \n    status.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||get_browser(),https://www.w3schools.com/php/func_misc_get_browser.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The get_browser() function looks up the user's browscap.ini file and returns \nthe capabilities of the user's browser."", '', '', '']","[""\n<?phpecho $_SERVER['HTTP_USER_AGENT'];$browser = get_browser();\n print_r($browser);\n?>"", '', '', '']",[''],"['Parameter|||Description|||&&&user_agent|||Optional. Specifies the name of an HTTP user agent. Default is the value of $HTTP_USER_AGENT. You can bypass this parameter with NULL|||&&&return_array|||Optional. If this parameter is set to TRUE, the function will return an array instead of an object|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||__halt_compiler,https://www.w3schools.com/php/func_misc___halt_compiler.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The __halt_compiler() function halts the compiler execution.', '', '']","['', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||highlight_file(),https://www.w3schools.com/php/func_misc_highlight_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The highlight_file() function outputs a file with the PHP syntax \nhighlighted. The syntax is highlighted by using HTML tags.Tip: The colors used for syntax highlighting can be set in the php.ini file or with the ini_set() function.Note: When using this function, the entire file will be displayed - including passwords and any other \nsensitive information!', '', '', '']","['\n<html>\n<body>\n<?php\nhighlight_file(""test.php"");\n?>\n</body>\n</html>', '\n<html>\n<body>\n<?php\necho\xa0(""test.php"");\n?>\n</body></html>', '\n<html><body><code><span style=""color: #000000"">&lt;html&gt;<br />&lt;body&gt;<br /><span style=""color: #0000BB"">&lt;?php<br /></span><span style=""color: #007700"">echo&nbsp;(</span><span style=""color: #DD0000"">""test.php""</span><span style=""color: #007700"">);<br /></span><span style=""color: #0000BB"">?&gt;\n <br /></span>&lt;/body&gt;<br />&lt;/html&gt;</span></code></body></html>', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the file to be highlighted|||&&&return|||Optional. If set to TRUE, this function will return the highlighted code as a string, instead of printing it out. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||highlight_string(),https://www.w3schools.com/php/func_misc_highlight_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The highlight_string() function outputs a string with the PHP syntax \nhighlighted. The string is highlighted by using HTML tags.The colors used for syntax highlighting can be set in the php.ini file or with the ini_set() function.', '', '', '']","['\n<html>\n<body>\n<?php\nhighlight_string(""Hello world! <?php phpinfo(); ?>"");\n?>\n</body>\n</html>', '\nHello\xa0world!\xa0<?php\xa0phpinfo();\xa0?>', '\n<html>\n<body>\n<code>\n<span style=""color: #000000"">Hello&nbsp;world!&nbsp;\n<span style=""color: #0000BB"">&lt;?php&nbsp;phpinfo</span>\n<span style=""color: #007700"">();&nbsp;</span>\n<span style=""color: #0000BB"">?&gt;</span>\n</span>\n</code>\n</body></html>', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to be highlighted|||&&&return|||Optional. If set to TRUE, this function will return the highlighted code as a string, instead of printing it out. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||hrtime(),https://www.w3schools.com/php/func_misc_hrtime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","[""The hrtime() function returns the system's high resolution time."", '', '', '']","['\n<html>\n<body>\n<?php\n  echo hrtime();\n?>\n</body>\n</html>', '\n233568471904329635', '', '']",[''],"['Parameter|||Description|||&&&return_as_num|||Optional. If set to TRUE, this function will return the high resolution \n    time as array or number. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ignore_user_abort(),https://www.w3schools.com/php/func_misc_ignore_user_abort.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ignore_user_abort() function sets whether a user should abort a script \nexecution when he/she disconnects.', '', '', '']","['\n<?phpignore_user_abort();\n?>', '\n0', '', '']",[''],"['Parameter|||Description|||&&&setting|||Optional. TRUE ignores user aborts in a script (the script will continue to run). This is FALSE by default, meaning that client aborts will cause the script to stop running |||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||pack(),https://www.w3schools.com/php/func_misc_pack.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The pack() function packs data into a binary string.', '', '', '', '']","['\n <?phpecho pack(""C3"",80,72,80);\n ?>\n', '\n <?phpecho pack(""C*"",80,72,80);\n ?>', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the format to use when packing data.\n Possible values:\n\na - NUL-padded string\nA - SPACE-padded string\nh - Hex string, low nibble first\nH - Hex string, high nibble first\nc - signed char\nC - unsigned char\ns - signed short (always 16 bit, machine byte order)\nS - unsigned short (always 16 bit, machine byte order)\nn - unsigned short (always 16 bit, big endian byte order)\nv - unsigned short (always 16 bit, little endian byte order)\ni - signed integer (machine dependent size and byte order)\nI - unsigned integer (machine dependent size and byte order)\nl - signed long (always 32 bit, machine byte order)\nL - unsigned long (always 32 bit, machine byte order)\nN - unsigned long (always 32 bit, big endian byte order)\nV - unsigned long (always 32 bit, little endian byte order)\nq - signed long long (always 64 bit, machine byte order)\nQ - unsigned long long (always 64 bit, machine byte order)\nJ - unsigned long long (always 64 bit, big endian byte order)\nP - unsigned long long (always 64 bit, little endian byte order)\nf - float (machine dependent size and representation)\ng - float (machine dependent size, little endian byte order)\nG - float (machine dependent size, big endian byte order)\nd - double (machine dependent size and representation)\ne - double (machine dependent size, little endian byte order)\nE - double (machine dependent size, big endian byte order)\nx - NUL byte\nX - Back up one byte\nZ - NUL-padded string\n@ - NUL-fill to absolute position \n\n|||&&&args+|||Optional. Specifies one or more arguments to be packed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||php_strip_whitespace(),https://www.w3schools.com/php/func_misc_php_strip_whitespace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The php_strip_whitespace() function returns the source code of the specified file \nwith PHP comments and whitespace removed.', '', '', '']","['\n<?php// PHP comment\n\n/*\n*  Another PHP comment\n*/\n\necho php_strip_whitespace\xa0\xa0\xa0\xa0\xa0\xa0\xa0(""test.php"");\n?>', '\n<?php\necho php_strip_whitespace (""test.php""); ?>', '', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the file to strip|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||show_source(),https://www.w3schools.com/php/func_misc_show_source.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The show_source() function outputs a file with the PHP syntax \nhighlighted. The syntax is highlighted by using HTML tags.The colors used for highlighting can be set in the php.ini file or with the ini_set() function.show_source() is an alias of highlight_file().Note: When using this function, the entire file will be displayed - including passwords and any other \nsensitive information!', '', '', '']","['\n<html>\n<body>\n<?php\n show_source(""test.php"");\n?>\n</body>\n</html>', '\n<html>\n<body>\n<?php\necho\xa0(""test.php"");\n?>\n</body></html>', '\n<html><body><code><span style=""color: #000000"">&lt;html&gt;<br />&lt;body&gt;<br /><span style=""color: #0000BB"">&lt;?php<br /></span><span style=""color: #007700"">echo&nbsp;(</span><span style=""color: #DD0000"">""test.php""</span><span style=""color: #007700"">);<br /></span><span style=""color: #0000BB"">?&gt;\n <br /></span>&lt;/body&gt;<br />&lt;/html&gt;</span></code></body></html>', '']",[''],"['Parameter|||Description|||&&&filename|||Required. Specifies the file to display|||&&&return|||Optional. If set to TRUE, this function will return the highlighted code as a string, instead of printing it out. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||sleep(),https://www.w3schools.com/php/func_misc_sleep.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The sleep() function delays execution of the current script for a specified number of \nseconds.Note: This function throws an error if the \nspecified number of seconds is negative.', '', '', '']","['\n<?phpecho date(\'h:i:s\') . ""<br>"";\n\n//sleep for 3 seconds\nsleep(3);\n\n//start again\necho date(\'h:i:s\');\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&seconds|||Required. Specifies the number of seconds to delay the script|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||sys_getloadavg(),https://www.w3schools.com/php/func_misc_sys_getloadavg.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The sys_getloadavg() function returns the system load average.This function returns an array with three numbers that represents the average \nsystem load over the last 1, 5 and 15 minutes.Note: This function does not work on Windows platforms.', '', '']","[""\n<?php$loadtime = sys_getloadavg();if ($loadtime[0] > 0.80) {\xa0 \n  die('Sorry, server is busy.');}?>"", '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||time_nanosleep(),https://www.w3schools.com/php/func_misc_time_nanosleep.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The time_nanosleep() function delays execution of the current script for a \nspecified number of seconds and nanoseconds.', '', '', '']","['\n<?phpif (time_nanosleep(2,500000000) === true)\n\xa0\xa0{\n\xa0\xa0echo ""Slept for 2,5 seconds"";\n\xa0\xa0}\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&seconds|||Required. Specifies the number of seconds to delay the script|||&&&nanoseconds|||Required. Specifies the number of\xa0 nanoseconds to delay the script (must be less than 1,000,000,000)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||time_sleep_until(),https://www.w3schools.com/php/func_misc_time_sleep_until.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The time_sleep_until() function is used to make a script sleep until the specified time.', '', '', '']","['\n<?phptime_sleep_until(time()+3);echo ""Hello"";\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&timestamp|||Required. Specifies when the script should wake|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||uniqid(),https://www.w3schools.com/php/func_misc_uniqid.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The uniqid() function generates a unique ID based on the microtime (the current time in microseconds).Note: The generated ID from this function does not guarantee \nuniqueness of the return value! To generate an extremely difficult to predict ID, \nuse the md5() function.', '', '', '']","['\n <?phpecho uniqid();\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&prefix|||Optional. Specifies a prefix to the unique ID (useful if two scripts generate ids at exactly the same microsecond)|||&&&more_entropy|||Optional. Specifies more entropy at the end of the return value. This will make the result more unique. When set to TRUE, the return string will be 23 characters. Default is FALSE, and the return string will be 13 characters long |||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||unpack(),https://www.w3schools.com/php/func_misc_unpack.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The unpack() function unpacks data from a binary string.', '', '', '', '']","['\n <?php$data = ""PHP"";\nprint_r(unpack(""C*"",$data));\n ?>\n', '\n <?php$data = ""PHP"";\nprint_r(unpack(""C*myint"",$data));\n ?> &&&&&& \n <?php$bin = pack(""c2n2"",0x1234,0x5678,65,66);\nprint_r(unpack(""c2chars/n2int"",$bin));\n ?>', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the format to use when unpacking data.\n Possible values:\n\na - NUL-padded string\nA - SPACE-padded string\nh - Hex string, low nibble first\nH - Hex string, high nibble first\nc - signed char\nC - unsigned char\ns - signed short (always 16 bit, machine byte order)\nS - unsigned short (always 16 bit, machine byte order)\nn - unsigned short (always 16 bit, big endian byte order)\nv - unsigned short (always 16 bit, little endian byte order)\ni - signed integer (machine dependent size and byte order)\nI - unsigned integer (machine dependent size and byte order)\nl - signed long (always 32 bit, machine byte order)\nL - unsigned long (always 32 bit, machine byte order)\nN - unsigned long (always 32 bit, big endian byte order)\nV - unsigned long (always 32 bit, little endian byte order)\nq - signed long long (always 64 bit, machine byte order)\nQ - unsigned long long (always 64 bit, machine byte order)\nJ - unsigned long long (always 64 bit, big endian byte order)\nP - unsigned long long (always 64 bit, little endian byte order)\nf - float (machine dependent size and representation)\ng - float (machine dependent size, little endian byte order)\nG - float (machine dependent size, big endian byte order)\nd - double (machine dependent size and representation)\ne - double (machine dependent size, little endian byte order)\nE - double (machine dependent size, big endian byte order)\nx - NUL byte\nX - Back up one byte\nZ - NUL-padded string\n@ - NUL-fill to absolute \n\n|||&&&data|||Required. Specifies the binary data to be unpacked|||&&&offset|||Optional. Specifies where to start unpacking from. Default is 0.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||usleep(),https://www.w3schools.com/php/func_misc_usleep.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The usleep() function delays execution of the current script for a specified number of \nmicroseconds (a microsecond equals one millionth of a second).', '', '', '']","['\n<?phpecho date(\'h:i:s\') . ""<br>"";//sleep for 3 seconds\n usleep(3000000);//start againecho date(\'h:i:s\');\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&microseconds|||Required. Specifies the number of microseconds to delay the script|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||MySQLi,https://www.w3schools.com/php/php_ref_mysqli.asp,,"['PHP MySQLi Introduction', 'Installation / Runtime Configuration', 'PHP MySQLi Functions']","['The MySQLi functions allows you to access MySQL database servers.Note: The MySQLi extension is designed to work with MySQL version 4.1.13 or newer.', 'For the MySQLi functions to be available, you must compile PHP with support for the \nMySQLi extension.The MySQLi extension was introduced with PHP version 5.0.0. The MySQL Native Driver was included in PHP version 5.3.0.For installation details, go to:\n\nhttp://php.net/manual/en/mysqli.installation.phpFor runtime configuration details, go to:\n\nhttp://php.net/manual/en/mysqli.configuration.php', '']","['', '', '']",[''],"['Function|||Description|||&&&affected_rows()|||Returns the number of affected rows in the previous MySQL operation|||&&&autocommit()|||Turns on or off auto-committing database modifications|||&&&begin_transaction()|||Starts a transaction|||&&&change_user()|||Changes the user of the specified database connection|||&&&character_set_name()|||Returns the default character set for the database connection|||&&&close()|||Closes a previously opened database connection|||&&&commit()|||Commits the current transaction|||&&&connect()|||Opens a new connection to the MySQL server|||&&&connect_errno()|||Returns the error code from the last connection error|||&&&connect_error()|||Returns the error description from the last connection error|||&&&data_seek()|||Adjusts the result pointer to an arbitrary row in the result-set|||&&&debug()|||Performs debugging operations|||&&&dump_debug_info()|||Dumps debugging info into the log|||&&&errno()|||Returns the last error code for the most recent function call|||&&&error()|||Returns the last error description for the most recent function call|||&&&error_list()|||Returns a list of errors for the most recent function call|||&&&fetch_all()|||Fetches all result rows as an associative array, a numeric array, or both|||&&&fetch_array()|||Fetches a result row as an associative, a numeric array, or both|||&&&fetch_assoc()|||Fetches a result row as an associative array|||&&&fetch_field()|||Returns the next field in the result-set, as an object|||&&&fetch_field_direct()|||Returns meta-data for a single field in the result-set, as an object|||&&&fetch_fields()|||Returns an array of objects that represent the fields in a \nresult-set|||&&&fetch_lengths()|||Returns the lengths of the columns of the current row in the result-set|||&&&fetch_object()|||Returns the current row of a result-set, as an object|||&&&fetch_row()|||Fetches one row from a result-set and returns it as an enumerated array|||&&&field_count()|||Returns the number of columns for the most recent query|||&&&field_seek()|||Sets the field cursor to the given field offset|||&&&get_charset()|||Returns a character set object|||&&&get_client_info()|||Returns the MySQL client library version|||&&&get_client_stats()|||Returns statistics about client per-process|||&&&get_client_version()|||Returns the MySQL client library version as an integer|||&&&get_connection_stats()|||Returns statistics about the client connection|||&&&get_host_info()|||Returns the MySQL server hostname and the connection type|||&&&get_proto_info()|||Returns the MySQL protocol version|||&&&get_server_info()|||Returns the MySQL server version|||&&&get_server_version()|||Returns the MySQL server version as an integer|||&&&info()|||Returns information about the last executed query|||&&&init()|||Initializes MySQLi and returns a resource for use with real_connect()|||&&&insert_id()|||Returns the auto-generated id from the last query|||&&&kill()|||Asks the server to kill a MySQL thread|||&&&more_results()|||Checks if there are more results from a multi query|||&&&multi_query()|||Performs one or more queries on the database|||&&&next_result()|||Prepares the next result-set from multi_query()|||&&&options()|||Sets extra connect options and affect behavior for a connection|||&&&ping()|||Pings a server connection, or tries to reconnect if the connection has gone down|||&&&poll()|||Polls connections|||&&&prepare()|||Prepares an SQL statement for execution|||&&&query()|||Performs a query against a database|||&&&real_connect()|||Opens a new connection to the MySQL server|||&&&real_escape_string()|||Escapes special characters in a string for use in an SQL statement|||&&&real_query()|||Executes a single SQL query|||&&&reap_async_query()|||Returns result from an async SQL query|||&&&refresh()|||Refreshes/flushes tables or caches, or resets the replication server information|||&&&rollback()|||Rolls back the current transaction for the database|||&&&select_db()|||Select the default database for database queries|||&&&set_charset()|||Sets the default client character set|||&&&set_local_infile_default()|||Unsets user defined handler for load local infile command|||&&&set_local_infile_handler()|||Set callback function for LOAD DATA LOCAL INFILE command|||&&&sqlstate()|||Returns the SQLSTATE error code for the error|||&&&ssl_set()|||Used to establish secure connections using SSL|||&&&stat()|||Returns the current system status|||&&&stmt_init()|||Initializes a statement and returns an object for use with stmt_prepare()|||&&&store_result()|||Transfers a result-set from the last query|||&&&thread_id()|||Returns the thread ID for the current connection|||&&&thread_safe()|||Returns whether the client library is compiled as thread-safe|||&&&use_result()|||Initiates the retrieval of a result-set from the last query executed|||&&&warning_count()|||Returns the number of warnings from the last query in the connection|||&&&']",[]
php||mysqli affected_rows,https://www.w3schools.com/php/func_mysqli_affected_rows.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The affected_rows / mysqli_affected_rows() function returns the number of affected rows in the previous \nSELECT, INSERT, UPDATE, REPLACE, or DELETE query.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Perform queries and print out affected rows$mysqli -> query(""SELECT * FROM Persons"");echo ""Affected rows: "" . \n$mysqli -> affected_rows;\n$mysqli -> query(""DELETE FROM Persons WHERE Age>32"");echo ""Affected rows: "" . \n$mysqli -> affected_rows;\n$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }// Perform queries and print out affected rowsmysqli_query($con, ""SELECT * FROM Persons"");echo ""Affected rows: "" . mysqli_affected_rows($con);\nmysqli_query($con, ""DELETE FROM Persons WHERE Age>32"");echo ""Affected rows: "" . mysqli_affected_rows($con);\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli autocommit(),https://www.w3schools.com/php/func_mysqli_autocommit.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The autocommit() / mysqli_autocommit() function turns on or off auto-committing database modifications.Tip: Also look at the commit() \nfunction, which commits the current transaction for the specified database \nconnection, and the rollback() \nfunction, which rolls back the current transaction.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Turn autocommit off$mysqli -> autocommit(FALSE);\n// Insert some values $mysqli -> query(""INSERT INTO Persons (FirstName,LastName,Age)\nVALUES (\'Peter\',\'Griffin\',35)"");\n  $mysqli -> query(""INSERT INTO Persons (FirstName,LastName,Age) \nVALUES (\'Glenn\',\'Quagmire\',33)"");\n// Commit transactionif (!$mysqli -> commit()) {\xa0 echo ""Commit \n  transaction failed"";\xa0 exit();}$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }// Turn autocommit offmysqli_autocommit($con,FALSE);\n// Insert some values mysqli_query($con,""INSERT INTO Persons (FirstName,LastName,Age)\nVALUES (\'Peter\',\'Griffin\',35)"");\nmysqli_query($con,""INSERT INTO Persons (FirstName,LastName,Age) \nVALUES (\'Glenn\',\'Quagmire\',33)"");\n// Commit transactionif (!$mysqli_commit($con)) {\xa0 echo \n  ""Commit transaction failed"";\xa0 exit();}// Close connection\n mysqli_close($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&mode|||Required. FALSE turns auto-commit off. TRUE turns auto-commit on (and commits any waiting queries)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli change_user(),https://www.w3schools.com/php/func_mysqli_change_user.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The change_user() / mysqli_change_user() function changes the user of the specified database connection, and sets the current database.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Reset all and select a new database\n$mysqli -> change_user(""my_user"", ""my_password"", ""test"");\n  $mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connection\n if (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }// Reset all and select a new database\n mysqli_change_user($con, ""my_user"", ""my_password"", ""test"");\n mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&username|||Required. Specifies the MySQL user name|||&&&password|||Required. Specifies the MySQL password|||&&&dbname|||Required. Specifies the database to change to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli character_set_name(),https://www.w3schools.com/php/func_mysqli_character_set_name.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The character_set_name() / mysqli_character_set_name() function returns the default character set for the database connection.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$charset = $mysqli -> character_set_name();echo ""Default character set is: "" . $charset;\n  $mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$charset=mysqli_character_set_name($con);echo ""Default character set is: "" . $charset;mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli close(),https://www.w3schools.com/php/func_mysqli_close.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The close() / mysqli_close() function closes a previously opened database connection.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// ....some PHP code...$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }\n// ....some PHP code...\n\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to close|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli commit(),https://www.w3schools.com/php/func_mysqli_commit.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The commit() / mysqli_commit() function commits the current transaction for the specified database connection.Tip: Also look at the autocommit() function,\nwhich turns on or off auto-committing database modifications, and the\nrollback() function, which rolls back the current transaction.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Turn autocommit off$mysqli -> autocommit(FALSE);\n// Insert some values $mysqli -> query(""INSERT INTO Persons (FirstName,LastName,Age)\nVALUES (\'Peter\',\'Griffin\',35)"");\n  $mysqli -> query(""INSERT INTO Persons (FirstName,LastName,Age) \nVALUES (\'Glenn\',\'Quagmire\',33)"");\n// Commit transactionif (!$mysqli -> commit()) {\xa0 echo ""Commit \n  transaction failed"";\xa0 exit();}$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }// Turn autocommit offmysqli_autocommit($con,FALSE);\n// Insert some values mysqli_query($con,""INSERT INTO Persons (FirstName,LastName,Age)\nVALUES (\'Peter\',\'Griffin\',35)"");\nmysqli_query($con,""INSERT INTO Persons (FirstName,LastName,Age) \nVALUES (\'Glenn\',\'Quagmire\',33)"");\n// Commit transactionif (!mysqli_commit($con)) {\xa0 echo \n  ""Commit transaction failed"";\xa0 exit();}// Close connection\n mysqli_close($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&flags|||Optional. A constant:\n    \nMYSQLI_TRANS_COR_AND_CHAIN - Appends ""AND CHAIN""\nMYSQLI_TRANS_COR_AND_NO_CHAIN - Appends ""AND NO CHAIN""\nMYSQLI_TRANS_COR_RELEASE - Appends ""RELEASE""\nMYSQLI_TRANS_COR_NO_RELEASE - Appends ""NO RELEASE""\n\n|||&&&name|||Optional. COMMIT/*name*/ is executed if this parameter is \n    specified|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mysqli connect(),https://www.w3schools.com/php/func_mysqli_connect.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The connect() / mysqli_connect() function opens a new connection to the MySQL server.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connection\n if (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n  \xa0 \n  exit();}\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&host|||Optional. Specifies a host name or an IP address|||&&&username|||Optional. Specifies the MySQL username|||&&&password|||Optional. Specifies the MySQL password|||&&&dbname|||Optional. Specifies the default database to be used|||&&&port|||Optional. Specifies the port number to attempt to connect to the MySQL server|||&&&socket|||Optional. Specifies the socket or named pipe to be used|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli connect_errno(),https://www.w3schools.com/php/func_mysqli_connect_errno.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The connect_errno / mysqli_connect_errno() function returns the error code from the last connection error, if any.', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connection\n if (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n  \xa0 \n  exit();}\n?>\n', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||mysqli connect_error(),https://www.w3schools.com/php/func_mysqli_connect_error.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The connect_error / mysqli_connect_error() function returns the error description from the last connection error, if any.', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connection\n if (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n  \xa0 \n  exit();}\n?>\n', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||mysqli_data_seek(),https://www.w3schools.com/php/func_mysqli_data_seek.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mysqli_data_seek() function adjusts the result pointer to an arbitrary row in the result-set.', '', '', '']","['\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n // Check connection\n if (mysqli_connect_errno())\n\xa0\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0\xa0}$sql=""SELECT Lastname,Age FROM Persons ORDER BY Lastname"";\nif ($result=mysqli_query($con,$sql))\xa0 {\xa0 // Seek to row number 15\xa0 mysqli_data_seek($result,14);\xa0 // Fetch row\xa0 $row=mysqli_fetch_row($result);\xa0 printf (""Lastname: %s Age: %s\\n"", $row[0], $row[1]);\xa0 // Free result set\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&offset|||Required. Specifies the field offset. Must be between 0 and the total number of rows - 1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli_debug(),https://www.w3schools.com/php/func_mysqli_debug.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mysqli_debug() function is used to perform debugging operations.Note: In order to use this function, you must compile the \nMySQL client library to support debugging.', '', '', '']","['\n<?php\n mysqli_debug(""d:t:o,/temp/client.trace"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&message|||Required. A string that represents the debugging operation to perform|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli dump_debug_info(),https://www.w3schools.com/php/func_mysqli_dump_debug_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dump_debug_info() / mysqli_dump_debug_info() function dumps debugging info into the log.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n  $mysqli -> dump_debug_info();?>\n', '\n<?php$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n mysqli_dump_debug_info($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&link|||Required. A link identifier returned by\n    connect() or\n    init()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli errno(),https://www.w3schools.com/php/func_mysqli_errno.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The errno / mysqli_errno() function returns the last error code for the most recent function call, if any.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }// Perform a query, check for errorif (!$mysqli -> query(""INSERT INTO Persons (FirstName)\nVALUES (\'Glenn\')"")) {\xa0 echo(""Errorcode: "" . $mysqli -> errno);\n  }\n$mysqli -> close();?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}// Perform a query, check for errorif (!mysqli_query($con,""INSERT INTO Persons (FirstName)\nVALUES (\'Glenn\')"")) {\xa0 echo(""Errorcode: "" . mysqli_errno($con));\n  }\xa0 \nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli error(),https://www.w3schools.com/php/func_mysqli_error.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The error / mysqli_error() function returns the last error description for the most recent function call, if any.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }// Perform a query, check for errorif (!$mysqli -> query(""INSERT INTO Persons (FirstName)\nVALUES (\'Glenn\')"")) {\xa0 echo(""Error description: "" . $mysqli -> error);\n  }\n$mysqli -> close();?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}// Perform a query, check for errorif (!mysqli_query($con,""INSERT INTO Persons (FirstName)\nVALUES (\'Glenn\')"")) {\xa0 echo(""Error description: "" . mysqli_error($con));}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli error_list(),https://www.w3schools.com/php/func_mysqli_error_list.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The error_list / mysqli_error_list() function returns a list of errors from \nthe last executed command, if any.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }// Perform a query, check for errorif (!$mysqli -> query(""INSERT INTO Persons (FirstName)\nVALUES (\'Glenn\')"")) {\xa0 print_r($mysqli -> error_list);\n  }\n$mysqli -> close();?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }// Perform a query, check for errorif (!mysqli_query($con,""INSERT INTO Persons (FirstName)\nVALUES (\'Glenn\')"")) {\xa0 print_r(mysqli_error_list($con));}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_all(),https://www.w3schools.com/php/func_mysqli_fetch_all.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_all() / mysqli_fetch_all() function fetches all result rows and returns the \nresult-set as an associative array, a numeric array, or both.Note: This function is available only with MySQL Native Driver.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";$result \n  = \n  $mysqli -> query($sql);\n// Fetch all$result -> fetch_all(MYSQLI_ASSOC);// Free result set$result \n  -> free_result();\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n\n if (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }\xa0$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\n $result = mysqli_query($con, $sql);// Fetch allmysqli_fetch_all($result, MYSQLI_ASSOC);\n// Free result setmysqli_free_result($result);\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&resulttype|||Optional. Specifies what type of array that should be produced. Can be one of the following values:\nMYSQLI_ASSOC\nMYSQLI_NUM (this is default)\nMYSQLI_BOTH\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_array(),https://www.w3schools.com/php/func_mysqli_fetch_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_array() / mysqli_fetch_array() function fetches a result row as an associative array, a numeric array, or both.Note: Fieldnames returned from this function are case-sensitive.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";$result \n  = \n  $mysqli -> query($sql);\n// Numeric array\n $row = $result \n  -> fetch_array(MYSQLI_NUM);printf (""%s (%s)\\n"", $row[0], $row[1]);// Associative array\n $row = $result \n  -> fetch_array(MYSQLI_ASSOC);printf (""%s (%s)\\n"", $row[""Lastname""], $row[""Age""]);\n// Free result set$result \n  -> free_result();\n$mysqli -> close();?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\n $result = mysqli_query($con,$sql);// Numeric array\n $row = mysqli_fetch_array($result, MYSQLI_NUM);printf (""%s (%s)\\n"", $row[0], $row[1]);// Associative array\n $row = mysqli_fetch_array($result, MYSQLI_ASSOC);printf (""%s (%s)\\n"", $row[""Lastname""], $row[""Age""]);\n// Free result setmysqli_free_result($result);\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&resulttype|||Optional. Specifies what type of array that should be produced. Can be one of the following values:\nMYSQLI_ASSOC\nMYSQLI_NUM\nMYSQLI_BOTH (this is default)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_assoc(),https://www.w3schools.com/php/func_mysqli_fetch_assoc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_assoc() / mysqli_fetch_assoc() function fetches a result row as an associative array.Note: Fieldnames returned from this function are case-sensitive.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\n  $result = $mysqli -> query($sql);\n// Associative array\n $row = $result \n  -> fetch_assoc();printf (""%s (%s)\\n"", $row[""Lastname""], $row[""Age""]);\n// Free result set$result \n  -> free_result();\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n if (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\n $result = mysqli_query($con, $sql);// Associative array\n $row = mysqli_fetch_assoc($result);printf (""%s (%s)\\n"", $row[""Lastname""], $row[""Age""]);\n// Free result setmysqli_free_result($result);\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_field(),https://www.w3schools.com/php/func_mysqli_fetch_field.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_field() / mysqli_fetch_field() function returns the next field (column) in the result-set, as an object.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\n  \xa0 // Get field information for all fields\xa0 while ($fieldinfo = \n  $result -> fetch_field()) {\xa0\xa0\xa0 printf(""Name: %s\\n"", $fieldinfo -> name);\xa0\xa0\xa0 printf(""Table: %s\\n"", $fieldinfo -> table);\xa0\xa0\xa0 printf(""Max. Len: %d\\n"", $fieldinfo -> max_length);\n  \xa0\xa0}\xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con, $sql)) {\xa0 // Get field information for all fields\xa0 while ($fieldinfo = mysqli_fetch_field($result)) {\xa0\xa0\xa0 printf(""Name: %s\\n"", $fieldinfo -> name);\xa0\xa0\xa0 printf(""Table: %s\\n"", $fieldinfo -> table);\xa0\xa0\xa0 printf(""max. Len: %d\\n"", $fieldinfo -> max_length);\n  \xa0\xa0}\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_field_direct(),https://www.w3schools.com/php/func_mysqli_fetch_field_direct.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_field_direct() / mysqli_fetch_field_direct() function returns meta-data for a single field in \na result-set, as an object.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\n\xa0 // Get field information for \n  column ""Age""\xa0 $fieldinfo = $result -> fetch_field_direct(1);\n\xa0\xa0printf(""Name: %s\\n"", $fieldinfo -> name);\xa0\xa0printf(""Table: %s\\n"", $fieldinfo -> table);\n  \xa0\xa0printf(""Max. Len: %d\\n"", $fieldinfo -> max_length);\n  \xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con, $sql)) {\xa0 // Get field information for \n  column ""Age""\xa0 $fieldinfo = mysqli_fetch_field_direct($result, 1);\n\xa0 printf(""Name: %s\\n"", $fieldinfo -> name);\xa0 printf(""Table: %s\\n"", $fieldinfo -> table);\xa0 printf(""Max. Len: %d\\n"", $fieldinfo -> max_length);\n\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&fieldnr|||Required. Specifies the field number. Must be an integer from 0 to number of fields-1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_fields(),https://www.w3schools.com/php/func_mysqli_fetch_fields.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_fields() / mysqli_fetch_fields() function returns an array of objects that represent the fields in a result-set.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\n\xa0 // Get field information for all fields\xa0 $fieldinfo = \n  $result -> fetch_fields();\xa0 foreach ($fieldinfo as \n  $val) {\xa0\xa0\xa0 printf(""Name: %s\\n"", $val -> name);\xa0\xa0\xa0 printf(""Table: %s\\n"", $val -> table);\xa0\xa0\xa0 printf(""Max. Len: %d\\n"", $val -> max_length);\n  \xa0\xa0}\xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n\n if (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con , $sql)) {\xa0 // Get field information for all fields\xa0 $fieldinfo = mysqli_fetch_fields($result);\xa0 foreach ($fieldinfo as $val) {\xa0\xa0\xa0 printf(""Name: %s\\n"", $val->name);\xa0\xa0\xa0 printf(""Table: %s\\n"", $val->table);\xa0\xa0\xa0 printf(""Max. Len: %d\\n"", $val->max_length);\n  \xa0\xa0}\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||lengths / mysqli_fetch_lengths(),https://www.w3schools.com/php/func_mysqli_fetch_lengths.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The lengths / mysqli_fetch_lengths() function returns the length of the fields of the current row in the result-set.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT * FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\n  \xa0 $row = \n  $result -> fetch_row();\xa0 // Display field lengths\xa0 foreach ($result \n  -> lengths as $i => $val) {\xa0\xa0\xa0 printf(""Field %2d has length: %2d\\n"", $i + 1, $val);\xa0 }\n  \xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT * FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con, $sql)) {\xa0 $row = mysqli_fetch_row($result);\n  \xa0 // Display field lengths\xa0 foreach (mysqli_fetch_lengths($result) as $i => $val) {\xa0\xa0\xa0 printf(""Field %2d has length: %2d\\n"", $i+1, $val);\xa0 }\n\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli fetch_object(),https://www.w3schools.com/php/func_mysqli_fetch_object.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_object() / mysqli_fetch_object() function returns the current row of a result-set, as an object.Note: Fieldnames returned from this function are case-sensitive.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\n  \xa0 while ($obj = $result -> fetch_object()) {\xa0\xa0\xa0 printf(""%s (%s)\\n"", $obj->Lastname, $obj->Age);\xa0 }\xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();\xa0\xa0}$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con, $sql)) {\xa0 while ($obj = mysqli_fetch_object($result)) {\xa0\xa0\xa0 printf(""%s (%s)\\n"", $obj->Lastname, $obj->Age);\xa0 }\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&classname|||Optional. Specifies the name of the class to instantiate, set the properties of, and return|||&&&params|||Optional. Specifies an array of parameters to pass to the constructor for classname objects|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||mysqli fetch_row(),https://www.w3schools.com/php/func_mysqli_fetch_row.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fetch_row() / mysqli_fetch_row() function fetches one row from a result-set and returns it as an enumerated array.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\xa0 while ($row = $result -> fetch_row()) {\xa0\xa0\xa0 printf (""%s (%s)\\n"", $row[0], $row[1]);\xa0 }\xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con, $sql)) {\xa0 // Fetch one and one row\xa0 while ($row = mysqli_fetch_row($result)) {\xa0\xa0\xa0 printf (""%s (%s)\\n"", $row[0], $row[1]);\xa0 }\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli field_count(),https://www.w3schools.com/php/func_mysqli_field_count.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The field_count() / mysqli_field_count() function returns the number of columns for the most recent query.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$mysqli -> query(""SELECT * FROM Friends"");// Get number of columns - will return 3\n  $mysqli -> field_count();\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}mysqli_query($con, ""SELECT * FROM Friends"");// Get number of columns - will return 3mysqli_field_count($con);\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli field_seek(),https://www.w3schools.com/php/func_mysqli_field_seek.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The field_seek() / mysqli_field_seek() function sets the field cursor to the given field offset.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = $mysqli -> query($sql)) {\n\xa0 // Get field information for \n  second column\xa0 $result = field_seek(1);\xa0 $fieldinfo = $result -> fetch_field();\n\xa0\xa0printf(""Name: %s\\n"", $fieldinfo -> name);\xa0\xa0printf(""Table: %s\\n"", $fieldinfo -> table);\n  \xa0\xa0printf(""Max. Len: %d\\n"", $fieldinfo -> max_length);\n  \xa0 $result \n  -> free_result();}\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}$sql=""SELECT Lastname, Age FROM Persons ORDER BY Lastname"";\nif ($result = mysqli_query($con,$sql)) {\xa0 // Get field information for \n  second column\xa0 mysqli_field_seek($result, 1);\xa0 $fieldinfo = mysqli_fetch_field($result);\xa0 printf(""Name: %s\\n"", $fieldinfo -> name);\xa0 printf(""Table: %s\\n"", $fieldinfo -> table);\xa0 printf(""max. Len: %d\\n"", $fieldinfo -> max_length);\xa0 mysqli_free_result($result);}\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&result|||Required. Specifies a result set identifier returned by mysqli_query(), mysqli_store_result() or mysqli_use_result()|||&&&fieldnr|||Required. Specifies the field number. Must be an integer from 0 to number of fields-1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli get_charset(),https://www.w3schools.com/php/func_mysqli_get_charset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The get_charset() / mysqli_get_charset() function returns a character set object \nwith several properties for the current character set.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }var_dump($mysqli \n  -> get_charset());\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }var_dump(mysqli_get_charset($con));\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli get_client_info(),https://www.w3schools.com/php/func_mysqli_get_client_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The get_client_info() / mysqli_get_client_info() function returns the MySQL client library version.', '', '', '']","['\n<?php\n  echo mysqli_get_client_info();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Optional. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli_get_client_stats(),https://www.w3schools.com/php/func_mysqli_get_client_stats.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The mysqli_get_client_stats() function returns client per-process statistics.', '', '']","['\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n  print_r(mysqli_get_client_stats());\n ?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||client_version / mysqli get_client_version(),https://www.w3schools.com/php/func_mysqli_get_client_version.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The client_version / mysqli_get_client_version() function returns the MySQL client version as an integer.The MySQL client version is returned in the following format: main_version*10000 + \nminor_version*100 + sub_version. So, version 6.3.0 is returned as \n60300.', '', '', '']","['\n<?php\n  echo mysqli_get_client_version();\n  ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Optional. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli get_connection_stats(),https://www.w3schools.com/php/func_mysqli_get_connection_stats.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mysqli_get_connection_stats() function returns statistics about the client connection.', '', '', '']","['\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n  print_r(mysqli_get_connection_stats($con));\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||host_info() / mysqli_get_host_info(),https://www.w3schools.com/php/func_mysqli_get_host_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The host_info() / mysqli_get_host_info() function returns the MySQL server hostname and the connection type.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }echo $mysqli -> host_info();\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}echo mysqli_get_host_info($con);\nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||protocol_version() / mysqli_get_proto_info(),https://www.w3schools.com/php/func_mysqli_get_proto_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mysqli_get_proto_info() function returns the MySQL protocol version.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }echo $mysqli -> protocol_version;\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}echo mysqli_get_proto_info($con);\nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||server_info / mysqli_get_server_info(),https://www.w3schools.com/php/func_mysqli_get_server_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The server_info / mysqli_get_server_info() function returns the MySQL server version.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }echo $mysqli -> server_info;\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}echo mysqli_get_server_info($con);\nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||server_version / mysqli_get_server_version(),https://www.w3schools.com/php/func_mysqli_get_server_version.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The server_version / mysqli_get_server_version() function returns the MySQL server version as an integer.The server version is returned in the following format: main_version*10000 + \nminor_version*100 + sub_version.\xa0 So, version 6.3.0 is \nreturned as 60300.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }echo $mysqli -> server_version;\n$mysqli -> close();?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }echo mysqli_get_server_version($con);\nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli info(),https://www.w3schools.com/php/func_mysqli_info.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The info / mysqli_info() function returns information about the last executed query.This function works with the following query types:', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Perform some queries$mysqli -> query(""CREATE TABLE testPersons LIKE Persons"");$mysqli -> query(""INSERT \n  INTO testPersons SELECT * FROM Persons ORDER BY LastName"");echo  \n$mysqli -> info;\n  $mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}// Perform som queriesmysqli_query($con, ""CREATE \n  TABLE testPersons LIKE Persons"");mysqli_query($con, ""INSERT INTO testPersons SELECT * FROM Persons ORDER BY LastName"");echo mysqli_info($con); \nmysqli_close($con);\n ?>\n', '', '']","['Definition and Usage###&&&|||INSERT INTO...SELECT...|||INSERT INTO...VALUES (...),(...),(...)|||LOAD DATA INFILE ...|||ALTER TABLE ...|||UPDATE ...|||']","['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli init(),https://www.w3schools.com/php/func_mysqli_init.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The init / mysqli_init() function initializes MySQLi and returns an object to use \nwith the mysqli_real_connect() function.', '', '']","['\n <?php$con = mysqli_init();if (!$con) {\xa0 die(""mysqli_init failed"");}\nif (!mysqli_real_connect($con,""localhost"",""my_user"",""my_password"",""my_db"")) {\n \xa0 die(""Connect Error: "" . mysqli_connect_error());}\nmysqli_close($con);?>\xa0 \n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||mysqli insert_id(),https://www.w3schools.com/php/func_mysqli_insert_id.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The mysqli_insert_id() function returns the id (generated with AUTO_INCREMENT) \nfrom the last query.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$mysqli -> query(""INSERT INTO Persons (FirstName, LastName, Age) \n  VALUES (\'Glenn\', \'Quagmire\', 33)"");// Print auto-generated idecho  \n  ""New record has id: "" . $mysqli -> insert_id;\n  $mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }mysqli_query($con, ""INSERT INTO Persons (FirstName, LastName, Age)\nVALUES (\'Glenn\', \'Quagmire\', 33)"");// Print auto-generated idecho ""New record has id: "" . mysqli_insert_id($con); \nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli kill(),https://www.w3schools.com/php/func_mysqli_kill.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The kill() / mysqli_kill() function asks the server to kill a MySQL thread specified by the processid parameter.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Get thread id$t_id = $mysqli -> thread_id;// Kill \n  connection$mysqli -> kill($t_id);$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}// Get thread id$t_id=mysqli_thread_id($con);// Kill connectionmysqli_kill($con, $t_id);\nmysqli_close($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&processid|||Required. The thread ID returned from\n    thread_id()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli more_results(),https://www.w3schools.com/php/func_mysqli_more_results.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The more_results() / mysqli_more_results() function checks if there are any more \nquery results from a multi query.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif ($mysqli \n  -> multi_query($sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = \n  $mysqli -> store_result()) {\xa0\xa0\xa0\xa0\xa0 while ($row = \n  $result -> fetch_row()) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0$result \n  -> free_result();\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if ($mysqli -> more_results()) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while ($mysqli \n  -> next_result());}$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif (mysqli_multi_query($con, $sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = mysqli_store_result($con)) {\xa0\xa0\xa0\xa0\xa0 while ($row = mysqli_fetch_row($result)) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0 mysqli_free_result($result);\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if (mysqli_more_results($con)) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while (mysqli_next_result($con));}mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli multi_query(),https://www.w3schools.com/php/func_mysqli_multi_query.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The multi_query() / mysqli_multi_query() function performs one or more queries against the database. \nThe queries are separated with a semicolon.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif ($mysqli \n  -> multi_query($sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = \n  $mysqli -> store_result()) {\xa0\xa0\xa0\xa0\xa0 while ($row = \n  $result -> fetch_row()) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0$result \n  -> free_result();\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if ($mysqli -> more_results()) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while ($mysqli \n  -> next_result());}$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif (mysqli_multi_query($con, $sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = mysqli_store_result($con)) {\xa0\xa0\xa0\xa0\xa0 while ($row = mysqli_fetch_row($result)) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0 mysqli_free_result($result);\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if (mysqli_more_results($con)) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while (mysqli_next_result($con));}mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&query|||Required. Specifies one or more queries, separated with semicolon|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli next_result(),https://www.w3schools.com/php/func_mysqli_next_result.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The next_result() / mysqli_next_result() function prepares the next result-set from\nmulti_query().', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif ($mysqli \n  -> multi_query($sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = \n  $mysqli -> store_result()) {\xa0\xa0\xa0\xa0\xa0 while ($row = \n  $result -> fetch_row()) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0$result \n  -> free_result();\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if ($mysqli -> more_results()) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while ($mysqli \n  -> next_result());}$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif (mysqli_multi_query($con, $sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = mysqli_store_result($con)) {\xa0\xa0\xa0\xa0\xa0 while ($row = mysqli_fetch_row($result)) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0 mysqli_free_result($result);\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if (mysqli_more_results($con)) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while (mysqli_next_result($con));}mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli options(),https://www.w3schools.com/php/func_mysqli_options.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The options() / mysqli_options() function is used to set extra connect options and affect behavior for a connection.Note: This function should be called after\ninit() and before\nreal_connect().', '', '', '']","['\n <?php$mysqli = mysqli_init();if (!$mysqli) {\xa0 die(""mysqli_init failed"");}\n// Specify connection timeout$con -> options(MYSQLI_OPT_CONNECT_TIMEOUT, 10);// Specify read options from named file instead of my.cnf$con -> \n  options(MYSQLI_READ_DEFAULT_FILE, ""myfile.cnf"");$con -> real_connect(""localhost"",""my_user"",""my_password"",""my_db"");?>\xa0 \n', '\n <?php$con = mysqli_init();if (!$con) {\xa0 die(""mysqli_init failed"");}\n// Specify connection timeoutmysqli_options($con, \n  MYSQLI_OPT_CONNECT_TIMEOUT, 10);// Specify read options from named file instead of my.cnf\n  mysqli_options($con, MYSQLI_READ_DEFAULT_FILE, ""myfile.cnf"");\nmysqli_real_connect($con,""localhost"",""my_user"",""my_password"",""my_db"");?>\xa0 \n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&option|||Required. Specifies the option to set. Can be one of the following values:\nMYSQLI_OPT_CONNECT_TIMEOUT - Set connection timeout in seconds\nMYSQLI_OPT_LOCAL_INFILE - Enable/Disable use of LOAD LOCAL INFILE\nMYSQLI_INIT_COMMAND - Set a command to execute after connecting to MySQL  server\nMYSQLI_READ_DEFAULT_FILE - Set read options from named file instead of my.cnf\nMYSQLI_READ_DEFAULT_GROUP - Set read options from named group from my.cnf or the file specified in MYSQLI_READ_DEFAULT_FILE\nMYSQLI_SERVER_PUBLIC_KEY - Set RSA public key file used with SHA-256  based authentication\nMYSQLI_OPT_NET_CMD_BUFFER_SIZE - only for mysqlnd\nMYSQLI_OPT_NET_READ_BUFFER_SIZE - only for mysqlnd\nMYSQLI_OPT_INT_AND_FLOAT_NATIVE - only for mysqlnd\nMYSQLI_OPT_SSL_VERIFY_SERVER_CERT - only for mysqlnd\n\n|||&&&value|||Required. Specifies the value for the option|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mysqli ping(),https://www.w3schools.com/php/func_mysqli_ping.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ping() / mysqli_ping() function pings a server connection, to check if \nthe server is alive. It also tries to reconnect - if the connection has gone down.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Check if server is aliveif ($mysqli -> ping()) {\xa0 echo ""Connection is ok!"";} else {\xa0 echo ""Error: "". \n  $mysqli -> error);}$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\n\xa0 exit();}// Check if server is aliveif (mysqli_ping($con)) {\xa0 echo ""Connection is ok!"";} else {\xa0 echo ""Error: "". mysqli_error($con);}mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli poll(),https://www.w3schools.com/php/func_mysqli_poll.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The poll() / mysqli_poll() function is used to poll connections.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&read|||Required. Specifies a list of connections to check for outstanding \n    results that can be read|||&&&error|||Required. Specifies a list of connections on which an error occurred, \n    like query failure or lost connection|||&&&reject|||Required. Specifies a list of connections rejected because no \n    asynchronous query has been run on for which the function could poll results|||&&&seconds|||Required. Specifies the maximum number of seconds to wait|||&&&microseconds|||Optional. Specifies the maximum number of microseconds to wait. Default \n    is 0|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli prepare(),https://www.w3schools.com/php/func_mysqli_prepare.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The prepare() / mysqli_prepare() function is used to prepare an SQL statement for execution.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// prepare and bind$stmt = $mysqli -> prepare(""INSERT INTO \n  MyGuests (firstname, lastname, email) VALUES (?, ?, ?)"");$stmt -> \n  bind_param(""sss"", $firstname, $lastname, $email);// set parameters and \n  execute$firstname \n  = ""John"";$lastname = ""Doe"";$email = ""john@example.com"";$stmt -> execute();\n$firstname = ""Mary"";$lastname = ""Moe"";$email = ""mary@example.com"";\n  $stmt -> execute();echo ""New records created successfully"";$stmt -> close();$mysqli -> close();\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&query|||Required. Specifies an SQL query. Note: Do not add \n    semicolon to the end of the query!|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli query(),https://www.w3schools.com/php/func_mysqli_query.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The query() / mysqli_query() function performs a query against a database.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Perform query if ($result = $mysqli -> query(""SELECT * FROM Persons"")) \n  {\xa0 echo ""Returned rows are: "" . $result -> num_rows;\xa0 \n  // Free result set\xa0 $result -> free_result();}$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }// Perform query if ($result = mysqli_query($con, ""SELECT * FROM Persons"")) \n  {\xa0 echo ""Returned rows are: "" . mysqli_num_rows($result);\xa0 \n  // Free result set\xa0 mysqli_free_result($result);}\n  mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&query|||Required. Specifies the SQL query string|||&&&resultmode|||\nOptional. A constant. Can be one of the following:\n\nMYSQLI_USE_RESULT (Use this to retrieve large amount of  data)\nMYSQLI_STORE_RESULT (This is default)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mysqli real_connect(),https://www.w3schools.com/php/func_mysqli_real_connect.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The real_connect() / mysqli_real_connect() function opens a new connection to the MySQL server.This function differs from connect() in the \nfollowing ways:', '', '', '']","['\n <?php$mysqli = mysqli_init();if (!$mysqli) {\xa0 die(""mysqli_init failed"");}\n// Specify connection timeout$con -> options(MYSQLI_OPT_CONNECT_TIMEOUT, 10);// Specify read options from named file instead of my.cnf$con -> \n  options(MYSQLI_READ_DEFAULT_FILE, ""myfile.cnf"");$con -> real_connect(""localhost"",""my_user"",""my_password"",""my_db"");?>\xa0 \n', '\n <?php$con = mysqli_init();if (!$con) {\xa0 die(""mysqli_init failed"");}\n// Specify connection timeoutmysqli_options($con, \n  MYSQLI_OPT_CONNECT_TIMEOUT, 10);// Specify read options from named file instead of my.cnf\n  mysqli_options($con, MYSQLI_READ_DEFAULT_FILE, ""myfile.cnf"");\nmysqli_real_connect($con,""localhost"",""my_user"",""my_password"",""my_db"");?>\xa0 \n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&host|||Optional. Specifies a host name or an IP address|||&&&username|||Optional. Specifies the MySQL username|||&&&password|||Optional. Specifies the MySQL password|||&&&dbname|||Optional. Specifies the default database to be used|||&&&port|||Optional. Specifies the port number to attempt to connect to the MySQL server|||&&&socket|||Optional. Specifies the socket or named pipe to be used|||&&&flag|||Optional. Specifies different connection options. Possible values:\n\nMYSQLI_CLIENT_COMPRESS - Use compression protocol\nMYSQLI_CLIENT_FOUND_ROWS - Return number of matched rows (not affected rows)\nMYSQLI_CLIENT_IGNORE_SPACE - Allow spaces after function names. Make function names reserved words\nMYSQLI_CLIENT_INTERACTIVE - Allow interactive_timeout seconds of inactivity before closing connection\nMYSQLI_CLIENT_SSL - Use SSL encryption\nMYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mysqli real_escape_string(),https://www.w3schools.com/php/func_mysqli_real_escape_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The real_escape_string() / mysqli_real_escape_string() function escapes special characters in a \nstring for use in an SQL query, taking into account the current character set of \nthe connection.This function is used to create a legal SQL string that can be used in an SQL \nstatement. Assume we have the following code:', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . \n  $mysqli -> connect_error;\xa0 \n  exit();\n  }// Escape special characters, if any$firstname = $mysqli -> real_escape_string($_POST[\'firstname\']);\n $lastname = $mysqli -> real_escape_string($_POST[\'lastname\']);$age = \n  $mysqli -> real_escape_string($_POST[\'age\']);$sql=""INSERT INTO Persons (FirstName, LastName, Age) VALUES (\'$firstname\', \'$lastname\', \'$age\')"";\nif (!$mysqli -> query($sql)) {\xa0 printf(""%d Row inserted.\\n"", $mysqli->affected_rows);}\n$mysqli -> close();?>\n', '\n<?php\n $lastname = ""D\'Ore"";$sql=""INSERT INTO Persons (LastName) VALUES (\'$lastname\')"";\n// This query will fail, cause we didn\'t escape $lastnameif (!$mysqli -> query($sql)) {\xa0 printf(""%d Row inserted.\\n"", $mysqli->affected_rows);}\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\n {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n }\n  // Escape special characters, if any$firstname = mysqli_real_escape_string($con, $_POST[\'firstname\']);\n $lastname = mysqli_real_escape_string($con, $_POST[\'lastname\']);$age = mysqli_real_escape_string($con, $_POST[\'age\']);$sql=""INSERT INTO Persons (FirstName, LastName, Age) VALUES (\'$firstname\', \'$lastname\', \'$age\')"";if (!mysqli_query($con, $sql))\n {\xa0 printf(""%d Row inserted.\\n"", mysqli_affected_rows($con));}mysqli_close($con);\n?>\n', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&escapestring|||Required. The string to be escaped. Characters encoded are NUL (ASCII 0), \\n, \\r, \\, \', "", and Control-Z.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli real_query(),https://www.w3schools.com/php/func_mysqli_real_query.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The real_query() / mysqli_real_query() function executes a single SQL query. The result can \nbe retrieved or stored with the store_result() or use_result() functions.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$mysqli -> real_query(""SELECT * FROM Persons"");\nif ($mysqli -> field_count) {\xa0 $result = $mysqli -> store_result();\xa0 \n  $row = $result -> fetch_row();\xa0 \n  // Free result set\xa0 $result -> free_result();}$mysqli -> close();\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&query|||Required. The query to be executed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli reap_async_query(),https://www.w3schools.com/php/func_mysqli_reap_async_query.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The reap_async_query() / mysqli_reap_async_query() function returns result \nfrom an async SQL query.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli refresh(),https://www.w3schools.com/php/func_mysqli_refresh.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The refresh() / mysqli_refresh() function refreshes/flushes tables or caches, or resets the replication server information.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&options|||The options to refresh. Can be one of more of the following (separated by OR):\n \nMYSQLI_REFRESH_GRANT - Refreshes the grant tables\nMYSQLI_REFRESH_LOG - Flushes the logs\nMYSQLI_REFRESH_TABLES - Flushes the table cache\nMYSQLI_REFRESH_HOSTS - Flushes the host cache\nMYSQLI_REFRESH_STATUS - Resets the status variables\nMYSQLI_REFRESH_THREADS - Flushes the thread cache\nMYSQLI_REFRESH_SLAVE - Resets the master server info, and restarts  the slave\nMYSQLI_REFRESH_MASTER - Removes the binary log files in the binary  log index, and truncates the index file\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli rollback(),https://www.w3schools.com/php/func_mysqli_rollback.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The rollback() / mysqli_rollback() function rolls back the current transaction for the specified database connection.Tip: Also look at the commit() \nfunction, which commits the current transaction, and the \nautocommit() function, which turns on or off auto-committing database modifications.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Turn autocommit off$mysqli -> autocommit(FALSE);\n// Insert some values $mysqli -> query(""INSERT INTO Persons (FirstName,LastName,Age)\nVALUES (\'Peter\',\'Griffin\',35)"");\n  $mysqli -> query(""INSERT INTO Persons (FirstName,LastName,Age) \nVALUES (\'Glenn\',\'Quagmire\',33)"");\n// Commit transactionif (!$mysqli -> commit()) {\xa0 echo ""Commit \n  transaction failed"";\xa0 exit();}// Rollback transaction\n  $mysqli -> rollback();$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }// Turn autocommit offmysqli_autocommit($con,FALSE);\n// Insert some values mysqli_query($con,""INSERT INTO Persons (FirstName,LastName,Age)\nVALUES (\'Peter\',\'Griffin\',35)"");\nmysqli_query($con,""INSERT INTO Persons (FirstName,LastName,Age) \nVALUES (\'Glenn\',\'Quagmire\',33)"");\n// Commit transactionif (!$mysqli_commit($con)) {\xa0 echo \n  ""Commit transaction failed"";\xa0 exit();}// Rollback transactionmysqli_rollback($con);// Close connection\n mysqli_close($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&flags|||Optional. A constant:\n    \nMYSQLI_TRANS_COR_AND_CHAIN - Appends ""AND CHAIN""\nMYSQLI_TRANS_COR_AND_NO_CHAIN - Appends ""AND NO CHAIN""\nMYSQLI_TRANS_COR_RELEASE - Appends ""RELEASE""\nMYSQLI_TRANS_COR_NO_RELEASE - Appends ""NO RELEASE""\n\n|||&&&name|||Optional. ROLLBACK/*name*/ is executed if this parameter is \n    specified|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||mysqli select_db(),https://www.w3schools.com/php/func_mysqli_select_db.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The select_db() / mysqli_select_db() function is used to change the default database for the connection.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Return name of current default databaseif ($result = $mysqli \n  -> query(""SELECT DATABASE()"")) {\xa0 $row = $result -> fetch_row();\xa0 \n  echo ""Default database is "" . $row[0];\xa0 $result -> close();}// Change db \n  to ""test"" db$mysqli -> select_db(""test"");// Return name of current \n  default databaseif ($result = $mysqli -> query(""SELECT DATABASE()"")) {\xa0 \n  $row = $result -> fetch_row();\xa0 echo ""Default database is "" . \n  $row[0];\xa0 $result -> close();}$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }// Return name of current default databaseif ($result = mysqli_query($con, ""SELECT DATABASE()"")) {\xa0 $row = mysqli_fetch_row($result);\xa0 \n  echo ""Default database is "" . $row[0];\xa0 mysqli_free_result($result);}// Change db \n  to ""test"" dbmysqli_select_db($con, ""test"");// Return name of current default database\n  if ($result = mysqli_query($con, ""SELECT DATABASE()"")) {\xa0 $row = mysqli_fetch_row($result);\xa0 \n  echo ""Default database is "" . $row[0];\xa0 mysqli_free_result($result);}// Close connection\n mysqli_close($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&name|||Required. Specifies the database name|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli set_charset(),https://www.w3schools.com/php/func_mysqli_set_charset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The set_charset() / mysqli_set_charset() function specifies the default character set to be \nused when sending data to and from the database server.Note: For this function to work on a Windows platform, you \nneed MySQL client library 4.1.11 or above (for MySQL 5.0, you need 5.0.6 or above). ', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }echo ""Initial character set is: "" . $mysqli \n  -> character_set_name();// Change character set to utf8$mysqli -> set_charset(""utf8"");\n  echo ""Current character set is: "" . $mysqli -> character_set_name();$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connection\n if (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }echo ""Initial character set is: "" . mysqli_character_set_name($con);// Change character set to utf8\n mysqli_set_charset($con,""utf8"");echo ""Current character set \n  is: "" . mysqli_character_set_name($con);mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&charset|||Required. Specifies the default character set|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli set_local_infile_handler(),https://www.w3schools.com/php/func_mysqli_set_local_infile_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The set_local_infile_handler() / mysqli_set_local_infile_handler() function \nsets a callback function for LOAD DATA LOCAL INFILE command.The callback functions tasks are to read input from the file specified in  \nLOAD DATA LOCAL INFILE, and to reformat it into the format understood by LOAD \nDATA INFILE.The returned data must match the format specified in the LOAD DATA.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&read_func|||Required. Specifies a callback function or objext that can take the \n    following params:stream - A PHP stream associated with the SQL commands \n    INFILE&buffer - A string buffer to store the rewritten input into\n    buflen - The maximum number of characters to be stored in the buffer&erromsg \n    - If an error occurs you can store an error message in here|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli sqlstate(),https://www.w3schools.com/php/func_mysqli_sqlstate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The sqlstate / mysqli_sqlstate() function returns the SQLSTATE error code for the last error.The error code consists of five characters. ""00000"" indicates no error. The \nvalues are specified by ANSI SQL and ODBC.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Table Persons already exists, so we should get an error\n $sql = ""CREATE TABLE Persons (Firstname VARCHAR(30), Lastname VARCHAR(30), Age INT)""if (!$mysqli \n  -> query($sql)) {\xa0 echo ""SQLSTATE error: "". $mysqli -> sqlstate;}\n$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connection\n if (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }// Table Persons already exists, so we should get an error\n $sql = ""CREATE TABLE Persons (Firstname VARCHAR(30), Lastname VARCHAR(30), Age INT)""if (!mysqli_query($con, $sql)) {\xa0 echo ""SQLSTATE error: "". mysqli_sqlstate($con);}\n// Close connection\n mysqli_close($con);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli ssl_set(),https://www.w3schools.com/php/func_mysqli_ssl_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ssl_set() / mysqli_ssl_set() function is used to establish secure connections using \nSSL. However, this function does nothing unless OpenSSL support is enabled.Note: This function must be called before\nreal_connect().Note: MySQL Native Driver does not support SSL before PHP \n5.3.3. MySQL Native Driver is enabled by default on Microsoft Windows from PHP 5.3+.', '', '', '']","['\n <?php$mysqli = mysqli_init();if (!$mysqli) {\xa0 die(""mysqli_init failed"");}\n$mysqli -> ssl_set(""key.pem"", ""cert.pem"", ""cacert.pem"", NULL, NULL); \nif (!$mysqli -> real_connect(""localhost"",""my_user"",""my_password"",""my_db"")) \n  {\xa0 die(""Connect Error: "" . mysqli_connect_error());}\n// Some queries...\n$mysqli -> close();?>\xa0 \n', '\n<?php\n $con = mysqli_init();if (!$con) {\xa0 die(""mysqli_init failed"");}\n mysqli_ssl_set($con, ""key.pem"", ""cert.pem"", ""cacert.pem"", NULL, NULL); if (!mysqli_real_connect($con, ""localhost"", ""my_user"", ""my_password"", ""my_db"")) {\xa0 die(""Connect Error: "" . mysqli_connect_error());}\n// Some queries...\nmysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&key|||Required. Specifies the path name to the key file|||&&&cert|||Required. Specifies the path name to the certificate file|||&&&ca|||Required. Specifies the path name to the certificate authority file|||&&&capath|||Required. Specifies the pathname to a directory that contains trusted SSL CA certificates in PEM format|||&&&cipher|||Required. Specifies a list of allowable ciphers to use for SSL encryption|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli stat(),https://www.w3schools.com/php/func_mysqli_stat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The stat() / mysqli_stat() function returns the current system status.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }echo ""System status: "". $mysqli -> stat(); \n$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }echo ""System status: "". mysqli_stat($con); \nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli stmt_init(),https://www.w3schools.com/php/func_mysqli_stmt_init.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The stmt_init() / mysqli_stmt_init() function initializes a statement and returns an object suitable for mysqli_stmt_prepare().', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$city=""Sandnes"";// Create a prepared statement\n $stmt = $mysqli -> stmt_init();if ($stmt \n  -> prepare(""SELECT District FROM City WHERE Name=?"")) {\xa0 // Bind parameters\xa0 \n  $stmt -> bind_param(""s"", $city);\xa0 // Execute query\xa0 \n  $stmt -> execute();\xa0 // Bind result variables\xa0 $stmt -> bind_result($district);\xa0 // Fetch value\xa0 \n  $stmt -> fetch();\xa0 printf(""%s is in district %s"", $city, $district);\xa0 // Close statement\xa0 \n  $stmt -> close();}\n$mysqli -> close();\n?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\n if (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;\n  }$city=""Sandnes"";// Create a prepared statement\n $stmt = mysqli_stmt_init($con);if (mysqli_stmt_prepare($stmt, ""SELECT District FROM City WHERE Name=?"")) {\xa0 // Bind parameters\xa0 mysqli_stmt_bind_param($stmt, ""s"", $city);\xa0 // Execute query\xa0 mysqli_stmt_execute($stmt);\xa0 // Bind result variables\xa0 mysqli_stmt_bind_result($stmt, $district);\xa0 // Fetch value\xa0 mysqli_stmt_fetch($stmt);\xa0 printf(""%s is in district %s"", $city, $district);\xa0 // Close statement\xa0 mysqli_stmt_close($stmt);}\nmysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli_thread_id(),https://www.w3schools.com/php/func_mysqli_thread_id.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The thread_id() / mysqli_thread_id() function returns the thread ID for the current \nconnection. The connection can then be killed with the\nkill() function.Note: If the connection is broken and you reconnect, the \nthread ID will be changed. Therefore; get the thread ID only when you need it. ', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }// Get thread id$thread_id = $mysqli -> thread_id;// Kill connection\n  $mysqli -> kill($thread_id);?>\n', '\n<?php\n$con=mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno()) {\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit;}// Get thread id$thread_id = mysqli_thread_id($con);// Kill connectionmysqli_kill($con, $thread_id);?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli_thread_safe(),https://www.w3schools.com/php/func_mysqli_thread_safe.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The mysqli_thread_safe() function returns whether the client library is compiled as thread-safe.', '', '']","['', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||mysqli use_result(),https://www.w3schools.com/php/func_mysqli_use_result.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The use_result() / mysqli_use_result() function initiates the retrieval of a \nresult-set from the last query executed.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\nif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif ($mysqli \n  -> multi_query($sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = \n  $mysqli -> use_result()) {\xa0\xa0\xa0\xa0\xa0 while ($row = \n  $result -> fetch_row()) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0$result \n  -> close();\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if ($mysqli -> more_results()) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while ($mysqli \n  -> next_result());}$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }$sql = ""SELECT Lastname FROM Persons ORDER BY LastName;"";\n $sql .= ""SELECT Country FROM Customers"";// Execute multi queryif (mysqli_multi_query($con, $sql)) {\xa0 do {\xa0\xa0\xa0 // Store first result set\xa0\xa0\xa0 if ($result = mysqli_use_result($con)) {\xa0\xa0\xa0\xa0\xa0 while ($row = mysqli_fetch_row($result)) {\xa0\xa0\xa0\xa0\xa0\xa0\xa0 printf(""%s\\n"", $row[0]);\xa0\xa0\xa0\xa0\xa0\xa0}\xa0\xa0\xa0\xa0\xa0 mysqli_free_result($result);\n  \xa0\xa0\xa0\xa0}\xa0\xa0\xa0 // if there are more result-sets, the print a \n  divider\xa0\xa0\xa0 if (mysqli_more_results($con)) {\xa0\xa0\xa0\xa0\xa0 \n  printf(""-------------\\n"");\xa0\xa0\xa0 }\xa0\xa0\xa0\xa0 \n  //Prepare next result set\xa0\xa0} while (mysqli_next_result($con));}mysqli_close($con);\n ?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||mysqli warning_count(),https://www.w3schools.com/php/func_mysqli_warning_count.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The warning_count / mysqli_warning_count() function returns the number of \nwarnings from the last query.', '', '', '']","['\n<?php\n$mysqli = new mysqli(""localhost"",""my_user"",""my_password"",""my_db"");\n// Check connectionif ($mysqli -> connect_errno) {\n\xa0 echo ""Failed to connect to MySQL: "" . $mysqli -> connect_error;\xa0 \n  exit();\n  }$mysqli -> query(""CREATE TABLE myPersons LIKE Persons"");$sql \n  = ""INSERT INTO myPersons (FirstName) VALUES(\n  \'Hdghfhjgjtjyjn.,,øæløjkghfjbmbngfgffdhfhjgjgkjhlkhlkjljljlkjkljlkjkljkljlkj\')"";\n$mysqli -> query($sql);if ($mysqli -> warning_count) {\xa0 \n  if ($result = $mysqli -> query(""SHOW WARNINGS"")) {\xa0\xa0\xa0 $row \n  = $result -> fetch_row();\xa0\xa0\xa0 printf(""%s (%d): %s\\n"", \n  $row[0], $row[1], $row[2]);\xa0\xa0\xa0 $result -> close();\xa0 \n  }}$mysqli -> close();\n?>\n', '\n<?php\n$con = mysqli_connect(""localhost"",""my_user"",""my_password"",""my_db"");\nif (mysqli_connect_errno())\xa0{\n\xa0 echo ""Failed to connect to MySQL: "" . mysqli_connect_error();\xa0 \n  exit();\n  }mysqli_query($con, ""CREATE TABLE myPersons LIKE Persons"");$sql \n  = ""INSERT INTO myPersons (FirstName) VALUES(\'Hdghfhjgjtjyjn.,,øæløjkghfjbmbngfgffdhfhjgjgkjhlkhlkjljljlkjkljlkjkljkljlkj\')"";\nmysqli_query($con, $sql);if (mysqli_warning_count($con)) {\xa0 \n  if ($result = mysqli_query($con, ""SHOW WARNINGS"")) {\xa0\xa0\xa0 \n  $row = mysql_fetch_row($result);\xa0\xa0\xa0 printf(""%s (%d): %s\\n"", \n  $row[0], $row[1], $row[2]);\xa0\xa0\xa0 mysqli_free_result($result);\xa0 \n  }}\n  mysqli_close($con);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&connection|||Required. Specifies the MySQL connection to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||,https://www.w3schools.com/php/php_ref_network.asp,,"['PHP Network Introduction', 'Installation', 'PHP Network Functions']","['The Network functions contains various network function and let you manipulate information sent to the browser by the \nWeb server, before any other output has been sent.', 'The Network functions are part of the PHP core. There is no installation needed to use these functions.', '']","['', '', '']",[''],['Function|||Description|||&&&checkdnsrr()|||Checks DNS records for type corresponding to \nhost|||&&&closelog()|||Closes the connection of system logger|||&&&define_syslog_variables()|||Deprecated and removed in PHP 5.4. \n    Initializes the variables used in syslog functions|||&&&dns_check_record()|||Alias of checkdnsrr()|||&&&dns_get_mx()|||Alias of getmxrr()|||&&&dns_get_record()|||Gets the DNS resource records associated with the specified hostname|||&&&fsockopen()|||Opens an Internet or Unix domain socket connection|||&&&gethostbyaddr()|||Returns the domain name for a given IP address|||&&&gethostbyname()|||Returns the IPv4 address for a given domain/host name|||&&&gethostbynamel()|||Returns a list of IPv4 address for a given domain/host name|||&&&gethostname()|||Returns the host name|||&&&getmxrr()|||Returns the MX records for the specified internet host name|||&&&getprotobyname()|||Returns the protocol number for a given protocol name|||&&&getprotobynumber()\xa0\xa0\xa0\xa0\xa0 |||Returns the protocol name for a given protocol number|||&&&getservbyname()|||Returns the port number for a given Internet service and protocol|||&&&getservbyport()|||Returns the Internet service for a given port and protocol|||&&&header_register_callback()|||Calls a header function|||&&&header_remove()|||Removes an HTTP header previously set with the\n    header() function|||&&&header()|||Sends a raw HTTP header to a client|||&&&headers_list()|||Returns a list of response headers to be sent to the browser|||&&&headers_sent()|||Checks if/where headers have been sent|||&&&http_response_code()|||Sets or returns the HTTP response status code|||&&&inet_ntop()|||Converts a 32bit IPv4 or 128bit IPv6 address into a readable format|||&&&inet_pton()|||Converts a readable IP address into a packed 32bit IPv4 or 128bit IPv6 \n    format|||&&&ip2long()|||Converts an IPv4 address into a long integer|||&&&long2ip()|||Converts a long integer address into a string in IPv4 format|||&&&openlog()|||Opens the connection of system logger|||&&&pfsockopen()|||Opens a persistent Internet or Unix domain socket connection|||&&&setcookie()|||Defines a cookie to be sent along with the rest of the HTTP headers|||&&&setrawcookie()|||Defines a cookie (without URL encoding) to be sent along with the rest of the HTTP headers|||&&&socket_get_status()|||Alias of stream_get_meta_data()|||&&&socket_set_blocking()|||Alias of stream_set_blocking()|||&&&socket_set_timeout()|||Alias of stream_set_timeout()|||&&&syslog()|||Generates a system log message|||&&&'],[]
php||checkdnsrr(),https://www.w3schools.com/php/func_network_checkdnsrr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The checkdnsrr() function checks DNS records for type corresponding to host.We can use the checkdnsrr() function to check our DNS record to verify the existence of a domain name or not.', '', '', '']","['\n<?php\n  $domain=""w3schools.com"";if(checkdnsrr($domain,""MX"")) {\xa0 echo \n  ""Passed"";} else {\xa0 echo ""Failed"";}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&host|||Required. Specifies an IP address or host name to check|||&&&type|||Optional. Specifies the type. Can be one of the following:\n    \nA\nMX (default)\nNS\nSOA\nPTR\nCNAME\nAAAA\nA6\nSRV\nNAPTR\nTXT\nANY\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||closelog(),https://www.w3schools.com/php/func_network_closelog.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The closelog() function closes the connection of system logger.', '', '']","['\n<?php\n  function _log($text) {openlog(""phperrors"", LOG_PID | LOG_PERROR);\n  syslog(LOG_ERR, $text);closelog();........}?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||dns_check_record(),https://www.w3schools.com/php/func_network_dns_check_record.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dns_check_record() function is an alias of the checkdnsrr() function.', '', '', '']","['\n<?php\n  $domain=""w3schools.com"";if(dns_check_record($domain,""MX"")) {\xa0 echo \n  ""Passed"";} else {\xa0 echo ""Failed"";}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&host|||Required. Specifies an IP address or host name to check|||&&&type|||Optional. Specifies the type. Can be one of the following:\n    \nA\nMX (default)\nNS\nSOA\nPTR\nCNAME\nAAAA\nA6\nSRV\nNAPTR\nTXT\nANY\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||dns_get_mx(),https://www.w3schools.com/php/func_network_dns_get_mx.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dns_get_mx() function is an alias of the getmxrr() function.', '', '', '']","['\n<?php\n  $domain=""w3schools.com"";if(dns_get_mx($domain,$mx_details)){\xa0 \n  foreach($mx_details as $key=>$value){\xa0\xa0\xa0 echo ""$key => \n  $value <br>"";\xa0 }}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&host|||Required. Specifies the host name|||&&&mxhosts|||Required. An array that specifies a list of MX records found|||&&&weight|||Optional. An array that specifies the weight information gathered|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||dns_get_record(),https://www.w3schools.com/php/func_network_dns_get_record.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The dns_get_record() function gets the DNS resource records associated with the specified hostname.', '', '', '']","['\n<?php\n  print_r(dns_get_record(""w3schools.com"", DNS_MX));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&hostname|||Required. Specifies a hostname (like ""www.w3schools.com"")|||&&&type|||Optional. Specifies the resource record type to search for. Can be one of the following:\n    \nDNS_A\nDNS_CNAME\nDNS_HINFO\nDNS_CAA\nDNS_MX\nDNS_NS\nDNS_PTR\nDNS_SOA\nDNS_TXT\nDNS_AAAA\nDNS_SRV\nDNS_NAPTR\nDNS_A6\nDNS_ALL\nDNS_ANY (default)\n\n|||&&&authns|||Optional. Passed by reference and, if set, it will be populated with \n    Resource Records for the Authoritative Name Servers |||&&&addtl|||Optional. Passed by reference and, if set, it will be populated with any\n    Additional Records |||&&&raw|||Optional. A Boolean value. If set to TRUE, it queries only the requested \n    type instead of looping type-by-type before getting the info stuff. Default \n    is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||fsockopen(),https://www.w3schools.com/php/func_network_fsockopen.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The fsockopen() function opens an Internet or Unix domain socket connection.', '', '', '']","['\n<?php\n  $fp = fsockopen(""www.w3schools.com"", 80, $errno, $errstr, 20);if (!$fp) {\xa0 \n  echo ""$errstr ($errno)<br>"";} else {\xa0 $out = ""GET / \n  HTTP/1.1\\r\\n"";\xa0 $out .= ""Host: www.w3schools.com\\r\\n"";\xa0 $out \n  .= ""Connection: Close\\r\\n\\r\\n"";\xa0 fwrite($fp, $out);\xa0 while \n  (!feof($fp)) {\xa0\xa0\xa0 echo fgets($fp, 128);\xa0 }\xa0 \n  fclose($fp);}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&hostname|||Required. Specifies a hostname (like ""www.w3schools.com""). ssl:// \n    or tls:// works over TCP/IP to connect to the remote host|||&&&port|||Optional. Specifies the port number. Use -1 for transports that do not \n    use ports, like unix://|||&&&errno|||Optional. Specifies the system level error number|||&&&errstr|||Optional. Specifies the error message as a string|||&&&timeout|||Optional. Specifies the connection timeout (in seconds)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||gethostbyaddr(),https://www.w3schools.com/php/func_network_gethostbyaddr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gethostbyaddr() function returns the domain name for a given IP address.', '', '', '']","['\n<?php\n  $host = gethostbyaddr($_SERVER[""REMOTE_ADDR""]);echo $host;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ipaddress|||Required. Specifies an IP address|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||gethostbyname(),https://www.w3schools.com/php/func_network_gethostbyname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gethostbyname() function returns the IPv4 address for a given domain/host name.', '', '', '']","['\n<?php\n  $ip = gethostbyname(""www.w3schools.com"");echo $ip;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&hostname|||Required. Specifies a hostname (like ""www.w3schools.com"")|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||gethostbynamel(),https://www.w3schools.com/php/func_network_gethostbynamel.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gethostbynamel() function returns a list of IPv4 address for a given domain/host name.', '', '', '']","['\n<?php\n  $hostlist = gethostbynamel(""www.w3schools.com"");print_r($hostlist);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&hostname|||Required. Specifies a hostname (like ""www.w3schools.com"")|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||gethostname(),https://www.w3schools.com/php/func_network_gethostname.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The gethostname() function returns the host name for the local machine.', '', '']","['\n<?php\n  echo gethostname();?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||getmxrr(),https://www.w3schools.com/php/func_network_getmxrr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getmxrr() function returns the MX records for the specified internet host name.', '', '', '']","['\n<?php\n  $domain=""w3schools.com"";if(getmxrr($domain,$mx_details)){\xa0 \n  foreach($mx_details as $key=>$value){\xa0\xa0\xa0 echo ""$key => \n  $value <br>"";\xa0 }}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&host|||Required. Specifies the host name|||&&&mxhosts|||Required. An array that specifies a list of MX records found|||&&&weight|||Optional. An array that specifies the weight information gathered|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||getprotobyname(),https://www.w3schools.com/php/func_network_getprotobyname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getprotobyname() function returns the protocol number for a given protocol name.', '', '', '']","['\n<?php\n  $protocolnum = getprotobyname(""tcp"");echo $protocolnum;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&protocolname|||Required. Specifies a protocol name (like ""tcp"")|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||getprotobynumber(),https://www.w3schools.com/php/func_network_getprotobynumber.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getprotobynumber() function returns the protocol name for a given protocol number.', '', '', '']","['\n<?php\n  $protocolname = getprotobynumber(6);echo $protocolname;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&protocolnumber|||Required. Specifies a protocol number (like 17)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||getservbyname(),https://www.w3schools.com/php/func_network_getservbyname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getservbyname() function returns the port number for a given Internet service and protocol.', '', '', '']","['\n<?php\n  $portnum = getservbyname(""http"", ""tcp"");echo $portnum;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&service|||Required. Specifies the Internet service name (like ""http"")|||&&&protocol|||Required. Specifies a protocol name (like ""tcp"" or ""udp"")|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||getservbyport(),https://www.w3schools.com/php/func_network_getservbyport.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getservbyport() function returns the Internet service for a given port and protocol.', '', '', '']","['\n<?php\n  $intservname = getservbyport(80, ""tcp"");echo $intservname;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&port|||Required. Specifies the port number (like 80)|||&&&protocol|||Required. Specifies a protocol name (like ""tcp"" or ""udp"")|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||header_register_callback(),https://www.w3schools.com/php/func_network_header_register_callback.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The header_register_callback() function calls a header function (will be \nexecuted after PHP has prepared all headers to be sent, and before any other \noutput is sent).', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&callback|||Required. Specifies a callback function|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||header_remove(),https://www.w3schools.com/php/func_network_header_remove.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The header_remove() function removes an HTTP header previously set with the\nheader() function.', '', '', '', '']","['\n<?php\nheader(""Expires: Mon, 26 Jul 1997 05:00:00 GMT"");\nheader(""Cache-Control: no-cache"");\nheader(""Pragma: no-cache"");header_remove(""Pragma""); ?>\n', '\n<?php\nheader(""Expires: Mon, 26 Jul 1997 05:00:00 GMT"");\nheader(""Cache-Control: no-cache"");\nheader(""Pragma: no-cache"");header_remove(); ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&headername|||Optional. Specifies a header name to be removed. If omitted, all \n    previously set headers are removed |||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||header(),https://www.w3schools.com/php/func_network_header.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The header() function sends a raw HTTP header to a client.It is important to notice that the header() function must be called before any actual \noutput is sent!', '', '', '', '']","['\n<?php\n// Date in the past\nheader(""Expires: Mon, 26 Jul 1997 05:00:00 GMT"");\nheader(""Cache-Control: no-cache"");\nheader(""Pragma: no-cache"");\n?>\n\n<html>\n<body>\n...\n...\n', '\n<?php\nheader(""Content-type:application/pdf"");\n\n// It will be called downloaded.pdf\nheader(""Content-Disposition:attachment;filename=\'downloaded.pdf\'"");\n\n// The PDF source is in original.pdf\nreadfile(""original.pdf"");\n?>\n\n<html>\n<body>\n\n...\n...\n', '', '', '']",[''],"['Parameter|||Description|||&&&header|||Required. Specifies the header string to send|||&&&replace|||Optional. Indicates whether the header should replace a previous similar \n    header or add a new header of the same type. Default is TRUE (will replace). FALSE \n    allows multiple headers of the same type|||&&&http_response_code|||Optional. Forces the HTTP response code to the specified value|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||headers_list(),https://www.w3schools.com/php/func_network_headers_list.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The headers_list() function returns a list of response headers to be sent to \nthe browser.Tip: To determine whether or not the headers have been sent yet, use the \nheaders_sent() function.', '', '']","['\n<?php\nsetcookie(""TestCookie"",""SomeValue"");\nheader(""X-Sample-Test: foo"");\nheader(""Content-type: text/plain"");\n?>\n\n<html>\n<body>\n\n<?php\nvar_dump(headers_list());\n?>\n\n</body>\n</html>\n', '\narray(4)\n{\n[0]=> string(23) ""X-Powered-By: PHP/7.1.1""\n[1]=> string(19) ""Set-Cookie: TestCookie=SomeValue""\n[2]=> string(18) ""X-Sample-Test: foo""\n[3]=> string(24) ""Content-type: text/plain""\n}\n', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||headers_sent(),https://www.w3schools.com/php/func_network_headers_sent.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The headers_sent() function checks if/where headers have been sent.', '', '', '', '']","['\n<?php\n  if (!headers_sent()) {\n\xa0\xa0header(""Location: https://www.w3schools.com/"");\n\xa0\xa0exit;\n  }\n?>\n\n<html>\n<body>\n\n...\n...\n', '\n<?php\n// $file and $line are passed in for later use\n// Do not assign them values beforehand\nif (!headers_sent($file, $line))\n\xa0\xa0{\n\xa0\xa0header(""Location: https://www.w3schools.com/"");\n\xa0\xa0exit;\n\xa0\xa0// Trigger an error here\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""Headers sent in $file on line $line"";\n\xa0\xa0exit;\n\xa0\xa0}\n?>\n\n<html>\n<body>\n\n...\n...\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Optional. If the file and line parameters are set, headers_sent() will put the PHP source file name and line number where output started in the file and line variables|||&&&line|||Optional. Specifies the line number where the output started|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||http_response_code(),https://www.w3schools.com/php/func_network_http_response_code.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The http_response_code() function sets or returns the HTTP response status code.', '', '', '']","['\n<?php\n  http_response_code(404);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&code|||Optional. Specifies a response code (like 404)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||inet_ntop(),https://www.w3schools.com/php/func_network_inet_ntop.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The inet_ntop() function converts a 32bit IPv4 or 128bit IPv6 address into a \nreadable format.', '', '', '']","['\n<?php\n  $addr = chr(127) . chr(0) . chr(1) . chr(1);$exp = inet_ntop($addr);\n  echo $exp;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&address|||Required. Specifies a 32bit IPv4 or 128bit IPv6 address|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||inet_pton(),https://www.w3schools.com/php/func_network_inet_pton.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The inet_pton() function converts a readable IP address into a packed 32bit IPv4 or 128bit IPv6 \nformat.', '', '', '']","['\n<?php\n  $addr = inet_pton(""127.0.1.1"");echo $addr;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&address|||Required. Specifies a readable IP address|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||ip2long(),https://www.w3schools.com/php/func_network_ip2long.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ip2long() function converts an IPv4 address into a long integer.', '', '', '']","['\n<?php\n  $ip = gethostbyname(""www.w3schools.com"");$out = ""The following URLs are \n  equivalent:<br>"";$out .= ""https://www.w3schools.com/, https://"" . $ip . \n  ""/, and https://"" . sprintf(""%u"", ip2long($ip)) . ""/"";echo $out;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&address|||Required. Specifies a standard IP address|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||long2ip(),https://www.w3schools.com/php/func_network_long2ip.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The long2ip() function converts a long integer address into a string in IPv4 \nformat.', '', '', '']","['\n<?php\n  echo(long2ip(344294967296));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&address|||Required. Specifies a long integer that represents an IP address|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||openlog(),https://www.w3schools.com/php/func_network_openlog.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The openlog() function opens the connection of system logger.', '', '', '']","['\n<?php\n  function _log($text) {openlog(""phperrors"", LOG_PID | LOG_PERROR);\n  syslog(LOG_ERR, $text);closelog();........}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ident|||Required. Specifies a string ident that is added to each message|||&&&option|||Required. Specifies what logging options will be used when generating a \n    log message. Can be one or more of the following options (separated with |):\n    \nLOG_CONS\nLOG_NDELAY\nLOG_ODELAY\nLOG_PERROR\nLOG_PID\n\n|||&&&facility|||Required. Specifies what type of program is logging the message:\n    \nLOG_AUTH\nLOG_AUTHPRIV\nLOG_CRON\nLOG_DAEMON\nLOG_KERN\nLOG_LOCAL0...LOG_LOCAL7\nLOG_LPR\nLOG_MAIL\nLOG_NEWS\nLOG_SYSLOG\nLOG_USER - (is the only valid log type for Windows OS)\nLOG_UUCP\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||pfsockopen(),https://www.w3schools.com/php/func_network_pfsockopen.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The pfsockopen() function opens a persistent Internet or Unix domain socket connection.Note: This function is almost identical to\nfsockopen(). The difference is that the \nconnection is not closed after the script finishes. This function is the \npersistent version of fsockopen(). ', '', '', '']","['\n<?php\n  $fp = pfsockopen(""www.w3schools.com"", 80, $errno, $errstr, 20);if (!$fp) {\xa0 \n  echo ""$errstr ($errno)<br>"";} else {\xa0 $out = ""GET / \n  HTTP/1.1\\r\\n"";\xa0 $out .= ""Host: www.w3schools.com\\r\\n"";\xa0 $out \n  .= ""Connection: Close\\r\\n\\r\\n"";\xa0 fwrite($fp, $out);\xa0 while \n  (!feof($fp)) {\xa0\xa0\xa0 echo fgets($fp, 128);\xa0 }\xa0 \n  fclose($fp);}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&hostname|||Required. Specifies a hostname (like ""www.w3schools.com""). ssl:// \n    or tls:// works over TCP/IP to connect to the remote host|||&&&port|||Optional. Specifies the port number. Use -1 for transports that do not \n    use ports, like unix://|||&&&errno|||Optional. Specifies the system level error number|||&&&errstr|||Optional. Specifies the error message as a string|||&&&timeout|||Optional. Specifies the connection timeout (in seconds)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||setcookie(),https://www.w3schools.com/php/func_network_setcookie.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The setcookie() function defines a cookie to be sent along with the rest of the HTTP headers.A cookie is often used to identify a user. A cookie is a small file that the \nserver embeds on the user\'s computer. Each time the same computer requests a \npage with a browser, it will send the cookie too. With PHP, you can both create and retrieve cookie values.The name of the cookie is automatically assigned to a variable of the same \nname. For example, if a cookie was sent with the name ""user"", a variable is \nautomatically created called $user, containing the cookie value.Note: The setcookie() function must appear BEFORE the <html> tag.Note: The value of the cookie is automatically URLencoded when \nsending the cookie, and automatically decoded when received (to prevent \nURLencoding, use setrawcookie() instead).', '', '', '', '']","['\n <!DOCTYPE html><?php$cookie_name = ""user"";$cookie_value = ""John Doe"";setcookie($cookie_name, $cookie_value, time() + (86400 * 30), ""/""); // 86400 = 1 day?><html><body><?phpif(!isset($_COOKIE[$cookie_name])) {\xa0\xa0\xa0 echo ""Cookie named \'"" . $cookie_name . ""\' is not set!"";} else {\xa0\xa0\xa0 echo ""Cookie \'"" . $cookie_name . ""\' is set!<br>"";\xa0\xa0\xa0 echo ""Value is: "" . $_COOKIE[$cookie_name];}?></body></html>\n', '\n <?php$value = ""Hello world!"";// cookie will expire when the browser closesetcookie(""myCookie"", $value);// cookie will expire in 1 hoursetcookie(""myCookie"", $value, time() + 3600);// cookie will expire in 1 hour, and will only be available// within the php directory + all sub-directories of phpsetcookie(""myCookie"", $value, time() + 3600, ""/php/"");?> <html><body>...some code...\n</body></html>\n &&&&&& \n <?php$cookie_name = ""user"";$cookie_value = ""Alex Porter"";\n setcookie($cookie_name, $cookie_value, time() + (86400 * 30), ""/"");?><html><body><?phpif(!isset($_COOKIE[$cookie_name])) {\xa0\xa0\xa0 echo ""Cookie named \'"" . $cookie_name . ""\' is not set!"";} else {\xa0\xa0\xa0 echo ""Cookie \'"" . $cookie_name . ""\' is set!<br>"";\xa0\xa0\xa0 echo ""Value is: "" . $_COOKIE[$cookie_name];}?></body></html>\n &&&&&& \n <?php// set the expiration date to one hour agosetcookie(""user"", """", time() - 3600);?><html><body><?phpecho ""Cookie \'user\' is deleted."";?></body></html> &&&&&& \n <?phpsetcookie(""test_cookie"", ""test"", time() + 3600, \'/\');?>\n <html><body><?phpif(count($_COOKIE) > 0) {\xa0\xa0\xa0 echo ""Cookies are enabled."";} else {\xa0\xa0\xa0 echo ""Cookies are disabled."";}?>\n </body></html>', '', '', '']",[''],"['Parameter|||Description|||&&&name|||Required. Specifies the name of the cookie|||&&&value|||Optional. Specifies the value of the cookie|||&&&expire|||Optional. Specifies when the cookie expires. The value: time()+86400*30, will set the cookie to expire in 30 days. If this parameter is omitted or set to 0, the cookie will expire at the end of the session (when the browser closes). Default is 0|||&&&path|||Optional. Specifies the server path of the cookie.\n    If set to ""/"", the cookie will be available within the entire domain. If set to ""/php/"", the cookie will only be available within the php directory and all sub-directories of php. The default value is the current directory that the cookie is being set in|||&&&domain|||Optional. Specifies the domain name of the cookie. To make the cookie available on all subdomains of example.com, set domain to ""example.com"". Setting it to www.example.com will make the cookie only available in the www subdomain|||&&&secure|||Optional. Specifies whether or not the cookie should only be transmitted over a secure HTTPS connection. TRUE indicates that the cookie will only be set if a secure connection exists. Default is FALSE|||&&&httponly|||Optional. If set to TRUE the cookie will be accessible only through the HTTP protocol (the cookie will not be accessible by scripting languages). This setting can help to reduce identity theft through XSS attacks. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||setrawcookie(),https://www.w3schools.com/php/func_network_setrawcookie.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The setrawcookie() function defines a cookie (without URL encoding) to be sent along with the rest of the HTTP headers.A cookie is often used to identify a user. A cookie is a small file that the \nserver embeds on the user\'s computer. Each time the same computer requests a \npage with a browser, it will send the cookie too. With PHP, you can both create and retrieve cookie values.The name of the cookie is automatically assigned to a variable of the same \nname. For example, if a cookie was sent with the name ""user"", a variable is \nautomatically created called $user, containing the cookie value.Note: The setrawcookie() function must appear BEFORE the <html> tag.Note: To automatically URL-encode the cookie value when sending, and automatically decode when receiving, use \nthe setcookie() function instead.', '', '', '', '']","['\n<?php\n $cookie_name = ""user"";$cookie_value = ""John"";\n setrawcookie($cookie_name, $cookie_value, time() + (86400 * 30), ""/"");// 86400 = 1 day?><html><body><?phpecho ""Cookie is set."";\n ?></body></html>?>\n', '\n <html><body><?php$cookie_name = ""user"";if(!isset($_COOKIE[$cookie_name])) {\xa0\xa0\xa0 echo ""Cookie named \'"" . $cookie_name . ""\' does not exist!"";} else {\xa0\xa0\xa0 echo ""Cookie is named: "" . $cookie_name . ""<br>Value is: "" . $_COOKIE[$cookie_name];}?></body></html>\n &&&&&& \n <?php$cookie_name = ""user"";$cookie_value = ""Alex"";\n setrawcookie($cookie_name, $cookie_value, time() + (86400 * 30), ""/"");?><html><body><?php$cookie_name = ""user"";if(!isset($_COOKIE[$cookie_name])) {\xa0\xa0\xa0 echo ""Cookie named \'"" . $cookie_name . ""\' does not exist!"";} else {\xa0\xa0\xa0 echo ""Cookie is named: "" . $cookie_name . ""<br>Value is: "" . $_COOKIE[$cookie_name];}?></body></html>\n &&&&&& \n <?php$cookie_name = ""user"";\n unset($_COOKIE[$cookie_name]);// empty value and expiration one hour before$res = setrawcookie($cookie_name, \'\', time() - 3600);?><html><body><?phpecho ""Cookie \'user\' is deleted."";?></body></html> &&&&&& \n <?phpsetrawcookie(""test_cookie"", ""test"", time() + 3600, \'/\');?>\n <html><body><?phpif(count($_COOKIE) > 0) {\xa0\xa0\xa0 echo ""Cookies are enabled"";} else {\xa0\xa0\xa0 echo ""Cookies are disabled"";}?>\n </body></html>', '', '', '']",[''],"['Parameter|||Description|||&&&name|||Required. Specifies the name of the cookie|||&&&value|||Optional. Specifies the value of the cookie|||&&&expire|||Optional. Specifies when the cookie expires. The value: time()+86400*30, will set the cookie to expire in 30 days. If this parameter is not set, the cookie will expire at the end of the session (when the browser closes)|||&&&path|||Optional. Specifies the server path of the cookie.\n    If set to ""/"", the cookie will be available within the entire domain. If set to ""/php/"", the cookie will only be available within the php directory and all sub-directories of php. The default value is the current directory that the cookie is being set in|||&&&domain|||Optional. Specifies the domain name of the cookie. To make the cookie available on all subdomains of example.com, set domain to "".example.com"". Setting it to www.example.com will make the cookie only available in the www subdomain|||&&&secure|||Optional. Specifies whether or not the cookie should only be transmitted over a secure HTTPS connection. TRUE indicates that the cookie will only be set if a secure connection exists. Default is FALSE.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||socket_get_status(),https://www.w3schools.com/php/func_network_socket_get_status.asp,,['Definition and Usage'],"['The socket_get_status() function is an alias of the stream_get_meta_data() function.', '❮ PHP Network Reference']",[''],[''],[],[]
php||socket_set_blocking(),https://www.w3schools.com/php/func_network_socket_set_blocking.asp,,['Definition and Usage'],"['The socket_set_blocking() function is an alias of the stream_get_meta_data() function.', '❮ PHP Network Reference']",[''],[''],[],[]
php||socket_set_timeout(),https://www.w3schools.com/php/func_network_socket_set_timeout.asp,,['Definition and Usage'],"['The socket_set_timeout() function is an alias of the stream_get_meta_data() function.', '❮ PHP Network Reference']",[''],[''],[],[]
php||syslog(),https://www.w3schools.com/php/func_network_syslog.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The syslog() function generates a system log message.', '', '', '']","['\n<?php\n  function _log($text) {openlog(""phperrors"", LOG_PID | LOG_PERROR);\n  syslog(LOG_ERR, $text);closelog();........}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&priority|||Required. Specifies ... Can be one of the following options:\n    \nLOG_EMERG\nLOG_ALERT\nLOG_CRIT\nLOG_ERR\nLOG_WARNING\nLOG_NOTICE\nLOG_INFO\nLOG_DEBUG\n\n|||&&&message|||Required. Specifies the message to send|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Output Control,https://www.w3schools.com/php/php_ref_output_control.asp,,"['PHP Output Control Functions', 'Installation', 'Runtime Configuration', 'PHP Output Control Functions']","['PHP provides a set of functions that control what content is sent to the browser and when.\nThis is referred to as output control.Output can come from any of the following sources:PHP and the backend on which it is running may hold the output in a buffer before sending\nit to the user.Note: The output control functions can create any number of output buffers. Output buffers catch\noutput given by the program. Each new output buffer is placed on the top of a stack of\noutput buffers, and any output it provides will be caught by the buffer below it. The output\ncontrol functions handle only the topmost buffer, so the topmost buffer must be removed in\norder to control the buffers below it.The PHP output control functions are part of the PHP core. No installation is required to use these functions.', 'The behavior of output control functions is affected by settings in php.ini:', '', '']","['', '', '', '']","['PHP Output Control Functions###&&&|||echo, print, printf, print_r... and other similar functions and statements|||Notices, warnings and errors from PHP|||Any content outside of the <?php ?> tags|||']","['Name|||Default|||Description|||Version|||&&&output_buffering|||""0""|||Enables output buffering for all PHP files by default|||4|||&&&output_handler|||NULL|||Set the name of the default function which handles the output of all output buffers|||4|||&&&implicit_flush|||""0""|||Enables implicit flush, which causes output to be sent directly to the browser on each output statement|||4|||&&&url_rewriter.tags|||""a=href,area=href,\n    frame=src,form=,fieldset=""|||Indicates which HTML tags and attributes can be modified by the URL rewriter (the output_add_rewrite_var() function.)|||4.3|||&&&url_rewriter.hosts|||The current value of \n    $_SERVER[\'HTTP_HOST\']|||URL rewriting is only done on the server\'s own URLs by default. To allow for rewriting URLs of other websites, set the hostnames of the other websites here.|||7.1|||&&&', ""Method|||Function|||&&&flush()|||Attempts to send content from the system's output buffer to the browser|||&&&ob_clean()|||Deletes all of the content from the topmost output buffer|||&&&ob_end_clean()|||Deletes the topmost output buffer and all of its contents|||&&&ob_end_flush()|||Deletes the topmost output buffer and outputs its contents|||&&&ob_flush()|||Outputs the contents of the topmost output buffer and clears the buffer|||&&&ob_get_clean()|||Returns all of the contents of the topmost output buffer and clears the buffer|||&&&ob_get_contents()|||Returns the contents of the topmost output buffer|||&&&ob_get_flush()|||Outputs and returns the contents of the topmost output buffer and then deletes the buffer|||&&&ob_get_length()|||Returns the number of bytes of data that are in the topmost output buffer|||&&&ob_get_level()|||Returns a number indicating how many output buffers are on the stack|||&&&ob_get_status()|||Returns information about the output buffers|||&&&ob_gzhandler()|||Used as a callback function for ob_start() to compress the contents of the buffer when sending it to the browser|||&&&ob_implicit_flush()|||Turns implicit flushing on or off|||&&&ob_list_handlers()|||Returns an array of callback function names that are being used by the topmost output buffer|||&&&ob_start()|||Creates a new output buffer and adds it to the top of the stack|||&&&output_add_rewrite_var()|||Used to append query string parameters to any URL in the output|||&&&output_reset_rewrite_vars()|||Removes all variables added by output_add_rewrite_var()|||&&&""]",[]
php||flush(),https://www.w3schools.com/php/ref_output_flush.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The flush() function requests the server to send its currently buffered output to the browser. The server configuration may not always allow this to happen.', '', '']","['\n<?php// Some browsers will not display the content if it is too short\n  // We use str_pad() to make the output long enoughecho str_pad(""Hello \n  World!"", 4096);// Use flush() to send the string to the browser\n  flush();// Display the rest of the content three seconds later\n  sleep(3);echo ""<br>"";echo ""Hello World!"";?>\n', '', '']",[''],['PHP Version:|||&&&'],[]
php||ob_clean(),https://www.w3schools.com/php/ref_output_ob_clean.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_clean() function deletes all of the contents of the topmost output buffer, preventing\nthem from getting sent to the browser.', '', '']","['\n<?phpob_start();echo ""This output will not be sent to the \n  browser"";ob_clean();echo ""This output will be sent to the browser"";\n  ob_end_flush();?>\n', '', '']",[''],['PHP Version:|||&&&'],[]
php||ob_end_clean(),https://www.w3schools.com/php/ref_output_ob_end_clean.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_end_clean() function deletes the topmost output buffer and all of its contents\nwithout sending anything to the browser.', '', '']","['\n<?phpob_start();echo ""This output will not be sent to the \n  browser"";ob_end_clean();echo ""This output will be sent to the \n  browser"";?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_end_flush(),https://www.w3schools.com/php/ref_output_ob_end_flush.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_end_flush() function deletes the topmost output buffer and outputs all of its\ncontents. The output may be caught by another output buffer, or, if there are no other\noutput buffers, sent directly to the browser.', '', '']","['\n<?phpob_start();echo ""This output will be sent to the browser"";\n  ob_end_flush();?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_flush(),https://www.w3schools.com/php/ref_output_ob_flush.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_flush() function outputs the contents of the topmost output buffer and then clears\nthe buffer of the contents. The output may be caught by another output buffer or, if there\nare no other output buffers, sent directly to the browser.', '', '']","['\n<?phpob_start();echo ""This output will be sent to the browser"";\n  ob_flush();echo ""This output will not be sent to the browser"";\n  ob_end_clean();?>\n', '', '']",[''],['PHP Version:|||&&&'],[]
php||ob_get_clean(),https://www.w3schools.com/php/ref_output_ob_get_clean.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_get_clean() function returns the contents of the output buffer and then deletes the\ncontents from the buffer.', '', '']","['\n<?phpob_start();echo ""Hello World!"";$contents = ob_get_clean();\n  echo ""The contents of the buffer are: "";echo $contents;?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_get_contents(),https://www.w3schools.com/php/ref_output_ob_get_contents.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_get_contents() function returns the contents of the topmost output buffer.', '', '']","['\n<?phpob_start();echo ""Hello World!"";$contents = \n  ob_get_contents();ob_end_clean();echo ""The contents of the buffer \n  are: "";echo $contents;?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_get_flush(),https://www.w3schools.com/php/ref_output_ob_get_flush.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_get_flush() function outputs the contents of the topmost output buffer, returns the\ncontents and the deletes the buffer. The output may be caught by another output buffer or,\nif there are no other output buffers, sent directly to the browser.', '', '']","['\n<?phpob_start();echo ""Hello World!"";$contents = \n  ob_get_flush();echo ""<br>"";echo ""The contents of the buffer were: \n  "";echo $contents;?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_get_length(),https://www.w3schools.com/php/ref_output_ob_get_length.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","[""The ob_get_length() function returns the length of the topmost output buffer's contents in\nbytes. This is not always the same as the number of characters because some characters\nmay have more than one byte."", '', '']","['\n<?phpob_start();echo ""Hello World!"";$length = ob_get_length();\n  ob_end_clean();echo ""The contents of the buffer are $length characters \n  long"";?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_get_level(),https://www.w3schools.com/php/ref_output_ob_get_level.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_get_level() function indicates how many output buffers are currently on the stack. PHP may be configured to\nautomatically create an output buffer when the script begins, which is why the buffer level\nmay be 1 without calling ob_start().', '', '']","['\n<?php$buffer_count = ob_get_level();echo ""Buffer level: \n  $buffer_count.<br>"";// Add an output bufferob_start();\n  $buffer_count = ob_get_level();echo ""Buffer level: $buffer_count.<br>"";\n// Add another output bufferob_start();$buffer_count = \n  ob_get_level();echo ""Buffer level: $buffer_count.<br>"";// Close \n  all buffersob_end_flush();ob_end_flush();?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_gzhandler(),https://www.w3schools.com/php/ref_output_ob_gzhandler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['This function is intended to be passed as a callback to ob_start(). It compresses the\ncontents of the output buffer using a compression algorithm that is supported by the\nbrowser and returns the compressed content. It also sends an HTTP header indicating\nwhich compression algorithm was used.', 'When used as a callback for ob_start():When used on its own:', '', '']","['\n<?phpob_start(""ob_gzhandler"");echo ""Hello World!"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&buffer|||The contents of the output buffer|||&&&phase|||A bitmask which may have any number of the following flags:\n    \nPHP_OUTPUT_HANDLER_START - If the output buffer was\njust created\nPHP_OUTPUT_HANDLER_FLUSH - If the output buffer is\ncurrently being flushed\nPHP_OUTPUT_HANDLER_FINAL - If the output buffer will be\ndeleted right after this operation|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ob_implicit_flush(),https://www.w3schools.com/php/ref_output_ob_implicit_flush.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ob_implicit_flush() function enables or disabled implicit flushing. When enabled, implicit flushing sends output directly\nto the browser as soon as it is produced so that calls to the flush() function are not\nneeded.', '', '', '']","['\n<?php// Turn on implicit flushingob_implicit_flush(1);// Some \n  browsers will not display the content if it is too short// We use \n  str_pad() to make the output long enoughecho str_pad(""Hello World!"", \n  4096);// Even though the script is still running, the browser already \n  can\n  see the contentsleep(3);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&flag|||When set to 1, implicit flushing is turned on. When set to 0, implicit flushing is turned off.|||&&&&&&', 'PHP Version:|||&&&']",[]
php||ob_list_handlers(),https://www.w3schools.com/php/ref_output_ob_list_handlers.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The ob_list_handlers() function returns an array with the names of the callback functions that were passed into the\nob_start() function of the topmost output buffer. The array may have an element\nnamed ""default output handler"" which refers to PHP\'s native handling of output buffers.', '', '']","['\n<?phpob_start(""ob_gzhandler"");print_r(ob_list_handlers());?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ob_start(),https://www.w3schools.com/php/ref_output_ob_start.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ob_start() function creates an output buffer. A callback function can be passed in to do processing on the\ncontents of the buffer before it gets flushed from the buffer. Flags can be used to permit or\nrestrict what the buffer is able to do.', '', '', '']","['\n<?phpob_start();echo ""This content will not be sent to the \n  browser."";ob_end_clean();echo ""This content will be sent to the \n  browser."";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&Parameter|||Description|||&&&Parameter|||Description|||&&&buffer|||The contents of the output buffer|||&&&phase|||A bitmask which may have any number of the following flags:\n    \nPHP_OUTPUT_HANDLER_START - If the output buffer was\njust created\nPHP_OUTPUT_HANDLER_FLUSH - If the output buffer is\ncurrently being flushed\nPHP_OUTPUT_HANDLER_FINAL - If the output buffer will be\ndeleted right after this operation|||&&&chunk_size|||Optional. Defaults to 0. When set to a value greater than zero,\nthe buffer will automatically be flushed as soon as the length of\nthe contents exceeds this value|||&&&flags|||Optional. Defaults to PHP_OUTPUT_HANDLER_STDFLAGS.\nA bitmask which determines what operations the buffer is\npermitted to do. It may contain the following flags:\nPHP_OUTPUT_HANDLER_CLEANABLE - Calls to ob_clean(),\nob_end_clean() and ob_get_clean() are permitted.\nPHP_OUTPUT_HANDLER_FLUSHABLE - Calls to ob_flush(),\nob_end_flush() and ob_get_flush() are permitted.\nPHP_OUTPUT_HANDLER_REMOVABLE - Calls to\nob_end_clean(), ob_end_flush() and ob_get_flush() are\npermitted.\nPHP_OUTPUT_HANDLER_STDFLAGS - Equivalent to\nPHP_OUTPUT_HANDLER_CLEANABLE|\nPHP_OUTPUT_HANDLER_FLUSHABLE|\nPHP_OUTPUT_HANDLER_REMOVABLE|||&&&', 'Parameter|||Description|||&&&buffer|||The contents of the output buffer|||&&&phase|||A bitmask which may have any number of the following flags:\n    \nPHP_OUTPUT_HANDLER_START - If the output buffer was\njust created\nPHP_OUTPUT_HANDLER_FLUSH - If the output buffer is\ncurrently being flushed\nPHP_OUTPUT_HANDLER_FINAL - If the output buffer will be\ndeleted right after this operation|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||output_add_rewrite_var(),https://www.w3schools.com/php/ref_output_add_rewrite_var.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The output_add_rewrite_var() function adds a variable to URLs in HTML tags and hidden\ninputs to forms. The tags which are affected depend on the configuration of the\nurl_rewriter.tags setting in php.ini.', '', '', '']","['\n<?php// Make the URL rewriter affect <a href> and <form> tags\n  ini_set(\'url_rewriter.tags\',\'a=href,form=\');// Add a variable\n  output_add_rewrite_var(\'var\', \'value\');// Output a link and a form\n  echo \'<a href="""">This link\\\'s URL will have a variable</a>\';echo \'<form>\';\n  echo \'<p>This form will have a hidden input</p>\';echo \'<input type=""text"" \n  name=""hello"">\';echo \n  \'</form>\';?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&name|||The name of the variable to be added to URLs and the content of the name attribute of hidden inputs in forms.|||&&&value|||The value of the variable to be added to URLs and the content of the value attribute of hidden inputs in forms.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||output_reset_rewrite_vars(),https://www.w3schools.com/php/ref_output_reset_rewrite_vars.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The output_reset_rewrite_vars() function removes all variables that were added by\noutput_add_rewrite_var() from the output buffer. This will not remove the variable from\ncontent that has already been sent, but will prevent them from being added to content that\ngets sent after this function call.', '', '']","['\n<?php// Make the URL rewriter affect <a href> and <form> tags\n  ini_set(\'url_rewriter.tags\',\'a=href,form=\');// Add a variable\n  output_add_rewrite_var(\'var\', \'value\');echo \'<a href="""">This \n  link (URL) \n  will have a variable</a><br>\';ob_flush();// Remove the variable\n  output_reset_rewrite_vars();echo \'<a href="""">This link (URL) will not \n  have a variable</a>\';?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||Regular Expression,https://www.w3schools.com/php/php_ref_regex.asp,,"['PHP Regular Expression Introduction', 'Installation', 'Runtime Configuration', 'PHP Regular Expression Functions', 'Regular Expression Modifiers', 'Regular Expression Patterns', 'Metacharacters', 'Quantifiers']","['Regular expressions allow you to search for and replace patterns in strings.', 'The PHP regular expression functions are part of the PHP core. No installation is required to use these functions.', 'These settings in php.ini can be used to limit the amount time or resources used when\nevaluating regular expressions.', 'Modifiers can change how a search is performed.', 'Brackets are used to find a range of characters:', 'Metacharacters are characters with a special meaning:', 'Quantifiers define quantities:', '']","['', '', '', '', '', '', '', '']",[''],"['Name|||Default|||Description|||Changeable|||&&&pcre.backtrack_limit|||""1000000""|||The maximum number of backtracks that the regular expression engine is allowed to do while evaluating an expression. (available since PHP 5.2)|||PHP_INI_ALL|||&&&pcre.recursion_limit|||""100000""|||The maximum recursion depth that the regular expression engine is permitted to reach while evaluating an expression. (available since PHP 5.2)|||PHP_INI_ALL|||&&&pcre.jit|||""1""|||When set to ""1"" this enables PCRE\'s (Perl-Compatible Regular Expressions) just-in-time compilation. (available since PHP 7.0)|||PHP_INI_ALL|||&&&', 'Function|||Description|||&&&preg_filter()|||Returns a string or an array with pattern matches replaced, but only if matches were found|||&&&preg_grep()|||Returns an array consisting only of elements from the input array which matched the pattern|||&&&preg_last_error()|||Returns an error code indicating the reason that the most recent regular expression call failed|||&&&preg_match()|||Finds the first match of a pattern in a string|||&&&preg_match_all()|||Finds all matches of a pattern in a string|||&&&preg_replace()|||Returns a string where matches of a pattern (or an array of patterns) are replaced with a substring (or an array of substrings) in a given string|||&&&preg_replace_callback()|||Given an expression and a callback, returns a string where all matches of the expression are replaced with the substring returned by the callback|||&&&preg_replace_callback_array()|||Given an array associating expressions with callbacks, returns a string where all matches of each expression are replaced with the substring returned by the callback|||&&&preg_split()|||Breaks a string into an array using matches of a regular expression as separators|||&&&preg_quote()|||Escapes characters that have a special meaning in regular expressions by putting a backslash in front of them|||&&&', 'Modifier|||Description|||&&&i|||Performs a case-insensitive search|||&&&m|||Performs a multiline search (patterns that search for the\nbeginning or end of a string will match the beginning or end\nof each line)|||&&&u|||Enables correct matching of UTF-8 encoded patterns|||&&&', 'Expression|||Description|||&&&[abc]|||Find one character from the options between the brackets|||&&&[^abc]|||Find any character NOT between the brackets|||&&&[0-9]|||Find one character from the range 0 to 9|||&&&', 'Metacharacter|||Description|||&&&||||Find a match for any one of the patterns separated by | as in: cat|dog|fish|||&&&.|||Find just one instance of any character|||&&&^|||Finds a match as the beginning of a string as in: ^Hello|||&&&$|||Finds a match at the end of the string as in: World$|||&&&\\d|||Find a digit|||&&&\\s|||Find a whitespace character|||&&&\\b|||Find a match at the beginning of a word like this: \\bWORD, or at the end of a word like this: WORD\\b|||&&&\\uxxxx|||Find the Unicode character specified by the hexadecimal number xxxx|||&&&', ""Quantifier|||Description|||&&&n+|||Matches any string that contains at least one n|||&&&n*|||Matches any string that contains zero or more occurrences of n|||&&&n?|||Matches any string that contains zero or one occurrences of n|||&&&n{x}|||Matches any string that contains a sequence of X n's|||&&&n{x,y}|||Matches any string that contains a sequence of X to Y n's|||&&&n{x,}|||Matches any string that contains a sequence of at least X n's|||&&&""]",[]
php||preg_filter(),https://www.w3schools.com/php/func_regex_preg_filter.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The preg_filter() function returns a string or array of strings in which matches of the pattern\nhave been replaced with the replacement string.If the input is an array, this function returns an array. If the input is a string then this\nfunction returns a string.This function is similar to preg_replace() with one difference: When a match for the pattern\nis not found in an input string, the string will not be used in the return value. In this\nscenario, if the input is a string instead of an array then the function returns null.Replacement strings may contain backreferences in the form \\n or $n where n is the index\nof a group in the pattern. In the returned string, instances of \\n and $n will be replaced with\nthe substring that was matched by the group or, if \\0 or $0 are used, by the whole\nexpression.', '', '', '']","['\n<?php\n  $input = [\xa0 ""It is 5 o\'clock"",\xa0 ""40 days"",\xa0 ""No \n  numbers here"",\xa0 ""In the year 2000""];$result = \n  preg_filter(\'/[0-9]+/\', \'($0)\', $input);\n  print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. Contains a regular expression indicating what to search for|||&&&replacement|||Required. A string which will replace the matched patterns. It may contain backreferences|||&&&input|||Required. A string or array of strings in which the replacements are being performed|||&&&limit|||Optional. Defaults to -1, meaning unlimited. Sets a limit to how many replacements can be done in each string|||&&&count|||Optional. After the function has executed, this variable will contain a number indicating how many replacements were performed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||preg_grep(),https://www.w3schools.com/php/func_regex_preg_grep.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The preg_grep() function returns an array containing only elements from the input that\nmatch the given pattern.', '', '', '']","['\n<?php\n  $input = [\xa0 ""Red"",\xa0 ""Pink"",\xa0 ""Green"",\xa0 \n  ""Blue"",\xa0 ""Purple""];$result = preg_grep(""/^p/i"", $input);print_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. Contains a regular expression indicating what to search for|||&&&input|||Required. An array of strings|||&&&flags|||Optional. There is only one flag for this function. Passing the\nconstant PREG_GREP_INVERT will make the function return\nonly items that do not match the pattern.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||preg_last_error(),https://www.w3schools.com/php/func_regex_preg_last_error.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The preg_last_error() function returns an error code for the most recently evaluated regular expression. The returned\nvalue will match one of the following constants:', '', '']","[""\n<?php\n  $str = 'The regular expression is invalid.';$pattern = '/invalid//';\n  $match = @preg_match($pattern, $str, $matches);if($match === false) {\xa0 \n  // An error occurred\xa0 $err = preg_last_error();\xa0 if($err == \n  PREG_INTERNAL_ERROR) {\xa0\xa0\xa0 echo 'Invalid regular \n  expression.';\xa0 }} else if($match) {\xa0 // A match was \n  found\xa0 echo $matches[0];} else {\xa0 // No matches were \n  found\xa0 echo 'No matches found';}?>\n"", '', '']",[''],"[""Constant|||Description|||&&&PREG_NO_ERROR|||No error occurred|||&&&PREG_INTERNAL_ERROR|||There was an error evaluating the expression|||&&&PREG_BACKTRACK_LIMIT_ERROR|||The number of backtracks needed to evaluate the expression exceeded the limit given in PHP's configuration|||&&&PREG_RECURSION_LIMIT_ERROR|||The recursion depth needed to evaluate the expression exceeded the limit given in PHP's configuration|||&&&PREG_BAD_UTF8_ERROR|||The input string contained invalid UTF-8 data|||&&&PREG_BAD_UTF8_OFFSET_ERROR|||During evaluation, a string offset did not point to the first character of a multibyte UTF-8 symbol|||&&&PREG_JIT_STACKLIMIT_ERROR|||The JIT compiler ran out of stack memory when trying to evaluate the expression|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||preg_match(),https://www.w3schools.com/php/func_regex_preg_match.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The preg_match() function returns whether a \nmatch was found in a string.', '', '', '', '']","['\n<?php\n  $str = ""Visit W3Schools"";$pattern = ""/w3schools/i"";echo \n  preg_match($pattern, $str); ?>\n', '\n<?php\n  $str = ""Welcome to W3Schools"";$pattern = ""/w3schools/i"";\n  preg_match($pattern, $str, $matches, PREG_OFFSET_CAPTURE);\n  print_r($matches);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. Contains a regular expression indicating what to search for|||&&&input|||Required. The string in which the search will be performed|||&&&matches|||Optional. The variable used in this parameter will be populated with an array containing all of the matches that were found|||&&&flags|||Optional. A set of options that change how the matches array is\nstructured:\n\nPREG_OFFSET_CAPTURE - When this option is enabled,\neach match, instead of being a string, will be an array\nwhere the first element is a substring containing the match\nand the second element is the position of the first\ncharacter of the substring in the input.\nPREG_UNMATCHED_AS_NULL - When this option is\nenabled, unmatched subpatterns will be returned as NULL\ninstead of as an empty string.\n\n|||&&&offset|||Optional. Defaults to 0. Indicates how far into the string to begin\nsearching. The preg_match() function will not find matches that\noccur before the position given in this parameter|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||preg_match_all(),https://www.w3schools.com/php/func_regex_preg_match_all.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The preg_match_all() function returns the number of matches of a pattern that were found\nin a string and populates a variable with the matches that were found.', '', '', '', '']","['\n<?php\n  $str = ""The rain in SPAIN falls mainly on the plains."";$pattern = \n  ""/ain/i"";if(preg_match_all($pattern, $str, $matches)) {\xa0 \n  print_r($matches);}?>\n', '\n<?php\n  $str = ""abc ABC"";$pattern = ""/((a)b)(c)/i"";if(preg_match_all($pattern, \n  $str, $matches, PREG_PATTERN_ORDER)) {\xa0 print_r($matches);}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. Contains a regular expression indicating what to search for|||&&&input|||Required. The string in which the search will be performed|||&&&matches|||Optional. The variable used in this parameter will be populated with an array containing all of the matches that were found|||&&&flags|||Optional. A set of options that change how the matches array is structured.\nOne of the following structures may be selected:\n\nPREG_PATTERN_ORDER - Default. Each element in the\nmatches array is an array of matches from the same\ngrouping in the regular expression, with index 0\ncorresponding to matches of the whole expression and the\nremaining indices for subpattern matches.\nPREG_SET_ORDER - Each element in the matches array\ncontains matches of all groupings for one of the found\nmatches in the string.\n\n\nAny number of the following options may be applied:\n\nPREG_OFFSET_CAPTURE - When this option is enabled,\neach match, instead of being a string, will be an array\nwhere the first element is a substring containing the match\nand the second element is the position of the first\ncharacter of the substring in the input.\nPREG_UNMATCHED_AS_NULL - When this option is\nenabled, unmatched subpatterns will be returned as NULL\ninstead of as an empty string.\n|||&&&offset|||Optional. Defaults to 0. Indicates how far into the string to begin\nsearching. The preg_match() function will not find matches that\noccur before the position given in this parameter|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||preg_replace(),https://www.w3schools.com/php/func_regex_preg_replace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The preg_replace()  function returns a string or array of strings where all matches of a\npattern or list of patterns found in the input are replaced with substrings.There are three different ways to use this function:1. One pattern and a replacement string. Matches of the pattern are replaced with the\nreplacement string.2. An array of patterns and a replacement string. Matches any of the patterns are\nreplaced with the replacement string.3. An array of patterns and an array of replacement strings. Matches of each pattern\nare replaced with the replacement string at the same position in the replacements\narray. If no item is found at that position the match is replaced with an empty string.Replacement strings may contain a backreference in the form \\n or $n where n is the index\nof a group in the pattern. In the returned string, instances of \\n and $n will be replaced with\nthe substring that was matched by the group or, if \\0 or $0 are used, by the whole\nexpression.', '', '', '']","[""\n<?php\n  $str = 'Visit Microsoft!';$pattern = '/microsoft/i';echo \n  preg_replace($pattern, 'W3Schools', $str);?>\n"", '', '', '']",[''],"['Parameter|||Description|||&&&patterns|||Required. Contains a regular expression or array of regular expressions|||&&&replacements|||Required. A replacement string or an array of replacement strings|||&&&input|||Required. The string or array of strings in which replacements are being performed|||&&&limit|||Optional. Defaults to -1, meaning unlimited. Sets a limit to how many replacements can be done in each string|||&&&count|||Optional. After the function has executed, this variable will contain a number indicating how many replacements were performed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||preg_replace_callback(),https://www.w3schools.com/php/func_regex_preg_replace_callback.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The preg_replace_callback() function, given an expression and a callback, returns a string where all matches of the expression\nare replaced with the substring returned by the callback function.', '', '', '']","['\n<?php\n  function countLetters($matches) {\xa0 return $matches[0] . \'(\' . \n  strlen($matches[0]) . \')\';}$input = ""Welcome to W3Schools.com!"";\n  $pattern = \'/[a-z0-9\\.]+/i\';$result = preg_replace_callback($pattern, \n  \'countLetters\', $input);echo $result;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. A regular expression or array of regular expressions indicating what to search for|||&&&replacements|||Required. A callback function which returns the replacement.\nThe callback function has one parameter containing an array of\nmatches. The first element in the array contains the match for the\nwhole expression while the remaining elements have matches for\neach of the groups in the expression.|||&&&input|||Required. The string or array of strings in which replacements are being performed|||&&&limit|||Optional. Defaults to -1, meaning unlimited. Sets a limit to how many replacements can be done in each string|||&&&count|||Optional. After the function has executed, this variable will contain a number indicating how many replacements were performed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||preg_replace_callback_array(),https://www.w3schools.com/php/func_regex_preg_replace_callback_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The preg_replace_callback_array() function returns a string or an array of strings in which matches of a set of regular expressions are\nreplaced with the return value of a callback function.', '', '', '', '']","['\n<?php\n  function countLetters($matches) {\xa0 return $matches[0] . \'[\' . \n  strlen($matches[0]) . \'letter]\';}function countDigits($matches) {\xa0 \n  return $matches[0] . \'[\' . strlen($matches[0]) . \'digit]\';}$input \n  = ""There are 365 days in a year."";$patterns = [\xa0 \'/\\b[a-z]+\\b/i\' => \n  \'countLetters\',\xa0 \'/\\b[0-9]+\\b/\' => \'countDigits\'];$result = \n  preg_replace_callback_array($patterns, $input);echo $result;?>\n', '\n<?php\n  function countLetters($matches) {\xa0 return $matches[0] . \'[\' . \n  strlen($matches[0]) . \'letter]\';}function countDigits($matches) {\xa0 \n  return $matches[0] . \'[\' . strlen($matches[0]) . \'digit]\';}$input \n  = ""365 days"";$patterns = [\xa0 \'/[a-z]+/i\' => \'countLetters\',\xa0 \n  \'/[0-9]+/\' => \'countDigits\'];$result = \n  preg_replace_callback_array($patterns, $input);echo $result;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. An associative array which associates regular\nexpression patterns to callback functions.\nThe callback functions have one parameter which is an array of\nmatches.The first element in the array contains the match for the\nwhole expression while the remaining elements have matches for\neach of the groups in the expression.|||&&&input|||Required. The string or array of strings in which replacements are being performed|||&&&limit|||Optional. Defaults to -1, meaning unlimited. Sets a limit to how many replacements can be done in each string|||&&&count|||Optional. After the function has executed, this variable will contain a number indicating how many replacements were performed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||preg_split(),https://www.w3schools.com/php/func_regex_preg_split.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The preg_split() function breaks a string into an array using matches of a regular expression as separators.', '', '', '', '']","['\n<?php\n  $date = ""1970-01-01 00:00:00"";$pattern = ""/[-\\s:]/"";$components = \n  preg_split($pattern, $date);print_r($components);?>\n', '\n<?php\n  $date = ""1970-01-01 00:00:00"";$pattern = ""/([-\\s:])/"";$components = \n  preg_split($pattern, $date, -1,PREG_SPLIT_DELIM_CAPTURE);\n  print_r($components);?>\n &&&&&& \n<?php\n  $date = ""1970-01-01"";$pattern = ""/-/"";$components = \n  preg_split($pattern, $date, -1,PREG_SPLIT_OFFSET_CAPTURE);\n  print_r($components);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&pattern|||Required. A regular expression determining what to use as a separator|||&&&string|||Required. The string that is being split|||&&&limit|||Optional. Defaults to -1, meaning unlimited. Limits the number of\nelements that the returned array can have. If the limit is reached\nbefore all of the separators have been found, the rest of the string\nwill be put into the last element of the array|||&&&flags|||Optional. These flags provide options to change the returned array:\n\nPREG_SPLIT_NO_EMPTY - Empty strings will be\nremoved from the returned array.\nPREG_SPLIT_DELIM_CAPTURE - If the regular\nexpression contains a group wrapped in parentheses,\nmatches of this group will be included in the returned array.\nPREG_SPLIT_OFFSET_CAPTURE - Each element in the\nreturned array will be an array with two element, where the\nfirst element is the substring and the second element is the\nposition of the first character of the substring in the input\nstring.\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||preg_quote(),https://www.w3schools.com/php/func_regex_preg_quote.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The preg_quote() function adds a backslash to characters that have a special meaning in\nregular expressions so that searches for the literal characters can be done. This function is\nuseful when using user input in regular expressions.', '', '', '']","['\n<?php\n  $search = preg_quote(""://"", ""/"");$input = \'https://www.w3schools.com/\';\n  $pattern = ""/$search/"";if(preg_match($pattern, $input)) {\xa0 echo \n  ""The input is a URL."";} else {\xa0 echo ""The input is not a URL."";\n  }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&input|||Required. The string to be escaped|||&&&delimiter|||Optional. Defaults to null. This parameter expects a single\ncharacter indicating which delimiter the regular expression will\nuse. When provided, instances of this character in the input string\nwill also be escaped with a backslash|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||SimpleXML,https://www.w3schools.com/php/php_ref_simplexml.asp,,"['PHP SimpleXML Introduction', 'Installation', 'PHP SimpleXML Functions', 'PHP SimpleXML Iteration Functions']","[""SimpleXML is an extension that allows us to easily manipulate and get XML \ndata.SimpleXML provides an easy way of getting an element's name, attributes and \ntextual content if you know the XML document's structure or layout.SimpleXML turns an XML document into a data structure you can iterate through \nlike a collection of arrays and objects."", 'From PHP 5, the SimpleXML functions are part of the PHP core. No installation is required to use these functions.', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&__construct()|||Creates a new SimpleXMLElement object|||&&&__toString()|||Returns the string content of an element|||&&&addAttribute()|||Appends an attribute to the SimpleXML element|||&&&addChild()|||Appends a child element the SimpleXML element|||&&&asXML()|||Returns a well-formed XML string (XML version 1.0) from a SimpleXML object|||&&&attributes()|||Returns the attributes/values of an element|||&&&children()|||Returns the children of a specified node|||&&&count()|||Counts the children of a specified node|||&&&getDocNamespaces()|||Returns the namespaces declared in document|||&&&getName()|||Returns the name of an element|||&&&getNamespaces()|||Returns the namespaces used in document|||&&&registerXPathNamespace()|||Creates a namespace context for the next XPath query|||&&&saveXML()|||Alias of asXML()|||&&&simplexml_import_dom()|||Returns a SimpleXMLElement object from a DOM node|||&&&simplexml_load_file()|||Converts an XML document to an object|||&&&simplexml_load_string()|||Converts an XML string to an object|||&&&xpath()|||Runs an XPath query on XML data|||&&&', 'Function|||Description|||&&&current()|||Returns the current element|||&&&getChildren()|||Returns the child elements of the current element|||&&&hasChildren()|||Checks whether the current element has children|||&&&key()|||Returns the XML tag name of the current element|||&&&next()|||Moves to the next element|||&&&rewind()|||Rewinds to the first element|||&&&valid()|||Checks whether the current element is valid|||&&&']",[]
php||__construct(),https://www.w3schools.com/php/func_simplexml__construct.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The __construct() function creates a new SimpleXMLElement object.', 'Assume we have the following XML file, ""note.xml"":', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n$xml=new SimpleXMLElement($note);\n echo $xml->asXML();?>\n', '\n <?php$xml=new SimpleXMLElement(""note.xml"", 0, TRUE);echo $xml->asXML();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&data|||Required. Specifies A well-formed XML string or the path or URL to an XML document if data_is_url is TRUE|||&&&options|||Optional. Specifies additional Libxml parameters. Is set by specifying the option and 1 or 0 (TRUE or FALSE, e.g. LIBXML_NOBLANKS(1))\n Possible values:\n\nLIBXML_COMPACT - Activate nodes allocation optimization (may  speed up application)\nLIBXML_DTDATTR - Set default DTD attributes\nLIBXML_DTDLOAD - Load external subset\nLIBXML_DTDVALID - Validate with the DTD\nLIBXML_NOBLANKS - Remove blank nodes\nLIBXML_NOCDATA - Merge CDATA as text nodes\nLIBXML_NOEMPTYTAG - Expand empty tags (e.g. <br/> to <br></br>),  only available in the DOMDocument->save() and DOMDocument->saveXML()  functions\nLIBXML_NOENT - Substitute entities\nLIBXML_NOERROR - Do not show error reports\nLIBXML_NONET - Disable network access while loading documents\nLIBXML_NOWARNING - Do not show warning reports\nLIBXML_NOXMLDECL - Drop the XML declaration when saving a document\nLIBXML_NSCLEAN - Remove redundant namespace declarations\nLIBXML_PARSEHUGE - Sets XML_PARSE_HUGE flag, which relaxes any  hardcoded limit from the parser. This affects limits like maximum depth  of a document and limits of the size of text nodes\nLIBXML_XINCLUDE - Implement XInclude substitution\nLIBXML_ERR_ERROR - Get recoverable errors\nLIBXML_ERR_FATAL - Get fatal errors\nLIBXML_ERR_NONE - Get no errors\nLIBXML_ERR_WARNING - Get simple warnings\nLIBXML_VERSION - Get libxml version (e.g. 20605 or 20617)\nLIBXML_DOTTED_VERSION - Get dotted libxml version (e.g. 2.6.5 or  2.6.17)\n\n|||&&&data_is_url|||Optional. TRUE specifies that \n data is a path/URL to an XML document instead of string data. Default is FALSE|||&&&ns|||Optional. Specifies a namespace prefix or URI|||&&&is_prefix|||Optional. Specifies a Boolean value. TRUE if ns is a prefix. FALSE if ns is a URI. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||__toString(),https://www.w3schools.com/php/func_simplexml__tostring.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","[""The __toString() function returns the string content of an element.This function returns the string content that is directly in the element - \nnot the string content that is inside this element's children!"", '', '']","['\n <?php$xml = new SimpleXMLElement(""<note>Hello <to>Tove</to><from>Jani</from>World!</note>"");\n  echo $xml;?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||addAttribute(),https://www.w3schools.com/php/func_simplexml_addattribute.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The addAttribute() function appends an attribute to the SimpleXML element.', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml = new SimpleXMLElement($note);// Add attribute to root element$xml->addAttribute(""type"",""private"");\n  // Add attribute to body element\n $xml->body->addAttribute(""date"",""2014-01-01"");\necho $xml->asXML();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&name|||Required. Specifies the name of the attribute to add|||&&&value|||Optional. Specifies the value of the attribute|||&&&ns|||Optional. Specifies a namespace for the attribute|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||addChild(),https://www.w3schools.com/php/func_simplexml_addchild.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The addChild() function appends a child element to the SimpleXML element.', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml = new SimpleXMLElement($note);// Add a child element to the body element$xml->body->addChild(""date"",""2014-01-01"");// Add a child element after the last element inside note\n $footer = $xml->addChild(""footer"",""Some footer text"");echo $xml->asXML();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&name|||Required. Specifies the name of the child element to add|||&&&value|||Optional. Specifies the value of the child element|||&&&ns|||Optional. Specifies a namespace for the child element|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||asXML(),https://www.w3schools.com/php/func_simplexml_asxml.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The asXML() function returns a well-formed XML string (XML version 1.0) from \na SimpleXML object.', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml = new SimpleXMLElement($note);echo $xml->asXML();?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&filename|||Optional. If specified, the data is written to the file, instead of returning \n    a string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||attributes(),https://www.w3schools.com/php/func_simplexml_attributes.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The attributes() function returns the attributes and values of an XML element.', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from>\n <heading>Reminder</heading><body date=""2014-01-01"" type=""private"">Do \n  not forget me this weekend!</body></note>XML;\n $xml = simplexml_load_string($note);foreach($xml->body[0]->attributes() as $a => $b)\xa0 {\xa0 echo $a,\'=""\',$b,""<br>"";\xa0 }?> ', '', '', '']",[''],"['Parameter|||Description|||&&&ns|||Optional. Specifies a namespace for the retrieved attributes|||&&&prefix|||Optional. Specifies TRUE if ns is a prefix and FALSE if ns is a URI. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||children(),https://www.w3schools.com/php/func_simplexml_children.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The children() function finds the children of a specified node.', '', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from>\n <heading>Reminder</heading><body>Do not forget me this weekend!</body></note>XML;\n $xml=simplexml_load_string($note);foreach ($xml->children() as $child)\xa0 {\xa0 echo ""Child node: "" . $child . ""<br>"";\xa0 }?> ', '\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from>\n <heading>Reminder</heading><body><span>Important!</span> Do \n  not forget me this weekend!</body></note>XML;\n $xml=simplexml_load_string($note);foreach ($xml->body[0]->children() as $child)\xa0 {\xa0 echo ""Child node: "" . $child . ""<br>"";\xa0 }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&ns|||Optional. Specifies an XML namespace|||&&&prefix|||Optional. A Boolean value. If TRUE ns is regarded as a prefix. \n    If FALSE ns is regarded as a namespace URL. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||count(),https://www.w3schools.com/php/func_simplexml_count.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The count() function counts the children of a specified node.', '', '']","['\n <?php$xml=<<<XML\xa0 <cars>\xa0\xa0\xa0 <car name=""Volvo"">\xa0\xa0\xa0 <child/>\xa0\xa0\xa0 <child/>\xa0\xa0\xa0 <child/>\xa0\xa0\xa0 <child/>\xa0 </car>\xa0 <car name=""BMW"">\xa0\xa0\xa0 <child/>\n \xa0\xa0\xa0\n <child/>\xa0 </car></cars>XML;$elem=new SimpleXMLElement($xml);foreach ($elem as $car)\xa0 {\xa0 printf(""%s has %d children.<br>"", $car[\'name\'], $car->count());\xa0 }?> ', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||getDocNamespaces(),https://www.w3schools.com/php/func_simplexml_getdocnamespaces.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The getDocNamespaces() function returns the namespaces declared in an XML document.', '', '', '', '']","['\n <?php$xml=<<<XML<?xml version=""1.0"" standalone=""yes""?><cars xmlns:c=""http://w3schools.com/ns"">\xa0 <c:car id=""1"">Volvo</c:car>\xa0 <c:car id=""2"">BMW</c:car>\xa0 <c:car id=""3"">Saab</c:car> </cars>XML;\n $sxe=new SimpleXMLElement($xml);$ns=$sxe->getDocNamespaces();\n print_r($ns);?> ', '\n <?php$xml=<<<XML<?xml version=""1.0"" standalone=""yes""?><cars xmlns:c=""http://w3schools.com/ns"">\xa0 <c:car id=""1"">Volvo</c:car>\xa0 <c:car id=""2"">BMW</c:car>\xa0 <c:car id=""3"" a:country=""Sweden"" xmlns:a=""http://w3schools.com/country"">Saab</c:car> </cars>XML;\n$sxe=new SimpleXMLElement($xml);$ns=$sxe->getDocNamespaces(TRUE);\n var_dump($ns);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&recursive|||Optional.\xa0 Specifies a Boolean value. If TRUE, all namespaces declared in \n    document are returned. If FALSE, only namespaces declared in root node is returned. Default is FALSE|||&&&from_root|||Optional. Specifies a Boolean value. TRUE checks namespaces from the root of the XML document. FALSE checks namespaces under a child node. Default is TRUE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||getName(),https://www.w3schools.com/php/func_simplexml_getname.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The getName() function returns the name of the XML element.', '', '']","['\n <?php$xml=<<<XML<?xml version=""1.0"" standalone=""yes""?><cars>\xa0 <car id=""1"">Volvo</car>\xa0 <car id=""2"">BMW</car>\xa0 <car id=""3"">Saab</car> </cars>XML;$sxe=new SimpleXMLElement($xml);\n // Get the name of the cars elementecho $sxe->getName() . ""<br>"";\n// Also print out the names of the children of the cars elementforeach ($sxe->children() as $child)\xa0 {\xa0 echo $child->getName() . ""<br>"";\xa0 }?> ', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||getNamespaces(),https://www.w3schools.com/php/func_simplexml_getnamespaces.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The getNamespaces() function returns the namespaces used in an XML document.', '', '', '']","['\n <?php$xml=<<<XML<?xml version=""1.0"" standalone=""yes""?><cars xmlns:c=""http://w3schools.com/ns"" xmlns:a=""http://w3schools.com/country"">\xa0 <c:car id=""1"">Volvo</c:car>\xa0 <c:car id=""2"">BMW</c:car>\xa0 <c:car id=""3"">Saab</c:car> </cars>XML;$sxe=new SimpleXMLElement($xml);$ns=$sxe->getNamespaces(true);var_dump($ns);\n ?> ', '', '', '']",[''],"['Parameter|||Description|||&&&recursive|||Optional. Specifies a Boolean value. If TRUE, all namespaces used in \n    document are returned. If FALSE, only namespaces used in root node is returned. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||registerXPathNamespace(),https://www.w3schools.com/php/func_simplexml_registerxpathnamespace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The registerXPathNamespace() function creates a namespace context for the next XPath query.This function is useful if a namespace prefix is changed in an XML document. \nThe registerXPathNamespace() function will create a prefix for specified namespace, so that\nthe affected XML nodes can be accessed without altering the application code too much.', '', '', '']","['\n <?php$xml=<<<XML<book xmlns:chap=""http://example.org/chapter-title"">\xa0 <title>My Book</title>\xa0 <chapter id=""1"">\xa0\xa0\xa0 <chap:title>Chapter 1</chap:title>\xa0\xa0\xa0 <para>Donec velit. Nullam eget tellus...</para>\xa0 </chapter>\xa0 <chapter id=""2"">\xa0\xa0\xa0 <chap:title>Chapter 2</chap:title>\xa0\xa0\xa0 <para>Lorem ipsum dolor sit amet....</para>\xa0 </chapter></book>XML;\n $sxe=new SimpleXMLElement($xml);\n $sxe->registerXPathNamespace(\'c\',\'http://example.org/chapter-title\');\n $result=$sxe->xpath(\'//c:title\');foreach ($result as $title)\xa0 {\xa0 echo $title . ""<br>"";\xa0 }?> ', '', '', '']",[''],"['Parameter|||Description|||&&&prefix|||Required. Specifies the namespace prefix to use in the XPath query for the namespace given in ns|||&&&ns|||Required. Specifies the namespace to use for the XPath query|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||saveXML(),https://www.w3schools.com/php/func_simplexml_savexml.asp,,['Definition and Usage'],['The saveXML() function is an alias of the asXML() function.'],[''],[''],[],[]
php||simplexml_import_dom(),https://www.w3schools.com/php/func_simplexml_import_dom.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The simplexml_import_dom() function returns a SimpleXMLElement object from a DOM node.', '', '', '', '']","['\n<?php\n $dom=new domDocument;\n $dom->loadXML(""<note><to>Tove</to><from>Jani</from></note>"");\n $x=simplexml_import_dom($dom);echo $x->from;?>\n', '\n <?php$dom=new domDocument;\n $dom->loadXML(""<books><book><title>Title1</title></book><book><title>Title2</title></book></books>"");\n $x=simplexml_import_dom($dom);echo $x->book[1]->title;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&node|||Required. Specifies a DOM element node|||&&&classname|||Optional. Specifies the class of the new object|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||simplexml_load_file(),https://www.w3schools.com/php/func_simplexml_load_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The simplexml_load_file() function converts an XML document to an object.', 'Assume we have the following XML file, ""note.xml"":', '', '', '']","['\n<?php\n $xml=simplexml_load_file(""note.xml"");print_r($xml);?>\n', '\n <?php$xml=simplexml_load_file(""note.xml"");echo $xml->to . ""<br>"";\n echo $xml->from . ""<br>"";echo $xml->heading . ""<br>"";echo $xml->body;?>\n &&&&&& \n<?php\n$xml=simplexml_load_file(""note.xml"");\necho $xml->getName() . ""<br>"";\n\nforeach($xml->children() as $child)\n\xa0\xa0{\n\xa0\xa0echo $child->getName() . "": "" . $child . ""<br>"";\n\xa0\xa0}\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&file|||Required. Specifies the path to the XML file|||&&&class|||Optional. Specifies the class of the new object|||&&&options|||Optional. Specifies additional Libxml parameters. Is set by specifying the option and 1 or 0 (TRUE or FALSE, e.g. LIBXML_NOBLANKS(1))\n Possible values:\n\nLIBXML_COMPACT - Activate nodes allocation optimization (may  speed up application)\nLIBXML_DTDATTR - Set default DTD attributes\nLIBXML_DTDLOAD - Load external subset\nLIBXML_DTDVALID - Validate with the DTD\nLIBXML_NOBLANKS - Remove blank nodes\nLIBXML_NOCDATA - Merge CDATA as text nodes\nLIBXML_NOEMPTYTAG - Expand empty tags (e.g. <br/> to <br></br>),  only available in the DOMDocument->save() and DOMDocument->saveXML()  functions\nLIBXML_NOENT - Substitute entities\nLIBXML_NOERROR - Do not show error reports\nLIBXML_NONET - Disable network access while loading documents\nLIBXML_NOWARNING - Do not show warning reports\nLIBXML_NOXMLDECL - Drop the XML declaration when saving a document\nLIBXML_NSCLEAN - Remove redundant namespace declarations\nLIBXML_PARSEHUGE - Sets XML_PARSE_HUGE flag, which relaxes any  hardcoded limit from the parser. This affects limits like maximum depth  of a document and limits of the size of text nodes\nLIBXML_XINCLUDE - Implement XInclude substitution\nLIBXML_ERR_ERROR - Get recoverable errors\nLIBXML_ERR_FATAL - Get fatal errors\nLIBXML_ERR_NONE - Get no errors\nLIBXML_ERR_WARNING - Get simple warnings\nLIBXML_VERSION - Get libxml version (e.g. 20605 or 20617)\nLIBXML_DOTTED_VERSION - Get dotted libxml version (e.g. 2.6.5 or  2.6.17)\n\n|||&&&ns|||Optional. Specifies a namespace prefix or URI|||&&&is_prefix|||Optional. Specifies a Boolean value. TRUE if ns is a prefix. FALSE if ns is a URI. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||simplexml_load_string(),https://www.w3schools.com/php/func_simplexml_load_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The simplexml_load_string() function converts a well-formed XML string into an object.', '', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml=simplexml_load_string($note);print_r($xml);?>', '\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml=simplexml_load_string($note);echo $xml->to . ""<br>"";echo $xml->from . ""<br>"";echo $xml->heading . ""<br>"";echo $xml->body;\n ?>\n &&&&&& \n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml=simplexml_load_string($note);echo $xml->getName() . ""<br>"";\n foreach($xml->children() as $child)\xa0 {\xa0 echo $child->getName() . "": "" . $child . ""<br>"";\xa0 }?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&data|||Required. Specifies a well-formed XML string|||&&&class|||Optional. Specifies the class of the new object|||&&&options|||Optional. Specifies additional Libxml parameters. Is set by specifying the option and 1 or 0 (TRUE or FALSE, e.g. LIBXML_NOBLANKS(1))\n Possible values:\n\nLIBXML_COMPACT - Activate nodes allocation optimization (may  speed up application)\nLIBXML_DTDATTR - Set default DTD attributes\nLIBXML_DTDLOAD - Load external subset\nLIBXML_DTDVALID - Validate with the DTD\nLIBXML_NOBLANKS - Remove blank nodes\nLIBXML_NOCDATA - Merge CDATA as text nodes\nLIBXML_NOEMPTYTAG - Expand empty tags (e.g. <br/> to <br></br>),  only available in the DOMDocument->save() and DOMDocument->saveXML()  functions\nLIBXML_NOENT - Substitute entities\nLIBXML_NOERROR - Do not show error reports\nLIBXML_NONET - Disable network access while loading documents\nLIBXML_NOWARNING - Do not show warning reports\nLIBXML_NOXMLDECL - Drop the XML declaration when saving a document\nLIBXML_NSCLEAN - Remove redundant namespace declarations\nLIBXML_PARSEHUGE - Sets XML_PARSE_HUGE flag, which relaxes any  hardcoded limit from the parser. This affects limits like maximum depth  of a document and limits of the size of text nodes\nLIBXML_XINCLUDE - Implement XInclude substitution\nLIBXML_ERR_ERROR - Get recoverable errors\nLIBXML_ERR_FATAL - Get fatal errors\nLIBXML_ERR_NONE - Get no errors\nLIBXML_ERR_WARNING - Get simple warnings\nLIBXML_VERSION - Get libxml version (e.g. 20605 or 20617)\nLIBXML_DOTTED_VERSION - Get dotted libxml version (e.g. 2.6.5 or  2.6.17)\n\n|||&&&ns|||Optional. Specifies a namespace prefix or URI|||&&&is_prefix|||Optional. Specifies a Boolean value. TRUE if ns is a prefix. FALSE if ns is a URI. Default is FALSE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xpath(),https://www.w3schools.com/php/func_simplexml_xpath.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xpath() function runs an XPath query on the XML document.', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n $xml = new SimpleXMLElement($note);$result = $xml->xpath(""/note/to"");\n\nprint_r($result);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&path|||Required. Specifies an XPath path to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||current(),https://www.w3schools.com/php/func_simplexml_current.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The current() function returns the current element.', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n  $xml = new SimpleXMLIterator($note);// rewind to the first element\n  $xml->rewind();// return current elementvar_dump($xml->current());?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||getChildren(),https://www.w3schools.com/php/func_simplexml_getchildren.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The getChildren() function returns the child elements of the current element.', '', '']","['\n <?php$bookxml = <<<XML<bookstore>\xa0 <book>\xa0\xa0\xa0 \n  <title>Everyday Italian</title>\xa0\xa0\xa0 <author>Giada De \n  Laurentiis</author>\xa0 </book>\xa0 <book>\xa0\xa0\xa0 \n  <title>Harry Potter</title>\xa0\xa0\xa0 <author>J K. \n  Rowling</author>\xa0 </book>\xa0 <book>\xa0\xa0\xa0 \n  <title>Learning XML</title>\xa0\xa0\xa0 <author>Erik T. Ray</author>\xa0 \n  </book></bookstore>XML;$xml = new SimpleXMLIterator($bookxml);\nfor( $xml->rewind(); $xml->valid(); $xml->next() ) {\xa0 foreach($xml->getChildren() \n  as $name => $data) {\xa0\xa0\xa0 echo ""The $name is \'$data\'"";\xa0\xa0\xa0 \n  echo ""<br>"";\xa0 }}?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||hasChildren(),https://www.w3schools.com/php/func_simplexml_haschildren.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The hasChildren() function checks whether the current element has children.', '', '']","['\n <?php$bookxml = <<<XML<bookstore>\xa0 <book>\xa0\xa0\xa0 \n  <title>Everyday Italian</title>\xa0\xa0\xa0 <author>Giada De \n  Laurentiis</author>\xa0 </book>\xa0 <book>\xa0\xa0\xa0 \n  <title>Harry Potter</title>\xa0\xa0\xa0 <author>J K. \n  Rowling</author>\xa0 </book>\xa0 <book>\xa0\xa0\xa0 \n  <title>Learning XML</title>\xa0\xa0\xa0 <author>Erik T. Ray</author>\xa0 \n  </book></bookstore>XML;$xml = new SimpleXMLIterator($bookxml);\nfor( $xml->rewind(); $xml->valid(); $xml->next() ) {\xa0 if($xml->hasChildren()) \n  {\xa0\xa0\xa0 var_dump($xml->current());\xa0\xa0\xa0 echo \n  ""<br>"";\xa0 }}?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||key(),https://www.w3schools.com/php/func_simplexml_key.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The key() function returns the current key (which is the XML tag name of the \ncurrent element).', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n  $xml = new SimpleXMLIterator($note);// rewind to the first element\n  $xml->rewind();// return current keyvar_dump($xml->key());?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||next(),https://www.w3schools.com/php/func_simplexml_next.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The next() function moves to the next element.', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n  $xml = new SimpleXMLIterator($note);// rewind to the first element\n  $xml->rewind();// move to the next element$xml->next();// \n  return current elementvar_dump($xml->current());?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||rewind(),https://www.w3schools.com/php/func_simplexml_rewind.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The rewind() function rewinds to the first element.', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n  $xml = new SimpleXMLIterator($note);// rewind to the first element\n  $xml->rewind();// return current elementvar_dump($xml->current());?>\n', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||valid(),https://www.w3schools.com/php/func_simplexml_valid.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The valid() function checks whether the current element is valid after a call \nto rewind() or \nnext().', '', '', '']","['\n <?php$note=<<<XML<note><to>Tove</to><from>Jani</from><heading>Reminder</heading>\n <body>Do not forget me this weekend!</body></note>XML;\n  $xml = new SimpleXMLIterator($note);// rewind to the first element\n  $xml->rewind();// check if validvar_dump($xml->valid());\n// move to the next element$xml->next();// check if valid\n  var_dump($xml->valid());?>\n', ""\n <?php$xml = new SimpleXMLIterator('<books><book>Learn \n  PHP</book></books>');// rewind to the first element$xml->rewind();\n// check if validvar_dump($xml->valid());// move to the \n  next element$xml->next();// check if valid - will be bool(false) \n  because there is only one elementvar_dump($xml->valid());?>\n"", '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||,https://www.w3schools.com/php/php_ref_stream.asp,,"['PHP Stream Introduction', 'Installation', 'PHP Stream Functions']","['Streams are the way of generalizing file, network, data compression, and \nother operations which share a common set of functions and uses. In its simplest \ndefinition, a stream is a resource object which exhibits streamable behavior. \nThat is, it can be read from or written to in a linear fashion, and may be able \nto fseek() to an arbitrary location within the stream. A wrapper is \nadditional code which tells the stream how to handle specific \nprotocols/encodings.', 'The Stream functions are part of the PHP core. There is no installation needed to use these functions.', '']","['', '', '']",[''],"['Function|||Description|||&&&set_socket_blocking()|||Deprecated in PHP 5.4, and removed in PHP 7.0. \n    Alias of stream_set_blocking()|||&&&stream_bucket_prepend()|||\xa0|||&&&stream_context_create()|||\xa0|||&&&stream_context_get_default()|||\xa0|||&&&stream_context_get_options()|||\xa0|||&&&stream_context_get_params()|||\xa0|||&&&stream_context_set_default()|||\xa0|||&&&stream_context_set_options()|||\xa0|||&&&stream_context_set_params()|||\xa0|||&&&stream_copy_to_stream()|||Copies data from one stream to another|||&&&stream_filter_append()|||Appends a filter to a stream|||&&&stream_filter_prepend()|||\xa0|||&&&stream_filter_register()|||\xa0|||&&&stream_filter_remove()|||\xa0|||&&&stream_get_contents()|||\xa0|||&&&stream_get_filters()|||\xa0|||&&&stream_get_line()|||\xa0|||&&&stream_get_meta_data()|||\xa0|||&&&stream_get_transports()|||\xa0|||&&&stream_get_wrappers()|||\xa0|||&&&stream_is_local()|||\xa0|||&&&stream_isatty()|||\xa0|||&&&stream_notification_callback()|||\xa0|||&&&stream_register_wrapper()|||Alias of stream_wrapper_register()|||&&&stream_resolve_include_path()|||\xa0|||&&&stream_select()|||\xa0|||&&&stream_set_blocking()|||\xa0|||&&&stream_set_chunk_size()|||\xa0|||&&&stream_set_read_buffer()|||\xa0|||&&&stream_set_timeout()|||\xa0|||&&&stream_set_write_buffer()|||\xa0|||&&&stream_socket_accept()|||\xa0|||&&&stream_socket_client()|||\xa0|||&&&stream_socket_enable_crypto()|||\xa0|||&&&stream_socket_get_name()|||\xa0|||&&&stream_socket_pair()|||\xa0|||&&&stream_socket_recvfrom()|||\xa0|||&&&stream_socket_sendto()|||\xa0|||&&&stream_socket_server()|||\xa0|||&&&stream_socket_shutdown()|||\xa0|||&&&stream_supports_lock()|||\xa0|||&&&stream_wrapper_register()|||\xa0|||&&&stream_wrapper_restore()|||\xa0|||&&&stream_wrapper_unregister()|||\xa0|||&&&']",[]
php||String,https://www.w3schools.com/php/php_ref_string.asp,,['PHP String Functions'],['The PHP string functions are part of the PHP core. No installation is required to use these functions.'],[''],[''],"['Function|||Description|||&&&addcslashes()|||Returns a string with backslashes in front of the specified characters|||&&&addslashes()|||Returns a string with backslashes in front of predefined characters|||&&&bin2hex()|||Converts a string of ASCII characters to hexadecimal values|||&&&chop()|||Removes whitespace or other characters from the right end of a string|||&&&chr()|||Returns a character from a specified ASCII value|||&&&chunk_split()|||Splits a string into a series of smaller parts|||&&&convert_cyr_string()|||Converts a string from one Cyrillic character-set to another|||&&&convert_uudecode()|||Decodes a uuencoded string|||&&&convert_uuencode()|||Encodes a string using the uuencode algorithm|||&&&count_chars()|||Returns information about characters used in a string|||&&&crc32()|||Calculates a 32-bit CRC for a string|||&&&crypt()|||One-way string hashing|||&&&echo()|||Outputs one or more strings|||&&&explode()|||Breaks a string into an array|||&&&fprintf()|||Writes a formatted string to a specified output stream|||&&&get_html_translation_table()|||Returns the translation table used by htmlspecialchars() and htmlentities()|||&&&hebrev()|||Converts Hebrew text to visual text|||&&&hebrevc()|||Converts Hebrew text to visual text and new lines (\\n) into <br>|||&&&hex2bin()|||Converts a string of hexadecimal values to ASCII characters|||&&&html_entity_decode()|||Converts HTML entities to characters|||&&&htmlentities()|||Converts characters to HTML entities|||&&&htmlspecialchars_decode()|||Converts some predefined HTML entities to characters|||&&&htmlspecialchars()|||Converts some predefined characters to HTML entities|||&&&implode()|||Returns a string from the elements of an array|||&&&join()|||Alias of implode()|||&&&lcfirst()|||Converts the first character of a string to lowercase|||&&&levenshtein()|||Returns the Levenshtein distance between two strings|||&&&localeconv()|||Returns locale numeric and monetary formatting information|||&&&ltrim()|||Removes whitespace or other characters from the left side of a string|||&&&md5()|||Calculates the MD5 hash of a string|||&&&md5_file()|||Calculates the MD5 hash of a file|||&&&metaphone()|||Calculates the metaphone key of a string|||&&&money_format()|||Returns a string formatted as a currency string|||&&&nl_langinfo()|||Returns specific local information|||&&&nl2br()|||Inserts HTML line breaks in front \nof each newline in a string|||&&&number_format()|||Formats a number with grouped thousands|||&&&ord()|||Returns the ASCII value of the first character of a string|||&&&parse_str()|||Parses a query string into variables|||&&&print()|||Outputs one or more strings|||&&&printf()|||Outputs a formatted string|||&&&quoted_printable_decode()|||Converts a quoted-printable string to an 8-bit string|||&&&quoted_printable_encode()|||Converts an 8-bit string to a quoted printable string|||&&&quotemeta()|||Quotes meta characters|||&&&rtrim()|||Removes whitespace or other characters from the right side of a string|||&&&setlocale()|||Sets locale information|||&&&sha1()|||Calculates the SHA-1 hash of a string|||&&&sha1_file()|||Calculates the SHA-1 hash of a file|||&&&similar_text()|||Calculates the similarity between two strings|||&&&soundex()|||Calculates the soundex key of a string|||&&&sprintf()|||Writes a formatted string to a variable|||&&&sscanf()|||Parses input from a string according to a format|||&&&str_getcsv()|||Parses a CSV string into an array|||&&&str_ireplace()|||Replaces some characters in a string (case-insensitive)|||&&&str_pad()|||Pads a string to a new length|||&&&str_repeat()|||Repeats a string a specified number of times|||&&&str_replace()|||Replaces some characters in a string (case-sensitive)|||&&&str_rot13()|||Performs the ROT13 encoding on a string|||&&&str_shuffle()|||Randomly shuffles all characters in a string|||&&&str_split()|||Splits a string into an array|||&&&str_word_count()|||Count the number of words in a string|||&&&strcasecmp()|||Compares two strings (case-insensitive)|||&&&strchr()|||Finds the first occurrence of a string inside another string (alias of strstr())|||&&&strcmp()|||Compares two strings (case-sensitive)|||&&&strcoll()|||Compares two strings (locale based string comparison)|||&&&strcspn()|||Returns the number of characters found in a string before any part of some specified characters are found|||&&&strip_tags()|||Strips HTML and PHP tags from a string|||&&&stripcslashes()|||Unquotes a string quoted with addcslashes()|||&&&stripslashes()|||Unquotes a string quoted with addslashes()|||&&&stripos()|||Returns the position of the first occurrence of a string inside another string (case-insensitive)|||&&&stristr()|||Finds the first occurrence of a string inside another string (case-insensitive)|||&&&strlen()|||Returns the length of a string|||&&&strnatcasecmp()|||Compares two strings using a ""natural order"" algorithm (case-insensitive)|||&&&strnatcmp()|||Compares two strings using a ""natural order"" algorithm (case-sensitive)|||&&&strncasecmp()|||String comparison of the first n characters (case-insensitive)|||&&&strncmp()|||String comparison of the first n characters (case-sensitive)|||&&&strpbrk()|||Searches a string for any of a set of characters|||&&&strpos()|||Returns the position of the first occurrence of a string inside another string (case-sensitive)|||&&&strrchr()|||Finds the last occurrence of a string inside another string|||&&&strrev()|||Reverses a string|||&&&strripos()|||Finds the position of the last occurrence of a string inside another string (case-insensitive)|||&&&strrpos()|||Finds the position of the last occurrence of a string inside another string (case-sensitive)|||&&&strspn()|||Returns the number of characters found in a string that contains only characters from a specified charlist|||&&&strstr()|||Finds the first occurrence of a string inside another string (case-sensitive)|||&&&strtok()|||Splits a string into smaller strings|||&&&strtolower()|||Converts a string to lowercase letters|||&&&strtoupper()|||Converts a string to uppercase letters|||&&&strtr()|||Translates certain characters in a string|||&&&substr()|||Returns a part of a string|||&&&substr_compare()|||Compares two strings from a specified start position (binary safe and optionally case-sensitive)|||&&&substr_count()|||Counts the number of times a substring occurs in a string|||&&&substr_replace()|||Replaces a part of a string with another string|||&&&trim()|||Removes whitespace or other characters from both sides of a string|||&&&ucfirst()|||Converts the first character of a string to uppercase|||&&&ucwords()|||Converts the first character of each word in a string to uppercase|||&&&vfprintf()|||Writes a formatted string to a specified output stream|||&&&vprintf()|||Outputs a formatted string|||&&&vsprintf()|||Writes a formatted string to a variable|||&&&wordwrap()|||Wraps a string to a given number of characters|||&&&']",[]
php||addcslashes(),https://www.w3schools.com/php/func_string_addcslashes.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The addcslashes() function returns a string with backslashes in front of \nthe specified characters.Note: The addcslashes() function is case-sensitive.Note: Be careful using \naddcslashes() on 0 (NULL), r (carriage return), n (newline), f (form feed), t \n(tab) and v (vertical tab). In PHP, \\0, \\r, \\n, \\t, \\f and \\v are predefined escape \nsequences.', '', '', '', '']","['\n\n <?php $str = addcslashes(""Hello World!"",""W"");echo($str); ?>\n\n', '\n\n<?php\n$str = ""Welcome to my humble Homepage!"";\necho $str.""<br>"";\necho addcslashes($str,\'m\').""<br>"";\necho addcslashes($str,\'H\').""<br>"";\n?>\n &&&&&& \n<?php\n$str = ""Welcome to my humble Homepage!"";\necho $str.""<br>"";\necho addcslashes($str,\'A..Z\').""<br>"";\necho addcslashes($str,\'a..z\').""<br>"";\necho addcslashes($str,\'a..g\');\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to be escaped|||&&&characters|||Required. Specifies the characters or range of characters to be escaped|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||addslashes(),https://www.w3schools.com/php/func_string_addslashes.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The addslashes() function returns a string with backslashes in front of \npredefined characters.The predefined characters are:Tip: This function can be used to prepare a string for storage in a \ndatabase and database queries.Note: Prior to PHP 5.4, the PHP dir magic_quotes_gpc was on by default \nand it ran addslashes() on all GET, POST, and COOKIE data by \ndefault. You should not use addslashes() on strings that have already \nbeen escaped, as it will cause double escaping. The function get_magic_quotes_gpc() \ncan be used to check this.', '', '', '', '']","['\n\n <?php $str = addslashes(\'What does ""yolo"" mean?\');echo($str); ?> \n', '\n\n<?php\n$str = ""Who\'s Peter Griffin?"";\necho $str . "" This is not safe in a database query.<br>"";\necho addslashes($str) . "" This is safe in a database query."";\n?>\n\n', '', '', '']","['Definition and Usage###&&&|||single quote (\')|||double quote ("")|||backslash (\\)|||NULL|||']","['Parameter|||Description|||&&&string|||Required. Specifies the string to be escaped|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||bin2hex(),https://www.w3schools.com/php/func_string_bin2hex.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The bin2hex() function converts a string of ASCII characters to hexadecimal \nvalues. The string can be converted back using the pack() function.', '', '', '', '']","['\n\n <?php $str = bin2hex(""Hello World!"");echo($str); ?>', '\n\n<?php\n$str = ""Hello world!"";\necho bin2hex($str) . ""<br>"";\necho pack(""H*"",bin2hex($str)) . ""<br>"";\n?>\n\n', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to be converted|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||chop(),https://www.w3schools.com/php/func_string_chop.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The chop() function removes whitespaces or other predefined characters \nfrom the right end of a string.', '', '', '', '']","['\n\n<?php\n$str = ""Hello World!"";\n echo $str . ""<br>"";\necho chop($str,""World!"");\n?>', '\n <?php$str = ""Hello World!\\n\\n"";echo $str;echo chop($str);?>\n', '\n <!DOCTYPE html><html><body>Hello World!Hello World!</body>\n </html>\n', '\n Hello World! Hello World!', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&charlist|||Optional. Specifies which characters to remove from the string. \n The following characters are removed if the charlist parameter is empty:\n""\\0"" - NULL\n""\\t"" - tab\n""\\n"" - new line\n""\\x0B"" - vertical tab\n""\\r"" - carriage return\n"" "" - ordinary white space\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||chr(),https://www.w3schools.com/php/func_string_chr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The chr() function returns a character from the specified ASCII value.The ASCII value can be specified in decimal, octal, or hex values. Octal \nvalues are defined by a leading 0, while hex values are defined by a leading 0x.', '', '', '', '']","['\n\n<?php\necho chr(52) . ""<br>""; // Decimal value\necho chr(052) . ""<br>""; // Octal value\necho chr(0x52) . ""<br>""; // Hex value\n?>', '\n <?php$str = chr(046);\n echo(""You $str me forever!"");?> &&&&&& \n  <?php $str = chr(43);$str2 = chr(61);echo(""2 $str 2  $str2 4""); ?>', '', '', '']",[''],"['Parameter|||Description|||&&&ascii|||Required. An ASCII value|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||chunk_split(),https://www.w3schools.com/php/func_string_chunk_split.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The chunk_split() function splits a string into a series of smaller parts.Note: This function does not alter the original string.', '', '', '', '']","['\n<?php\n$str = ""Hello world!"";\necho chunk_split($str,1,""."");\n?> \n', '\n <?php\n$str = ""Hello world!"";\necho chunk_split($str,6,""..."");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to split|||&&&length|||Optional. A number that defines the length of the chunks. Default is 76|||&&&end|||Optional. A string that defines what to place at the end of each chunk. Default is \\r\\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||convert_cyr_string(),https://www.w3schools.com/php/func_string_convert_cyr_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The convert_cyr_string() function converts a string from one Cyrillic \ncharacter-set to another.The supported Cyrillic character-sets are:Note: This function is binary-safe.', '', '', '']","['\n  <?php\n  $str = ""Hello world! æøå"";\n  echo $str . ""<br>"";\n  echo convert_cyr_string($str,\'w\',\'a\');\n  ?>', '', '', '']",['Definition and Usage###&&&|||k - koi8-r|||w - windows-1251|||i - iso8859-5|||a - x-cp866|||d - x-cp866|||m - x-mac-cyrillic|||'],"['Parameter|||Description|||&&&string|||Required. The string to convert|||&&&from|||Required. A character that specifies what Cyrillic character-set to \n    convert from|||&&&to|||Required. A character that specifies what Cyrillic character-set to \n    convert to|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||convert_uudecode(),https://www.w3schools.com/php/func_string_convert_uudecode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The convert_uudecode() function decodes a uuencoded string.This function is often used together with the convert_uuencode() function.', '', '', '', '']","['\n<?php\n$str = "",2&5L;&\\@=V]R;&0A `"";\necho convert_uudecode($str);\n?>   \n', '\n <?php$str = ""Hello world!"";// Encode the string$encodeString = convert_uuencode($str);echo $encodeString . ""<br>"";// Decode the string$decodeString = convert_uudecode($encodeString);echo $decodeString;\n ?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The uuencoded string to decode|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||convert_uuencode(),https://www.w3schools.com/php/func_string_convert_uuencode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The convert_uuencode() function encodes a string using the uuencode algorithm.Note: This function encodes all strings (including binary) into printable characters.\nThis will fix any problems with obscure binary data when storing in a database or transmit data over a network.\nRemember to use the convert_uudecode() function before using the data again.Note: Uuencoded data is about 35% larger than the original.', '', '', '', '']","['\n<?php\n$str = ""Hello world!"";\necho convert_uuencode($str);\n?>  \n', '\n <?php$str = ""Hello world!"";// Encode the string$encodeString = convert_uuencode($str);echo $encodeString . ""<br>"";// Decode the string$decodeString = convert_uudecode($encodeString);echo $decodeString;\n ?> \n', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to uuencode|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||count_chars(),https://www.w3schools.com/php/func_string_count_chars.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The count_chars() function returns information about characters used in a \nstring (for example, how many times an ASCII character occurs in a string, or \nwhich characters that have been used or not been used in a string). ', '', '', '', '']","['\n<?php\n$str = ""Hello World!"";\necho count_chars($str,3);\n?>\n', '\n<?php\n$str = ""Hello World!"";\necho count_chars($str,4);\n?> &&&&&& \n<?php\n$str = ""Hello World!"";\nprint_r(count_chars($str,1));\n?>\n &&&&&& \n <?php$str = ""PHP is pretty fun!!"";$strArray = count_chars($str,1);\nforeach ($strArray as $key=>$value)\xa0 {echo ""The character <b>\'"".chr($key).""\'</b> was found $value time(s)<br>"";\xa0 }?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to be checked|||&&&mode|||Optional. Specifies the return modes. 0 is default. The different return modes are:\n0 - an array with the ASCII value as key and number of occurrences as value\n1 - an array with the ASCII value as key and number of occurrences as value, only lists occurrences greater than zero\n2 - an array with the ASCII value as key and number of occurrences as value, only lists occurrences equal to zero are listed\n3 - a string with all the different characters used\n4 - a string with all the unused characters\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||crc32(),https://www.w3schools.com/php/func_string_crc32.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","[""The crc32() function calculates a 32-bit CRC (cyclic redundancy checksum) for a string.This function can be used to validate data integrity.Tip: To ensure that you get the correct string representation from the crc32() function,\nyou'll need to use the %u formatter of the printf() or sprintf() function. If the %u formatter is not used,\nthe result may display in incorrect and negative numbers."", 'In this example we will print the result of crc32() with and without the ""%u"" \nformatter (note that the result is equal):The output of the code above will be:In this example we will print the result of crc32() with and without the ""%u"" \nformatter (note that the result is not equal):The output of the code above will be:', '', '', '']","['\n<?php$str = crc32(""Hello World!"");printf(""%u\\n"",$str);?>\n', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to be calculated|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||crypt(),https://www.w3schools.com/php/func_string_crypt.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The crypt() function returns a hashed string using DES, Blowfish, or MD5 algorithms.This function behaves different on different operating systems. PHP checks what algorithms \nare available and what algorithms to use when it is installed.The salt parameter is optional. However, crypt() creates a weak password \nwithout the salt. Make sure to specify a strong enough salt for better security.There are some constants that are used together with the crypt() function. \nThe value of these constants are set by PHP when it is installed.Constants:On systems where this function supports multiple algorithms, the constants \nabove are set to ""1"" if supported and ""0"" otherwise.Note: There is no decrypt function. The crypt() function uses a one-way algorithm.', '', '', '', '']","['\n<?php\n// 2 character salt\n if (CRYPT_STD_DES == 1){echo ""Standard DES: "".crypt(\'something\',\'st\').""\\n<br>"";\n }else{echo ""Standard DES not supported.\\n<br>"";}\n // 4 character saltif (CRYPT_EXT_DES == 1){echo ""Extended DES: "".crypt(\'something\',\'_S4..some\').""\\n<br>"";}else{echo ""Extended DES not supported.\\n<br>"";}// 12 character salt starting with $1$ if (CRYPT_MD5 == 1){echo ""MD5: "".crypt(\'something\',\'$1$somethin$\').""\\n<br>""; }else{echo ""MD5 not supported.\\n<br>"";}// Salt starting with $2a$. The two digit cost parameter: 09. 22 characters if (CRYPT_BLOWFISH == 1){\n echo ""Blowfish: "".crypt(\'something\',\'$2a$09$anexamplestringforsalt$\').""\\n<br>"";\n }else{echo ""Blowfish DES not supported.\\n<br>"";}\n // 16 character salt starting with $5$. The default number of rounds is 5000.if (CRYPT_SHA256 == 1) {echo ""SHA-256: "".crypt(\'something\',\'$5$rounds=5000$anexamplestringforsalt$\').""\\n<br>""; }\n else{echo ""SHA-256 not supported.\\n<br>"";}// 16 character salt starting with $6$. The default number of rounds is 5000.\n if (CRYPT_SHA512 == 1) {echo ""SHA-512: "".crypt(\'something\',\'$6$rounds=5000$anexamplestringforsalt$\'); }else\n {echo ""SHA-512 not supported."";}\n?> ', '\n\n Standard DES: stqAdD7zlbByIExtended DES: _S4..someQXidlBpTUu6MD5: $1$somethin$4NZKrUlY6r7K7.rdEOZ0w.Blowfish: $2a$09$anexamplestringforsaleLouKejcjRlExmf1671qw3Khl49R3dfuSHA-256: $5$rounds=5000$anexamplestringf$KIrctqsxo2wrPg5Ag/hs4jTi4PmoNKQUGWFXlVy9vu9\n SHA-512: $6$rounds=5000$anexamplestringf$Oo0skOAdUFXkQxJpwzO05wgRHG0dhuaPBaOU/\n oNbGpCEKlf/7oVM5wn6AN0w2vwUgA0O24oLzGQpp1XKI6LLQ0.\n', '', '', '']","['Definition and Usage###&&&|||[CRYPT_STD_DES] - Standard DES-based hash with two character salt from the alphabet ""./0-9A-Za-z"". Using invalid characters in the salt will cause this function to fail.|||[CRYPT_EXT_DES] - Extended DES-based hash with a nine character salt consisting of an underscore followed by 4 bytes of iteration count and 4 bytes of salt. These are encoded as printable characters, 6 bits per character, least significant character first. The values 0 to 63 are encoded as ""./0-9A-Za-z"". Using invalid characters in the salt will cause the function to fail.|||[CRYPT_MD5] - MD5 hashing with a 12 character salt starting with $1$|||[CRYPT_BLOWFISH] - Blowfish hashing with a salt starting with $2a$, $2x$, or $2y$, a two digit cost parameters ""$"", and 22 characters from the alphabet ""./0-9A-Za-z"". Using characters outside of the alphabet will cause this function to return a zero-length string. The ""$"" parameter is the base-2 logarithm of the iteration count for the underlying Blowfish-bashed hashing algorithmeter and must be in range 04-31. Values outside this range will cause the function to fail.|||[CRYPT_SHA_256] - SHA-256 hash with a 16 character salt starting with $5$. If the salt string starts with ""rounds=<N>$"", the numeric value of N is used to indicate how many times the hashing loop should be executed, much like the cost parameter on Blowfish. The default number of rounds is 5000, there is a minimum of 1000 and a maximum of 999,999,999. Any selection of N outside this range will be truncated to the nearest limit.|||[CRYPT_SHA_512] - SHA-512 hash with a 16 character salt starting with $6$.||| If the salt string starts with ""rounds=<N>$"", the numeric value of N is used to indicate how many times the hashing loop should be executed, much like the cost parameter on Blowfish. The default number of rounds is 5000, there is a minimum of 1000 and a maximum of 999,999,999. Any selection of N outside this range will be truncated to the nearest limit.|||']","['Parameter|||Description|||&&&str|||Required. Specifies the string to be hashed|||&&&salt|||Optional. A salt string to base the hashing on |||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||echo(),https://www.w3schools.com/php/func_string_echo.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The echo() function outputs one or more strings.Note: The echo() function is not actually a function, so you are not required to use parentheses with it.\nHowever, if you want to pass more than one parameter to echo(), using parentheses will generate a parse error.Tip: The echo() function is slightly faster than print().Tip: The echo() function also has a shortcut syntax. Prior to PHP 5.4.0, this syntax only\nworks with the short_open_tag configuration setting enabled.', '', '', '', '']","['\n<?php echo ""Hello world!""; ?>\n', '\n<?php\n$str = ""Hello world!"";\necho $str;\n?>\n &&&&&& \n<?php$str = ""Hello world!"";echo $str;echo ""<br>What a nice day!"";?> &&&&&& \n<?php$str1=""Hello world!"";$str2=""What a nice day!"";echo $str1 . "" "" . $str2;?>\xa0\n &&&&&& \n<?php$age=array(""Peter""=>""35"");echo ""Peter is "" . $age[\'Peter\'] . "" years old."";?> &&&&&& \n<?php\necho ""This text\nspans multiple\nlines."";\n?>\xa0\n &&&&&& \n<?php\necho \'This \',\'string \',\'was \',\'made \',\'with multiple parameters.\';\n?>\xa0\n &&&&&& \n<?php\n$color = ""red"";\necho ""Roses are $color"";\necho ""<br>"";\necho \'Roses are $color\';\n?> &&&&&& \n<?php\n$color = ""red"";\n?>\n\n<p>Roses are <?=$color?></p>\xa0\n', '', '', '']",[''],"['Parameter|||Description|||&&&strings|||Required. One or more strings to be sent to the output|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||explode(),https://www.w3schools.com/php/func_string_explode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The explode() function breaks a string into an array.Note: The ""separator"" parameter cannot be an empty string.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\n$str = ""Hello world. It\'s a beautiful day."";\nprint_r (explode("" "",$str));\n?>', ""\n <?php$str = 'one,two,three,four';// zero limitprint_r(explode(',',$str,0));\n// positive limitprint_r(explode(',',$str,2));// negative limit print_r(explode(',',$str,-1));?> \n"", '', '', '']",[''],"['Parameter|||Description|||&&&separator|||Required. Specifies where to break the string|||&&&string|||Required. The string to split|||&&&limit|||Optional. Specifies the number of array elements to return. Possible values:\n\nGreater than 0 - Returns an array with a maximum of limit  element(s)\nLess than 0 - Returns an array except for the last -limit  elements()\n0 - Returns an array with one element\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||fprintf(),https://www.w3schools.com/php/func_string_fprintf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The fprintf() function writes a formatted string to a specified output stream (example: file or database).The arg1, arg2, ++ parameters will be inserted at percent (%) signs in the main string.\nThis function works ""step-by-step"". At the first % sign, arg1 is inserted, at the second % sign, arg2 is inserted, etc.Note: If there are more % signs than arguments, you must use placeholders. A placeholder is \ninserted after the % sign, and consists of the argument- number and ""\\$"". See example two.Tip: Related functions: printf(),\nsprintf(),\nvprintf(),\nvsprintf() and\nvfprintf()', '', '', '', '']","['\n<?php$number = 9;$str = ""Beijing"";$file = fopen(""test.txt"",""w"");\necho fprintf($file,""There are %u million bicycles in %s."",$number,$str);\n?> \n', '\n40\n', '\nThere are 9 million bicycles in Beijing.', '\n<?php\n$number = 123;\n$file = fopen(""test.txt"",""w"");\nfprintf($file,""%f"",$number);\n?>\n &&&&&& \n123.000000 &&&&&& \n<?php\n$number = 123;\n$file = fopen(""test.txt"",""w"");\nfprintf($file,""With 2 decimals: %1\\$.2f\n\\nWith no decimals: %1\\$u"",$number);\n ?> &&&&&& \nWith 2 decimals: 123.00\nWith no decimals: 123 &&&&&& \n <?php$num1 = 123456789;$num2 = -123456789;$char = 50; // The ASCII Character 50 is 2// Note: The format value ""%%"" returns a percent signprintf(""%%b = %b <br>"",$num1); // Binary numberprintf(""%%c = %c <br>"",$char); // The ASCII Characterprintf(""%%d = %d <br>"",$num1); // Signed decimal numberprintf(""%%d = %d <br>"",$num2); // Signed decimal numberprintf(""%%e = %e <br>"",$num1); // Scientific notation (lowercase)\n printf(""%%E = %E <br>"",$num1); // Scientific notation (uppercase)printf(""%%u = %u <br>"",$num1); // Unsigned decimal number (positive)printf(""%%u = %u <br>"",$num2); // Unsigned decimal number (negative)printf(""%%f = %f <br>"",$num1); // Floating-point number (local settings aware)printf(""%%F = %F <br>"",$num1); // Floating-point number (not local settings aware)printf(""%%g = %g <br>"",$num1); // Shorter of %e and %fprintf(""%%G = %G <br>"",$num1); // Shorter of %E and %fprintf(""%%o = %o <br>"",$num1); // Octal numberprintf(""%%s = %s <br>"",$num1); // Stringprintf(""%%x = %x <br>"",$num1); // Hexadecimal number (lowercase)printf(""%%X = %X <br>"",$num1); // Hexadecimal number (uppercase)printf(""%%+d = %+d <br>"",$num1); // Sign specifier (positive)\n printf(""%%+d = %+d <br>"",$num2); // Sign specifier (negative)?>', '']",[''],"['Parameter|||Description|||&&&stream|||Required. Specifies where to write/output the string|||&&&format|||Required. Specifies the string and how to format the variables in it.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%E - Scientific notation using a uppercase (e.g. 1.2E+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%g - shorter of %e and %f\n%G - shorter of %E and %f\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&arg1|||Required. The argument to be inserted at the first %-sign in the format string|||&&&arg2|||Optional. The argument to be inserted at the second %-sign in the format string|||&&&arg++|||Optional. The argument to be inserted at the third, fourth, etc. %-sign in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||get_html_translation_table(),https://www.w3schools.com/php/func_string_get_html_translation_table.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The get_html_translation_table() function returns the translation table used \nby the htmlentities() and\nhtmlspecialchars() functions.Tip: Some characters can be encoded several ways. The \nget_html_translation_table() function returns the most common encoding.', '', '', '', '']","['\n\n <?php\nprint_r (get_html_translation_table()); // HTML_SPECIALCHARS is default.\n ?>', '\n <?php\nprint_r (get_html_translation_table(HTML_SPECIALCHARS));\n ?> &&&&&& \n Array\n (\n \xa0 [""] => &quot;\n \xa0 [&] => &amp;\n \xa0 [<] => &lt;\n \xa0 [>] => &gt;\n )\n &&&&&& \n\n<?php\nprint_r (get_html_translation_table(HTML_ENTITIES));\n?>\n\n', '\n Array\n (\n \xa0 [""] => &quot;\n \xa0 [&] => &amp;\n \xa0 [<] => &lt;\n \xa0 [>] => &gt;\n \xa0 [\xa0] => &nbsp;\n \xa0 [¡] => &iexcl;\n \xa0 [¢] => &cent;\n \xa0 [£] => &pound;\n \xa0 [¤] => &curren;\n \xa0 [¥] => &yen;\n \xa0 [¦] => &brvbar;\n \xa0 [§] => &sect;\n \xa0 [¨] => &uml;\n \xa0 [©] => &copy;\n \xa0 [ª] => &ordf;\n \xa0 [«] => &laquo;\n \xa0 [¬] => &not;\n \xa0 [\xad\xad] => &shy;\n \xa0 [®] => &reg;\n \xa0 [¯] => &macr;\n \xa0 [°] => &deg;\n \xa0 [±] => &plusmn;\n \xa0 [²] => &sup2;\n \xa0 [³] => &sup3;\n \xa0 [´] => &acute;\n \xa0 [µ] => &micro;\n \xa0 [¶] => &para;\n \xa0 [·] => &middot;\n \xa0 [¸] => &cedil;\n \xa0 [¹] => &sup1;\n \xa0 [º] => &ordm;\n \xa0 [»] => &raquo;\n \xa0 [¼] => &frac14;\n \xa0 [½] => &frac12;\n \xa0 [¾] => &frac34;\n \xa0 [¿] => &iquest;\n \xa0 [À] => &Agrave;\n \xa0 [Á] => &Aacute;\n \xa0 [Â] => &Acirc;\n \xa0 [Ã] => &Atilde;\n \xa0 [Ä] => &Auml;\n \xa0 [Å] => &Aring;\n \xa0 [Æ] => &AElig;\n \xa0 [Ç] => &Ccedil;\n \xa0 [È] => &Egrave;\n \xa0 [É] => &Eacute;\n \xa0 [Ê] => &Ecirc;\n \xa0 [Ë] => &Euml;\n \xa0 [Ì] => &Igrave;\n \xa0 [Í] => &Iacute;\n \xa0 [Î] => &Icirc;\n \xa0 [Ï] => &Iuml;\n \xa0 [Ð] => &ETH;\n \xa0 [Ñ] => &Ntilde;\n \xa0 [Ò] => &Ograve;\n \xa0 [Ó] => &Oacute;\n \xa0 [Ô] => &Ocirc;\n \xa0 [Õ] => &Otilde;\n \xa0 [Ö] => &Ouml;\n \xa0 [×] => &times;\n \xa0 [Ø] => &Oslash;\n \xa0 [Ù] => &Ugrave;\n \xa0 [Ú] => &Uacute;\n \xa0 [Û] => &Ucirc;\n \xa0 [Ü] => &Uuml;\n \xa0 [Ý] => &Yacute;\n \xa0 [Þ] => &THORN;\n \xa0 [ß] => &szlig;\n \xa0 [à] => &agrave;\n \xa0 [á] => &aacute;\n \xa0 [â] => &acirc;\n \xa0 [ã] => &atilde;\n \xa0 [ä] => &auml;\n \xa0 [å] => &aring;\n \xa0 [æ] => &aelig;\n \xa0 [ç] => &ccedil;\n \xa0 [è] => &egrave;\n \xa0 [é] => &eacute;\n \xa0 [ê] => &ecirc;\n \xa0 [ë] => &euml;\n \xa0 [ì] => &igrave;\n \xa0 [í] => &iacute;\n \xa0 [î] => &icirc;\n \xa0 [ï] => &iuml;\n \xa0 [ð] => &eth;\n \xa0 [ñ] => &ntilde;\n \xa0 [ò] => &ograve;\n \xa0 [ó] => &oacute;\n \xa0 [ô] => &ocirc;\n \xa0 [õ] => &otilde;\n \xa0 [ö] => &ouml;\n \xa0 [÷] => &divide;\n \xa0 [ø] => &oslash;\n \xa0 [ù] => &ugrave;\n \xa0 [ú] => &uacute;\n \xa0 [û] => &ucirc;\n \xa0 [ü] => &uuml;\n \xa0 [ý] => &yacute;\n \xa0 [þ] => &thorn;\n \xa0 [ÿ] => &yuml;\n \xa0 [Œ] => &OElig;\n \xa0 [œ] => &oelig;\n \xa0 [Š] => &Scaron;\n \xa0 [š] => &scaron;\n \xa0 [Ÿ] => &Yuml;\n \xa0 [ƒ] => &fnof;\n \xa0 [ˆ] => &circ;\n \xa0 [˜] => &tilde;\n \xa0 [Α] => &Alpha;\n \xa0 [Β] => &Beta;\n \xa0 [Γ] => &Gamma;\n \xa0 [Δ] => &Delta;\n \xa0 [Ε] => &Epsilon;\n \xa0 [Ζ] => &Zeta;\n \xa0 [Η] => &Eta;\n \xa0 [Θ] => &Theta;\n \xa0 [Ι] => &Iota;\n \xa0 [Κ] => &Kappa;\n \xa0 [Λ] => &Lambda;\n \xa0 [Μ] => &Mu;\n \xa0 [Ν] => &Nu;\n \xa0 [Ξ] => &Xi;\n \xa0 [Ο] => &Omicron;\n \xa0 [Π] => &Pi;\n \xa0 [Ρ] => &Rho;\n \xa0 [Σ] => &Sigma;\n \xa0 [Τ] => &Tau;\n \xa0 [Υ] => &Upsilon;\n \xa0 [Φ] => &Phi;\n \xa0 [Χ] => &Chi;\n \xa0 [Ψ] => &Psi;\n \xa0 [Ω] => &Omega;\n \xa0 [α] => &alpha;\n \xa0 [β] => &beta;\n \xa0 [γ] => &gamma;\n \xa0 [δ] => &delta;\n \xa0 [ε] => &epsilon;\n \xa0 [ζ] => &zeta;\n \xa0 [η] => &eta;\n \xa0 [θ] => &theta;\n \xa0 [ι] => &iota;\n \xa0 [κ] => &kappa;\n \xa0 [λ] => &lambda;\n \xa0 [μ] => &mu;\n \xa0 [ν] => &nu;\n \xa0 [ξ] => &xi;\n \xa0 [ο] => &omicron;\n \xa0 [π] => &pi;\n \xa0 [ρ] => &rho;\n \xa0 [ς] => &sigmaf;\n \xa0 [σ] => &sigma;\n \xa0 [τ] => &tau;\n \xa0 [υ] => &upsilon;\n \xa0 [φ] => &phi;\n \xa0 [χ] => &chi;\n \xa0 [ψ] => &psi;\n \xa0 [ω] => &omega;\n \xa0 [ϑ] => &thetasym;\n \xa0 [ϒ] => &upsih;\n \xa0 [ϖ] => &piv;\n \xa0 [\u2002] => &ensp;\n \xa0 [\u2003] => &emsp;\n \xa0 [\u2009] => &thinsp;\n \xa0 [\u200c] => &zwnj;\n \xa0 [\u200d] => &zwj;\n \xa0 [\u200e] => &lrm;\n \xa0 [\u200f] => &rlm;\n \xa0 [–] => &ndash;\n \xa0 [—] => &mdash;\n \xa0 [‘] => &lsquo;\n \xa0 [’] => &rsquo;\n \xa0 [‚] => &sbquo;\n \xa0 [“] => &ldquo;\n \xa0 [”] => &rdquo;\n \xa0 [„] => &bdquo;\n \xa0 [†] => &dagger;\n \xa0 [‡] => &Dagger;\n \xa0 [•] => &bull;\n \xa0 […] => &hellip;\n \xa0 [‰] => &permil;\n \xa0 [′] => &prime;\n \xa0 [″] => &Prime;\n \xa0 [‹] => &lsaquo;\n \xa0 [›] => &rsaquo;\n \xa0 [‾] => &oline;\n \xa0 [⁄] => &frasl;\n \xa0 [€] => &euro;\n \xa0 [ℑ] => &image;\n \xa0 [℘] => &weierp;\n \xa0 [ℜ] => &real;\n \xa0 [™] => &trade;\n \xa0 [ℵ] => &alefsym;\n \xa0 [←] => &larr;\n \xa0 [↑] => &uarr;\n \xa0 [→] => &rarr;\n \xa0 [↓] => &darr;\n \xa0 [↔] => &harr;\n \xa0 [↵] => &crarr;\n \xa0 [⇐] => &lArr;\n \xa0 [⇑] => &uArr;\n \xa0 [⇒] => &rArr;\n \xa0 [⇓] => &dArr;\n \xa0 [⇔] => &hArr;\n \xa0 [∀] => &forall;\n \xa0 [∂] => &part;\n \xa0 [∃] => &exist;\n \xa0 [∅] => &empty;\n \xa0 [∇] => &nabla;\n \xa0 [∈] => &isin;\n \xa0 [∉] => &notin;\n \xa0 [∋] => &ni;\n \xa0 [∏] => &prod;\n \xa0 [∑] => &sum;\n \xa0 [−] => &minus;\n \xa0 [∗] => &lowast;\n \xa0 [√] => &radic;\n \xa0 [∝] => &prop;\n \xa0 [∞] => &infin;\n \xa0 [∠] => &ang;\n \xa0 [∧] => &and;\n \xa0 [∨] => &or;\n \xa0 [∩] => &cap;\n \xa0 [∪] => &cup;\n \xa0 [∫] => &int;\n \xa0 [∴] => &there4;\n \xa0 [∼] => &sim;\n \xa0 [≅] => &cong;\n \xa0 [≈] => &asymp;\n \xa0 [≠] => &ne;\n \xa0 [≡] => &equiv;\n \xa0 [≤] => &le;\n \xa0 [≥] => &ge;\n \xa0 [⊂] => &sub;\n \xa0 [⊃] => &sup;\n \xa0 [⊄] => &nsub;\n \xa0 [⊆] => &sube;\n \xa0 [⊇] => &supe;\n \xa0 [⊕] => &oplus;\n \xa0 [⊗] => &otimes;\n \xa0 [⊥] => &perp;\n \xa0 [⋅] => &sdot;\n \xa0 [⌈] => &lceil;\n \xa0 [⌉] => &rceil;\n \xa0 [⌊] => &lfloor;\n \xa0 [⌋] => &rfloor;\n \xa0 [〈] => &lang;\n \xa0 [〉] => &rang;\n \xa0 [◊] => &loz;\n \xa0 [♠] => &spades;\n \xa0 [♣] => &clubs;\n \xa0 [♥] => &hearts;\n \xa0 [♦] => &diams;\n )\n\n', '', '']",[''],"['Parameter|||Description|||&&&function|||Optional. Specifies which translation table to return.Possible values:\n\nHTML_SPECIALCHARS - Default. Translates some characters that need  URL-encoding to be shown properly on a HTML page\nHTML_ENTITIES - Translates all characters that need URL-encoding to  be shown properly on a HTML page\n\n|||&&&flags|||Optional. Specifies which quotes the table will contain and which document type the table is for.\n The available quote styles are:\n\nENT_COMPAT - Default. Table contains entities for double quotes, not single quotes\nENT_QUOTES - Table contains entities for double and single quotes\nENT_NOQUOTES - Table will not contain entities for double and single  quotes\n\nAdditional flags for specifying which doctype the table is for:\n\nENT_HTML401 - Default. Table for HTML 4.01\nENT_HTML5 - Table for HTML 5\nENT_XML1 - Table for XML 1\nENT_XHTML - Table for XHTML\n\n|||&&&character-set|||Optional. A string that specifies which character-set to use.Allowed values are:\n\nUTF-8 - Default. ASCII compatible multi-byte 8-bit Unicode\nISO-8859-1 - Western European\nISO-8859-15 - Western European (adds the Euro sign + French  and Finnish letters missing in ISO-8859-1)\ncp866 - DOS-specific Cyrillic charset\ncp1251 - Windows-specific Cyrillic charset\ncp1252 - Windows specific charset for Western European\nKOI8-R - Russian\nBIG5 - Traditional Chinese, mainly used in Taiwan\nGB2312 - Simplified Chinese, national standard character set\nBIG5-HKSCS - Big5 with Hong Kong extensions\nShift_JIS - Japanese\nEUC-JP - Japanese\nMacRoman - Character-set that was used by Mac OS\n\nNote: Unrecognized character-sets will be ignored and replaced by ISO-8859-1 in versions prior to PHP 5.4. As of PHP 5.4, it will be ignored an replaced by UTF-8.\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||hebrev(),https://www.w3schools.com/php/func_string_hebrev.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The hebrev() function converts Hebrew text from a right-to-left flow to a \nleft-to-right flow.Tip: hebrev() and hebrevc() can \nconvert Hebrew logical text (the Windows encoding) to Hebrew visual text. Hebrew \nvisual requires no special right-to-left character support to be displayed \nproperly, making it very useful for displaying Hebrew text on the web.', '\n❮ PHP String Reference\n\n\n', '', '']","['\n  <?php\n  echo hebrev(""á çùåï äúùñâ"");\n  ?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. A Hebrew text|||&&&maxcharline|||Optional. Specifies maximum characters for each line. hebrev() will \n    avoid breaking words if possible|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||hebrevc(),https://www.w3schools.com/php/func_string_hebrevc.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The hebrevc() function converts Hebrew text from a right-to-left flow to a \nleft-to-right flow. It also converts new lines (\\n) into <br>.Tip: hebrevc() and hebrev() can convert Hebrew logical text (the \nWindows encoding) to Hebrew visual text. Hebrew visual requires no special \nright-to-left character support to be displayed properly, making it very useful \nfor displaying Hebrew text on the web.', '❮ PHP String Reference\n\n\n', '', '']","['\n<?php\necho hebrevc(""ב חשון התשסג\\nב חשון התשסג"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. A Hebrew text|||&&&maxcharline|||Optional. Specifies maximum characters for each line. hebrev() will avoid breaking words if possible|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||hex2bin(),https://www.w3schools.com/php/func_string_hex2bin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The hex2bin() function converts a string of hexadecimal values to ASCII \ncharacters.', '', '', '']","['\n<?phpecho hex2bin(""48656c6c6f20576f726c6421"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The hexadecimal value to be converted|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||html_entity_decode(),https://www.w3schools.com/php/func_string_html_entity_decode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The html_entity_decode() function converts HTML entities to characters.The html_entity_decode() function is the opposite of\nhtmlentities().', '', '', '', '']","[""\n  <?php$str = '&lt;a href=&quot;https://www.w3schools.com&quot;&gt;w3schools.com&lt;/a&gt;';\n  echo html_entity_decode($str);\n  ?>"", '\n  <a href=""https://www.w3schools.com"">w3schools.com</a>\n\n', '\nw3schools.com\n', '\n  <?php\n  $str = ""Albert Einstein said: &#039;E=MC&sup2;&#039;"";echo \n  html_entity_decode($str, ENT_COMPAT); // Will only convert double quotes\n  echo ""<br>"";echo html_entity_decode($str, ENT_QUOTES); // Converts double \n  and single quotes\n  echo ""<br>"";echo html_entity_decode($str, ENT_NOQUOTES); // Does not \n  convert any quotes\n  ?> &&&&&& \n  Albert Einstein said: &#039;E=MC²&#039;<br>Albert Einstein said: \'E=MC²\'<br>\n  Albert Einstein said: &#039;E=MC²&#039; &&&&&& \n  Albert Einstein said: \'E=MC²\'Albert Einstein said: \'E=MC²\'Albert \n  Einstein said: \'E=MC²\'\n &&&&&& \n  <?php\n  $str = ""My name is &Oslash;yvind &Aring;sane. I&#039;m Norwegian."";\n  echo html_entity_decode($str, ENT_QUOTES, ""UTF-8"");\n  ?>', ""\n  My name is Øyvind Åsane. I'm Norwegian."", ""\nMy name is Øyvind Åsane. I'm Norwegian.""]",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to decode|||&&&flags|||Optional. Specifies how to handle quotes and which document type to use.\n    The available quote styles are:\n\nENT_COMPAT - Default. Decodes only double quotes\nENT_QUOTES - Decodes double and single quotes\nENT_NOQUOTES - Does not decode any quotes\n\nAdditional flags for specifying the used doctype:\n\nENT_HTML401 - Default. Handle code as HTML 4.01\nENT_HTML5 - Handle code as HTML 5\nENT_XML1 - Handle code as XML 1\nENT_XHTML - Handle code as XHTML\n\n|||&&&character-set|||Optional. A string that specifies which character-set to use.Allowed \n    values are:\n\nUTF-8 - Default. ASCII compatible multi-byte 8-bit Unicode\nISO-8859-1 - Western European\nISO-8859-15 - Western European (adds the Euro sign + French and Finnish \n    letters missing in ISO-8859-1)\ncp866 - DOS-specific Cyrillic charset\ncp1251 - Windows-specific Cyrillic charset\ncp1252 - Windows specific charset for Western European\nKOI8-R - Russian\nBIG5 - Traditional Chinese, mainly used in Taiwan\nGB2312 - Simplified Chinese, national standard character set\nBIG5-HKSCS - Big5 with Hong Kong extensions\nShift_JIS - Japanese\nEUC-JP - Japanese\nMacRoman - Character-set that was used by Mac OS\n\nNote: Unrecognized character-sets will be ignored and replaced by \n ISO-8859-1 in versions prior to PHP 5.4. As of PHP 5.4, it will be ignored an \n replaced by UTF-8.\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||htmlentities(),https://www.w3schools.com/php/func_string_htmlentities.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The htmlentities() function converts characters to HTML entities.Tip: To convert HTML entities back to characters, use the\nhtml_entity_decode() function.Tip: Use the \nget_html_translation_table() function to return the translation table used by htmlentities(). ', '', '', '', '']","['\n <?php$str = \'<a href=""https://www.w3schools.com"">Go to \n  w3schools.com</a>\';echo htmlentities($str);\n ?>', '\n  &lt;a href=&quot;https://www.w3schools.com&quot;&gt;Go to w3schools.com&lt;/a&gt;\n', '\n  <a href=""https://www.w3schools.com"">Go to w3schools.com</a>', '\n  <?php\n   $str = ""Albert Einstein said: \'E=MC²\'"";\n  echo htmlentities($str, ENT_COMPAT); // Will only convert double quotes\n  echo ""<br>"";\n  echo htmlentities($str, ENT_QUOTES); // Converts double and single  quotes\n  echo ""<br>"";\n  echo htmlentities($str, ENT_NOQUOTES); // Does not convert any quotes\n  ?> &&&&&& \n  Albert Einstein said: \'E=MC&sup2;\'<br>Albert Einstein said: \n  &#039;E=MC&sup2;&#039;<br>Albert Einstein said: \'E=MC&sup2;\'\n &&&&&& \n  Albert Einstein said: \'E=MC²\'Albert Einstein said: \'E=MC²\'Albert \n  Einstein said: \'E=MC²\'\n &&&&&& \n  <?php$str = ""My name is Øyvind Åsane. I\'m Norwegian."";echo  htmlentities($str, ENT_QUOTES, ""UTF-8""); // Will only convert  double quotes (not single quotes), and uses the character-set Western  European?>', '\n <!DOCTYPE html><html><body>My name is &Oslash;yvind &Aring;sane. I&#039;m Norwegian.</body></html>\n', ""\nMy name is Øyvind Åsane. I'm Norwegian.""]",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&flags|||Optional. Specifies how to handle quotes, invalid encoding and the used document type.The available quote styles are:\n\nENT_COMPAT - Default. Encodes only double quotes\nENT_QUOTES - Encodes double and single quotes\nENT_NOQUOTES - Does not encode any quotes\n\nInvalid encoding:\n\nENT_IGNORE - Ignores invalid encoding instead of having the function  return an empty string. Should be avoided, as it may have security  implications.\nENT_SUBSTITUTE - Replaces invalid encoding for a specified character  set with a Unicode Replacement Character U+FFFD (UTF-8) or &#FFFD;  instead of returning an empty string.\nENT_DISALLOWED - Replaces code points that are invalid in the  specified doctype with a Unicode Replacement Character U+FFFD (UTF-8) or  &#FFFD;\n\nAdditional flags for specifying the used doctype:\n\nENT_HTML401 - Default. Handle code as HTML 4.01\nENT_HTML5 - Handle code as HTML 5\nENT_XML1 - Handle code as XML 1\nENT_XHTML - Handle code as XHTML\n\n|||&&&character-set|||Optional. A string that specifies which character-set to use.Allowed values are:\n\nUTF-8 - Default. ASCII compatible multi-byte 8-bit Unicode\nISO-8859-1 - Western European\nISO-8859-15 - Western European (adds the Euro sign + French and  Finnish letters missing in ISO-8859-1)\ncp866 - DOS-specific Cyrillic charset\ncp1251 - Windows-specific Cyrillic charset\ncp1252 - Windows specific charset for Western European\nKOI8-R - Russian\nBIG5 - Traditional Chinese, mainly used in Taiwan\nGB2312 - Simplified Chinese, national standard character set\nBIG5-HKSCS - Big5 with Hong Kong extensions\nShift_JIS - Japanese\nEUC-JP - Japanese\nMacRoman - Character-set that was used by Mac OS\n\nNote: Unrecognized character-sets will be ignored and replaced by ISO-8859-1 in versions prior to PHP 5.4. As of PHP 5.4, it will be ignored an replaced by UTF-8. \n|||&&&double_encode|||Optional. A boolean value that specifies whether to encode existing html entities or not. \nTRUE - Default. Will convert everything\nFALSE - Will not encode existing html entities\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||htmlspecialchars_decode(),https://www.w3schools.com/php/func_string_htmlspecialchars_decode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The htmlspecialchars_decode() function converts some predefined HTML entities to characters.HTML entities that will be decoded are:The htmlspecialchars_decode() function is the opposite of\nhtmlspecialchars().', '', '', '', '']","['\n <?php$str = ""This is some &lt;b&gt;bold&lt;/b&gt; text."";echo htmlspecialchars_decode($str);\n ?>', '\n <!DOCTYPE html><html>\n<body>\n This is some <b>bold</b> text.\n</body>\n</html>\n', '\nThis is some bold text.', '\n<?php\n$str = ""Jane &amp; &#039;Tarzan&#039;"";\necho htmlspecialchars_decode($str, ENT_COMPAT); // Will only convert double quotes\necho ""<br>"";\necho htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\necho ""<br>"";\necho htmlspecialchars_decode($str, ENT_NOQUOTES); // Does not convert any quotes\n?> &&&&&& \n <!DOCTYPE html><html>\n<body>\nJane & &#039;Tarzan&#039;<br>\nJane & \'Tarzan\'<br>\nJane & &#039;Tarzan&#039;\n</body>\n</html>\n &&&&&& \nJane & \'Tarzan\'\nJane & \'Tarzan\'\nJane & \'Tarzan\'\n &&&&&& \n <?php\n $str = \'I love &quot;PHP&quot;.\';echo htmlspecialchars_decode($str, ENT_QUOTES); // Converts double and single quotes\n ?>', '\n <!DOCTYPE html><html>\n<body>\n I love ""PHP"".\n</body>\n</html>\n', '\nI love ""PHP"".']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to decode|||&&&flags|||Optional. Specifies how to handle quotes and which document type to use.The available quote styles are:\n\nENT_COMPAT - Default. Decodes only double quotes\nENT_QUOTES - Decodes double and single quotes\nENT_NOQUOTES - Does not decode any quotes\n\nAdditional flags for specifying the used doctype:\n\nENT_HTML401 - Default. Handle code as HTML 4.01\nENT_HTML5 - Handle code as HTML 5\nENT_XML1 - Handle code as XML 1\nENT_XHTML - Handle code as XHTML\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||htmlspecialchars(),https://www.w3schools.com/php/func_string_htmlspecialchars.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The htmlspecialchars() function converts some predefined characters to HTML entities.The predefined characters are:Tip: To convert special HTML entities back to characters, \nuse the htmlspecialchars_decode() function. ', '', '', '', '']","['\n <?php$str = ""This is some <b>bold</b> text."";echo htmlspecialchars($str);\n ?>', '\n <!DOCTYPE html><html>\n<body>\n This is some &lt;b&gt;bold&lt;/b&gt; text.\n</body>\n</html>\n', '\nThis is some <b>bold</b> text.', '\n <?php\n$str = ""Jane & \'Tarzan\'"";\necho htmlspecialchars($str, ENT_COMPAT); // Will only convert double quotes\necho ""<br>"";\necho htmlspecialchars($str, ENT_QUOTES); // Converts double and single quotes\necho ""<br>"";\necho htmlspecialchars($str, ENT_NOQUOTES); // Does not convert any quotes\n ?> &&&&&& \n <!DOCTYPE html><html>\n<body>\nJane &amp; \'Tarzan\'<br>\nJane &amp; &#039;Tarzan&#039;<br>\nJane &amp; \'Tarzan\'\n</body>\n</html>\n &&&&&& \nJane & \'Tarzan\'\nJane & \'Tarzan\'\nJane & \'Tarzan\'\n &&&&&& \n <?php\n $str = \'I love ""PHP"".\';echo htmlspecialchars($str, ENT_QUOTES); // Converts double and single quotes\n ?>', '\n <!DOCTYPE html><html>\n<body>\n I love &quot;PHP&quot;.\n</body>\n</html>\n', '\nI love ""PHP"".']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&flags|||Optional. Specifies how to handle quotes, invalid encoding and the used document type.The available quote styles are:\n\nENT_COMPAT - Default. Encodes only double quotes\nENT_QUOTES - Encodes double and single quotes\nENT_NOQUOTES - Does not encode any quotes\n\nInvalid encoding:\n\nENT_IGNORE - Ignores invalid encoding instead of having the function  return an empty string. Should be avoided, as it may have security  implications.\nENT_SUBSTITUTE - Replaces invalid encoding for a specified character  set with a Unicode Replacement Character U+FFFD (UTF-8) or &#FFFD;  instead of returning an empty string.\nENT_DISALLOWED - Replaces code points that are  invalid in the specified doctype with a Unicode Replacement Character  U+FFFD (UTF-8) or &#FFFD;\n\nAdditional flags for specifying the used doctype:\n\nENT_HTML401 - Default. Handle code as HTML 4.01\nENT_HTML5 - Handle code as HTML 5\nENT_XML1 - Handle code as XML 1\nENT_XHTML - Handle code as XHTML\n\n|||&&&character-set|||Optional. A string that specifies which character-set to use.Allowed values are:\n\nUTF-8 - Default. ASCII compatible multi-byte 8-bit Unicode\nISO-8859-1 - Western European\nISO-8859-15 - Western European (adds the Euro sign + French  and Finnish letters missing in ISO-8859-1)\ncp866 - DOS-specific Cyrillic charset\ncp1251 - Windows-specific Cyrillic charset\ncp1252 - Windows specific charset for Western European\nKOI8-R - Russian\nBIG5 - Traditional Chinese, mainly used in Taiwan\nGB2312 - Simplified Chinese, national standard character set\nBIG5-HKSCS - Big5 with Hong Kong extensions\nShift_JIS - Japanese\nEUC-JP - Japanese\nMacRoman - Character-set that was used by Mac OS\n\nNote: Unrecognized character-sets will be ignored and replaced by ISO-8859-1 in versions prior to PHP 5.4. As of PHP 5.4, it will be ignored an replaced by UTF-8. \n|||&&&double_encode|||Optional. A boolean value that specifies whether to encode existing html entities or not. \nTRUE - Default. Will convert everything\nFALSE - Will not encode existing html entities\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||implode(),https://www.w3schools.com/php/func_string_implode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The implode() function returns a string from the elements of an array.Note: The implode() function accept its parameters in either order. However, for consistency with \nexplode(), \nyou should use the documented order of arguments.Note: The separator parameter of implode() is optional. However, it is recommended to\nalways use two parameters for backwards compatibility.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\n$arr = array(\'Hello\',\'World!\',\'Beautiful\',\'Day!\');\necho implode("" "",$arr);\n?>', '\n <?php$arr = array(\'Hello\',\'World!\',\'Beautiful\',\'Day!\');echo implode("" "",$arr).""<br>"";echo implode(""+"",$arr).""<br>"";echo implode(""-"",$arr).""<br>"";\n echo implode(""X"",$arr);?>', '', '', '']",[''],"['Parameter|||Description|||&&&separator|||Optional. Specifies what to put between the array elements. Default is """" (an empty string)|||&&&array|||Required. The array to join to a string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||join(),https://www.w3schools.com/php/func_string_join.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The join() function returns a string from the elements of an array.The join() function is an alias of the implode() function.Note: The join() function accept its parameters in either order. However, for consistency with explode(), \nyou should use the documented order of arguments.Note: The separator parameter of join() is optional. However, it is recommended to always use two\nparameters for backwards compatibility.', '', '', '', '']","['\n<?php\n$arr = array(\'Hello\',\'World!\',\'Beautiful\',\'Day!\');\necho join("" "",$arr);\n?>', '\n <?php$arr = array(\'Hello\',\'World!\',\'Beautiful\',\'Day!\');echo join("" "",$arr).""<br>"";echo join(""+"",$arr).""<br>"";echo join(""-"",$arr).""<br>"";\n echo join(""X"",$arr);?>', '', '', '']",[''],"['Parameter|||Description|||&&&separator|||Optional. Specifies what to put between the array elements. Default is """" (an empty string)|||&&&array|||Required. The array to join to a string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||lcfirst(),https://www.w3schools.com/php/func_string_lcfirst.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The lcfirst() function converts the first character of a string to lowercase.Related functions:', '', '', '']","['\n<?phpecho lcfirst(""Hello world!"");?>\n', '', '', '']",['Definition and Usage###&&&|||ucfirst() - converts the first character of a string to uppercase|||ucwords() - converts the first character of each word in a string to uppercase|||strtoupper() - converts a string to uppercase|||strtolower() - converts a string to lowercase|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||levenshtein(),https://www.w3schools.com/php/func_string_levenshtein.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The levenshtein() function returns the Levenshtein distance between two strings.The Levenshtein distance is the number of characters you have to replace, \ninsert or delete to transform string1 into string2.By default, PHP gives each operation (replace, insert, and delete) equal \nweight. However, you can define the cost of each operation by setting the \noptional insert, replace, and delete parameters.Note: The levenshtein() function is not case-sensitive.Note: The levenshtein() function is faster than the similar_text() \nfunction. However, similar_text() will give you a more accurate \nresult with less modifications needed.', '', '', '']","['\n<?php\necho levenshtein(""Hello World"",""ello World"");\necho ""<br>"";\necho levenshtein(""Hello World"",""ello World"",10,20,30);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. First string to compare|||&&&string2|||Required. Second string to compare|||&&&insert|||Optional. The cost of inserting a character. Default is 1|||&&&replace|||Optional. The cost of replacing a character. Default is 1|||&&&delete|||Optional. The cost of deleting a character. Default is 1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||localeconv(),https://www.w3schools.com/php/func_string_localeconv.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The localeconv() function returns an array containing local numeric and monetary formatting information.The localeconv() function will return the following array elements:Tip: To define locale settings, see the \nsetlocale() function.Tip: To view all available language codes, go to our Language code reference.', '', '']","['\n<?php\nsetlocale(LC_ALL,""US"");\n$locale_info = localeconv();\nprint_r($locale_info);\n?>', '', '']",[''],['Return Value:|||&&&PHP Version:|||&&&'],[]
php||ltrim(),https://www.w3schools.com/php/func_string_ltrim.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ltrim() function removes whitespace or other predefined characters from the left side of a string.Related functions: ', '', '', '', '']","['\n\n<?php\n$str = ""Hello World!"";\n echo $str . ""<br>"";\necho ltrim($str,""Hello"");\n?>', '\n<?php\n$str = ""\xa0\xa0\xa0\xa0Hello World!"";\necho ""Without ltrim: "" . $str;\necho ""<br>"";\necho ""With ltrim: "" . ltrim($str);\n?> &&&&&& \n <!DOCTYPE html><html>\n<body>\nWithout ltrim:\xa0\xa0\xa0\xa0Hello World!<br>With ltrim: Hello World!\n</body>\n</html>\n &&&&&& \nWithout ltrim: Hello World!\nWith ltrim: Hello World!  &&&&&& \n\n<?php\n$str = ""\\n\\n\\nHello World!"";\necho ""Without ltrim: "" . $str;\necho ""<br>"";\necho ""With ltrim: "" . ltrim($str);\n?>', '\n <!DOCTYPE html><html>\n<body>\nWithout ltrim:  \nHello World!<br>With ltrim: Hello World!\n</body>\n</html>\n', '\nWithout ltrim: Hello World!\nWith ltrim: Hello World! ', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&charlist|||Optional. Specifies which characters to remove from the string. If omitted, all of the following characters are removed:\n""\\0"" - NULL\n""\\t"" - tab\n""\\n"" - new line\n""\\x0B"" - vertical tab\n""\\r"" - carriage return\n"" "" - ordinary white space\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||md5(),https://www.w3schools.com/php/func_string_md5.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The md5() function calculates the MD5 hash of a string.The md5() function uses the RSA Data Security, Inc. MD5 Message-Digest Algorithm.From RFC 1321 - The MD5 Message-Digest Algorithm: ""The MD5 message-digest algorithm takes as \ninput a message of arbitrary length and produces as output a 128-bit \n""fingerprint"" or ""message digest"" of the input. The MD5 algorithm is intended for digital signature applications, where \na large file must be ""compressed"" in a secure manner before being encrypted with \na private (secret) key under a public-key cryptosystem such as RSA.""To calculate the MD5 hash of a file, use the md5_file() function.', '', '', '', '']","['\n<?php\n$str = ""Hello"";\necho md5($str);\n?>', '\n<?php $str = ""Hello""; echo ""The string: "".$str.""<br>""; echo ""TRUE - Raw 16 character binary format: "".md5($str, TRUE).""<br>""; echo ""FALSE - 32 character hex number: "".md5($str).""<br>""; ?> &&&&&& \n<?php$str = ""Hello"";echo md5($str);if (md5($str) == ""8b1a9953c4611296a827abf8c47804d7"")\xa0 {\xa0 echo ""<br>Hello world!"";\xa0 exit;\xa0 }?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to be calculated|||&&&raw|||Optional. Specifies hex or binary output format:\nTRUE - Raw 16 character binary format\nFALSE - Default. 32 character hex number\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||md5_file(),https://www.w3schools.com/php/func_string_md5_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The md5_file() function calculates the MD5 hash of a file.The md5_file() function uses the RSA Data Security, Inc. MD5 Message-Digest Algorithm.From RFC 1321 - The MD5 Message-Digest Algorithm: ""The MD5 message-digest algorithm takes as \ninput a message of arbitrary length and produces as output a 128-bit \n""fingerprint"" or ""message digest"" of the input. The MD5 algorithm is intended for digital signature applications, where \na large file must be ""compressed"" in a secure manner before being encrypted with \na private (secret) key under a public-key cryptosystem such as RSA.""To calculate the MD5 hash of a string, use the \nmd5() function.', '', '', '', '']","['\n<?php\n$filename = ""test.txt"";\n$md5file = md5_file($filename);\necho $md5file;\n?>', '\nd41d8cd98f00b204e9800998ecf8427e\n', '\n<?php\n$md5file = md5_file(""test.txt"");\nfile_put_contents(""md5file.txt"",$md5file);\n?>', '\n<?php\n$md5file = file_get_contents(""md5file.txt"");\nif (md5_file(""test.txt"") == $md5file)\n\xa0\xa0{\n\xa0\xa0echo ""The file is ok."";\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""The file has been changed."";\n\xa0\xa0}\n?>', '\nThe file is ok.\n']",[''],"['Parameter|||Description|||&&&file|||Required. The file to be calculated|||&&&raw|||Optional. A boolean value that specifies hex or binary output format:\nTRUE - Raw 16 character binary format\nFALSE - Default. 32 character hex number\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||metaphone(),https://www.w3schools.com/php/func_string_metaphone.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The metaphone() function calculates the metaphone key of a string.A metaphone key represents how a string sounds if said by an English speaking person.The metaphone() function can be used for spelling applications.Note: The metaphone() function creates the same key for similar sounding words.Note: The generated metaphone keys vary in length.Tip: metaphone() is more accurate than the soundex() \nfunction, because metaphone() knows the basic rules of English pronunciation. ', '', '', '', '']","['\n<?php\necho metaphone(""World"");\n?>', '\n<?php\n$str = ""Assistance"";\n$str2 = ""Assistants"";\n\necho metaphone($str);\necho ""<br>"";\necho metaphone($str2);\n?> &&&&&& \n<?php\n$str = ""Assistance"";\n$str2 = ""Assistants"";\n\necho metaphone($str,5);\necho ""<br>"";\necho metaphone($str2,5);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&length|||Optional. Specifies the maximum length of the metaphone key|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||money_format(),https://www.w3schools.com/php/func_string_money_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The money_format() function returns a string formatted as a currency string.This function inserts a formatted number where there is a percent (%) sign in the main string.Note: The money_format() function does not work on Windows platforms.Tip: This function is often used together with the\nsetlocale() function.Tip: To view all available language codes, go to our Language code reference.', '', '', '', '']","['\n<?php\n$number = 1234.56;\nsetlocale(LC_MONETARY,""en_US"");\necho money_format(""The price is %i"", $number);\n?>', '\nThe price is USD 1,234.56\n', '\n<?php\n$number = 1234.56;\nsetlocale(LC_MONETARY,""de_DE"");\necho money_format(""%.2n"", $number);\n?> &&&&&& \n1 234,56 EUR &&&&&& \n<?php\n$number = -1234.5672;\necho money_format(""%=*(#10.2n"",$number);\n?>', '\n(******1234.57)', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to be formatted and how to format the variables in it.Possible format values:\nPadding and Flags:\n\n=f - Specifies the character (f) to be used as padding (Example: %=t this uses ""t"" as padding). Default is space\n^ - Removes the use of grouping characters\n+ or ( - Specifies how to show positive and negative numbers. If ""+"" is used, the local setting for + and - will be used (usually a sign in front of negative numbers, and nothing in front of positive numbers). If ""("" is used, negative numbers are enclosed in parenthesis. Default is ""+""\n! - Stops the use of currency symbols in the output string\n- If ""-"" is used, all fields are left-justified. Default is right-justified\n\nField width:\n\nx - Specifies the minimum field width (x). Default is 0\n#x - Specifies the maximum number (x) of digits expected to the left of the decimal point. This is used to keep formatted output aligned in the same columns. If the number of digits are bigger than x, this specification is ignored\n.x - Specifies the maximum number (x) of digits expected to the right of the decimal point. If x is 0, the decimal point and the digits to its right will not be shown. Default is local settings\n\nConversion characters:\n\ni - The number is formatted to international currency format\nn - The number is formatted to national currency format\n% - Returns the % character\n\nNote: If multiple format values are used, they must be in the same order as shown above.\nNote: This function is affected by local settings.|||&&&number|||Required. The number to be inserted at the %-sign in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||nl_langinfo(),https://www.w3schools.com/php/func_string_nl_langinfo.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The nl_langinfo() function returns specific local information.Note: This function does not work on Windows platforms.Tip: Unlike the localeconv() function, \nwhich returns all local formatting information, the nl_langinfo() function returns specific information.', '', '', '']","['', '', '', '']",[''],"[""Parameter|||Description|||&&&element|||Required. Specifies which element to return. Must be one of the following elements:Time and Calendar:\n\nABDAY_(1-7) - Abbreviated name of the numbered day of the week\nDAY_(1-7) - Name of the numbered day of the week (DAY_1 = Sunday)\nABMON_(1-12) - Abbreviated name of the numbered month of the year\nMON_(1-12) - Name of the numbered month of the year\nAM_STR - String for Ante meridian\nPM_STR - String for Post meridian\nD_T_FMT - String that can be used as the format string for strftime() to represent time and date\nD_FMT - String that can be used as the format string for strftime()  to represent date\nT_FMT - String that can be used as the format string for strftime()  to represent time\nT_FMT_AMPM - String that can be used as the format string for strftime() to represent time in 12-hour format with ante/post meridian\nERA - Alternate era\nERA_YEAR - Year in alternate era format\nERA_D_T_FMT - Date and time in alternate era format (string can be  used in strftime())\nERA_D_FMT - Date in alternate era format (string can be used in strftime())\nERA_T_FMT - Time in alternate era format (string can be used in strftime())\n\nMonetary Category:\n\nINT_CURR_SYMBOL - Currency symbol (example: USD)\nCURRENCY_SYMBOL - Currency symbol (example: $)\nCRNCYSTR - Same as CURRENCY_SYMBOL\nMON_DECIMAL_POINT - Monetary decimal point character\nMON_THOUSANDS_SEP - Monetary thousands separator\nPOSITIVE_SIGN - Positive value character\nNEGATIVE_SIGN -Negative value character\nMON_GROUPING - Array displaying how monetary numbers are grouped (example: 1 000 000)\nINT_FRAC_DIGITS - International fractional digits\nFRAC_DIGITS - Local fractional digits\nP_CS_PRECEDES - True (1) if currency symbol is placed in front of a positive value, False (0) if it is placed behind\nP_SEP_BY_SPACE - True (1) if there is a spaces between the     currency symbol and a positive value, False (0) otherwise\nN_CS_PRECEDES - True (1) if currency symbol is placed in front of a negative value, False (0) if it is placed behind\nN_SEP_BY_SPACE - True (1) if there is a spaces between the     currency symbol and a negative value, False (0) otherwise\nP_SIGN_POSN - Formatting setting. Possible return values:\n0 - Parentheses surround the quantity and currency symbol\n1 - The sign string is placed in front of the quantity and      currency symbol\n2 - The sign string is placed after the quantity and currency \n            symbol\n3 - The sign string is placed immediately in front of the      currency symbol\n4 - The sign string is placed immediately after the currency \n            symbol\n\nN_SIGN_POSN - Formatting setting. Possible return values:\n0 - Parentheses surround the quantity and currency symbol\n1 - The sign string is placed in front of the quantity and  currency symbol\n2 - The sign string is placed after the quantity and currency symbol\n3 - The sign string is placed immediately in front of the  currency symbol\n4 - The sign string is placed immediately after the currency symbol\n\n\n\nNumeric Category:\n\nDECIMAL_POINT - Decimal point character\nRADIXCHAR - Same as DECIMAL_POINT\nTHOUSANDS_SEP - Separator character for thousands\nTHOUSEP - Same as THOUSANDS_SEP\nGROUPING - Array displaying how numbers are grouped (example: 1  000 000)\n\nMessaging Category:\n\nYESEXPR - Regex string for matching 'yes' input\nNOEXPR - Regex string for matching 'no' input\nYESSTR - Output string for 'yes'\nNOSTR - Output string for 'no'\n\nCode set Category:\n\nCODESET Return a string with the name of the character encoding.\n  \n\n|||&&&"", 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||nl2br(),https://www.w3schools.com/php/func_string_nl2br.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The nl2br() function inserts HTML line breaks (<br> or <br />) in front \nof each newline (\\n) in a string.', '', '', '', '']","['\n\n<?php\necho nl2br(""One line.\\nAnother line."");\n?>', '\n\nOne line.\nAnother line.\n\n', '\n\nOne line.<br />\nAnother line.\n\n', '\n<?php\necho nl2br(""One line.\\nAnother line."",false);\n?>\n', '\n\nOne line.\nAnother line.\n\n', '\n\nOne line.<br>\nAnother line.\n\n']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&xhtml\xa0|||Optional. A boolean value that indicates whether or not to use XHTML compatible line breaks:\n \nTRUE- Default. Inserts <br />\nFALSE - Inserts <br>\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||number_format(),https://www.w3schools.com/php/func_string_number_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The number_format() function formats a number with grouped thousands.Note: This function supports one, two, or four parameters (not three).', '', '', '', '']","['\n <?phpecho number_format(""1000000"").""<br>"";echo number_format(""1000000"",2).""<br>"";\n echo number_format(""1000000"",2,"","",""."");?>', '\n <?php$num = 1999.9;$formattedNum = number_format($num).""<br>"";\n echo $formattedNum;$formattedNum = number_format($num, 2);echo $formattedNum;?>', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. The number to be formatted. If no other parameters are set, the number will be formatted without decimals and with comma (,) as the thousands separator.|||&&&decimals|||Optional. Specifies how many decimals. If this parameter is set, the number will be formatted with a dot (.) as decimal point|||&&&decimalpoint|||Optional. Specifies what string to use for decimal point|||&&&separator|||Optional. Specifies what string to use for thousands separator. Only the first character of separator is used. For example, ""xxx"" will give the same output as ""x"" Note: If this parameter is given, all other parameters are required as well|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||ord(),https://www.w3schools.com/php/func_string_ord.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ord() function returns the ASCII value of the first character of a string.', '', '', '']","['\n<?php\necho ord(""h"").""<br>"";\necho ord(""hello"").""<br>"";\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to get an ASCII value from|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||parse_str(),https://www.w3schools.com/php/func_string_parse_str.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The parse_str() function parses a query string into variables.Note: The magic_quotes_gpc setting in the php.ini file affects the output of this \nfunction. If enabled, the variables are converted by addslashes() before parsed \nby parse_str().', '', '', '', '']","['\n<?php\nparse_str(""name=Peter&age=43"");\necho $name.""<br>"";\n echo $age;\n?>', '\n<?php\nparse_str(""name=Peter&age=43"",$myArray);\nprint_r($myArray);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to parse|||&&&array|||Optional (Required from PHP 7.2). Specifies the name of an array to store the variables. This parameter indicates that the variables will be stored in an array.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||print(),https://www.w3schools.com/php/func_string_print.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The print() function outputs one or more strings.Note: The print() function is not \nactually a function, so you are not required to use parentheses with it.Tip: The print() function is \nslightly slower than echo().', '', '', '', '']","['\n<?php print ""Hello world!""; ?>\n', '\n<?php\n$str = ""Hello world!"";\n print $str;\n?>\n &&&&&& \n<?php$str = ""Hello world!"";print $str;print ""<br>What a nice day!"";?> &&&&&& \n<?php$str1=""Hello world!"";$str2=""What a nice day!"";\nprint $str1 . "" "" . $str2;?>\xa0\n &&&&&& \n<?php$age=array(""Peter""=>""35"");print ""Peter is "" . $age[\'Peter\'] . "" years old."";?> &&&&&& \n<?php\n print ""This text\nspans multiple\nlines."";\n?>\xa0\n &&&&&& \n<?php\n$color = ""red"";\n print ""Roses are $color"";\n print ""<br>"";\n print \'Roses are $color\';\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&strings|||Required. One or more strings to be sent to the output|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||printf(),https://www.w3schools.com/php/func_string_printf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The printf() function outputs a formatted string.The arg1, arg2, ++ parameters will be inserted at percent (%) \nsigns in the main string. This function works ""step-by-step"". At the first % sign, \narg1 is inserted, at the second % sign, arg2 is inserted, etc.Note: If there are more % signs than arguments, you must use placeholders. A placeholder is \ninserted after the % sign, \nand consists of the argument- number and ""\\$"". See example two.Tip: Related functions: sprintf(),\nvprintf(),\nvsprintf(),\nfprintf() and\nvfprintf()', '', '', '', '']","['\n<?php$number = 9;$str = ""Beijing"";printf(""There are %u million bicycles in %s."",$number,$str);?>', '\n<?php\n$number = 123;\nprintf(""%f"",$number);\n?> &&&&&& \n<?php\n$number = 123;\nprintf(""With 2 decimals: %1\\$.2f\n<br>With no decimals: %1\\$u"",$number);\n?> &&&&&& \n<?php$num1 = 123456789;$num2 = -123456789;$char = 50; // The ASCII Character 50 is 2// Note: The format value ""%%"" returns a percent signprintf(""%%b = %b <br>"",$num1); // Binary numberprintf(""%%c = %c <br>"",$char); // The ASCII Characterprintf(""%%d = %d <br>"",$num1); // Signed decimal numberprintf(""%%d = %d <br>"",$num2); // Signed decimal numberprintf(""%%e = %e <br>"",$num1); // Scientific notation (lowercase)\nprintf(""%%E = %E <br>"",$num1); // Scientific notation (uppercase)printf(""%%u = %u <br>"",$num1); // Unsigned decimal number (positive)printf(""%%u = %u <br>"",$num2); // Unsigned decimal number (negative)printf(""%%f = %f <br>"",$num1); // Floating-point number (local settings aware)printf(""%%F = %F <br>"",$num1); // Floating-point number (not local settings aware)printf(""%%g = %g <br>"",$num1); // Shorter of %e and %fprintf(""%%G = %G <br>"",$num1); // Shorter of %E and %fprintf(""%%o = %o <br>"",$num1); // Octal numberprintf(""%%s = %s <br>"",$num1); // Stringprintf(""%%x = %x <br>"",$num1); // Hexadecimal number (lowercase)printf(""%%X = %X <br>"",$num1); // Hexadecimal number (uppercase)printf(""%%+d = %+d <br>"",$num1); // Sign specifier (positive)\nprintf(""%%+d = %+d <br>"",$num2); // Sign specifier (negative)?> &&&&&& \n<?php$str1 = ""Hello"";$str2 = ""Hello world!"";printf(""[%s]<br>"",$str1);\nprintf(""[%8s]<br>"",$str1);printf(""[%-8s]<br>"",$str1);printf(""[%08s]<br>"",$str1); printf(""[%\'*8s]<br>"",$str1);printf(""[%8.8s]<br>"",$str2);\n ?>', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the string and how to format the variables in it.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%E - Scientific notation using a uppercase (e.g. 1.2E+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%g - shorter of %e and %f\n%G - shorter of %E and %f\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&arg1|||Required. The argument to be inserted at the first %-sign in the format string|||&&&arg2|||Optional. The argument to be inserted at the second %-sign in the format string|||&&&arg++|||Optional. The argument to be inserted at the third, fourth, etc. %-sign in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||quoted_printable_decode(),https://www.w3schools.com/php/func_string_quoted_printable_decode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The quoted_printable_decode() function decodes a quoted-printable string to an 8-bit ASCII string.Tip: Data encoded in quoted-printable are unlikely to be modified by \nmail transport. A text which is entirely US-ASCII may be encoded in \nquoted-printable to ensure the integrity of the data should the message pass \nthrough a character-translating, or line-wrapping gateway.', '', '', '']","['\n<?php\n$str = ""Hello=0Aworld."";\necho quoted_printable_decode($str);\n?>', '\nHello world.\n', '\nHello\nworld.', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the quoted-printable string to be decoded|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||quoted_printable_encode(),https://www.w3schools.com/php/func_string_quoted_printable_encode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The quoted_printable_encode() function converts an 8-bit string to a quoted-printable string.Tip: Data encoded in quoted-printable are unlikely to be modified by \nmail transport. A text which is entirely US-ASCII may be encoded in \nquoted-printable to ensure the integrity of the data should the message pass \nthrough a character-translating, or line-wrapping gateway.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the 8-bit string to be converted|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||quotemeta(),https://www.w3schools.com/php/func_string_quotemeta.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The quotemeta() function adds backslashes in front of some predefined characters in a string.The predefined characters are:Tip: This function can be used to escape characters with special \nmeanings, such as ( ), [ ], and * in SQL.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\n$str = ""Hello world. (can you hear me?)"";\necho quotemeta($str);\n?>', '\n<?php$str1 = ""1 + 1 = 2"";$str2 = ""1 * 1 = 1"";$str3 = ""Could you borrow me 5$?"";$str4 = ""Are you not entertained? (I am..)"";$str5 = ""The caret [ ^ ] Looks like a hat!"";echo quotemeta($str1).""<br>"";\necho quotemeta($str2).""<br>"";echo quotemeta($str3).""<br>"";echo quotemeta($str4).""<br>"";echo quotemeta($str5).""<br>"";?>\n', '', '', '']",['Definition and Usage###&&&|||period (.)|||backslash (\\)|||plus sign (+)|||asterisk (*)|||question mark (?)|||brackets ([])|||caret (^)|||dollar sign ($)|||parenthesis (())|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||rtrim(),https://www.w3schools.com/php/func_string_rtrim.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The rtrim() function removes whitespace or other predefined characters from the right side of a string.Related functions: ', '', '', '', '']","['\n<?php\n$str = ""Hello World!"";\n echo $str . ""<br>"";\necho rtrim($str,""World!"");\n?>', '\n<?php\n$str = ""Hello World!\xa0\xa0\xa0\xa0"";\necho ""Without rtrim: "" . $str;\necho ""<br>"";\necho ""With rtrim: "" . rtrim($str);\n?> &&&&&& \n <!DOCTYPE html><html>\n<body>\nWithout rtrim: Hello World!\xa0\xa0\xa0\xa0<br>With rtrim: Hello World!\n</body>\n</html> &&&&&& \nWithout rtrim: Hello World!\nWith rtrim: Hello World!  &&&&&& \n<?php\n$str = ""Hello World!\\n\\n\\n"";\necho ""Without rtrim: "" . $str;\necho ""<br>"";\necho ""With rtrim: "" . rtrim($str);\n?>', '\n <!DOCTYPE html><html>\n<body>\nWithout rtrim: Hello World!\n<br>With rtrim: Hello World!\n</body>\n</html>\n', '\nWithout rtrim: Hello World!\nWith rtrim: Hello World! ', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&charlist|||Optional. Specifies which characters to remove from the string. If omitted, all of the following characters are removed:\n""\\0"" - NULL\n""\\t"" - tab\n""\\n"" - new line\n""\\x0B"" - vertical tab\n""\\r"" - carriage return\n"" "" - ordinary white space\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||setlocale(),https://www.w3schools.com/php/func_string_setlocale.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The setlocale() function sets locale information.Locale information is language, monetary, time and other information specific for a geographical area.Note: The setlocale() function changes the locale only for the current script.Tip: The locale information can be set to system default with setlocale(LC_ALL,NULL)Tip: To get numeric formatting information, see the\nlocaleconv() function.', '', '', '']","['\n<?php\necho setlocale(LC_ALL,""US"");\necho ""<br>"";\necho setlocale(LC_ALL,NULL);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&constant|||Required. Specifies what locale information should be set.\n Available constants:\n\nLC_ALL - All of the below\nLC_COLLATE -\xa0 Sort order\nLC_CTYPE - Character classification and conversion (e.g. all  characters should be lower or upper-case)\nLC_MESSAGES - System message formatting\nLC_MONETARY - Monetary/currency formatting\nLC_NUMERIC - Numeric formatting\nLC_TIME - Date and time formatting\n\n|||&&&location|||Required. Specifies what country/region to set the locale information to. Can be a string or an array. It is possible to pass multiple locations.If the location is NULL or the empty string """", the location names will be set from the values of environment variables with the same names as the constants above, or from ""LANG"".If the location is ""0"", the location setting is not affected, only the current setting is returned.If the location is an array, setlocale() will try each array element until it finds a valid language or region code. This is very useful if a region is known under different names on different systems.Note: To view all available language codes, go to our Language code reference.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||sha1(),https://www.w3schools.com/php/func_string_sha1.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The sha1() function calculates the SHA-1 hash of a string.The sha1() function uses the US Secure Hash Algorithm 1.From RFC 3174 - The US Secure Hash Algorithm 1: ""SHA-1 produces a 160-bit output called \na message digest. The message digest can then, for example, be input to a \nsignature algorithm which generates or verifies the signature for the message. \nSigning the message digest rather than the message often improves the efficiency \nof the process because the message digest is usually much smaller in size than \nthe message. The same hash algorithm must be used by the verifier of a digital \nsignature as was used by the creator of the digital signature.""Tip: To calculate the SHA-1 hash of a file, use the\nsha1_file() function.', '', '', '', '']","['\n<?php\n$str = ""Hello"";\necho sha1($str);\n?>', '\n<?php $str = ""Hello""; echo ""The string: "".$str.""<br>""; echo ""TRUE - Raw 20 character binary format: "".sha1($str, TRUE).""<br>""; echo ""FALSE - 40 character hex number: "".sha1($str).""<br>""; ?> &&&&&& \n<?php$str = ""Hello"";echo sha1($str);if (sha1($str) == ""f7ff9e8b7bb2e09b70935a5d785e0cc5d9d0abf0"")\xa0 {\xa0 echo ""<br>Hello world!"";\xa0 exit;\xa0 }?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to be calculated|||&&&raw|||Optional. Specify hex or binary output format:\nTRUE - Raw 20 character binary format\nFALSE - Default. 40 character hex number\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||sha1_file(),https://www.w3schools.com/php/func_string_sha1_file.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The sha1_file() function calculates the SHA-1 hash of a file.The sha1_file() function uses the US Secure Hash Algorithm 1.From RFC 3174 - The US Secure Hash Algorithm 1: ""SHA-1 produces a 160-bit output called \na message digest. The message digest can then, for example, be input to a \nsignature algorithm which generates or verifies the signature for the message. \nSigning the message digest rather than the message often improves the efficiency \nof the process because the message digest is usually much smaller in size than \nthe message. The same hash algorithm must be used by the verifier of a digital \nsignature as was used by the creator of the digital signature.""This function returns the calculated SHA-1 hash on success, or FALSE on failure.', '', '', '', '']","['\n<?php\n$filename = ""test.txt"";\n$sha1file = sha1_file($filename);\necho $sha1file;\n?>', '\naaf4c61ddcc5e8a2dabede0f3b482cd9aea9434d\n', '\n<?php\n$sha1file = sha1_file(""test.txt"");\nfile_put_contents(""sha1file.txt"",$sha1file);\n?>', '\n<?php\n$sha1file = file_get_contents(""sha1file.txt"");\nif (sha1_file(""test.txt"") == $sha1file)\n\xa0\xa0{\n\xa0\xa0echo ""The file is ok."";\n\xa0\xa0}\nelse\n\xa0\xa0{\n\xa0\xa0echo ""The file has been changed."";\n\xa0\xa0}\n?>', '\nThe file is ok.\n']",[''],"['Parameter|||Description|||&&&file|||Required. The file to be calculated|||&&&raw|||Optional. A boolean value that specifies hex or binary output format:\nTRUE - Raw 20 character binary format\nFALSE - Default. 40 character hex number\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||similar_text(),https://www.w3schools.com/php/func_string_similar_text.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The similar_text() function calculates the similarity between two strings.It can also calculate the similarity of the two strings in percent.Note: The levenshtein() function is faster than the similar_text() \nfunction. However, the similar_text() function will give you a more accurate \nresult with less modifications needed.', '', '', '', '']","['\n<?php\necho similar_text(""Hello World"",""Hello Peter"");\n?>', '\n<?php\nsimilar_text(""Hello World"",""Hello Peter"",$percent);\necho $percent;\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to be compared|||&&&string2|||Required. Specifies the second string to be compared|||&&&percent|||Optional. Specifies a variable name for storing the similarity in percent|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||soundex(),https://www.w3schools.com/php/func_string_soundex.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The soundex() function calculates the soundex key of a string.A soundex key is a four character long alphanumeric string that represent English pronunciation of a word.The soundex() function can be used for spelling applications.Note: The soundex() function creates the same key for similar sounding words.Tip: metaphone() is more accurate than soundex(), because metaphone() knows the basic rules of English pronunciation. ', '', '', '', '']","['\n<?php\n$str = ""Hello"";\necho soundex($str);\n?>', '\n<?php\n$str = ""Assistance"";\n$str2 = ""Assistants"";\n\necho soundex($str);\necho ""<br>"";\necho soundex($str2);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||sprintf(),https://www.w3schools.com/php/func_string_sprintf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The sprintf() function writes a formatted string to a variable.The arg1, arg2, ++ parameters will be inserted at percent (%) \nsigns in the main string. This function works ""step-by-step"". At the first % sign, \narg1 is inserted, at the second % sign, arg2 is inserted, etc.Note: If there are more % signs than arguments, you must use \nplaceholders. A placeholder is inserted after the % sign, and consists of the \nargument- number and ""\\$"". See example two.Tip: Related functions: printf(),\nvprintf(),\nvsprintf(),\nfprintf() and\nvfprintf()', '', '', '', '']","['\n<?php$number = 9;$str = ""Beijing"";$txt = sprintf(""There are %u million bicycles in %s."",$number,$str);echo $txt;?>', '\n<?php\n$number = 123;\n$txt = sprintf(""%f"",$number);\necho $txt;\n?> &&&&&& \n<?php\n$number = 123;\n$txt = sprintf(""With 2 decimals: %1\\$.2f\n<br>With no decimals: %1\\$u"",$number);\necho $txt;\n?> &&&&&& \n <?php$num1 = 123456789;$num2 = -123456789;$char = 50; // The ASCII Character 50 is 2// Note: The format value ""%%"" returns a percent signecho sprintf(""%%b = %b"",$num1).""<br>""; // Binary numberecho sprintf(""%%c = %c"",$char).""<br>""; // The ASCII Character\n echo sprintf(""%%d = %d"",$num1).""<br>""; // Signed decimal numberecho sprintf(""%%d = %d"",$num2).""<br>""; // Signed decimal numberecho sprintf(""%%e = %e"",$num1).""<br>""; // Scientific notation (lowercase)echo sprintf(""%%E = %E"",$num1).""<br>""; // Scientific notation (uppercase)echo sprintf(""%%u = %u"",$num1).""<br>""; // Unsigned decimal number (positive)\n echo sprintf(""%%u = %u"",$num2).""<br>""; // Unsigned decimal number (negative)\n echo sprintf(""%%f = %f"",$num1).""<br>""; // Floating-point number (local settings aware)echo sprintf(""%%F = %F"",$num1).""<br>""; // Floating-point number (not local sett aware)echo sprintf(""%%g = %g"",$num1).""<br>""; // Shorter of %e and %fecho sprintf(""%%G = %G"",$num1).""<br>""; // Shorter of %E and %fecho sprintf(""%%o = %o"",$num1).""<br>""; // Octal number\n echo sprintf(""%%s = %s"",$num1).""<br>""; // Stringecho sprintf(""%%x = %x"",$num1).""<br>""; // Hexadecimal number (lowercase)echo sprintf(""%%X = %X"",$num1).""<br>""; // Hexadecimal number (uppercase)echo sprintf(""%%+d = %+d"",$num1).""<br>""; // Sign specifier (positive)echo sprintf(""%%+d = %+d"",$num2).""<br>""; // Sign specifier (negative)?> &&&&&& \n <?php$str1 = ""Hello"";$str2 = ""Hello world!"";echo sprintf(""[%s]"",$str1).""<br>"";\n echo sprintf(""[%8s]"",$str1).""<br>"";echo sprintf(""[%-8s]"",$str1).""<br>"";\n echo sprintf(""[%08s]"",$str1).""<br>""; \n echo sprintf(""[%\'*8s]"",$str1).""<br>"";echo sprintf(""[%8.8s]"",$str2).""<br>""; ?>', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the string and how to format the variables in it.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%E - Scientific notation using a uppercase (e.g. 1.2E+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%g - shorter of %e and %f\n%G - shorter of %E and %f\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&arg1|||Required. The argument to be inserted at the first %-sign in the format string|||&&&arg2|||Optional. The argument to be inserted at the second %-sign in the format string|||&&&arg++|||Optional. The argument to be inserted at the third, fourth, etc. %-sign in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||sscanf(),https://www.w3schools.com/php/func_string_sscanf.asp,,"['Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The sscanf() function parses input from a string according to a specified format. \nThe sscanf() function parses a string into variables based on the format string.If only two parameters are passed to this function, the data will be returned \nas an array. Otherwise, if optional parameters are passed, the data parsed are \nstored in them. If there are more specifiers than variables to contain them, an \nerror occurs. However, if there are less specifiers than variables, the extra variables contain NULL.Related functions:', '', '', '']","['\n<?php\n$str = ""age:30 weight:60kg"";\nsscanf($str,""age:%d weight:%dkg"",$age,$weight);\n// show types and values\nvar_dump($age,$weight);\n?>', '\n<?php$str = ""If you divide 4 by 2 you\'ll get 2"";$format = sscanf($str,""%s %s %s %d %s %d %s %s %c"");print_r($format);?>', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to read|||&&&format|||Required. Specifies the format to use.Possible format values:\n\n%% - Returns a percent sign\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&arg1|||Optional. The first variable to store data in|||&&&arg2|||Optional. The second variable to store data in|||&&&arg++|||Optional. The third, fourth, and so on, to store data in|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_getcsv(),https://www.w3schools.com/php/func_string_str_getcsv.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The str_getcsv() function parses a string for fields in CSV format and \nreturns an array containing the fields read.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to parse|||&&&separator|||Optional. A character that specifies the field separator. Default is comma ( , )|||&&&enclosure|||Optional. A character that specifies the field enclosure character. Default is ""|||&&&escape|||Optional. A character that specifies the escape character. Default is backslash (\\)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_ireplace(),https://www.w3schools.com/php/func_string_str_ireplace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The str_ireplace() function replaces some characters with some other characters in a string.This function works by the following rules:Note: This function is case-insensitive. Use the\nstr_replace() function to perform a case-sensitive search.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\necho str_ireplace(""WORLD"",""Peter"",""Hello world!"");\n?>', '\n<?php\n$arr = array(""blue"",""red"",""green"",""yellow"");\nprint_r(str_ireplace(""RED"",""pink"",$arr,$i)); // This function is case-insensitive\necho ""Replacements: $i"";\n?> &&&&&& \n<?php\n$find = array(""HELLO"",""WORLD"");\n$replace = array(""B"");\n$arr = array(""Hello"",""world"",""!"");\nprint_r(str_ireplace($find,$replace,$arr));\n?>', '', '', '']","['Definition and Usage###&&&|||If the string to be searched is an array, it returns an array|||If the string to be searched is an array, find and replace is performed with every array element|||If both find and replace are arrays, and replace has fewer elements than find, an empty string will be used as replace|||If find is an array and replace is a string, the replace string will be used for every find value|||']","['Parameter|||Description|||&&&find|||Required. Specifies the value to find|||&&&replace|||Required. Specifies the value to replace the value in \n find|||&&&string|||Required. Specifies the string to be searched|||&&&count|||Optional. A variable that counts the number of replacements|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||str_pad(),https://www.w3schools.com/php/func_string_str_pad.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The str_pad() function pads a string to a new length.', '', '', '', '']","['\n<?php\n$str = ""Hello World"";\necho str_pad($str,20,""."");\n?>', '\n<?php\n$str = ""Hello World"";\necho str_pad($str,20,""."",STR_PAD_LEFT);\n?> &&&&&& \n<?php\n$str = ""Hello World"";\necho str_pad($str,20,"".:"",STR_PAD_BOTH);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to pad|||&&&length|||Required. Specifies the new string length. If this value is less than the original length of the string, nothing will be done|||&&&pad_string|||Optional. Specifies the string to use for padding. Default is whitespace|||&&&pad_type|||Optional. Specifies what side to pad the string.Possible values:\n\nSTR_PAD_BOTH - Pad to both sides of the string. If not an even  number, the right side gets the  extra padding\nSTR_PAD_LEFT - Pad to the left side of the string\nSTR_PAD_RIGHT - Pad to the right side of the string. This is default\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_repeat(),https://www.w3schools.com/php/func_string_str_repeat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The str_repeat() function repeats a string a specified number of times.', '', '', '']","['\n<?php\necho str_repeat(""Wow"",13);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to repeat|||&&&repeat|||Required. Specifies the number of times the string will be repeated. Must be greater or equal to 0|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_replace(),https://www.w3schools.com/php/func_string_str_replace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The str_replace() function replaces some characters with some other characters in a string.This function works by the following rules:Note: This function is case-sensitive. Use the str_ireplace() function to perform a \ncase-insensitive search.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\necho str_replace(""world"",""Peter"",""Hello world!"");\n?>', '\n<?php\n$arr = array(""blue"",""red"",""green"",""yellow"");\nprint_r(str_replace(""red"",""pink"",$arr,$i));\necho ""Replacements: $i"";\n?> &&&&&& \n<?php\n$find = array(""Hello"",""world"");\n$replace = array(""B"");\n$arr = array(""Hello"",""world"",""!"");\nprint_r(str_replace($find,$replace,$arr));\n?>', '', '', '']","['Definition and Usage###&&&|||If the string to be searched is an array, it returns an array|||If the string to be searched is an array, find and replace is performed with every array element|||If both find and replace are arrays, and replace has fewer elements than find, an empty string will be used as replace|||If find is an array and replace is a string, the replace string will be used for every find value|||']","['Parameter|||Description|||&&&find|||Required. Specifies the value to find|||&&&replace|||Required. Specifies the value to replace the value in \n find|||&&&string|||Required. Specifies the string to be searched|||&&&count|||Optional. A variable that counts the number of replacements|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||str_rot13(),https://www.w3schools.com/php/func_string_str_rot13.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The str_rot13() function performs the ROT13 encoding on a string.The ROT13 encoding shifts every letter 13 places in the alphabet. Numeric \nand non-alphabetical characters remains untouched.Tip: Encoding and decoding are done by the same function. If you pass \nan encoded string as argument, the original string will be returned.', '', '', '']","['\n<?php\necho str_rot13(""Hello World"");\necho ""<br>"";\necho str_rot13(""Uryyb Jbeyq"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to encode|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_shuffle(),https://www.w3schools.com/php/func_string_str_shuffle.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The str_shuffle() function randomly shuffles all the characters of a string.', '', '', '']","['\n<?php\necho str_shuffle(""Hello World"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to shuffle|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_split(),https://www.w3schools.com/php/func_string_str_split.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The str_split() function splits a string into an array.', '', '', '', '']","['\n<?php\nprint_r(str_split(""Hello""));\n?>', '\n<?php\nprint_r(str_split(""Hello"",3));\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to split|||&&&length|||Optional. Specifies the length of each array element. Default is 1|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||str_word_count(),https://www.w3schools.com/php/func_string_str_word_count.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The str_word_count() function counts the number of words in a string.', '', '', '', '']","['\n<?php\necho str_word_count(""Hello world!"");\n?>', '\n<?php\nprint_r(str_word_count(""Hello world!"",1));\n?>\n &&&&&& \n<?php\nprint_r(str_word_count(""Hello world!"",2));\n?> &&&&&& \n<?php\nprint_r(str_word_count(""Hello world & good morning!"",1));\nprint_r(str_word_count(""Hello world & good morning!"",1,""&""));\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&return|||Optional. Specifies the return value of the str_word_count() function.Possible values:\n\n0 - Default. Returns the number of words found\n1 - Returns an array with the words from the string\n2 - Returns an array where the key is the position of the word in  the string, and value is the actual word\n\n|||&&&char|||Optional. Specifies special characters to be considered as words.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strcasecmp(),https://www.w3schools.com/php/func_string_strcasecmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strcasecmp() function compares two strings.Tip: The strcasecmp() function is binary-safe and case-insensitive.Tip: This function is similar to the\nstrncasecmp() function, with the \ndifference that you can specify the number of characters from each string to be \nused in the comparison with strncasecmp(). ', '', '', '', '']","['\n<?php\necho strcasecmp(""Hello world!"",""HELLO WORLD!"");\n?>', '\n<?php\necho strcasecmp(""Hello"",""HELLO"");echo ""<br>"";echo strcasecmp(""Hello"",""hELLo"");\n?> &&&&&& \n<?php\n echo strcasecmp(""Hello world!"",""HELLO WORLD!""); // The two strings are equal\n echo strcasecmp(""Hello world!"",""HELLO""); // String1 is greater than string2\n echo strcasecmp(""Hello world!"",""HELLO WORLD! HELLO!""); // String1 is less than string2 \n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strchr(),https://www.w3schools.com/php/func_string_strchr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strchr() function searches for the first occurrence of a string inside another string.This function is an alias of the strstr() function.Note: This function is binary-safe.Note: This function is case-sensitive. For a case-insensitive search, \nuse stristr() function.', '❮ PHP String Reference\n\n\n', '', '', '']","['\n<?php\necho strchr(""Hello world!"",""world"");\n?>', '\n<?php\necho strchr(""Hello world!"",111);\n?> &&&&&& \n<?php\necho strchr(""Hello world!"",""world"",true);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&search|||Required. Specifies the string to search for. If this parameter is a number, it will search for the character matching the ASCII value of the number|||&&&before_search|||Optional. A boolean value whose default is ""false"". If set to ""true"", it returns the part of the string before the first occurrence of the \n search parameter.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strcmp(),https://www.w3schools.com/php/func_string_strcmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strcmp() function compares two strings.Note: The strcmp() function is binary-safe and case-sensitive.Tip: This function is similar to the\nstrncmp() function, with the difference \nthat you can specify the number of characters from each string to be used in the comparison with strncmp().', '', '', '', '']","['\n<?php\necho strcmp(""Hello world!"",""Hello world!"");\n?>', '\n<?phpecho strcmp(""Hello"",""Hello"");echo ""<br>"";echo strcmp(""Hello"",""hELLo"");\n?> &&&&&& \n<?php\n echo strcmp(""Hello world!"",""Hello world!""); // the two strings are equal\n echo strcmp(""Hello world!"",""Hello""); // string1 is greater than string2\n echo strcmp(""Hello world!"",""Hello world! Hello!""); // string1 is less than string2 \n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strcoll(),https://www.w3schools.com/php/func_string_strcoll.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strcoll() function compares two strings.The comparison of the strings may vary depending on the locale settings (A<a or A>a).Note: The strcoll() is case-sensitive but not binary-safe.Note: If the current locale is C or POSIX, this function works the same way as strcmp().', '', '', '']","['\n<?php\nsetlocale (LC_COLLATE, \'NL\');\necho strcoll(""Hello World!"",""Hello World!"");\necho ""<br>"";\n\nsetlocale (LC_COLLATE, \'en_US\');\necho strcoll(""Hello World!"",""Hello World!"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strcspn(),https://www.w3schools.com/php/func_string_strcspn.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strcspn() function returns the number of characters (including whitespaces) found in a string \nbefore any part of the specified characters are found.Tip: Use the strspn() \nfunction to the number of characters found in the string that contains only \ncharacters from a specified character list.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\necho strcspn(""Hello world!"",""w"");\n?>', '\n<?php\necho strcspn(""Hello world!"",""w"",0,6); // The start position is 0 and the length of the search string is 6.\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&char|||Required. Specifies the characters to search for|||&&&start|||Optional. Specifies where in string to start|||&&&length|||Optional. Specifies the length of the string (how much of the string to search)|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strip_tags(),https://www.w3schools.com/php/func_string_strip_tags.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strip_tags() function strips a string from HTML, XML, and PHP tags.Note: HTML comments are always stripped. This cannot be changed with the allow parameter.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\necho strip_tags(""Hello <b>world!</b>"");\n?>', '\n<?php\necho strip_tags(""Hello <b><i>world!</i></b>"",""<b>"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&allow|||Optional. Specifies allowable tags. These tags will not be removed|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||stripcslashes(),https://www.w3schools.com/php/func_string_stripcslashes.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The stripcslashes() function removes backslashes added by the addcslashes() function.Tip: This function can be used to clean up data retrieved from a database or from an HTML form.', '', '', '']","['\n<?php\necho stripcslashes(""Hello \\World!"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||stripslashes(),https://www.w3schools.com/php/func_string_stripslashes.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The stripslashes() function removes backslashes added by the addslashes() \nfunction.Tip: This function can be used to clean up data retrieved from a database or from an HTML form.', '', '', '']","['\n<?php\necho stripslashes(""Who\\\'s Peter Griffin?"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||stripos(),https://www.w3schools.com/php/func_string_stripos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The stripos() function finds the position of the first occurrence of a string inside another string.Note: The stripos() function is case-insensitive.Note: This function is binary-safe.Related functions:', '', '', '']","['\n<?php\necho stripos(""I love php, I love php too!"",""PHP"");\n?>', '', '', '']",['Definition and Usage###&&&|||strripos() - Finds the position of the last occurrence of a string inside another string (case-insensitive)|||strpos() - Finds the position of the first occurrence of a string inside another string (case-sensitive)|||strrpos() - Finds the position of the last occurrence of a string inside another string (case-sensitive)|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&find|||Required. Specifies the string to find|||&&&start|||Optional. Specifies where to begin the search|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||stristr(),https://www.w3schools.com/php/func_string_stristr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The stristr() function searches for the first occurrence of a string inside another string.Note: This function is binary-safe.Note: This function is case-insensitive. For a case-sensitive search, \nuse strstr() function.', '', '', '', '']","['\n<?php\necho stristr(""Hello world!"",""WORLD"");\n?>', '\n<?php\necho stristr(""Hello world!"",111);\n?> &&&&&& \n<?php\necho stristr(""Hello world!"",""WORLD"",true);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&search|||Required. Specifies the string to search for. If this parameter is a number, it will search for the character matching the ASCII value of the number|||&&&before_search|||Optional. A boolean value whose default is ""false"". If set to ""true"", it returns the part of the string before the first occurrence of the \n search parameter.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strlen(),https://www.w3schools.com/php/func_string_strlen.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strlen() function returns the length of a string.', '', '', '', '']","['\n<?phpecho strlen(""Hello"");?>', '\n<?php\necho strlen(""Hello world!"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strnatcasecmp(),https://www.w3schools.com/php/func_string_strnatcasecmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strnatcasecmp() function compares two strings using a ""natural"" algorithm.In a natural algorithm, the number 2 is less than the number 10. In  \ncomputer sorting, 10 is less than 2, because the first number in ""10"" is less than 2.Note: The strnatcasecmp() is case-insensitive.', '', '', '', '']","['\n<?php\necho strnatcasecmp(""2Hello world!"",""10Hello WORLD!"");\necho ""<br>"";\necho strnatcasecmp(""10Hello world!"",""2Hello WORLD!"");\n?>', '\n<?php$arr1 = $arr2 = array(""pic1"",""pic2"",""pic10"",""pic01"",""pic100"",""pic20"",""pic30"",""pic200"");\n echo ""Standard string comparison"".""<br>"";usort($arr1,""strcmp"");\n print_r($arr1);echo ""<br>"";echo ""Natural order string comparison"".""<br>"";usort($arr2,""strnatcmp"");print_r($arr2);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strnatcmp(),https://www.w3schools.com/php/func_string_strnatcmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strnatcmp() function compares two strings using a ""natural"" algorithm.In a natural algorithm, the number 2 is less than the number 10. In  \ncomputer sorting, 10 is less than 2, because the first number in ""10"" is less than 2.Note: This function is case-sensitive.', '', '', '', '']","['\n<?php\necho strnatcmp(""2Hello world!"",""10Hello world!"");\necho ""<br>"";\necho strnatcmp(""10Hello world!"",""2Hello world!"");\n?>', '\n<?php$arr1 = $arr2 = array(""pic1"",""pic2"",""pic10"",""pic01"",""pic100"",""pic20"",""pic30"",""pic200"");\n echo ""Standard string comparison"".""<br>"";usort($arr1,""strcmp"");\n print_r($arr1);echo ""<br>"";echo ""Natural order string comparison"".""<br>"";usort($arr2,""strnatcmp"");print_r($arr2);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strncasecmp(),https://www.w3schools.com/php/func_string_strncasecmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strncasecmp() function compares two strings.Note: The strncasecmp() is binary-safe and case-insensitive.Tip: This function is similar to the\nstrcasecmp() function, except that \nstrcasecmp() does not have the length parameter. ', '', '', '', '']","['\n<?php\necho strncasecmp(""Hello world!"",""hello earth!"",6);\n?>', '\n<?phpecho strncasecmp(""Hello"",""Hello"",6);echo ""<br>"";echo strncasecmp(""Hello"",""hELLo"",6);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&length|||Required. Specify the number of characters from each string to be used in the comparison|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strncmp(),https://www.w3schools.com/php/func_string_strncmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strncmp() function compares two strings.Note: The strncmp() is binary-safe and case-sensitive.Tip: This function is similar to the\nstrcmp() function, except that strcmp() does not have the length parameter. ', '', '', '', '']","['\n<?php\necho strncmp(""Hello world!"",""Hello earth!"",6);\n?>', '\n<?phpecho strncmp(""Hello"",""Hello"",6);echo ""<br>"";echo strncmp(""Hello"",""hELLo"",6);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&length|||Required. Specify the number of characters from each string to be used in the comparison|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strpbrk(),https://www.w3schools.com/php/func_string_strpbrk.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strpbrk() function searches a string for any of the specified characters.Note: This function is case-sensitive.This function returns the rest of the string from where it found the first \noccurrence of a specified character, otherwise it returns FALSE.', '', '', '', '']","['\n<?php\necho strpbrk(""Hello world!"",""oe"");\n?>', '\n<?php\n echo strpbrk(""Hello world!"",""W"");echo ""<br>"";echo strpbrk(""Hello world!"",""w"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&charlist|||Required. Specifies the characters to find|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strpos(),https://www.w3schools.com/php/func_string_strpos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strpos() function finds the position of the first occurrence of a string inside another string.Note: The strpos() function is case-sensitive.Note: This function is binary-safe.Related functions:', '', '', '']","['\n<?php\necho strpos(""I love php, I love php too!"",""php"");\n?>', '', '', '']",['Definition and Usage###&&&|||strrpos() - Finds the position of the last occurrence of a string inside another string (case-sensitive)|||stripos() - Finds the position of the first occurrence of a string inside another string (case-insensitive)|||strripos() - Finds the position of the last occurrence of a string inside another string (case-insensitive)|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&find|||Required. Specifies the string to find|||&&&start|||Optional. Specifies where to begin the search. If start is a \n    negative number, it counts from the end of the string. |||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strrchr(),https://www.w3schools.com/php/func_string_strrchr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strrchr() function finds the position of the last occurrence of a string \nwithin another string, and returns all characters from this position to the end of the string.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\necho strrchr(""Hello world!"",""world"");\n?>', '\n<?php\necho strrchr(""Hello world! What a beautiful day!"", ""What"");\n?> &&&&&& \n<?php\necho strrchr(""Hello world!"",101);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&char|||Required. Specifies the string to find. If this is a number, it will search for the character matching the ASCII value of that number|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strrev(),https://www.w3schools.com/php/func_string_strrev.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strrev() function reverses a string.', '', '', '']","['\n<?php\necho strrev(""Hello World!"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to reverse|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strripos(),https://www.w3schools.com/php/func_string_strripos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strripos() function finds the position of the last occurrence of a string inside another string.Note: The strripos() function is case-insensitive.Related functions:', '', '', '']","['\n<?php\necho strripos(""I love php, I love php too!"",""PHP"");\n?>', '', '', '']",['Definition and Usage###&&&|||stripos() - Finds the position of the first occurrence of a string inside another string (case-insensitive)|||strpos() - Finds the position of the first occurrence of a string inside another string (case-sensitive)|||strrpos() - Finds the position of the last occurrence of a string inside another string (case-sensitive)|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&find|||Required. Specifies the string to find|||&&&start|||Optional. Specifies where to begin the search|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strrpos(),https://www.w3schools.com/php/func_string_strrpos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strrpos() function finds the position of the last occurrence of a string inside another string.Note: The strrpos() function is case-sensitive.Related functions:', '', '', '']","['\n<?php\necho strrpos(""I love php, I love php too!"",""php"");\n?>', '', '', '']",['Definition and Usage###&&&|||strpos() - Finds the position of the first occurrence of a string inside another string (case-sensitive)|||stripos() - Finds the position of the first occurrence of a string inside another string (case-insensitive)|||strripos() - Finds the position of the last occurrence of a string inside another string (case-insensitive)|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&find|||Required. Specifies the string to find|||&&&start|||Optional. Specifies where to begin the search|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strspn(),https://www.w3schools.com/php/func_string_strspn.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strspn() function returns the number of characters found in the string \nthat contains only characters from the charlist parameter.Tip: Use the strcspn() \nfunction to return the number of characters found in a string before any part of \nthe specified characters are found.Note: This function is binary-safe.', '', '', '', '']","['\n<?php\necho strspn(""Hello world!"",""kHlleo"");\n?>\n', '\n<?php\necho strspn(""abcdefand"",""abc"");\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&charlist|||Required. Specifies the characters to find|||&&&start|||Optional. Specifies where in the string to start|||&&&length|||Optional. Defines the length of the string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strstr(),https://www.w3schools.com/php/func_string_strstr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strstr() function searches for the first occurrence of a string inside another string.Note: This function is binary-safe.Note: This function is case-sensitive. For a case-insensitive search, \nuse stristr() function.', '', '', '', '']","['\n<?php\necho strstr(""Hello world!"",""world"");\n?>', '\n<?php\necho strstr(""Hello world!"",111);\n?> &&&&&& \n<?php\necho strstr(""Hello world!"",""world"",true);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to search|||&&&search|||Required. Specifies the string to search for. If this parameter is a number, it will search for the character matching the ASCII value of the number|||&&&before_search|||Optional. A boolean value whose default is ""false"". If set to ""true"", it returns the part of the string before the first occurrence of the \n search parameter.|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||strtok(),https://www.w3schools.com/php/func_string_strtok.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strtok() function splits a string into smaller strings (tokens).', '', '', '']","['\n<?php$string = ""Hello world. Beautiful day today."";$token = strtok($string, "" "");while ($token !== false){echo ""$token<br>"";\n $token = strtok("" "");}\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to split|||&&&split|||Required. Specifies one or more split characters|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strtolower(),https://www.w3schools.com/php/func_string_strtolower.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strtolower() function converts a string to lowercase.Note: This function is binary-safe.Related functions:', '', '', '']","['\n<?php\necho strtolower(""Hello WORLD."");\n?>', '', '', '']",['Definition and Usage###&&&|||strtoupper() - converts a string to uppercase|||lcfirst() - converts the first character of a string to lowercase|||ucfirst() - converts the first character of a string to uppercase|||ucwords() - converts the first character of each word in a string to uppercase |||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strtoupper(),https://www.w3schools.com/php/func_string_strtoupper.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strtoupper() function converts a string to uppercase.Note: This function is binary-safe.Related functions:', '', '', '']","['\n<?php\necho strtoupper(""Hello WORLD!"");\n?>', '', '', '']",['Definition and Usage###&&&|||strtolower() - converts a string to lowercase|||lcfirst() - converts the first character of a string to lowercase|||ucfirst() - converts the first character of a string to uppercase|||ucwords() - converts the first character of each word in a string to uppercase |||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||strtr(),https://www.w3schools.com/php/func_string_strtr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The strtr() function translates certain characters in a string.Note: If the from and to parameters are different in length, both will be fmatted to \nthe length of the shtest.', 'or', '', '', '']","['\n<?php\necho strtr(""Hilla Warld"",""ia"",""eo"");\n?>', '\n<?php\n$arr = array(""Hello"" => ""Hi"", ""world"" => ""earth"");\necho strtr(""Hello world"",$arr);\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to translate|||&&&from|||Required (unless array is used). Specifies what characters to change|||&&&to|||Required (unless array is used). Specifies what characters to change into|||&&&array|||Required (unless to and from is used). An array containing what to change from as key, and what to change to as value|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||substr(),https://www.w3schools.com/php/func_string_substr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The substr() function returns a part of a string.', '', '', '', '']","['\n<?php\necho substr(""Hello world"",6);\n?>', '\n<?phpecho substr(""Hello world"",10).""<br>"";echo substr(""Hello world"",1).""<br>"";echo substr(""Hello world"",3).""<br>"";echo substr(""Hello world"",7).""<br>"";echo substr(""Hello world"",-1).""<br>"";echo substr(""Hello world"",-10).""<br>"";echo substr(""Hello world"",-8).""<br>"";\n echo substr(""Hello world"",-4).""<br>"";?> &&&&&& \n<?phpecho substr(""Hello world"",0,10).""<br>"";echo substr(""Hello world"",1,8).""<br>"";echo substr(""Hello world"",0,5).""<br>"";echo substr(""Hello world"",6,6).""<br>"";echo substr(""Hello world"",0,-1).""<br>"";echo substr(""Hello world"",-10,-2).""<br>"";echo substr(""Hello world"",0,-6).""<br>"";?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to return a part of|||&&&start|||Required. Specifies where to start in the string\nA positive number - Start at a specified position in the string\nA negative number - Start at a specified position from the end of the string\n0 - Start at the first character in string\n\n|||&&&length|||Optional. Specifies the length of the returned string. Default is to the end of the string.\nA positive number - The length to be returned from the start  parameter\nNegative number - The length to be returned from the end  of the string\nIf the length parameter is 0, NULL, or FALSE - it return an \n      empty string \n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||substr_compare(),https://www.w3schools.com/php/func_string_substr_compare.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The substr_compare() function compares two strings from a specified start position.Tip: This function is binary-safe and optionally case-sensitive.', '', '', '', '']","['\n<?php\necho substr_compare(""Hello world"",""Hello world"",0);\n?>', '\n<?php\necho substr_compare(""Hello world"",""world"",6);\n?> &&&&&& \n <?phpecho substr_compare(""world"",""or"",1,2); echo substr_compare(""world"",""ld"",-2,2);\n echo substr_compare(""world"",""orl"",1,2); echo substr_compare(""world"",""OR"",1,2,TRUE);\n echo substr_compare(""world"",""or"",1,3); echo substr_compare(""world"",""rl"",1,2);\n?> &&&&&& \n <?phpecho substr_compare(""Hello world!"",""Hello world!"",0); // the two strings are equalecho substr_compare(""Hello world!"",""Hello"",0); // string1 is greater than string2echo substr_compare(""Hello world!"",""Hello world! Hello!"",0); // str1 is less than str2\n?>', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. Specifies the first string to compare|||&&&string2|||Required. Specifies the second string to compare|||&&&startpos|||Required. Specifies where to start comparing in string1. If negative, it starts counting from the end of the string|||&&&length|||Optional. Specifies how much of string1 to compare|||&&&case|||Optional. A boolean value that specifies whether or not to perform a case-sensitive compare:\n \nFALSE - Default. Case-sensitive\nTRUE - Case-insensitive\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||substr_count(),https://www.w3schools.com/php/func_string_substr_count.asp,,"['Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The substr_count() function counts the number of times a substring occurs in a string.Note: The substring is case-sensitive.Note: This function does not count overlapped substrings (see example 2).Note: This function generates a warning if the start \nparameter plus the length parameter is greater than the string length (see example 3).', '', '', '']","['\n<?php\necho substr_count(""Hello world. The world is nice"",""world"");\n?>', '\n<?php\n $str = ""This is nice"";echo strlen($str).""<br>""; // Using strlen() to return the string lengthecho substr_count($str,""is"").""<br>""; // The number of times ""is"" occurs in the stringecho substr_count($str,""is"",2).""<br>""; // The string is now reduced to ""is is nice""echo substr_count($str,""is"",3).""<br>""; // The string is now reduced to ""s is nice""echo substr_count($str,""is"",3,3).""<br>""; // The string is now reduced to ""s i""\n?> &&&&&& \n<?php\n $str = ""abcabcab""; echo substr_count($str,""abcab""); // This function does not count overlapped substrings\n?> &&&&&& \n<?php\n echo $str = ""This is nice"";substr_count($str,""is"",3,9);\n?>\n', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&substring|||Required. Specifies the string to search for |||&&&start|||Optional. Specifies where in string to start searching. If negative, it \n    starts counting from the end of the string|||&&&length|||Optional. Specifies the length of the search|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||substr_replace(),https://www.w3schools.com/php/func_string_substr_replace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The substr_replace() function replaces a part of a string with another string.Note: If the start parameter is a negative number and length is less than or equal to start, length becomes 0.Note: This function is binary-safe.', '', '', '', '']","['\n\n<?php\necho substr_replace(""Hello"",""world"",0);\n?>', '\n<?php\necho substr_replace(""Hello world"",""earth"",6);\n?> &&&&&& \n<?php\necho substr_replace(""Hello world"",""earth"",-5);\n?> &&&&&& \n<?php\necho substr_replace(""world"",""Hello "",0,0);\n?> &&&&&& \n<?php$replace = array(""1: AAA"",""2: AAA"",""3: AAA"");echo implode(""<br>"",substr_replace($replace,\'BBB\',3,3));\n ?>', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&replacement|||Required. Specifies the string to insert|||&&&start|||Required. Specifies where to start replacing in the string\nA positive number - Start replacing at the specified position in the string\nNegative number - Start replacing at the specified position from the end of the string\n0 - Start replacing at the first character in the string\n\n|||&&&length|||Optional. Specifies how many characters should be replaced. Default is the same length as the string.\nA positive number - The length of string to be replaced\nA negative number - How many characters should be left at end of string  after replacing\n0 - Insert instead of replace\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||trim(),https://www.w3schools.com/php/func_string_trim.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The trim() function removes whitespace and other predefined characters from both sides of a string.Related functions: ', '', '', '', '']","['\n\n<?php\n$str = ""Hello World!"";\n echo $str . ""<br>"";\necho trim($str,""Hed!"");\n?>', '\n<?php\n$str = ""    Hello World!    "";\necho ""Without trim: "" . $str;\necho ""<br>"";\necho ""With trim: "" . trim($str);\n?> &&&&&& \n <!DOCTYPE html><html>\n<body>\nWithout trim:\xa0 Hello World! <br>With trim: Hello World!\n</body>\n</html> &&&&&& \nWithout trim: Hello World!\nWith trim: Hello World!\n &&&&&& \n<?php\n$str = ""\\n\\n\\nHello World!\\n\\n\\n"";\necho ""Without trim: "" . $str;\necho ""<br>"";\necho ""With trim: "" . trim($str);\n?>', '\n <!DOCTYPE html><html>\n<body>\nWithout trim:\nHello World!\n<br>With trim: Hello World!\n</body>\n</html>', '\nWithout trim: Hello World!\nWith trim: Hello World!\n', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to check|||&&&charlist|||Optional. Specifies which characters to remove from the string. If omitted, all of the following characters are removed:\n""\\0"" - NULL\n""\\t"" - tab\n""\\n"" - new line\n""\\x0B"" - vertical tab\n""\\r"" - carriage return\n"" "" - ordinary white space\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||ucfirst(),https://www.w3schools.com/php/func_string_ucfirst.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ucfirst() function converts the first character of a string to uppercase.Related functions:', '', '', '']","['\n<?phpecho ucfirst(""hello world!"");?>\n', '', '', '']",['Definition and Usage###&&&|||lcfirst() - converts the first character of a string to lowercase|||ucwords() - converts the first character of each word in a string to uppercase|||strtoupper() - converts a string to uppercase|||strtolower() - converts a string to lowercase|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||ucwords(),https://www.w3schools.com/php/func_string_ucwords.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ucwords() function converts the first character of each word in a string to uppercase.Note: This function is binary-safe.Related functions:', '', '', '', '']","['\n<?php\necho ucwords(""hello world"");\n?>\n', '', '', '', '']",['Definition and Usage###&&&|||ucfirst() - converts the first character of a string to uppercase|||lcfirst() - converts the first character of a string to lowercase|||strtoupper() - converts a string to uppercase|||strtolower() - converts a string to lowercase|||'],"['Parameter|||Description|||&&&string|||Required. Specifies the string to convert|||&&&delimiters|||Optional. Specifies the word separator character|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||vfprintf(),https://www.w3schools.com/php/func_string_vfprintf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The vfprintf() function writes a formatted string to a \nspecified output stream (example: file or database).Unlike fprintf(), the arguments in vfprintf(), are placed in an array. The \narray elements will be inserted at the percent (%) \nsigns in the main string. This function works ""step-by-step"". At the first % sign, \nthe first array element is inserted, at the second % sign, the second array element is inserted, etc.Note: If there are more % signs than arguments, you must use \nplaceholders. A placeholder is inserted after the % sign, and consists of the \nargument- number and ""\\$"". See example two.Tip: Related functions: fprintf(), \nprintf(), \nsprintf(), vprintf() and\nvsprintf().', '', '', '', '']","['\n <?php$number = 9;$str = ""Beijing"";$file = fopen(""test.txt"",""w"");\n echo vfprintf($file,""There are %u million bicycles in %s."",array($number,$str));\n ?>', '\n 40\n', '\nThere are 9 million bicycles in Beijing.', '\n<?php\n$num1 = 123;\n$num2 = 456;\n$file = fopen(""test.txt"",""w"");\nvfprintf($file,""%f%f"",array($num1,$num2));\n?> &&&&&& \n123.000000456.000000 &&&&&& \n<?php\n$number = 123;\n$file = fopen(""test.txt"",""w"");\nvfprintf($file,""With 2 decimals: %1\\$.2f\n\\nWith no decimals: %1\\$u"",array($number));\n?> &&&&&& \nWith 2 decimals: 123.00\nWith no decimals: 123\n &&&&&& \n<?php$num1 = 123456789;$num2 = -123456789;$char = 50; // The ASCII Character 50 is 2// Note: The format value ""%%"" returns a percent signprintf(""%%b = %b <br>"",$num1); // Binary numberprintf(""%%c = %c <br>"",$char); // The ASCII Characterprintf(""%%d = %d <br>"",$num1); // Signed decimal numberprintf(""%%d = %d <br>"",$num2); // Signed decimal numberprintf(""%%e = %e <br>"",$num1); // Scientific notation (lowercase)\n printf(""%%E = %E <br>"",$num1); // Scientific notation (uppercase)printf(""%%u = %u <br>"",$num1); // Unsigned decimal number (positive)printf(""%%u = %u <br>"",$num2); // Unsigned decimal number (negative)printf(""%%f = %f <br>"",$num1); // Floating-point number (local settings aware)printf(""%%F = %F <br>"",$num1); // Floating-point number (not local settings aware)printf(""%%g = %g <br>"",$num1); // Shorter of %e and %fprintf(""%%G = %G <br>"",$num1); // Shorter of %E and %fprintf(""%%o = %o <br>"",$num1); // Octal numberprintf(""%%s = %s <br>"",$num1); // Stringprintf(""%%x = %x <br>"",$num1); // Hexadecimal number (lowercase)printf(""%%X = %X <br>"",$num1); // Hexadecimal number (uppercase)printf(""%%+d = %+d <br>"",$num1); // Sign specifier (positive)\n printf(""%%+d = %+d <br>"",$num2); // Sign specifier (negative)?>', '']",[''],"['Parameter|||Description|||&&&stream|||Required. Specifies where to write/output the string|||&&&format|||Required. Specifies the string and how to format the variables in it.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%E - Scientific notation using a uppercase (e.g. 1.2E+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%g - shorter of %e and %f\n%G - shorter of %E and %f\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&argarray|||Required. An array with arguments to be inserted at the % signs in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||vprintf(),https://www.w3schools.com/php/func_string_vprintf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The vprintf() function outputs a formatted string.Unlike printf(), the arguments in vprintf(), are placed in an array. The \narray elements will be inserted at the percent (%) \nsigns in the main string. This function works ""step-by-step"". At the first % sign, \nthe first array element is inserted, at the second % sign, the second array element is inserted, etc.Note: If there are more % signs than arguments, you must use \nplaceholders. A placeholder is inserted after the % sign, and consists of the \nargument- number and ""\\$"". See example two.Tip: Related functions: sprintf(),\nprintf(),\nvsprintf(),\nfprintf() and\nvfprintf()', '', '', '', '']","['\n<?php$number = 9;$str = ""Beijing"";vprintf(""There are %u million bicycles in %s."",array($number,$str));?>', '\n<?php\n$num1 = 123;\n$num2 = 456;\nvprintf(""%f%f"",array($num1,$num2));\n?> &&&&&& \n<?php\n$number = 123;\nvprintf(""With 2 decimals: %1\\$.2f\n<br>With no decimals: %1\\$u"",array($number));\n?> &&&&&& \n<?php$num1 = 123456789;$num2 = -123456789;$char = 50; // The ASCII Character 50 is 2// Note: The format value ""%%"" returns a percent signprintf(""%%b = %b <br>"",$num1); // Binary numberprintf(""%%c = %c <br>"",$char); // The ASCII Characterprintf(""%%d = %d <br>"",$num1); // Signed decimal numberprintf(""%%d = %d <br>"",$num2); // Signed decimal numberprintf(""%%e = %e <br>"",$num1); // Scientific notation (lowercase)\nprintf(""%%E = %E <br>"",$num1); // Scientific notation (uppercase)printf(""%%u = %u <br>"",$num1); // Unsigned decimal number (positive)printf(""%%u = %u <br>"",$num2); // Unsigned decimal number (negative)printf(""%%f = %f <br>"",$num1); // Floating-point number (local settings aware)printf(""%%F = %F <br>"",$num1); // Floating-point number (not local settings aware)printf(""%%g = %g <br>"",$num1); // Shorter of %e and %fprintf(""%%G = %G <br>"",$num1); // Shorter of %E and %fprintf(""%%o = %o <br>"",$num1); // Octal numberprintf(""%%s = %s <br>"",$num1); // Stringprintf(""%%x = %x <br>"",$num1); // Hexadecimal number (lowercase)printf(""%%X = %X <br>"",$num1); // Hexadecimal number (uppercase)printf(""%%+d = %+d <br>"",$num1); // Sign specifier (positive)\nprintf(""%%+d = %+d <br>"",$num2); // Sign specifier (negative)?> &&&&&& \n <?php$str1 = ""Hello"";$str2 = ""Hello world!"";vprintf(""[%s]<br>"",array($str1));\n vprintf(""[%8s]<br>"",array($str1));vprintf(""[%-8s]<br>"",array($str1));\n vprintf(""[%08s]<br>"",array($str1)); vprintf(""[%\'*8s]<br>"",array($str1));\n vprintf(""[%8.8s]<br>"",array($str2)); ?>', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the string and how to format the variables in it.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%E - Scientific notation using a uppercase (e.g. 1.2E+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%g - shorter of %e and %f\n%G - shorter of %E and %f\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&argarray|||Required. An array with arguments to be inserted at the % signs in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||vsprintf(),https://www.w3schools.com/php/func_string_vsprintf.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The vsprintf() function writes a formatted string to a variable.Unlike sprintf(), the arguments in vsprintf(), are placed in an array. The \narray elements will be inserted at the percent (%) \nsigns in the main string. This function works ""step-by-step"". At the first % sign, \nthe first array element is inserted, at the second % sign, the second array \nelement is inserted, etc.Note: If there are more % signs than arguments, you must use \nplaceholders. A placeholder is inserted after the % sign, and consists of the \nargument- number and ""\\$"". See example two.Tip: Related functions: fprintf(), \nvfprintf(),\nprintf(), \nsprintf() and vprintf().', '', '', '', '']","['\n<?php$number = 9;$str = ""Beijing"";$txt = vsprintf(""There are %u million bicycles in %s."",array($number,$str));echo $txt;?>', '\n<?php\n$num1 = 123;\n$num2 = 456;\n$txt = vsprintf(""%f%f"",array($num1,$num2));\necho $txt;\n?> &&&&&& \n <?php\n$number = 123;\n$txt = vsprintf(""With 2 decimals: %1\\$.2f\n<br>With no decimals: %1\\$u"",array($number));\necho $txt;\n?> &&&&&& \n <?php$num1 = 123456789;$num2 = -123456789;$char = 50; // The ASCII Character 50 is 2// Note: The format value ""%%"" returns a percent signecho sprintf(""%%b = %b"",$num1).""<br>""; // Binary numberecho sprintf(""%%c = %c"",$char).""<br>""; // The ASCII Character\n echo sprintf(""%%d = %d"",$num1).""<br>""; // Signed decimal numberecho sprintf(""%%d = %d"",$num2).""<br>""; // Signed decimal numberecho sprintf(""%%e = %e"",$num1).""<br>""; // Scientific notation (lowercase)echo sprintf(""%%E = %E"",$num1).""<br>""; // Scientific notation (uppercase)echo sprintf(""%%u = %u"",$num1).""<br>""; // Unsigned decimal number (positive)\n echo sprintf(""%%u = %u"",$num2).""<br>""; // Unsigned decimal number (negative)\n echo sprintf(""%%f = %f"",$num1).""<br>""; // Floating-point number (local settings aware)echo sprintf(""%%F = %F"",$num1).""<br>""; // Floating-point number (not local sett aware)echo sprintf(""%%g = %g"",$num1).""<br>""; // Shorter of %e and %fecho sprintf(""%%G = %G"",$num1).""<br>""; // Shorter of %E and %fecho sprintf(""%%o = %o"",$num1).""<br>""; // Octal number\n echo sprintf(""%%s = %s"",$num1).""<br>""; // Stringecho sprintf(""%%x = %x"",$num1).""<br>""; // Hexadecimal number (lowercase)echo sprintf(""%%X = %X"",$num1).""<br>""; // Hexadecimal number (uppercase)echo sprintf(""%%+d = %+d"",$num1).""<br>""; // Sign specifier (positive)echo sprintf(""%%+d = %+d"",$num2).""<br>""; // Sign specifier (negative)?> &&&&&& \n<?php$str1 = ""Hello"";$str2 = ""Hello world!"";echo vsprintf(""[%s]"",array($str1)).""<br>"";\n echo vsprintf(""[%8s]"",array($str1)).""<br>"";echo vsprintf(""[%-8s]"",array($str1)).""<br>"";\n echo vsprintf(""[%08s]"",array($str1)).""<br>""; echo vsprintf(""[%\'*8s]"",array($str1)).""<br>"";\n echo vsprintf(""[%8.8s]"",array($str2)).""<br>""; ?>', '', '', '']",[''],"['Parameter|||Description|||&&&format|||Required. Specifies the string and how to format the variables in it.Possible format values:\n\n%% - Returns a percent sign\n%b - Binary number\n%c - The character according to the ASCII value\n%d - Signed decimal number (negative, zero or positive)\n%e - Scientific notation using a lowercase (e.g. 1.2e+2)\n%E - Scientific notation using a uppercase (e.g. 1.2E+2)\n%u - Unsigned decimal number (equal to or greather than zero)\n%f - Floating-point number (local settings aware)\n%F - Floating-point number (not local settings aware)\n%g - shorter of %e and %f\n%G - shorter of %E and %f\n%o - Octal number\n%s - String\n%x - Hexadecimal number (lowercase letters)\n%X - Hexadecimal number (uppercase letters)\n\nAdditional format values. These are placed between the % and the letter (example %.2f):\n\n+ (Forces both + and - in front of numbers. By default, only negative numbers are marked)\n\' (Specifies what to use as padding. Default is space. Must be used  together with the width specifier.  Example: %\'x20s (this uses ""x"" as padding)\n- (Left-justifies the variable value)\n[0-9] (Specifies the minimum width held of to the variable value)\n.[0-9] (Specifies the number of decimal digits or maximum string length)\n\nNote: If multiple additional format values are used, they must be in the same order as above.|||&&&argarray|||Required. An array with arguments to be inserted at the % signs in the format string|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||wordwrap(),https://www.w3schools.com/php/func_string_wordwrap.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The wordwrap() function wraps a string into new lines when it reaches a specific length.Note: This function may leave white spaces at the beginning of a line.', '', '', '', '']","['\n<?php\n$str = ""An example of a long word is: Supercalifragulistic"";\necho wordwrap($str,15,""<br>\\n"");\n?>', '\n<?php\n$str = ""An example of a long word is: Supercalifragulistic"";\necho wordwrap($str,15,""<br>\\n"",TRUE);\n?> &&&&&& \n <?php\n$str = ""An example of a long word is: Supercalifragulistic"";\necho wordwrap($str,15);\n?>', '\n <!DOCTYPE html><html>\n<body>\nAn example of a\nlong word is:\nSupercalifragulistic\n</body>\n</html>\n', '\nAn example of a long word is: Supercalifragulistic ', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the string to break up into lines|||&&&width|||Optional. Specifies the maximum line width. Default is 75|||&&&break|||Optional. Specifies the characters to use as break. Default is ""\\n""|||&&&cut|||\n Optional. Specifies whether words longer than the specified width should be wrapped:\n \nFALSE - Default. No-wrap\nTRUE - Wrap\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&Changelog:|||&&&']",[]
php||Variable Handling,https://www.w3schools.com/php/php_ref_variable_handling.asp,,['PHP Variable Handling Functions'],['The PHP variable handling functions are part of the PHP core. No installation is required to use these functions.'],[''],[''],"['Function|||Description|||&&&boolval()|||Returns the boolean value of a variable|||&&&debug_zval_dump()|||Dumps a string representation of an internal zend value to output|||&&&doubleval()|||Alias of floatval()|||&&&empty()|||Checks whether a variable is empty|||&&&floatval()|||Returns the float value of a variable|||&&&get_defined_vars()|||Returns all defined variables, as an array|||&&&get_resource_type()|||Returns the type of a resource|||&&&gettype()|||Returns the type of a variable|||&&&intval()|||Returns the integer value of a variable|||&&&is_array()|||Checks whether a variable is an array|||&&&is_bool()|||Checks whether a variable is a boolean|||&&&is_callable()|||Checks whether the contents of a variable can be called as a function|||&&&is_countable()|||Checks whether the contents of a variable is a countable value|||&&&is_double()|||Alias of is_float()|||&&&is_float()|||Checks whether a variable is of type float|||&&&is_int()|||Checks whether a variable is of type integer|||&&&is_integer()|||Alias of is_int()|||&&&is_iterable()|||Checks whether the contents of a variable is an iterable value|||&&&is_long()|||Alias of is_int()|||&&&is_null()|||Checks whether a variable is NULL|||&&&is_numeric()|||Checks whether a variable is a number or a numeric string|||&&&is_object()|||Checks whether a variable is an object|||&&&is_real()|||Alias of is_float()|||&&&is_resource()|||Checks whether a variable is a resource|||&&&is_scalar()|||Checks whether a variable is a scalar|||&&&is_string()|||Checks whether a variable is of type string|||&&&isset()|||Checks whether a variable is set (declared and not NULL)|||&&&print_r()|||Prints the information about a variable in a human-readable way|||&&&serialize()|||Converts a storable representation of a value|||&&&settype()|||Converts a variable to a specific type|||&&&strval()|||Returns the string value of a variable|||&&&unserialize()|||Converts serialized data back into actual data|||&&&unset()|||Unsets a variable|||&&&var_dump()|||Dumps information about one or more variables|||&&&var_export()|||Returns structured information (valid PHP code) about a variable|||&&&']",[]
php||boolval(),https://www.w3schools.com/php/func_var_boolval.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The boolval() function returns the boolean value of a variable.', '', '', '']","['\n<?php\n  echo ""0: "" .(boolval(0) ? \'true\' : \'false\') . ""<br>"";echo ""4: "" .(boolval(42) \n  ? \'true\' : \'false\') . ""<br>"";echo \'"""": \' .(boolval("""") ? \'true\' : \'false\') \n  . ""<br>"";echo \'""Hello"": \' .(boolval(""Hello"") ? \'true\' : \'false\') . ""<br>"";\n  echo \'""0"": \' .(boolval(""0"") ? \'true\' : \'false\') . ""<br>"";echo ""[3, 5]: "" \n  .(boolval([3, 5]) ? \'true\' : \'false\') . ""<br>"";echo ""[]: "" .(boolval([]) ? \n  \'true\' : \'false\') . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check. Must be a scalar type|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||debug_zval_dump(),https://www.w3schools.com/php/func_var_debug_zval_dump.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The debug_zval_dump() function dumps a string representation of an internal zend value to output.', '', '', '']","['\n<?php\n  $a = ""Hello \n  world!"";echo debug_zval_dump($a) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to be evaluated|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||doubleval(),https://www.w3schools.com/php/func_var_doubleval.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The doubleval() function returns the float value of a variable.This function is an alias of floatval().', '', '', '']","['\n<?php\n  $a = ""1234.56789"";echo doubleval($a) . ""<br>"";$b = \n  ""1234.56789Hello"";echo doubleval($b) . ""<br>"";$c = \n  ""Hello1234.56789"";echo doubleval($c) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check. Must be a scalar type|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_countable(),https://www.w3schools.com/php/func_var_is_countable.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_countable() function checks whether the contents of a variable is a countable value or not.This function returns true (1) if the variable is countable, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = ""Hello"";echo ""a is "" . is_countable($a) . ""<br>"";\n  $b = array(""red"", ""green"", ""blue"");echo ""b is \n  "" . is_countable($b) . ""<br>"";$c = \n  array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");echo ""c is "" . is_countable($c) . \n  ""<br>"";$d = [1, 2, 3];echo ""d is "" . is_countable($d) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||empty(),https://www.w3schools.com/php/func_var_empty.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The empty() function checks whether a variable is empty or not.This function returns false if the variable exists and is not empty, otherwise it returns \ntrue.The following values evaluates to empty:', '', '', '']","['\n<?php\n  $a = 0;// True because $a is emptyif (empty($a)) {\xa0 echo \n  ""Variable \'a\' is empty.<br>"";}// True because $a is setif (isset($a)) \n  {\xa0 echo ""Variable \'a\' is set"";}?>\n', '', '', '']","['Definition and Usage###&&&|||0|||0.0|||""0""|||""""|||NULL|||FALSE|||array()|||']","['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||floatval(),https://www.w3schools.com/php/func_var_floatval.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The floatval() function returns the float value of a variable.', '', '', '']","['\n<?php\n  $a = ""1234.56789"";echo floatval($a) . ""<br>"";$b = \n  ""1234.56789Hello"";echo floatval($b) . ""<br>"";$c = \n  ""Hello1234.56789"";echo floatval($c) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check. Must be a scalar type|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||get_defined_vars(),https://www.w3schools.com/php/func_var_get_defined_vars.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The get_defined_vars() function returns all defined variables, as an array.', 'None.', '', '']","['\n<?php\n  $a = array(""red"", ""green"", ""blue"");$arr = get_defined_vars();\n  print_r($arr[""a""]);?>\n', '', '', '']",[''],['Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&'],[]
php||get_resource_type(),https://www.w3schools.com/php/func_var_get_resource_type.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The get_resource_type() function returns the type of a resource.', '', '', '']","['\n<?php\n  $file = fopen(""test.txt"",""r"");echo get_resource_type($file);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&resource|||Required. Specifies the resource to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||gettype(),https://www.w3schools.com/php/func_var_gettype.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The gettype() function returns the type of a variable.', '', '', '']","['\n<?php\n  $a = 3;echo gettype($a) . ""<br>"";$b = 3.2;echo \n  gettype($b) . ""<br>"";\n$c = ""Hello"";echo gettype($c) . ""<br>"";$d = array();echo \n  gettype($d) . ""<br>"";$e = array(""red"", ""green"", ""blue"");echo \n  gettype($e) \n  . ""<br>"";$f = NULL;echo gettype($f) . ""<br>"";\n$g = false;echo gettype($g) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||intval(),https://www.w3schools.com/php/func_var_intval.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The intval() function returns the integer value of a variable.', '', '', '']","['\n<?php\n  $a = 32;echo intval($a) . ""<br>"";$b = 3.2;echo intval($b) . ""<br>"";\n$c = ""32.5"";echo intval($c) . ""<br>"";$d = array();echo \n  intval($d) . ""<br>"";$e = array(""red"", ""green"", ""blue"");echo intval($e) \n  . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&base|||Optional. Specifies the base to use for the conversion. Only has effect \n    if variable is a string. Default base is \n    10|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||is_array(),https://www.w3schools.com/php/func_var_is_array.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_array() function checks whether a variable is an array or not.This function returns true (1) if the variable is an array, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = ""Hello"";echo ""a is "" . is_array($a) . ""<br>"";\n  $b = array(""red"", ""green"", ""blue"");echo ""b is \n  "" . is_array($b) . ""<br>"";$c = \n  array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");echo ""c is "" . is_array($c) . \n  ""<br>"";$d = ""red, green, blue"";echo ""d is "" . is_array($d) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_bool(),https://www.w3schools.com/php/func_var_is_bool.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_bool() function checks whether a variable is a boolean or not.This function returns true (1) if the variable is a boolean, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = 1;echo ""a is "" . is_bool($a) . ""<br>"";\n  $b = 0;echo ""b is \n  "" . is_bool($b) . ""<br>"";$c = \n  true;echo ""c is "" . is_bool($c) . \n  ""<br>"";$d = false;echo ""d is "" . is_bool($d) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_callable(),https://www.w3schools.com/php/func_var_is_callable.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_callable() function checks whether the contents of a variable can be called as a function or not.This function returns true (1) if the variable is callable, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  function test1(){}echo ""test1 is callable: "" . is_callable(""test1"");\n  echo ""<br>"";echo ""test2 is callable: "" . is_callable(""test2"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&syntax_only|||Optional. If set to TRUE, the function only verifies if variable \n    is a function or method. It will reject variables that are not strings, or \n    arrays without a valid structure to be used as a callback. Default is false|||&&&name|||Optional. Returns a ""callable name"" (only for classes)|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_double(),https://www.w3schools.com/php/func_var_is_double.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_double() function checks whether a variable is of type float or not.This function is an alias of is_float().', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_double($a) . ""<br>"";$b = 0;echo ""b is \n  "" . is_double($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_double($c) . \n  ""<br>"";$d = ""32"";echo ""d is "" . is_double($d) . ""<br>"";$e = \n  true;echo ""e is "" . is_double($e) . ""<br>"";$f = ""null"";echo ""f \n  is "" . is_double($f) . ""<br>"";$g = 1.e3;echo ""g is "" . is_double($g) \n  . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_float(),https://www.w3schools.com/php/func_var_is_float.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_float() function checks whether a variable is of type float or not.This function returns true (1) if the variable is of type float, otherwise it returns false.', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_float($a) . ""<br>"";$b = 0;echo ""b is \n  "" . is_float($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_float($c) . \n  ""<br>"";$d = ""32"";echo ""d is "" . is_float($d) . ""<br>"";$e = \n  true;echo ""e is "" . is_float($e) . ""<br>"";$f = ""null"";echo ""f \n  is "" . is_float($f) . ""<br>"";$g = 1.e3;echo ""g is "" . is_float($g) \n  . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_int(),https://www.w3schools.com/php/func_var_is_int.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_int() function checks whether a variable is of type integer or not.This function returns true (1) if the variable is of type integer, otherwise it returns false.', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_int($a) . ""<br>"";$b = 0;echo ""b is "" \n  . is_int($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_int($c) . ""<br>"";\n$d = ""32"";echo ""d is "" . is_int($d) . ""<br>"";$e = true;\n  echo ""e is "" . is_int($e) . ""<br>"";$f = ""null"";echo ""f is "" . \n  is_int($f) . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_integer(),https://www.w3schools.com/php/func_var_is_integer.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_integer() function checks whether a variable is of type integer or not.This function is an alias of is_int().', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_integer($a) . ""<br>"";$b = 0;echo ""b is "" \n  . is_integer($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_integer($c) . ""<br>"";\n$d = ""32"";echo ""d is "" . is_integer($d) . ""<br>"";$e = true;\n  echo ""e is "" . is_integer($e) . ""<br>"";$f = ""null"";echo ""f is "" . \n  is_integer($f) . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_iterable(),https://www.w3schools.com/php/func_var_is_iterable.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_iterable() function checks whether the contents of a variable is an \niterable value or not.This function returns true (1) if the variable is iterable, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = ""Hello"";echo ""a is "" . is_iterable($a) . ""<br>"";\n  $b = array(""red"", ""green"", ""blue"");echo ""b is \n  "" . is_iterable($b) . ""<br>"";$c = \n  array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");echo ""c is "" . is_iterable($c) . \n  ""<br>"";$d = [1, 2, 3];echo ""d is "" . is_iterable($d) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_long(),https://www.w3schools.com/php/func_var_is_long.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_long() function checks whether a variable is of type integer or not.This function is an alias of is_int().', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_long($a) . ""<br>"";$b = 0;echo ""b is "" \n  . is_long($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_long($c) . ""<br>"";\n$d = ""32"";echo ""d is "" . is_long($d) . ""<br>"";$e = true;\n  echo ""e is "" . is_long($e) . ""<br>"";$f = ""null"";echo ""f is "" . \n  is_long($f) . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_null(),https://www.w3schools.com/php/func_var_is_null.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_null() function checks whether a variable is NULL or not.This function returns true (1) if the variable is NULL, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = 0;echo ""a is "" . is_null($a) . ""<br>"";$b = null;echo ""b \n  is "" . is_null($b) . ""<br>"";$c = ""null"";echo ""c is "" . is_null($c) \n  . ""<br>"";$d = NULL;echo ""d is "" . is_null($d) . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_numeric(),https://www.w3schools.com/php/func_var_is_numeric.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_numeric() function checks whether a variable is a number or a numeric \nstring.This function returns true (1) if the variable is a number or a numeric \nstring, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_numeric($a) . ""<br>"";$b = 0;echo ""b \n  is "" . is_numeric($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_numeric($c) \n  . ""<br>"";$d = ""32"";echo ""d is "" . is_numeric($d) . ""<br>"";\n  $e = true;echo ""e is "" . is_numeric($e) . ""<br>"";$f = null;\n  echo ""f is "" . is_numeric($f) . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_object(),https://www.w3schools.com/php/func_var_is_object.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_object() function checks whether a variable is an object.This function returns true (1) if the variable is an object, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  function get_cars($obj) {\xa0 if (!is_object($obj)) {\xa0\xa0\xa0 \n  return false;\xa0 }return $obj->cars;}$obj = new \n  stdClass();$obj->cars = array(""Volvo"", ""BMW"", ""Audi"");var_dump(get_cars(null));\n  echo ""<br>"";var_dump(get_cars($obj));?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||is_real(),https://www.w3schools.com/php/func_var_is_real.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_real() function checks whether a variable is of type float or not.This function is an alias of is_float().', '', '', '']","['\n<?php\n  $a = 32;echo ""a is "" . is_real($a) . ""<br>"";$b = 0;echo ""b is \n  "" . is_real($b) . ""<br>"";$c = 32.5;echo ""c is "" . is_real($c) . \n  ""<br>"";$d = ""32"";echo ""d is "" . is_real($d) . ""<br>"";$e = \n  true;echo ""e is "" . is_real($e) . ""<br>"";$f = ""null"";echo ""f \n  is "" . is_real($f) . ""<br>"";$g = 1.e3;echo ""g is "" . is_real($g) \n  . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_resource(),https://www.w3schools.com/php/func_var_is_resource.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_resource() function checks whether a variable is a resource or not.Note: The is_resource() function will return FALSE if the \nresource has been closed.This function returns true (1) if the variable is a resource, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $file = fopen(""test.txt"",""r"");if (is_resource($file)) {\xa0 echo \n  ""File is open"";} else {\xa0 echo ""Error open file"";}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_scalar(),https://www.w3schools.com/php/func_var_is_scalar.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_scalar() function checks whether a variable is a scalar or not.This function returns true (1) if the variable is a scalar, otherwise it returns false/nothing.Integers, floats, strings, or boolean can be scalar variables. Arrays, \nobjects, and resources are not.', '', '', '']","['\n<?php\n  $a = ""Hello"";echo ""a is "" . is_scalar($a) . ""<br>"";$b = 0;echo ""b is \n  "" . is_scalar($b) . ""<br>"";$c = 32;echo ""c is "" . is_scalar($c) . \n  ""<br>"";$d = NULL;echo ""d is "" . is_scalar($d) . ""<br>"";\n$e = array(""red"", ""green"", ""blue"");echo ""e is "" . is_scalar($e) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||is_string(),https://www.w3schools.com/php/func_var_is_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The is_string() function checks whether a variable is of type string or not.This function returns true (1) if the variable is of type string, otherwise it returns false/nothing.', '', '', '']","['\n<?php\n  $a = ""Hello"";echo ""a is "" . is_string($a) . ""<br>"";$b = 0;echo ""b is \n  "" . is_string($b) . ""<br>"";$c = 32;echo ""c is "" . is_string($c) . \n  ""<br>"";$d = ""32"";echo ""d is "" . is_string($d) . ""<br>"";$e = \n  true;echo ""e is "" . is_string($e) . ""<br>"";$f = ""null"";echo ""f \n  is "" . is_string($f) . ""<br>"";$g = """";echo ""g is "" . is_string($g) \n  . ""<br>"";\n ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||isset(),https://www.w3schools.com/php/func_var_isset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The isset() function checks whether a variable is set, which means that it \nhas to be declared and is not NULL.This function returns true if the variable exists and is not NULL, otherwise it returns \nfalse.Note: If multiple variables are supplied, then this function \nwill return true only if all of the variables are set. Tip: A variable can be unset with the unset() function.', '', '', '']","['\n<?php\n  $a = 0;// True because $a is setif (isset($a)) {\xa0 echo \n  ""Variable \'a\' is set.<br>"";}$b = null;// False because $b is \n  NULLif (isset($b)) {\xa0 echo ""Variable \'b\' is set."";}?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&...|||Optional. Another variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||print_r(),https://www.w3schools.com/php/func_var_print_r.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The print_r() function prints the information about a variable in a more \nhuman-readable way.', '', '', '']","['\n<?php\n  $a = array(""red"", ""green"", ""blue"");print_r($a);echo ""<br>"";\n$b = array(""Peter""=>""35"", ""Ben""=>""37"", ""Joe""=>""43"");print_r($b);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to return information about\xa0 |||&&&return|||Optional. When set to true, this function will return the information \n    (not print it). Default is false|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||serialize(),https://www.w3schools.com/php/func_var_serialize.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The serialize() function converts a storable representation of a value. To serialize data means to convert a value to a sequence of bits, so that it \ncan be stored in a file, a memory buffer, or transmitted across a network. ', '', '', '']","['\n<?php\n  $data = serialize(array(""Red"", ""Green"", ""Blue""));echo $data;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. Specifies the value to be serialized|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||settype(),https://www.w3schools.com/php/func_var_settype.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The settype() function converts a variable to a specific type. ', '', '', '']","['\n<?php\n  $a = ""32""; // string settype($a, ""integer""); // $a is now integer$b = 32; \n  // integer settype($b, ""string""); // $b is now string$c = true; // \n  boolean settype($c, ""integer""); // $c is now integer (1)?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to convert|||&&&type|||Required. Specifies the type to convert variable to. The \n    possible types are: boolean, bool, integer, int, float, double, string, \n    array, object, null\xa0 |||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||strval(),https://www.w3schools.com/php/func_var_strval.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The strval() function returns the string value of a variable.', '', '', '']","['\n<?php\n  $a = ""Hello"";echo strval($a) . ""<br>"";$b = ""1234.56789"";echo \n  strval($b) . ""<br>"";$c = \n  ""1234.56789Hello"";echo strval($c) . ""<br>"";$d = \n  ""Hello1234.56789"";echo strval($d) . ""<br>"";\n$e = \n  1234;echo strval($e) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||unserialize(),https://www.w3schools.com/php/func_var_unserialize.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The unserialize() function converts serialized data back into actual data. ', '', '', '']","['\n<?php\n  $data = serialize(array(""Red"", ""Green"", ""Blue""));echo $data \n  . ""<br>"";$test = unserialize($data);var_dump($test);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the serialized string|||&&&options|||Optional. Specifies options to be provided to the function, as an \n    associative array. Can be either an array of class names which should be \n    accepted, false to accept no classes, or true to accept all classes. True is \n    default.|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||unset(),https://www.w3schools.com/php/func_var_unset.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The unset() function unsets a variable.', '', '', '']","['\n<?php\n  $a = ""Hello world!"";echo \n  ""The value of variable \'a\' before unset: "" . $a . ""<br>"";\n  unset($a);echo \n  ""The value of variable \'a\' after unset: "" . $a;?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to unset|||&&&...|||Optional. Another variable to unset|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||var_dump(),https://www.w3schools.com/php/func_var_var_dump.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The var_dump() function dumps information about one or more variables. The \ninformation holds type and value of the variable(s).', '', '', '']","['\n<?php\n  $a = 32;echo var_dump($a) . ""<br>"";$b = ""Hello \n  world!"";echo var_dump($b) . ""<br>"";$c = 32.5;echo \n  var_dump($c) . ""<br>"";$d = array(""red"", ""green"", \n  ""blue"");echo var_dump($d) . ""<br>"";\n  $e = array(32, ""Hello world!"", 32.5, array(""red"", ""green"", ""blue""));echo \n  var_dump($e) . ""<br>"";// Dump two variablesecho \n  var_dump($a, $b) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&var1, var2, ...|||Required. Specifies the variable(s) to dump information from|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||var_export(),https://www.w3schools.com/php/func_var_var_export.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The var_export() function outputs or returns structured information about a variable. This function works similar to var_dump(), \nexcept that the returned value for this function is valid PHP code.', '', '', '']","['\n<?php\n  $a = 32;echo var_export($a) . ""<br>"";$b = ""Hello \n  world!"";echo var_export($b) . ""<br>"";$c = 32.5;echo \n  var_export($c) . ""<br>"";$d = array(""red"", ""green"", \n  ""blue"");echo var_export($d) . ""<br>"";\n  $e = array(32, ""Hello world!"", 32.5, array(""red"", ""green"", ""blue""));\n  echo var_export($e) . ""<br>"";?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&variable|||Required. Specifies the variable to check|||&&&return|||Optional. If set to true, it returns the variable representation instead \n    of outputting it|||&&&', 'Return Value:|||&&&Return Type:|||&&&PHP Version:|||&&&']",[]
php||XML Parser,https://www.w3schools.com/php/php_ref_xml.asp,,"['PHP XML Parser Introduction', 'Installation', 'PHP XML Parser Functions', 'PHP XML Parser Constants']","['The XML functions lets you parse, but not validate, XML documents.XML is a data format for standardized structured document exchange. More \ninformation on XML can be found in our \nXML Tutorial.This extension uses the Expat XML parser.Expat is an event-based parser, it views an XML document as a series of \nevents. When an event occurs, it calls a specified function to handle it.Expat is a non-validating parser, and ignores any DTDs linked to a document. \nHowever, if the document is not well formed it will end with an error message.Because it is an event-based, non validating parser, Expat is fast and well \nsuited for web applications.The XML parser functions lets you create XML parsers and define handlers for XML \nevents.', 'The XML functions are part of the PHP core. There is no installation needed to use these functions.', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&utf8_decode()|||Decodes an UTF-8 string to ISO-8859-1|||&&&utf8_encode()|||Encodes an ISO-8859-1 string to UTF-8|||&&&xml_error_string()|||Returns an error string from the XML parser|||&&&xml_get_current_byte_index()|||Returns the current byte index from the XML parser|||&&&xml_get_current_column_number()|||Returns the current column number from the XML parser|||&&&xml_get_current_line_number()|||Returns the current line number from the XML parser|||&&&xml_get_error_code()|||Returns an error code from the XML parser|||&&&xml_parse()|||Parses an XML document|||&&&xml_parse_into_struct()|||Parses XML data into an array|||&&&xml_parser_create_ns()|||Creates an XML parser with namespace support|||&&&xml_parser_create()|||Creates an XML parser|||&&&xml_parser_free()|||Frees an XML parser|||&&&xml_parser_get_option()|||Returns options from an XML parser|||&&&xml_parser_set_option()|||Sets options in an XML parser|||&&&xml_set_character_data_handler()|||Sets up the character data handler for the XML parser|||&&&xml_set_default_handler()|||Sets up the default data handler for the XML parser|||&&&xml_set_element_handler()|||Sets up start and end element handlers for the XML parser|||&&&xml_set_end_namespace_decl_handler()|||Sets up the end namespace declaration handler|||&&&xml_set_external_entity_ref_handler()|||Sets up the external entity reference handler for the XML parser |||&&&xml_set_notation_decl_handler()|||Sets up notation declaration handler for the XML parser|||&&&xml_set_object()|||Allows to use XML parser within an object|||&&&xml_set_processing_instruction_handler()|||Sets up processing instruction handler|||&&&xml_set_start_namespace_decl_handler()|||Sets up the start namespace declaration handler|||&&&xml_set_unparsed_entity_decl_handler()|||Sets handler function for unparsed entity declarations|||&&&', 'Constant|||&&&XML_ERROR_NONE (integer)|||&&&XML_ERROR_NO_MEMORY (integer)|||&&&XML_ERROR_SYNTAX (integer)|||&&&XML_ERROR_NO_ELEMENTS (integer)|||&&&XML_ERROR_INVALID_TOKEN (integer)|||&&&XML_ERROR_UNCLOSED_TOKEN (integer)|||&&&XML_ERROR_PARTIAL_CHAR (integer)|||&&&XML_ERROR_TAG_MISMATCH (integer)|||&&&XML_ERROR_DUPLICATE_ATTRIBUTE (integer)|||&&&XML_ERROR_JUNK_AFTER_DOC_ELEMENT (integer)|||&&&XML_ERROR_PARAM_ENTITY_REF (integer)|||&&&XML_ERROR_UNDEFINED_ENTITY (integer)|||&&&XML_ERROR_RECURSIVE_ENTITY_REF (integer)|||&&&XML_ERROR_ASYNC_ENTITY (integer)|||&&&XML_ERROR_BAD_CHAR_REF (integer)|||&&&XML_ERROR_BINARY_ENTITY_REF (integer)|||&&&XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF (integer)|||&&&XML_ERROR_MISPLACED_XML_PI (integer)|||&&&XML_ERROR_UNKNOWN_ENCODING (integer)|||&&&XML_ERROR_INCORRECT_ENCODING (integer)|||&&&XML_ERROR_UNCLOSED_CDATA_SECTION (integer)|||&&&XML_ERROR_EXTERNAL_ENTITY_HANDLING (integer)|||&&&XML_OPTION_CASE_FOLDING (integer)|||&&&XML_OPTION_TARGET_ENCODING (integer)|||&&&XML_OPTION_SKIP_TAGSTART (integer)|||&&&XML_OPTION_SKIP_WHITE (integer)|||&&&XML_SAX_IMPL (string)|||&&&']",[]
php||utf8_decode(),https://www.w3schools.com/php/func_xml_utf8_decode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The utf8_decode() function decodes a UTF-8 string to ISO-8859-1.This function decodes a string, previously encoded with the \nutf8_encode() function, back to ISO-8859-1.', '', '', '']","['\n<?php\n  $text = ""\\xE0"";echo utf8_encode($text) .""<br>"";echo \n  utf8_decode($text);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies a UTF-8 encoded string to decode|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||utf8_encode(),https://www.w3schools.com/php/func_xml_utf8_encode.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The utf8_encode() function encodes an ISO-8859-1 string to UTF-8.Unicode is a universal standard, and has been developed to describe all \npossible characters of all languages plus a lot of symbols with one unique \nnumber for each character/symbol. However, it is not always possible to transfer a Unicode character to another \ncomputer reliably. UTF-8 has been developed to transfer a Unicode character from \none computer to another.', '', '', '']","['\n<?php\n  $text = ""\\xE0"";echo utf8_encode($text);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. Specifies the ISO-8859-1 string to encode|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_error_string(),https://www.w3schools.com/php/func_xml_error_string.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_error_string() function returns the XML parser error description.', '', '', '']","['\n<?php\n// Invalid xml file\n$xmlfile = \'test.xml\';\n$xmlparser = xml_parser_create();\n\n// Open the file and read data\n$fp = fopen($xmlfile, \'r\');\nwhile ($xmldata = fread($fp, 4096)) {\n\xa0\xa0// parse the data chunk\n\xa0\xa0if (!xml_parse($xmlparser,$xmldata,feof($fp))) {\n\xa0\xa0\xa0\xa0die( print ""ERROR: ""\n\xa0\xa0\xa0\xa0. xml_error_string(xml_get_error_code($xmlparser))\n\xa0\xa0\xa0\xa0. ""<br>Line: ""\n\xa0\xa0\xa0\xa0. xml_get_current_line_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Column: ""\n\xa0\xa0\xa0\xa0. xml_get_current_column_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>"");\n\xa0\xa0}\n  }\nxml_parser_free($xmlparser);\n?>\n', '\nERROR: Mismatched tag\nLine: 5\nColumn: 41\n\n', '', '']",[''],"['Parameter|||Description|||&&&code|||Required. Specifies an error code from the xml_get_error_code() function|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_get_current_byte_index(),https://www.w3schools.com/php/func_xml_get_current_byte_index.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_get_current_byte_index() function returns the byte index for an XML parser.', '', '', '']","['\n<?php\n// Invalid xml file\n$xmlfile = \'test.xml\';\n$xmlparser = xml_parser_create();\n\n// Open the file and read data\n$fp = fopen($xmlfile, \'r\');\nwhile ($xmldata = fread($fp, 4096)) {\n\xa0\xa0// parse the data chunk\n\xa0\xa0if (!xml_parse($xmlparser,$xmldata,feof($fp))) {\n\xa0\xa0\xa0\xa0die( print ""ERROR: ""\n\xa0\xa0\xa0\xa0. xml_error_string(xml_get_error_code($xmlparser))\n\xa0\xa0\xa0\xa0. ""<br>Line: ""\n\xa0\xa0\xa0\xa0. xml_get_current_line_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Column: ""\n\xa0\xa0\xa0\xa0. xml_get_current_column_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Byte Index: ""\n\xa0\xa0\xa0\xa0. xml_get_current_byte_index($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>"");\n\xa0\xa0}\n  }\nxml_parser_free($xmlparser);\n?>\n', '\nERROR: Mismatched tag\nLine: 5\nColumn: 41Byte Index: 72\n', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_get_current_column_number(),https://www.w3schools.com/php/func_xml_get_current_column_number.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_get_current_column_number() function returns the current column number for an XML parser.', '', '', '']","['\n<?php\n// Invalid xml file\n$xmlfile = \'test.xml\';\n$xmlparser = xml_parser_create();\n\n// Open the file and read data\n$fp = fopen($xmlfile, \'r\');\nwhile ($xmldata = fread($fp, 4096)) {\n\xa0\xa0// parse the data chunk\n\xa0\xa0if (!xml_parse($xmlparser,$xmldata,feof($fp))) {\n\xa0\xa0\xa0\xa0die( print ""ERROR: ""\n\xa0\xa0\xa0\xa0. xml_error_string(xml_get_error_code($xmlparser))\n\xa0\xa0\xa0\xa0. ""<br>Line: ""\n\xa0\xa0\xa0\xa0. xml_get_current_line_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Column: ""\n\xa0\xa0\xa0\xa0. xml_get_current_column_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>"");\n\xa0\xa0}\n  }\nxml_parser_free($xmlparser);\n?>\n', '\nERROR: Mismatched tag\nLine: 5\nColumn: 41\n\n', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_get_current_line_number(),https://www.w3schools.com/php/func_xml_get_current_line_number.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_get_current_line_number() function returns the current line number for an XML parser.', '', '', '']","['\n<?php\n// Invalid xml file\n$xmlfile = \'test.xml\';\n$xmlparser = xml_parser_create();\n\n// Open the file and read data\n$fp = fopen($xmlfile, \'r\');\nwhile ($xmldata = fread($fp, 4096)) {\n\xa0\xa0// parse the data chunk\n\xa0\xa0if (!xml_parse($xmlparser,$xmldata,feof($fp))) {\n\xa0\xa0\xa0\xa0die( print ""ERROR: ""\n\xa0\xa0\xa0\xa0. xml_error_string(xml_get_error_code($xmlparser))\n\xa0\xa0\xa0\xa0. ""<br>Line: ""\n\xa0\xa0\xa0\xa0. xml_get_current_line_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Column: ""\n\xa0\xa0\xa0\xa0. xml_get_current_column_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>"");\n\xa0\xa0}\n  }\nxml_parser_free($xmlparser);\n?>\n', '\nERROR: Mismatched tag\nLine: 5\nColumn: 41\n\n', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_get_error_code(),https://www.w3schools.com/php/func_xml_get_error_code.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_get_error_code() function returns the XML parser error code.', '', '', '']","['\n<?php\n// Invalid xml file\n$xmlfile = \'test.xml\';\n$xmlparser = xml_parser_create();\n\n// Open the file and read data\n$fp = fopen($xmlfile, \'r\');\nwhile ($xmldata = fread($fp, 4096)) {\n\xa0\xa0// parse the data chunk\n\xa0\xa0if (!xml_parse($xmlparser,$xmldata,feof($fp))) {\n\xa0\xa0\xa0\xa0die( print ""ERROR: ""\n\xa0\xa0\xa0\xa0. xml_get_error_code($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Line: ""\n\xa0\xa0\xa0\xa0. xml_get_current_line_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>Column: ""\n\xa0\xa0\xa0\xa0. xml_get_current_column_number($xmlparser)\n\xa0\xa0\xa0\xa0. ""<br>"");\n\xa0\xa0}\n  }\nxml_parser_free($xmlparser);\n?>\n', '\nERROR: 76\nLine: 5\nColumn: 41\n\n', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_parse(),https://www.w3schools.com/php/func_xml_parse.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The xml_parse() function parses an XML document.Tip: To create an XML parser, use the \nxml_parser_create() function.', '', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction char($parser,$data) {echo $data;}\n  xml_set_character_data_handler($parser,""char"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}xml_parser_free($parser);fclose($fp);\n?>\n', '\n<?php\n  $parser=xml_parser_create();function start($parser,$element_name,$element_attrs) \n  {switch($element_name) {case ""NOTE"":echo ""NOTE<br>"";break;\n  case ""TO"":echo ""To: "";break;case ""FROM"":echo ""From: "";\n  break;case ""HEADING"":echo ""Heading: "";break;case ""BODY"":\n  echo ""Message: "";}}function stop($parser,$element_name) {\n  echo ""<br>"";}function char($parser,$data) {echo $data;}\nxml_set_element_handler($parser,""start"",""stop"");\n  xml_set_character_data_handler($parser,""char"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {xml_parse($parser,$data,feof($fp)) or\n  die (sprintf(""XML Error: %s at line %d"", xml_error_string(xml_get_error_code($parser)),\n  xml_get_current_line_number($parser)));}xml_parser_free($parser);\n  fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&data|||Required. Specifies the data to parse|||&&&end|||Optional. If set to TRUE, the data in the data parameter is the last piece of data sent in this parse.\n    Note: Entity errors are reported at the end of the parse - and will only show if the \n    end parameter is TRUE|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_parse_into_struct(),https://www.w3schools.com/php/func_xml_parse_into_struct.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_parse_into_struct() function parses XML data into an array.This function parses the XML data into 2 arrays:', '', '', '']","['\n  <?php$xmlparser = xml_parser_create();$fp = fopen(""note.xml"", \n  ""r"");$xmldata = fread($fp, 4096);// Parse XML data into an array\n  xml_parse_into_struct($xmlparser,$xmldata,$values);xml_parser_free($xmlparser);\n  print_r($values);fclose($fp);\n?>\n', '', '', '']",['Definition and Usage###&&&|||Value array - containing the data from the parsed XML|||Index array - containing pointers to the location of the values in the Value array|||'],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&data|||Required. Specifies the XML data to parse|||&&&values|||Required. Specifies an array with the values of the XML data|||&&&index|||Optional. Specifies an array with pointers to the location of the values \n    in values|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_parser_create_ns(),https://www.w3schools.com/php/func_xml_parser_create_ns.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_parser_create_ns() function creates an XML parser with namespace \nsupport.Tip: To free the xml parser, use the \nxml_parser_free() function.Tip: To create an XML parser without namespace support, use the\nxml_parser_create() function instead.', '', '', '']","['\n  <?php// Create an XML parser with namespace support$parser=xml_parser_create_ns();\nxml_parser_free($parser);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&encoding|||Optional. Specifies the character encoding for input/output in PHP 4. \n    From PHP 5 it specifies the character encoding only for output. In PHP 5.0.0 and 5.0.1, \n    the default output charset is ISO-8859-1. From PHP 5.0.2, the default \n    output charset is UTF-8. The possible values are ISO-8859-1, UTF-8 and \n    US-ASCII|||&&&separator|||Optional. Specifies the output separator for tag name and namespace. \n    Default is "" : ""|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_parser_create(),https://www.w3schools.com/php/func_xml_parser_create.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_parser_create() function creates an XML parser.Tip: To free the xml parser, use the \nxml_parser_free() function.Tip: To create an XML parser with namespace support, use the \nxml_parser_create_ns() function instead.', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction char($parser,$data) {echo $data;}\n  xml_set_character_data_handler($parser,""char"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}xml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&encoding|||Optional. Specifies the character encoding for input/output in PHP 4. \n    From PHP 5 it specifies the character encoding only for output. In PHP 5.0.0 and 5.0.1, \n    the default output charset is ISO-8859-1. From PHP 5.0.2, the default \n    output charset is UTF-8|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_parser_free(),https://www.w3schools.com/php/func_xml_parser_free.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_parser_free() function frees an XML parser.Tip: To create an XML parser use the \nxml_parser_create() function.', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction char($parser,$data) {echo $data;}\n  xml_set_character_data_handler($parser,""char"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}// Free XML parserxml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to free|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_parser_get_option(),https://www.w3schools.com/php/func_xml_parser_get_option.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_parser_get_option() function gets options from an XML parser.', '', '', '']","['\n  <?php$parser=xml_parser_create();\necho ""XML_OPTION_CASE_FOLDING: "" . xml_parser_get_option($parser, XML_OPTION_CASE_FOLDING) \n  . <br>;echo ""XML_OPTION_TARGET_ENCODING: "" . xml_parser_get_option($parser, XML_OPTION_TARGET_ENCODING);\n  xml_parser_free($parser);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&option|||Required. Specifies the option to get. Possible values:\nXML_OPTION_CASE_FOLDING - Specifies if case-folding is enabled.  Can be 1 (TRUE) or 0 (FALSE). \n    1 is default\nXML_OPTION_TARGET_ENCODING - Specifies the target encoding  in this XML parser. \n    Set to the same as the xml_parser_create() \n    function by default (ISO-8859-1, US-ASCII or UTF-8)\nXML_OPTION_SKIP_TAGSTART - Specifies how many characters that is \n      skipped in the beginning of a tag name\nXML_OPTION_SKIP_WHITE - Specifies whether values consisting of \n      whitespace characters are skipped. Can be 1 (TRUE) or 0 (FALSE)\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&PHP Changelog:|||&&&']",[]
php||xml_parser_set_option(),https://www.w3schools.com/php/func_xml_parser_set_option.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_parser_set_option() function sets options in an XML parser.', '', '', '']","['\n  <?php$parser=xml_parser_create();\nxml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, 0);\nxml_parser_free($parser);?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&option|||Required. Specifies the option to set. Possible values:\nXML_OPTION_CASE_FOLDING - Specifies if case-folding is enabled.  Can be 1 (TRUE) or 0 (FALSE). \n    1 is default\nXML_OPTION_SKIP_TAGSTART - Specifies how many characters should be  skipped in the beginning of a tag name\nXML_OPTION_SKIP_WHITE - Specifies whether to skip values consisting  of whitespace characters. Can be 1 (TRUE) or 0 (FALSE)\nXML_OPTION_TARGET_ENCODING - Specifies the target encoding  in this XML parser. \n    Set to the same as the xml_parser_create() \n    function by default (ISO-8859-1, US-ASCII or UTF-8)\n\n|||&&&value|||Required. Specifies options new value|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_character_data_handler(),https://www.w3schools.com/php/func_xml_set_character_data_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_character_data_handler() function sets the character data handler for the XML parser.This function specifies what function to be called when the parser finds character data in the XML file.Note: The handler parameter can also be an array containing an object reference and a method name.', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction char($parser,$data) {echo $data;}// Set the \n  character data handler\n  xml_set_character_data_handler($parser,""char"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}xml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must have two parameters:\n    \n$parser - A variable containing the XML parser calling the \n    handler\n$data - A variable containing the character data from the XML \n    file as a string\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_default_handler(),https://www.w3schools.com/php/func_xml_set_default_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_default_handler() function sets the default data handler for the XML parser.This function specifies what function to be called whenever the parser finds data in the XML file.Note: The handler parameter can also be an array containing an object reference and a method name.\xa0', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction def($parser,$data) {echo $data;}// Set the \n  default data handler\nxml_set_default_handler($parser,""def"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}xml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must have two parameters:     \n$parser - A variable containing the XML parser calling the \n    handler\n$data - A variable containing the character data from the XML \n    file as a string\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_element_handler(),https://www.w3schools.com/php/func_xml_set_element_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_element_handler() function specifies functions to be called at \nthe start and end of an element in the XML document.Note: The start and end parameters can also be an array containing an \nobject reference and a method name.', '', '', '']","['\n<?php\n  $parser=xml_parser_create();function start($parser,$element_name,$element_attrs) \n  {\xa0 switch($element_name) {\xa0\xa0\xa0 case ""NOTE"":\xa0\xa0\xa0 echo ""NOTE<br>"";\xa0\xa0\xa0 break;\n  \xa0\xa0\xa0\n  case ""TO"":\xa0\xa0\xa0 echo ""To: "";\xa0\xa0\xa0 break;\xa0\xa0\xa0 case ""FROM"":\xa0\xa0\xa0 echo ""From: "";\n  \xa0\xa0\xa0\n  break;\xa0\xa0\xa0 case ""HEADING"":\xa0\xa0\xa0 echo ""Heading: "";\xa0\xa0\xa0 break;\xa0\xa0\xa0 case ""BODY"":\n  \xa0\xa0\xa0\n  echo ""Message: "";\xa0 }}function stop($parser,$element_name) {\n  echo ""<br>"";}function char($parser,$data) {echo $data;}\n//\xa0 Specify functions to be called at the start and end of an \n    element in the XML documentxml_set_element_handler($parser,""start"",""stop"");\n  xml_set_character_data_handler($parser,""char"");$fp=fopen(""note.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 xml_parse($parser,$data,feof($fp)) or\n  \xa0 die (sprintf(""XML Error: %s at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\n  \xa0\n  xml_get_current_line_number($parser)));}xml_parser_free($parser);\n  fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&start|||Required. Specifies a function to be called at the start of an element. The function must have three parameters:\n    \n$parser - A variable containing the XML parser calling the handler\n$name - A variable containing the name of the elements, that triggers this function, from the XML file as a string\n$data - An array containing the elements attributes from the XML file as a string\n\n|||&&&end|||Required. Specifies a function to be called at the end of an element. \n    The function must have two parameters:\n    \n$parser - A variable containing the XML parser calling the handler\n$name - A variable containing the name of the elements, that triggers this function, from the XML file as a string\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_end_namespace_decl_handler(),https://www.w3schools.com/php/func_xml_set_end_namespace_decl_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_end_namespace_decl_handler() function sets up the end namespace declaration handler.This function specifies what function to be called when leaving the scope of \na namespace declaration. This will be called, for each namespace declaration, \nafter the handler for the end tag of the element in which the namespace was \ndeclared.Note: The handler parameter can also be an array containing an object reference and a method name.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must have two parameters:\n    \n$parser - A variable containing the XML parser calling the \n    handler\n$prefix - A variable containing a string used to reference the namespace \n    within an XML object\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_external_entity_ref_handler(),https://www.w3schools.com/php/func_xml_set_external_entity_ref_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_external_entity_ref_handler() function specifies a function to be called when the parser finds an external entity in the XML document.Note: The handler parameter can also be an array containing an object reference and a method name.', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction char($parser,$data) {echo $data;}function ext_ent_handler($parser,$ent,$base,$sysID,$pubID)\xa0 \n  {\n  echo ""$ent<br>"";\n  echo ""$sysID<br>"";\n  echo ""$pubID<br>"";\n  }\n// Set the \n  character data handler\n  xml_set_character_data_handler($parser,""char"");// Set the \n  external entity reference handlerxml_set_external_entity_ref_handler($parser, ""ext_ent_handler"");$fp=fopen(""note_entity.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}xml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must \n    accept five parameters:\n    \n$parser - A variable containing the XML parser calling the handler\n$name - A variable containing the name of the external entity\n$base - The base for resolving the system identifier (system_id) of the external entity. Currently, this is always \n      an empty string\n$system_id - The system identifier as specified in the entity declaration\n$public_id - The public identifier as specified in the entity declaration\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_notation_decl_handler(),https://www.w3schools.com/php/func_xml_set_notation_decl_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_notation_decl_handler() function specifies a function to be called \nwhen the parser finds a notation declaration in the XML document.Note: The handler parameter can also be an array containing an object reference and a method name.', '', '', '']","['\n  <?php// Create an XML parser$parser=xml_parser_create();\nfunction char($parser,$data) {echo $data;}function not_decl_handler($parser,$not,$base,$sysID,$pubID)\xa0 \n  {\n  echo ""$not<br>"";\n  echo ""$sysID<br>"";\n  echo ""$pubID<br>"";\n  }\n// Set the \n  character data handler\n  xml_set_character_data_handler($parser,""char"");// Set the \n  notation declaration handlerxml_set_notation_decl_handler($parser, ""not_decl_handler"");$fp=fopen(""note_notation.xml"",""r"");\nwhile ($data=fread($fp,4096)) {\xa0 // Parse XML data\xa0 \n  xml_parse($parser,$data,feof($fp)) or \xa0 die (sprintf(""XML Error: %s \n  at line %d"", \xa0 xml_error_string(xml_get_error_code($parser)),\xa0 \n  xml_get_current_line_number($parser)));}xml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must \n    accept five parameters:\n    \n$parser - A variable containing the XML parser calling the handler\n$name - A variable containing the name of the notation\n$base - The base for resolving the system identifier (system_id) of the external entity. Currently, this is always \n      an empty string\n$system_id - The system identifier of the external notation declaration\n$public_id - The public identifier of the external notation declaration\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_object(),https://www.w3schools.com/php/func_xml_set_object.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_object() function allows a XML parser to be used within an object.', '', '', '']","['\n  <?phpclass XMLParser{private $parser;function \n  __construct() {\xa0 $this->parser = xml_parser_create();\xa0 \n  xml_set_object($this->parser, $this);\xa0 xml_set_element_handler($this->parser, \n  ""start_tag"", ""end_tag"");\xa0 xml_set_character_data_handler($this->parser, \n  ""cdata"");}function __destruct() {\xa0 xml_parser_free($this->parser);\xa0 \n  unset($this->parser);}function parse($data) {\xa0 xml_parse($this->parser, $data);\n  }\nfunction start_tag($parser, $tag, $attributes) {\xa0 var_dump($tag, \n  $attributes); }function cdata($parser, $cdata) {\xa0 \n  var_dump($cdata);}function end_tag($parser, $tag) {\xa0 var_dump($tag);}}\n$xml_parser = new XMLParser();$xml_parser->parse(""<p \n  id=\'test\'>Hello World!</p>"");?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&object|||Required. Specifies the object where to use the XML parser|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_processing_instruction_handler(),https://www.w3schools.com/php/func_xml_set_processing_instruction_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_processing_instruction_handler() function specifies a function to be called \nwhen the parser finds a processing instruction (PI) in the XML document.A PI is enclosed in <? and ?> and contains a a \ntarget followed by data.Example: In this case the PI associates a style sheet \nwith an XML document:Note: The handler parameter can also be an array containing an \nobject reference and a method name.', '', '', '']","['\n<?php$parser=xml_parser_create();\n\nfunction char($parser,$data) {\n\xa0 echo $data;\n  }\n\nfunction pi_handler($parser, $target, $data) {\n\xa0 echo ""Target: $target<br />"";\n\xa0 echo ""Data: $data<br />"";\n  }\n\nxml_set_character_data_handler($parser,""char"");// Set up PI \n  handler\nxml_set_processing_instruction_handler($parser, ""pi_handler"");\n$fp=fopen(""note_pi.xml"",""r"");\n\nwhile ($data=fread($fp,4096)) {\n\xa0 xml_parse($parser,$data,feof($fp)) or \n\xa0 die (sprintf(""XML Error: %s at line %d"", \n\xa0 xml_error_string(xml_get_error_code($parser)),\n\xa0 xml_get_current_line_number($parser)));\n  }\nxml_parser_free($parser);\n  ?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must \n    accept three parameters:\n    \n$parser - A variable containing the XML parser calling the handler\n$target - A variable containing the PI target\n$data - A variable containing the PI data\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_start_namespace_decl_handler(),https://www.w3schools.com/php/func_xml_set_start_namespace_decl_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_start_namespace_decl_handler() function sets up the start namespace \ndeclaration handler.This function specifies what function to be called when  \na namespace is declared.Note: The handler parameter can also be an array containing an object reference and a method name.', '', '', '']","['', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be used as an event handler. The function must have three parameters:\n    \n$parser - A variable containing the XML parser calling the \n    handler\n$prefix - A variable containing a reference to the namespace \n    within an XML object\n$uri - The URI of the namspace\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||xml_set_unparsed_entity_decl_handler(),https://www.w3schools.com/php/func_xml_set_unparsed_entity_decl_handler.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The xml_set_unparsed_entity_decl_handler() function specifies a function to be called \nwhen the parser an unparsed entity in the XML document.Note: The handler parameter can also be an array containing an \nobject reference and a method name.', '', '', '']","['\n  <?php$parser=xml_parser_create();\n\nfunction char($parser,$data) {\n\xa0\xa0echo $data;\n  }\n\nfunction unparsed_ent_handler($parser,$entname,$base,$sysID,$pubID,$notname) \n  {\n\xa0\xa0print ""$entname<br>"";\n\xa0\xa0print ""$sysID<br>"";\n\xa0\xa0print ""$pubID<br>"";\n\xa0\xa0print ""$notname<br>"";\n  }\n\nxml_set_character_data_handler($parser,""char"");// Set up unparsed \n  entity declaration handler\nxml_set_unparsed_entity_decl_handler($parser,""unparsed_ent_handler"");\n\n$fp=fopen(""test.xml"",""r"");\n\nwhile ($data=fread($fp,4096)) {\n\xa0 xml_parse($parser,$data,feof($fp)) or \n\xa0\xa0die (sprintf(""XML Error: %s at line %d"", \n\xa0\xa0xml_error_string(xml_get_error_code($parser)),\n\xa0\xa0xml_get_current_line_number($parser)));\n  }\nxml_parser_free($parser);fclose($fp);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&parser|||Required. Specifies the XML parser to use|||&&&handler|||Required. Specifies a function to be called if the XML parser encounters \n    an external entity declaration with an NDATA declaration. The function must \n    accept six parameters:\n    \n$parser - A variable containing the XML parser calling the handler\n$entity_name - A variable containing the name of the entity\n$base - The base for resolving the system identifier (system_id) of the external entity. Currently, this is always \n      an empty string\n$system_id - The system identifier of the external entity\n$public_id - The public identifier of the external entity\n$notation_name - The name of the notation of this entity\n\n|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Zip,https://www.w3schools.com/php/php_ref_zip.asp,,"['PHP Zip Introduction', 'Requirements', 'Installation', 'PHP Zip Functions']","['The Zip files functions allows you to read ZIP files.', 'The ZIP extension requires \nlibzip.', 'Linux SystemsFor these functions to work, you have to compile PHP with --enable-zip.PHP 5.6: Use the\n--with-libzip=DIR configure option to use a system libzip installation. \nlibzip version 0.11 is required, with 0.11.2 or later recommended.PHP 7.3: Building against the bundled libzip is discouraged, but still \npossible by adding --without-libzip to the configuration. Windows SystemsBefore PHP 5.3: Users must enable ""php_zip.dll"" inside of ""php.ini"" for \nthese functions to work.From PHP 5.3: The ZIP extension is built-in.', '']","['', '', '', '']",[''],['Function|||Description|||&&&zip_close()|||Closes a ZIP file archive|||&&&zip_entry_close()|||Closes a ZIP directory entry|||&&&zip_entry_compressedsize()|||Returns the compressed file size of a ZIP directory entry|||&&&zip_entry_compressionmethod()|||Returns the compression method of a ZIP directory entry|||&&&zip_entry_filesize()|||Returns the actual file size of a ZIP directory entry|||&&&zip_entry_name()|||Returns the name of a ZIP directory entry|||&&&zip_entry_open()|||Opens a directory entry in a ZIP file for reading|||&&&zip_entry_read()|||Reads from an open directory entry in the ZIP file|||&&&zip_open()|||Opens a ZIP file archive|||&&&zip_read()|||Reads the next file in a open ZIP file archive|||&&&'],[]
php||zip_close(),https://www.w3schools.com/php/func_zip_close.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_close() function closes a ZIP file archive opened by the\nzip_open() function.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\nzip_read($zip);\n\n// some code\n\nzip_close($zip);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&zip|||Required. Specifies the ZIP file to close (opened with zip_open() )|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_close(),https://www.w3schools.com/php/func_zip_entry_close.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_close() function closes a ZIP directory entry opened by zip_entry_open().', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0 while ($zip_entry = zip_read($zip)) {\n\xa0\xa0\xa0 if (zip_entry_open($zip, $zip_entry)) {\n\xa0\xa0\xa0\xa0\xa0 // some code\xa0\xa0\xa0\xa0\xa0 \n  // Close directory entry\n\xa0\xa0\xa0\xa0\xa0 zip_entry_close($zip_entry);\n\xa0\xa0\xa0 }\n\xa0 }\nzip_close($zip);\n}\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&zip_entry|||Required. Specifies the ZIP directory entry returned by zip_read()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_compressedsize(),https://www.w3schools.com/php/func_zip_entry_compressedsize.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_compressedsize() function returns the compressed file size of a \nZIP directory entry.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0 while ($zip_entry = zip_read($zip)) {\xa0\xa0\xa0\xa0echo ""<p>"";\n  \xa0\xa0\xa0 // Get name \n  of directory entry\xa0\xa0\xa0\xa0echo ""Name: "" . zip_entry_name($zip_entry) . ""<br>"";\n  \xa0\xa0\xa0 // Get \n  compressed size \xa0\xa0\xa0\xa0echo ""Compressed size: "" . zip_entry_compressedsize($zip_entry);\n\xa0\xa0\xa0\xa0echo ""</p>"";\n\xa0 }\n\xa0 zip_close($zip);\n  }\n?>\n', '\nName: ziptest.txt\nCompressed \n  size: 56\n\nName: htmlziptest.html\nCompressed \n  size: 101 ', '', '']",[''],"['Parameter|||Description|||&&&zip_entry|||Required. Specifies the ZIP directory entry returned by zip_read()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_compressionmethod(),https://www.w3schools.com/php/func_zip_entry_compressionmethod.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_compressionmethod() function returns the compression method of a \nZIP directory entry.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0 while ($zip_entry = zip_read($zip)) {\xa0\xa0\xa0\xa0echo ""<p>"";\n  \xa0\xa0\xa0 // Get name \n  of directory entry\xa0\xa0\xa0\xa0echo ""Name: "" . zip_entry_name($zip_entry) . ""<br>"";\n  \xa0\xa0\xa0 // Get \n  compression method \xa0\xa0\xa0\xa0echo ""Compression method: "" . zip_entry_compressionmethod($zip_entry);\n\xa0\xa0\xa0\xa0echo ""</p>"";\n\xa0 }\n\xa0 zip_close($zip);\n  }\n?>\n', '\nName: ziptest.txt\nCompression method: deflated\n\nName: htmlziptest.html\nCompression method: deflated ', '', '']",[''],"['Parameter|||Description|||&&&zip_entry|||Required. Specifies the ZIP directory entry returned by zip_read()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_filesize(),https://www.w3schools.com/php/func_zip_entry_filesize.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_filesize() function returns the actual file size of a ZIP \ndirectory entry.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0 while ($zip_entry = zip_read($zip)) {\xa0\xa0\xa0\xa0echo ""<p>"";\n  \xa0\xa0\xa0 // Get name \n  of directory entry\xa0\xa0\xa0\xa0echo ""Name: "" . zip_entry_name($zip_entry) . ""<br>"";\n  \xa0\xa0\xa0 // Get filesize \n  of directory entry \xa0\xa0\xa0\xa0echo ""Filesize: "" . zip_entry_filesize($zip_entry);\n\xa0\xa0\xa0\xa0echo ""</p>"";\n\xa0 }\n\xa0 zip_close($zip);\n  }\n?>\n', '\nName: ziptest.txt\nFilesize: 59\n\nName: htmlziptest.html\nFilesize: 124\n', '', '']",[''],"['Parameter|||Description|||&&&zip_entry|||Required. Specifies the ZIP directory entry returned by zip_read()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_name(),https://www.w3schools.com/php/func_zip_entry_name.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_name() function returns the name of a ZIP directory entry.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0 while ($zip_entry = zip_read($zip)) {\xa0\xa0\xa0 // Get name \n  of directory entry \n\xa0\xa0\xa0 echo ""Name: "" . zip_entry_name($zip_entry) . ""<br>"";\n\xa0 }\n\xa0 zip_close($zip);\n  }\n?>\n', '\nName: ziptest.txt\nName: htmlziptest.html', '', '']",[''],"['Parameter|||Description|||&&&zip_entry|||Required. Specifies the zip directory entry returned by zip_read()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_open(),https://www.w3schools.com/php/func_zip_entry_open.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_open() function opens a directory entry in a ZIP file for reading.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0\xa0while ($zip_entry = zip_read($zip)) {\n\xa0\xa0\xa0 echo ""<p>Name: "" . zip_entry_name($zip_entry) . ""<br>"";\xa0\xa0\xa0 \n  // Open directory entry for reading\n\xa0\xa0\xa0 if (zip_entry_open($zip, $zip_entry)) {\n\xa0\xa0\xa0\xa0\xa0 echo ""File Contents:<br>"";\xa0\xa0\xa0\xa0\xa0 \n  // Read open directory entry\n\xa0\xa0\xa0\xa0\xa0 $contents = zip_entry_read($zip_entry);\n\xa0\xa0\xa0\xa0\xa0 echo ""$contents<br>"";\n\xa0\xa0\xa0\xa0\xa0 zip_entry_close($zip_entry);\n  \xa0\xa0\xa0\xa0}\n\xa0\xa0echo ""</p>"";\n\xa0 }\nzip_close($zip);}\n?>\n', '\nName: ziptest.txt\nFile Contents:\nHello World! This is a test.\n\nName: htmlziptest.html\nFile Contents:\nHello World!\nThis is a test for the zip functions in PHP.\n', '', '']",[''],"['Parameter|||Description|||&&&zip|||Required. Specifies the ZIP resource opened with zip_open()|||&&&zip_entry|||Required. Specifies the ZIP directory entry to open (opened with zip_read())|||&&&mode|||Optional. Specifies the type of access you require to the ZIP archive. Note: \n    Currently, mode is always ""rb"", because ZIP support in PHP is read only|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_entry_read(),https://www.w3schools.com/php/func_zip_entry_read.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_entry_read() function reads from an open directory entry.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\n\nif ($zip) {\n\xa0\xa0while ($zip_entry = zip_read($zip)) {\n\xa0\xa0\xa0 echo ""<p>Name: "" . zip_entry_name($zip_entry) . ""<br>"";\n\xa0\xa0\xa0 // Open directory entry for reading\xa0\xa0\xa0 if (zip_entry_open($zip, $zip_entry)) {\n\xa0\xa0\xa0\xa0\xa0 echo ""File Contents:<br>"";\xa0\xa0\xa0\xa0\xa0 \n  // Read open directory entry\n\xa0\xa0\xa0\xa0\xa0 $contents = zip_entry_read($zip_entry);\n\xa0\xa0\xa0\xa0\xa0 echo ""$contents<br>"";\n\xa0\xa0\xa0\xa0\xa0 zip_entry_close($zip_entry);\n  \xa0\xa0\xa0\xa0}\n\xa0\xa0echo ""</p>"";\n\xa0 }\nzip_close($zip);}\n?>\n', '\nName: ziptest.txt\nFile Contents:\nHello World! This is a test.\n\nName: htmlziptest.html\nFile Contents:\nHello World!\nThis is a test for the zip functions in PHP.\n', '', '']",[''],"['Parameter|||Description|||&&&zip_entry|||Required. Specifies the directory entry returned by zip_read()|||&&&length|||Optional. Specifies the number of (uncompressed) bytes to return. Default is 1024|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_open(),https://www.w3schools.com/php/func_zip_open.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_open() function opens a ZIP file archive.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\nzip_read($zip);\n\n// some code\n\nzip_close($zip);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&zip|||Required. Specifies the ZIP file to open|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||zip_read(),https://www.w3schools.com/php/func_zip_read.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The zip_read() function reads the next file in a open ZIP file archive.Tip: The resource returned by zip_read() can be used by the zip_entry_*() functions.', '', '', '']","['\n<?php\n$zip = zip_open(""test.zip"");\nzip_read($zip);\n\n// some code\n\nzip_close($zip);\n?>\n', '', '', '']",[''],"['Parameter|||Description|||&&&zip|||Required. Specifies a ZIP file opened with zip_open()|||&&&', 'Return Value:|||&&&PHP Version:|||&&&']",[]
php||Timezones,https://www.w3schools.com/php/php_ref_timezones.asp,,"['PHP Supported Timezones', 'Africa', 'America', 'Antarctica', 'Arctic', 'Asia', 'Atlantic', 'Australia', 'Europe', 'Indian', 'Pacific']","['Below is a complete list of the timezones supported by PHP, which are useful with several PHP date functions.', '', '', '', '', '', '', '', '', '', '']","['', '', '', '', '', '', '', '', '', '', '']",['PHP Supported Timezones###&&&|||Africa|||America|||Antarctica|||Arctic|||Asia|||Atlantic|||Australia|||Europe|||Indian|||Pacific|||'],"['Africa/Abidjan|||Africa/Accra|||Africa/Addis_Ababa|||Africa/Algiers|||Africa/Asmara|||&&&Africa/Asmera|||Africa/Bamako|||Africa/Bangui|||Africa/Banjul|||Africa/Bissau|||&&&Africa/Blantyre|||Africa/Brazzaville|||Africa/Bujumbura|||Africa/Cairo|||Africa/Casablanca|||&&&Africa/Ceuta|||Africa/Conakry|||Africa/Dakar|||Africa/Dar_es_Salaam|||Africa/Djibouti|||&&&Africa/Douala|||Africa/El_Aaiun|||Africa/Freetown|||Africa/Gaborone|||Africa/Harare|||&&&Africa/Johannesburg|||Africa/Juba|||Africa/Kampala|||Africa/Khartoum|||Africa/Kigali|||&&&Africa/Kinshasa|||Africa/Lagos|||Africa/Libreville|||Africa/Lome|||Africa/Luanda|||&&&Africa/Lubumbashi|||Africa/Lusaka|||Africa/Malabo|||Africa/Maputo|||Africa/Maseru|||&&&Africa/Mbabane|||Africa/Mogadishu|||Africa/Monrovia|||Africa/Nairobi|||Africa/Ndjamena|||&&&Africa/Niamey|||Africa/Nouakchott|||Africa/Ouagadougou|||Africa/Porto-Novo|||Africa/Sao_Tome|||&&&Africa/Timbuktu|||Africa/Tripoli|||Africa/Tunis|||Africa/Windhoek|||\xa0|||&&&', 'America/Adak|||America/Anchorage|||America/Anguilla|||&&&America/Antigua|||America/Araguaina|||America/Argentina/Buenos_Aires|||&&&America/Argentina/Catamarca|||America/Argentina/ComodRivadavia|||America/Argentina/Cordoba|||&&&America/Argentina/Jujuy|||America/Argentina/La_Rioja|||America/Argentina/Mendoza|||&&&America/Argentina/Rio_Gallegos|||America/Argentina/Salta|||America/Argentina/San_Juan|||&&&America/Argentina/San_Luis|||America/Argentina/Tucuman|||America/Argentina/Ushuaia|||&&&America/Aruba|||America/Asuncion|||America/Atikokan|||&&&America/Atka|||America/Bahia|||America/Bahia_Banderas|||&&&America/Barbados|||America/Belem|||America/Belize|||&&&America/Blanc-Sablon|||America/Boa_Vista|||America/Bogota|||&&&America/Boise|||America/Buenos_Aires|||America/Cambridge_Bay|||&&&America/Campo_Grande|||America/Cancun|||America/Caracas|||&&&America/Catamarca|||America/Cayenne|||America/Cayman|||&&&America/Chicago|||America/Chihuahua|||America/Coral_Harbour|||&&&America/Cordoba|||America/Costa_Rica|||America/Creston|||&&&America/Cuiaba|||America/Curacao|||America/Danmarkshavn|||&&&America/Dawson|||America/Dawson_Creek|||America/Denver|||&&&America/Detroit|||America/Dominica|||America/Edmonton|||&&&America/Eirunepe|||America/El_Salvador|||America/Ensenada|||&&&America/Fort_Wayne|||America/Fortaleza|||America/Glace_Bay|||&&&America/Godthab|||America/Goose_Bay|||America/Grand_Turk|||&&&America/Grenada|||America/Guadeloupe|||America/Guatemala|||&&&America/Guayaquil|||America/Guyana|||America/Halifax|||&&&America/Havana|||America/Hermosillo|||America/Indiana/Indianapolis|||&&&America/Indiana/Knox|||America/Indiana/Marengo|||America/Indiana/Petersburg|||&&&America/Indiana/Tell_City|||America/Indiana/Vevay|||America/Indiana/Vincennes|||&&&America/Indiana/Winamac|||America/Indianapolis|||America/Inuvik|||&&&America/Iqaluit|||America/Jamaica|||America/Jujuy|||&&&America/Juneau|||America/Kentucky/Louisville|||America/Kentucky/Monticello|||&&&America/Knox_IN|||America/Kralendijk|||America/La_Paz|||&&&America/Lima|||America/Los_Angeles|||America/Louisville|||&&&America/Lower_Princes|||America/Maceio|||America/Managua|||&&&America/Manaus|||America/Marigot|||America/Martinique|||&&&America/Matamoros|||America/Mazatlan|||America/Mendoza|||&&&America/Menominee|||America/Merida|||America/Metlakatla|||&&&America/Mexico_City|||America/Miquelon|||America/Moncton|||&&&America/Monterrey|||America/Montevideo|||America/Montreal|||&&&America/Montserrat|||America/Nassau|||America/New_York|||&&&America/Nipigon|||America/Nome|||America/Noronha|||&&&America/North_Dakota/Beulah|||America/North_Dakota/Center|||America/North_Dakota/New_Salem|||&&&America/Ojinaga|||America/Panama|||America/Pangnirtung|||&&&America/Paramaribo|||America/Phoenix|||America/Port-au-Prince|||&&&America/Port_of_Spain|||America/Porto_Acre|||America/Porto_Velho|||&&&America/Puerto_Rico|||America/Rainy_River|||America/Rankin_Inlet|||&&&America/Recife|||America/Regina|||America/Resolute|||&&&America/Rio_Branco|||America/Rosario|||America/Santa_Isabel|||&&&America/Santarem|||America/Santiago|||America/Santo_Domingo|||&&&America/Sao_Paulo|||America/Scoresbysund|||America/Shiprock|||&&&America/Sitka|||America/St_Barthelemy|||America/St_Johns|||&&&America/St_Kitts|||America/St_Lucia|||America/St_Thomas|||&&&America/St_Vincent|||America/Swift_Current|||America/Tegucigalpa|||&&&America/Thule|||America/Thunder_Bay|||America/Tijuana|||&&&America/Toronto|||America/Tortola|||America/Vancouver|||&&&America/Virgin|||America/Whitehorse|||America/Winnipeg|||&&&America/Yakutat|||America/Yellowknife|||\xa0|||&&&', 'Antarctica/Casey|||Antarctica/Davis|||Antarctica/DumontDUrville|||Antarctica/Macquarie|||Antarctica/Mawson|||&&&Antarctica/McMurdo|||Antarctica/Palmer|||Antarctica/Rothera|||Antarctica/South_Pole|||Antarctica/Syowa|||&&&Antarctica/Vostok|||\xa0|||\xa0|||\xa0|||\xa0|||&&&', 'Arctic/Longyearbyen|||&&&', 'Asia/Aden|||Asia/Almaty|||Asia/Amman|||Asia/Anadyr|||Asia/Aqtau|||&&&Asia/Aqtobe|||Asia/Ashgabat|||Asia/Ashkhabad|||Asia/Baghdad|||Asia/Bahrain|||&&&Asia/Baku|||Asia/Bangkok|||Asia/Beirut|||Asia/Bishkek|||Asia/Brunei|||&&&Asia/Calcutta|||Asia/Choibalsan|||Asia/Chongqing|||Asia/Chungking|||Asia/Colombo|||&&&Asia/Dacca|||Asia/Damascus|||Asia/Dhaka|||Asia/Dili|||Asia/Dubai|||&&&Asia/Dushanbe|||Asia/Gaza|||Asia/Harbin|||Asia/Hebron|||Asia/Ho_Chi_Minh|||&&&Asia/Hong_Kong|||Asia/Hovd|||Asia/Irkutsk|||Asia/Istanbul|||Asia/Jakarta|||&&&Asia/Jayapura|||Asia/Jerusalem|||Asia/Kabul|||Asia/Kamchatka|||Asia/Karachi|||&&&Asia/Kashgar|||Asia/Kathmandu|||Asia/Katmandu|||Asia/Khandyga|||Asia/Kolkata|||&&&Asia/Krasnoyarsk|||Asia/Kuala_Lumpur|||Asia/Kuching|||Asia/Kuwait|||Asia/Macao|||&&&Asia/Macau|||Asia/Magadan|||Asia/Makassar|||Asia/Manila|||Asia/Muscat|||&&&Asia/Nicosia|||Asia/Novokuznetsk|||Asia/Novosibirsk|||Asia/Omsk|||Asia/Oral|||&&&Asia/Phnom_Penh|||Asia/Pontianak|||Asia/Pyongyang|||Asia/Qatar|||Asia/Qyzylorda|||&&&Asia/Rangoon|||Asia/Riyadh|||Asia/Saigon|||Asia/Sakhalin|||Asia/Samarkand|||&&&Asia/Seoul|||Asia/Shanghai|||Asia/Singapore|||Asia/Taipei|||Asia/Tashkent|||&&&Asia/Tbilisi|||Asia/Tehran|||Asia/Tel_Aviv|||Asia/Thimbu|||Asia/Thimphu|||&&&Asia/Tokyo|||Asia/Ujung_Pandang|||Asia/Ulaanbaatar|||Asia/Ulan_Bator|||Asia/Urumqi|||&&&Asia/Ust-Nera|||Asia/Vientiane|||Asia/Vladivostok|||Asia/Yakutsk|||Asia/Yekaterinburg|||&&&Asia/Yerevan|||\xa0|||\xa0|||\xa0|||\xa0|||&&&', 'Atlantic/Azores|||Atlantic/Bermuda|||Atlantic/Canary|||Atlantic/Cape_Verde|||Atlantic/Faeroe|||&&&Atlantic/Faroe|||Atlantic/Jan_Mayen|||Atlantic/Madeira|||Atlantic/Reykjavik|||Atlantic/South_Georgia|||&&&Atlantic/St_Helena|||Atlantic/Stanley|||\xa0|||\xa0|||\xa0|||&&&', 'Australia/ACT|||Australia/Adelaide|||Australia/Brisbane|||Australia/Broken_Hill|||Australia/Canberra|||&&&Australia/Currie|||Australia/Darwin|||Australia/Eucla|||Australia/Hobart|||Australia/LHI|||&&&Australia/Lindeman|||Australia/Lord_Howe|||Australia/Melbourne|||Australia/North|||Australia/NSW|||&&&Australia/Perth|||Australia/Queensland|||Australia/South|||Australia/Sydney|||Australia/Tasmania|||&&&Australia/Victoria|||Australia/West|||Australia/Yancowinna|||\xa0|||\xa0|||&&&', 'Europe/Amsterdam|||Europe/Andorra|||Europe/Athens|||Europe/Belfast|||Europe/Belgrade|||&&&Europe/Berlin|||Europe/Bratislava|||Europe/Brussels|||Europe/Bucharest|||Europe/Budapest|||&&&Europe/Busingen|||Europe/Chisinau|||Europe/Copenhagen|||Europe/Dublin|||Europe/Gibraltar|||&&&Europe/Guernsey|||Europe/Helsinki|||Europe/Isle_of_Man|||Europe/Istanbul|||Europe/Jersey|||&&&Europe/Kaliningrad|||Europe/Kiev|||Europe/Lisbon|||Europe/Ljubljana|||Europe/London|||&&&Europe/Luxembourg|||Europe/Madrid|||Europe/Malta|||Europe/Mariehamn|||Europe/Minsk|||&&&Europe/Monaco|||Europe/Moscow|||Europe/Nicosia|||Europe/Oslo|||Europe/Paris|||&&&Europe/Podgorica|||Europe/Prague|||Europe/Riga|||Europe/Rome|||Europe/Samara|||&&&Europe/San_Marino|||Europe/Sarajevo|||Europe/Simferopol|||Europe/Skopje|||Europe/Sofia|||&&&Europe/Stockholm|||Europe/Tallinn|||Europe/Tirane|||Europe/Tiraspol|||Europe/Uzhgorod|||&&&Europe/Vaduz|||Europe/Vatican|||Europe/Vienna|||Europe/Vilnius|||Europe/Volgograd|||&&&Europe/Warsaw|||Europe/Zagreb|||Europe/Zaporozhye|||Europe/Zurich|||\xa0|||&&&', 'Indian/Antananarivo|||Indian/Chagos|||Indian/Christmas|||Indian/Cocos|||Indian/Comoro|||&&&Indian/Kerguelen|||Indian/Mahe|||Indian/Maldives|||Indian/Mauritius|||Indian/Mayotte|||&&&Indian/Reunion|||\xa0|||\xa0|||\xa0|||\xa0|||&&&', 'Pacific/Apia|||Pacific/Auckland|||Pacific/Chatham|||Pacific/Chuuk|||Pacific/Easter|||&&&Pacific/Efate|||Pacific/Enderbury|||Pacific/Fakaofo|||Pacific/Fiji|||Pacific/Funafuti|||&&&Pacific/Galapagos|||Pacific/Gambier|||Pacific/Guadalcanal|||Pacific/Guam|||Pacific/Honolulu|||&&&Pacific/Johnston|||Pacific/Kiritimati|||Pacific/Kosrae|||Pacific/Kwajalein|||Pacific/Majuro|||&&&Pacific/Marquesas|||Pacific/Midway|||Pacific/Nauru|||Pacific/Niue|||Pacific/Norfolk|||&&&Pacific/Noumea|||Pacific/Pago_Pago|||Pacific/Palau|||Pacific/Pitcairn|||Pacific/Pohnpei|||&&&Pacific/Ponape|||Pacific/Port_Moresby|||Pacific/Rarotonga|||Pacific/Saipan|||Pacific/Samoa|||&&&Pacific/Tahiti|||Pacific/Tarawa|||Pacific/Tongatapu|||Pacific/Truk|||Pacific/Wake|||&&&Pacific/Wallis|||Pacific/Yap|||\xa0|||\xa0|||\xa0|||&&&']",[]
