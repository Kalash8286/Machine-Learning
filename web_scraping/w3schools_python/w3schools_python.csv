Heading,Link,Intro,Subheading,Definitions,Example,List_item,table_item,Image_url
python||Tutorial,https://www.w3schools.com/python/default.asp,,"['Learning by Examples', 'Python File Handling', 'Python Database Handling']","['With our ""Try it Yourself"" editor, you can edit Python code and view the result.Click on the ""Try it Yourself"" button to see how it works.', 'In our File Handling section you will learn how to open, read, write, and \ndelete files.Python File Handling', 'In our database section you will learn how to access and work with MySQL and MongoDB databases:Python MySQL TutorialPython MongoDB Tutorial', 'Learn by examples! This tutorial supplements all explanations with clarifying examples.See All Python Examples', 'Test your Python skills with a quiz.Python Quiz', 'You will also find complete function and method references:Reference OverviewBuilt-in FunctionsString MethodsList/Array MethodsDictionary MethodsTuple MethodsSet MethodsFile MethodsPython KeywordsPython ExceptionsPython GlossaryRandom ModuleRequests ModuleMath ModuleCMath Module', 'Download Python from the official Python web site:\n  https://python.org']","['\nprint(""Hello, World!"")\n', '', '']",[''],[],[]
python||Introduction,https://www.w3schools.com/python/python_intro.asp,,['What is Python?'],"['Python is a popular programming language. It was created by Guido van Rossum, \nand released in 1991.It is used for:']","['\nprint(""Hello, World!"")\n']","['What is Python?###What is Python?###What is Python?###What is Python?###What is Python?###&&&|||web development (server-side), |||software development, |||mathematics,|||system scripting.|||&&&|||Python can be used on a server to create web applications.|||Python can be used alongside software to create workflows.|||Python can connect to database systems. It can also read and modify files.|||Python can be used to handle big data and perform complex mathematics.|||Python can be used for rapid prototyping, or for production-ready software development.|||&&&|||Python works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc).|||Python has a simple syntax similar to the English language.|||Python has syntax that allows developers to write programs with fewer lines than some other programming languages.|||Python runs on an interpreter system, meaning that code can be executed as soon as it is written. This means that prototyping can be very quick.|||Python can be treated in a procedural way, an object-oriented way or a functional way.|||&&&|||The most recent major version of Python is Python 3, which we shall be using in this tutorial. However, Python 2, although not being updated with anything other than security updates, is still quite popular.|||In this tutorial Python will be written in a text editor. It is possible to write Python in an Integrated Development Environment, such as Thonny, Pycharm, Netbeans or Eclipse which are particularly useful when managing larger collections of Python files.|||&&&|||Python was designed for readability, and has some similarities to the English language with influence from mathematics.|||Python uses new lines to complete a command, as opposed to other programming languages which often use semicolons or parentheses.|||Python relies on indentation, using whitespace, to define scope; such as the scope of loops, functions and classes. Other programming languages often use curly-brackets for this purpose.|||']",[],[]
python||Getting Started,https://www.w3schools.com/python/python_getstarted.asp,,"['Python Install', 'Python Quickstart', 'The Python Command Line']","['Many PCs and Macs will have python already installed.To check if you have python installed on a Windows PC, search in the start bar for Python or run the following on the Command Line (cmd.exe):To check if you have python installed on a Linux or Mac, then on linux open the command line or on Mac open the Terminal and type:If you find that you do not have Python installed on your computer, then you can download it for free from the following website: https://www.python.org/', 'Python is an interpreted programming language, this means that as a developer you write Python (.py) files in a text editor and then put those files into the python interpreter to be executed.The way to run a python file is like this on the command line:Where ""helloworld.py"" is the name of your python file.Let\'s write our first Python file, called helloworld.py, which can be done in any text editor.Simple as that. Save your file. Open your command line, navigate to the directory where you saved your file, and run:The output should read:Congratulations, you have written and executed your first Python program.', 'To test a short amount of code in python sometimes it is quickest and easiest not to write the code in a file. This is made possible because Python can be run as a command line itself.Type the following on the Windows, Mac or Linux command line:From there you can write any python, including our hello world example from earlier in the tutorial:Which will write ""Hello, World!"" in the command line:Whenever you are done in the python command line, you can simply type the following to quit the python command line interface:']","['\nC:\\Users\\Your Name>python --version\n', '\npython --version\n', '\nC:\\Users\\Your Name>python helloworld.py\n', '\nprint(""Hello, World!"")\n', '\nC:\\Users\\Your Name>python helloworld.py\n', '\nHello, World!\n']",[''],[],[]
python||Syntax,https://www.w3schools.com/python/python_syntax.asp,,"['Python Indentation', 'Python Variables']","['Or by creating a python file on the server, using the .py file extension, and running it in the Command Line:', 'Indentation refers to the spaces at the beginning of a code line.Where in other programming languages the indentation in code is for readability \nonly, the indentation in Python is very important.Python uses indentation to indicate a block of code.Python will give you an error if you skip the indentation:The number of spaces is up to you as a programmer, but it has \nto be at least one.You have to use the same number of spaces in the same block of code, \notherwise Python will give you an error:', 'In Python, variables are created when you assign a value to it:\n\nExample\nVariables in Python:\n\n  x = 5y = ""Hello, World!""\n\nTry it Yourself »\n\nPython has no command for declaring a variable.\nYou will learn more about variables in the \nPython Variables chapter.\n\n\nComments\nPython has commenting capability for the purpose of in-code documentation.\nComments start with a #, and Python will render the rest of the line as a comment:\n\nExample\nComments in Python:\n\n#This is a comment.\nprint(""Hello, World!"")\n\nTry it Yourself »\n\n\n\n\nTest Yourself With Exercises\n\nExercise:\nInsert the missing part of the code below to output ""Hello World"".\n\n\n(""Hello World"")\n\n\n\nSubmit Answer »\nStart the Exercise\n\n\n\n\n❮ Previous\nNext ❯\n\n\n\n', 'Python has commenting capability for the purpose of in-code documentation.Comments start with a #, and Python will render the rest of the line as a comment:\n\nExample\nComments in Python:\n\n#This is a comment.\nprint(""Hello, World!"")\n\nTry it Yourself »\n\n\n\n\nTest Yourself With Exercises\n\nExercise:\nInsert the missing part of the code below to output ""Hello World"".\n\n\n(""Hello World"")\n\n\n\nSubmit Answer »\nStart the Exercise\n\n\n\n\n❮ Previous\nNext ❯\n\n\n\n']","['\n        >>> print(""Hello, World!"")\n        Hello, World!\n       &&&&&& \n    C:\\Users\\Your Name>python myfile.py\n  ', '\n  if 5 > 2:\xa0\nprint(""Five is greater than two!"")\n &&&&&& \nif 5 > 2:\nprint(""Five is greater than two!"")\n &&&&&& \n  if 5 > 2:\xa0print(""Five is greater than two!"")\xa0\nif 5 > 2:\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print(""Five is greater than two!"")\xa0\n &&&&&& \nif 5 > 2:\n\xa0print(""Five is greater than two!"")\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print(""Five is greater than \n  two!"")', '\n  x = 5y = ""Hello, World!""\n', '\n#This is a comment.\nprint(""Hello, World!"")\n']",[''],[],[]
python||Comments,https://www.w3schools.com/python/python_comments.asp,Comments can be used to explain Python code.,"['Creating a Comment', 'Multi Line Comments']","['Comments can be used to make the code more readable.Comments can be used to prevent execution when testing code.', 'Comments starts with a #, and Python will \nignore them:Comments can be placed at the end of a line, and Python will ignore the rest \nof the line:A comment does not have to be text that explains the code, it can also be used to \nprevent Python from executing code:', 'Python does not really have a syntax for multi line comments.To add a multiline comment you could insert a # for each line:Or, not quite as intended, you can use a multiline string.Since Python will ignore string literals that are not assigned to a variable, you can add a multiline string (triple quotes) in your code, and place your comment inside it:As long as the string is not assigned to a variable, Python will read the code, but then ignore it, and you have made a multiline comment.']","['\n#This is a comment\nprint(""Hello, World!"")\n &&&&&& \nprint(""Hello, World!"") #This is a comment\n &&&&&& \n  #print(""Hello, World!"")print(""Cheers, Mate!"")', '\n  #This is a comment#written in#more than just one lineprint(""Hello, \n  World!"")\n &&&&&& \n  """"""This is a commentwritten in more than just \n  one line""""""print(""Hello, World!"")']",[''],[],[]
python||Variables,https://www.w3schools.com/python/python_variables.asp,,[''],"['Variables are containers for storing data values.', 'Python has no command for declaring a variable.A variable is created the moment you first assign a value to it.Variables do not need to be declared with any particular type, and can even change type after they have been set.', 'If you want to specify the data type of a variable, this can be done with casting.', 'You can get the data type of a variable with the type() function.', 'String variables can be declared either by using single or double quotes:', 'Variable names are case-sensitive.']","['\nx = 5\ny = ""John""\nprint(x)\nprint(y)\n &&&&&& \nx = 4\xa0\xa0\xa0\xa0\xa0\xa0 # x is of type int\nx = ""Sally"" # x is now of type str\nprint(x)\n', ""\nx = \n  str(3)\xa0\xa0\xa0 # x will be '3'y = int(3)\xa0\xa0\xa0 # y \n  will be 3z = float(3)\xa0 # z will be 3.0"", '\n  x = 5y = ""John""print(type(x))print(type(y))', '\nx = ""John""# is the same asx = \n  \'John\'\n']",[''],[],[]
python||Variables,https://www.w3schools.com/python/python_variables.asp,,[''],"['Variables are containers for storing data values.', 'Python has no command for declaring a variable.A variable is created the moment you first assign a value to it.Variables do not need to be declared with any particular type, and can even change type after they have been set.', 'If you want to specify the data type of a variable, this can be done with casting.', 'You can get the data type of a variable with the type() function.', 'String variables can be declared either by using single or double quotes:', 'Variable names are case-sensitive.']","['\nx = 5\ny = ""John""\nprint(x)\nprint(y)\n &&&&&& \nx = 4\xa0\xa0\xa0\xa0\xa0\xa0 # x is of type int\nx = ""Sally"" # x is now of type str\nprint(x)\n', ""\nx = \n  str(3)\xa0\xa0\xa0 # x will be '3'y = int(3)\xa0\xa0\xa0 # y \n  will be 3z = float(3)\xa0 # z will be 3.0"", '\n  x = 5y = ""John""print(type(x))print(type(y))', '\nx = ""John""# is the same asx = \n  \'John\'\n']",[''],[],[]
python||Variable Names,https://www.w3schools.com/python/python_variables_names.asp,,"['Variable Names', 'Multi Words Variable Names', 'Camel Case', 'Pascal Case', 'Snake Case']","['Variable names with more than one word can be difficult to read.There are several techniques you can use to make them more readable:Each word, except the first, starts with a capital letter:', 'Each word starts with a capital letter:', 'Each word is separated by an underscore character:', '', '']","['\nmyvar = ""John""my_var = ""John""_my_var = ""John""myVar = ""John""\n  MYVAR = ""John""myvar2 = ""John"" &&&&&& \n2myvar = ""John""my-var = ""John""\n  my var = ""John""', '', '', '', '']","['Variable Names###&&&|||A variable name must start with a letter or the underscore character|||A variable name cannot start with a number|||A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )|||Variable names are case-sensitive (age, Age and AGE are three different variables)|||']",[],[]
python||Assign Multiple Values,https://www.w3schools.com/python/python_variables_multiple.asp,,"['Many Values to Multiple Variables', 'One Value to Multiple Variables', 'Unpack a Collection']","['Python allows you to assign values to multiple variables in one line:', 'And you can assign the same value to multiple variables in one line:', 'If you have a collection of values in a list, tuple etc.\nPython allows you to extract the values into variables. This is called unpacking.Learn more about unpacking in our Unpack Tuples Chapter.']","['\n  x, y, z = ""Orange"", ""Banana"", ""Cherry""print(x)print(y)print(z)\n', '\n  x = y = z = ""Orange""print(x)print(y)print(z)\n', '\nfruits = [""apple"", ""banana"", ""cherry""]\nx, y, z = fruits\nprint(x)\nprint(y)\nprint(z)\n']",[''],[],[]
python||Output Variables,https://www.w3schools.com/python/python_variables_output.asp,,['Output Variables'],"['The Python print statement is often used to output variables.To combine both text and a variable, Python uses the \n+ character:You can also use the + character to add a variable to another variable:For numbers, the + character works as a mathematical operator:If you try to combine a string and a number, Python will give you an error:']","['\nx = ""awesome""print(""Python is "" + x)\n &&&&&& \nx = ""Python is ""y = ""awesome""z =\xa0 x + y\nprint(z)\n &&&&&& \nx = 5y = 10print(x + y)\n &&&&&& \n  x = 5y = ""John""print(x + y)\n']",[''],[],[]
python||Global Variables,https://www.w3schools.com/python/python_variables_global.asp,,"['Global Variables', 'The global Keyword']","['Variables that are created outside of a function (as in all of the examples \nabove) are known as global variables.Global variables can be used by everyone, both inside of \nfunctions and outside.If you create a variable with the same name inside a function, this variable \nwill be local, and can only be used inside the function. The global variable \nwith the same name will remain as it was, global and with the original value.', 'Normally, when you create a variable inside a function, that variable is \nlocal, and can only be used inside that function.To create a global variable inside a function, you can use the \nglobal keyword.Also, use the global keyword if you want to change a global variable inside a function.']","['\nx = ""awesome""\n  def myfunc():\xa0 print(""Python is "" + x)myfunc() &&&&&& \nx = ""awesome""\n  def myfunc():\xa0 x = ""fantastic""\xa0 print(""Python is "" + x)myfunc()\nprint(""Python is "" + x)', '\n  def myfunc():\xa0 global x\xa0 x = ""fantastic""myfunc()\nprint(""Python is "" + x) &&&&&& \n  x = ""awesome""def myfunc():\xa0 global x\xa0 x = ""fantastic""myfunc()\nprint(""Python is "" + x)']",[''],[],[]
python||Variable Exercises,https://www.w3schools.com/python/python_variables_exercises.asp,,[],"['Now you have learned a lot about variables, and how to use them in Python.Are you ready for a test?Try to insert the missing part to make the code work as expected:Go to the Exercise section and test all of our Python Variable Exercises:\nPython Variable Exercises\n']",[],[''],[],[]
python||Data Types,https://www.w3schools.com/python/python_datatypes.asp,,"['Built-in Data Types', 'Getting the Data Type', 'Setting the Data Type', 'Setting the Specific Data Type']","['In programming, data type is an important concept.Variables can store data of different types, and different types can do \ndifferent things.Python has the following data types built-in by default, in these categories:', 'You can get the data type of any object by using the type() function:', 'In Python, the data type is set when you assign a value to a variable:', 'If you want to specify the data type, you can use the following \nconstructor functions:']","['\nx = 5\nprint(type(x))\n', '', '', '']",[''],"['Text Type:|||str|||&&&Numeric Types:|||int, float,\n    complex|||&&&Sequence Types:|||list, tuple, \n    range|||&&&Mapping Type:|||dict|||&&&Set Types:|||set, frozenset|||&&&Boolean Type:|||bool|||&&&Binary Types:|||bytes, bytearray, \n    memoryview|||&&&', 'Example|||Data Type|||Try it|||&&&x = ""Hello World""|||str|||Try it »|||&&&x = 20|||int|||Try it »|||&&&x = 20.5|||float|||Try it »|||&&&x = 1j|||complex|||Try it »|||&&&x = [""apple"", ""banana"", ""cherry""]|||list|||Try it »|||&&&x = (""apple"", ""banana"", ""cherry"")|||tuple|||Try it »|||&&&x = range(6)|||range|||Try it »|||&&&x = {""name"" : ""John"", ""age"" : 36}|||dict|||Try it »|||&&&x = {""apple"", ""banana"", ""cherry""}|||set|||Try it »|||&&&x = frozenset({""apple"", ""banana"", ""cherry""})|||frozenset|||Try it »|||&&&x = True|||bool|||Try it »|||&&&x = b""Hello""|||bytes|||Try it »|||&&&x = bytearray(5)|||bytearray|||Try it »|||&&&x = memoryview(bytes(5))|||memoryview|||Try it »|||&&&', 'Example|||Data Type|||Try it|||&&&x = str(""Hello World"")|||str|||Try it »|||&&&x = int(20)|||int|||Try it »|||&&&x = float(20.5)|||float|||Try it »|||&&&x = complex(1j)|||complex|||Try it »|||&&&x = list((""apple"", ""banana"", ""cherry""))|||list|||Try it »|||&&&x = tuple((""apple"", ""banana"", ""cherry""))|||tuple|||Try it »|||&&&x = range(6)|||range|||Try it »|||&&&x = dict(name=""John"", age=36)|||dict|||Try it »|||&&&x = set((""apple"", ""banana"", ""cherry""))|||set|||Try it »|||&&&x = frozenset((""apple"", ""banana"", ""cherry""))|||frozenset|||Try it »|||&&&x = bool(5)|||bool|||Try it »|||&&&x = bytes(5)|||bytes|||Try it »|||&&&x = bytearray(5)|||bytearray|||Try it »|||&&&x = memoryview(bytes(5))|||memoryview|||Try it »|||&&&']",[]
python||Numbers,https://www.w3schools.com/python/python_numbers.asp,,"['Python Numbers', 'Int', 'Float', 'Complex', 'Type Conversion', 'Random Number']","['There are three numeric types in Python:Variables of numeric types are created when you assign a value to them:To verify the type of any object in Python, use the type() function:', 'Int, or integer, is a whole number, \npositive or negative, without decimals, of unlimited length.', 'Float, or ""floating point number"" is a number, positive or negative, containing one or more decimals.Float can also be scientific numbers with an ""e"" to indicate the power of 10.', 'Complex numbers are written with a ""j"" as the imaginary part:', 'You can convert from one type to another with the int(), \nfloat(), and complex() methods:', 'Python does not have a random() function to \nmake a random number, but Python has a built-in module called\nrandom that can be used to make random numbers:In our Random Module Reference you will learn more about the Random module.']","['\nx = 1\xa0\xa0\xa0 \n  # inty = 2.8\xa0 # floatz = 1j\xa0\xa0 # complex\n &&&&&& \n  print(type(x))print(type(y))print(type(z))\n', '\nx = 1y = 35656222554887711z = \n  -3255522print(type(x))print(type(y))print(type(z))', '\nx = 1.10y = 1.0z = -35.59print(type(x))print(type(y))print(type(z)) &&&&&& \n  x = 35e3y = 12E4z = -87.7e100print(type(x))print(type(y))\n  print(type(z))', '\n  x = 3+5jy = 5jz = -5jprint(type(x))print(type(y))\n  print(type(z))', '\n  x = 1\xa0\xa0\xa0 # inty = 2.8\xa0 # floatz = 1j\xa0\xa0 # complex#convert from int to float:\n  a = float(x)#convert from float to int:\n  b = int(y)#convert from int to complex:c = complex(x)print(a)print(b)\n  print(c)print(type(a))print(type(b))\n  print(type(c))', '\n  import randomprint(random.randrange(1, 10))']",['Python Numbers###&&&|||int|||float|||complex|||'],[],[]
python||Casting,https://www.w3schools.com/python/python_casting.asp,,['Specify a Variable Type'],"['There may be times when you want to specify a type on to a variable. This can be done with casting. Python is an object-orientated language, and as such it uses classes to define data types, including its primitive types.Casting in python is therefore done using constructor functions:']",[''],"['Specify a Variable Type###&&&|||int() - constructs an integer number from an integer literal, a float literal (by removing |||    all decimals), or a string literal (providing the string represents a whole number)|||float() - constructs a float number from an integer literal, a float literal or a string literal (providing the string represents a float or an integer)|||str() - constructs a string from a wide variety of data types, including strings, integer literals and float literals|||']",[],[]
python||Strings,https://www.w3schools.com/python/python_strings.asp,,"['Strings', 'Assign String to a Variable', 'Multiline Strings', 'Strings are Arrays', 'Looping Through a String', 'String Length', 'Check String', 'Check if NOT']","['Strings in python are surrounded by either single quotation marks, or double quotation marks.\'hello\' is the same as ""hello"".You can display a string literal with the print() function:', 'Assigning a string to a variable is done with the variable name followed by \nan equal sign and the string:', 'You can assign a multiline string to a variable by using three quotes:Or three single quotes:', 'Like many other popular programming languages, strings in Python are arrays of bytes representing unicode characters.However, Python does not have a character data type, a single character is simply a string with a length of 1.Square brackets can be used to access elements of the string.', 'Since strings are arrays, we can loop through the characters in a string, with a for loop.Learn more about For Loops in our Python For Loops chapter.', 'To get the length of a string, use the len() function.', 'To check if a certain phrase or character is present in a string, we can use \nthe keyword \nin.Use it in an if statement:Learn more about If statements in our Python \nIf...Else chapter.', 'To check if a certain phrase or character is NOT present in a string, we can use \nthe keyword not in.Use it in an if statement:']","['\nprint(""Hello"")\nprint(\'Hello\')\n', '\na = ""Hello""print(a)', '\n  a = """"""Lorem ipsum dolor sit amet,consectetur adipiscing elit,sed do \n  eiusmod tempor incididuntut labore et dolore magna aliqua.""""""print(a) &&&&&& \n  a = \'\'\'Lorem ipsum dolor sit amet,consectetur adipiscing elit,sed do \n  eiusmod tempor incididuntut labore et dolore magna aliqua.\'\'\'print(a)', '\na = ""Hello, World!""\nprint(a[1])\n', '\n  for x in ""banana"":\xa0 print(x)\n', '\na = ""Hello, World!""\nprint(len(a))\n', '\n  txt = ""The best things in life are free!""print(""free"" in txt)\n &&&&&& \n  txt = ""The best things in life are free!""if ""free"" in txt:\xa0\nprint(""Yes, \'free\' is present."")\n', '\n  txt = ""The best things in life are free!""print(""expensive"" not in txt)\n   &&&&&& \n  txt = ""The best things in life are free!""if ""expensive"" not in txt:\xa0\nprint(""No, \'expensive\' is NOT present."")\n  ']",[''],[],[]
python||Strings,https://www.w3schools.com/python/python_strings.asp,,"['Strings', 'Assign String to a Variable', 'Multiline Strings', 'Strings are Arrays', 'Looping Through a String', 'String Length', 'Check String', 'Check if NOT']","['Strings in python are surrounded by either single quotation marks, or double quotation marks.\'hello\' is the same as ""hello"".You can display a string literal with the print() function:', 'Assigning a string to a variable is done with the variable name followed by \nan equal sign and the string:', 'You can assign a multiline string to a variable by using three quotes:Or three single quotes:', 'Like many other popular programming languages, strings in Python are arrays of bytes representing unicode characters.However, Python does not have a character data type, a single character is simply a string with a length of 1.Square brackets can be used to access elements of the string.', 'Since strings are arrays, we can loop through the characters in a string, with a for loop.Learn more about For Loops in our Python For Loops chapter.', 'To get the length of a string, use the len() function.', 'To check if a certain phrase or character is present in a string, we can use \nthe keyword \nin.Use it in an if statement:Learn more about If statements in our Python \nIf...Else chapter.', 'To check if a certain phrase or character is NOT present in a string, we can use \nthe keyword not in.Use it in an if statement:']","['\nprint(""Hello"")\nprint(\'Hello\')\n', '\na = ""Hello""print(a)', '\n  a = """"""Lorem ipsum dolor sit amet,consectetur adipiscing elit,sed do \n  eiusmod tempor incididuntut labore et dolore magna aliqua.""""""print(a) &&&&&& \n  a = \'\'\'Lorem ipsum dolor sit amet,consectetur adipiscing elit,sed do \n  eiusmod tempor incididuntut labore et dolore magna aliqua.\'\'\'print(a)', '\na = ""Hello, World!""\nprint(a[1])\n', '\n  for x in ""banana"":\xa0 print(x)\n', '\na = ""Hello, World!""\nprint(len(a))\n', '\n  txt = ""The best things in life are free!""print(""free"" in txt)\n &&&&&& \n  txt = ""The best things in life are free!""if ""free"" in txt:\xa0\nprint(""Yes, \'free\' is present."")\n', '\n  txt = ""The best things in life are free!""print(""expensive"" not in txt)\n   &&&&&& \n  txt = ""The best things in life are free!""if ""expensive"" not in txt:\xa0\nprint(""No, \'expensive\' is NOT present."")\n  ']",[''],[],[]
python||Slicing Strings,https://www.w3schools.com/python/python_strings_slicing.asp,,"['Slicing', 'Slice From the Start', 'Slice To the End', 'Negative Indexing']","['You can return a range of characters by using the slice syntax.Specify the start index and the end index, separated by a colon, to return a \npart of the string.', 'By leaving out the start index, the range will start at the first character:', 'By leaving out the end index, the range will go to the end:', '']","['\nb = ""Hello, World!""\n  print(b[2:5])\n', '\nb = ""Hello, World!""\n  print(b[:5])\n', '\nb = ""Hello, World!""\n  print(b[2:])\n', '\nb = ""Hello, World!""\n  print(b[-5:-2])\n']",[''],[],[]
python||Modify Strings,https://www.w3schools.com/python/python_strings_modify.asp,Python has a set of built-in methods that you can use on strings.,"['Upper Case', 'Lower Case', 'Remove Whitespace', 'Replace String', 'Split String', 'String Methods']","['Whitespace is the space before and/or after the actual text, and very often you want to remove this space.', 'The split() method returns a list where the text between the specified separator becomes the list items.Learn more about Lists in our Python Lists chapter.', 'Learn more about String Methods with our String Methods Reference', '', '', '']","['\na = ""Hello, World!""\nprint(a.upper())\n', '\na = ""Hello, World!""\nprint(a.lower())\n', '\na = "" Hello, World! ""\nprint(a.strip()) # returns ""Hello, World!""\n', '\na = ""Hello, World!""\nprint(a.replace(""H"", ""J""))\n', '\na = ""Hello, World!""\nprint(a.split("","")) # \n  returns [\'Hello\', \' World!\']\n', '']",[''],[],[]
python||String Concatenation,https://www.w3schools.com/python/python_strings_concatenate.asp,,['String Concatenation'],"['To concatenate, or combine, two strings you can use the + operator.']","['\n  a = ""Hello""b = ""World""c = a + b\nprint(c)\n &&&&&& \n  a = ""Hello""b = ""World""c = a + "" "" + b\nprint(c)\n']",[''],[],[]
python||Format - Strings,https://www.w3schools.com/python/python_strings_format.asp,,['String Format'],"['As we learned in the Python Variables chapter, we cannot combine strings and numbers like this:But we can combine strings and numbers by using the format() method!The format() method takes the passed arguments, \nformats them, and places them in the string where the placeholders\n{} are:The format() method takes unlimited number of arguments, and are placed into \nthe respective placeholders:You can use index numbers {0} to be sure the arguments are placed \nin the correct placeholders:', 'Learn more about String Formatting in our String Formatting chapter.']","['\n  age = 36txt = ""My name is John, I am "" + ageprint(txt)\n &&&&&& \n  age = 36txt = ""My name is John, and I am {}""print(txt.format(age))\n &&&&&& \n  quantity = 3itemno = 567price = 49.95myorder = ""I want {} \n  pieces of item {} for {} dollars.""print(myorder.format(quantity, \n  itemno, price))\n &&&&&& \n  quantity = 3itemno = 567price = 49.95myorder = ""I want to pay {2} \n  dollars for {0} pieces of item {1}.""print(myorder.format(quantity, \n  itemno, price))\n']",[''],[],[]
python||Escape Characters,https://www.w3schools.com/python/python_strings_escape.asp,,"['Escape Character', 'Escape Characters']","['To insert characters that are illegal in a string, use an escape character.An escape character is a backslash \\ followed by the character you want to insert.An example of an illegal character is a double quote inside a string that is surrounded by double quotes:To fix this problem, use the escape character \\"":', 'Other escape characters used in Python:']","['\ntxt = ""We are the so-called ""Vikings"" from the north.""\n &&&&&& \ntxt = ""We are the so-called \\""Vikings\\"" from the north.""\n', '']",[''],"[""Code|||Result|||Try it|||&&&\\'|||Single Quote|||Try it »|||&&&\\\\|||Backslash|||Try it »|||&&&\\n|||New Line|||Try it »|||&&&\\r|||Carriage Return|||Try it »|||&&&\\t|||Tab|||Try it »|||&&&\\b|||Backspace|||Try it »|||&&&\\f|||Form Feed||||||&&&\\ooo|||Octal value|||Try it »|||&&&\\xhh|||Hex value|||Try it »|||&&&""]",[]
python||String Methods,https://www.w3schools.com/python/python_strings_methods.asp,,['String Methods'],['Python has a set of built-in methods that you can use on strings.'],[''],[''],"['Method|||Description|||&&&capitalize()|||Converts the first \n    character to upper case|||&&&casefold()|||Converts string into \n    lower case|||&&&center()|||Returns a centered \n    string|||&&&count()|||Returns the number of \n    times a specified value occurs in a string|||&&&encode()|||Returns an encoded \n    version of the string|||&&&endswith()|||Returns true if the \n    string ends with the specified value|||&&&expandtabs()|||Sets the \n    tab size of the string|||&&&find()|||Searches the string for a \n    specified value and returns the position of where it was found|||&&&format()|||Formats specified \n    values in a string|||&&&format_map()|||Formats specified \n    values in a string|||&&&index()|||Searches the string \n    for a specified value and returns the position of where it was found|||&&&isalnum()|||Returns True if all \n    characters in the string are alphanumeric|||&&&isalpha()|||Returns True if all \n    characters in the string are in the alphabet|||&&&isdecimal()|||Returns True if all \n    characters in the string are decimals|||&&&isdigit()|||Returns True if all \n    characters in the string are digits|||&&&isidentifier()|||Returns True if \n    the string is an identifier|||&&&islower()|||Returns True if all \n    characters in the string are lower case|||&&&isnumeric()|||Returns True if \n    all characters in the string are numeric|||&&&isprintable()|||Returns True if \n    all characters in the string are printable|||&&&isspace()|||Returns True if all \n    characters in the string are whitespaces|||&&&istitle()|||Returns True if the string follows the rules of a \n    title|||&&&isupper()|||Returns True if all \n    characters in the string are upper case|||&&&join()|||Joins the elements of \n    an iterable to the end of the string|||&&&ljust()|||Returns a left justified \n    version of the string|||&&&lower()|||Converts a string into \n    lower case|||&&&lstrip()|||Returns a left trim \n    version of the string|||&&&maketrans()|||Returns a \n    translation table to be used in translations|||&&&partition()|||Returns a tuple \n    where the string is parted into three parts|||&&&replace()|||Returns a string \n    where a specified value is replaced with a specified value|||&&&rfind()|||Searches the string for \n    a specified value and returns the last position of where it was found|||&&&rindex()|||Searches the string for \n    a specified value and returns the last position of where it was found|||&&&rjust()|||Returns a right justified \n    version of the string|||&&&rpartition()|||Returns a tuple \n    where the string is parted into three parts|||&&&rsplit()|||Splits the string at \n    the specified separator, and returns a list|||&&&rstrip()|||Returns a right trim \n    version of the string|||&&&split()|||Splits the string at \n    the specified separator, and returns a list|||&&&splitlines()|||Splits the string \n    at line breaks and returns a list|||&&&startswith()|||Returns true if \n    the string starts with the specified value|||&&&strip()|||Returns a trimmed version of the string|||&&&swapcase()|||Swaps cases, lower \n    case becomes upper case and vice versa|||&&&title()|||Converts the first \n    character of each word to upper case|||&&&translate()|||Returns a \n    translated string|||&&&upper()|||Converts a string \n    into upper case|||&&&zfill()|||Fills the string with \n  a specified number of 0 values at the beginning|||&&&']",[]
python||String Exercises,https://www.w3schools.com/python/python_strings_exercises.asp,,[],"['Now you have learned a lot about Strings, and how to use them in Python.Are you ready for a test?Try to insert the missing part to make the code work as expected:Go to the Exercise section and test all of our Python Strings Exercises:\nPython String Exercises\n']",[],[''],[],[]
python||Booleans,https://www.w3schools.com/python/python_booleans.asp,"Booleans represent one of two values: 
True or False.","['Boolean Values', 'Evaluate Values and Variables', 'Most Values are True', 'Some Values are False', 'Functions can Return a Boolean']","['In programming you often need to know if an expression is \nTrue or False.You can evaluate any expression in Python, and get one of two \nanswers, \nTrue or False.When you compare two values, the expression is evaluated and Python returns \nthe Boolean answer:When you run a condition in an if statement, Python returns \nTrue or False:', 'The bool() function allows you to evaluate \nany value, and give you \nTrue or False \nin return,', 'Almost any value is evaluated to True if it \nhas some sort of content.Any string is True, except empty strings.Any number is True, except \n0.Any list, tuple, set, and dictionary are True, except \nempty ones.', 'In fact, there are not many values that evaluate to\nFalse, except empty values, such as (),\n[], {}, \n"""", the number\n0, and the value None. \nAnd of course the value False evaluates to\nFalse.One more value, or object in this case, evaluates to \nFalse, and that is if you have an object that \nis made from a class with a __len__ function that returns \n0 or \nFalse: ', 'You can create functions that returns a Boolean Value:You can execute code based on the Boolean answer of a function:Python also has many built-in functions that return a boolean value, like the \nisinstance() \nfunction, which can be used to determine if an object is of a certain data type:']","['\n  print(10 > 9)print(10 == 9)print(10 < 9) &&&&&& \n  a = 200b = 33if b > a:\xa0 print(""b is greater than a"")\n  else:\xa0 print(""b is not greater than a"")', '\n  print(bool(""Hello""))print(bool(15)) &&&&&& \n  x = ""Hello""y = 15print(bool(x))print(bool(y))', '\n  bool(""abc"")bool(123)bool([""apple"", ""cherry"", ""banana""])', '\n  bool(False)bool(None)bool(0)bool("""")bool(())bool([])\n  bool({}) &&&&&& \n  class myclass():\xa0 def __len__(self):\xa0\xa0\xa0 return 0\nmyobj = myclass()print(bool(myobj))', '\n  def myFunction() :\xa0 return Trueprint(myFunction()) &&&&&& \n  def myFunction() :\xa0 return Trueif myFunction():\xa0 \n  print(""YES!"")else:\xa0 print(""NO!"") &&&&&& \n  x = 200print(isinstance(x, int))']",[''],[],[]
python||Operators,https://www.w3schools.com/python/python_operators.asp,,"['Python Operators', 'Python Arithmetic Operators', 'Python Assignment Operators', 'Python Comparison Operators', 'Python Logical Operators', 'Python Identity Operators', 'Python Membership Operators', 'Python Bitwise Operators']","['Operators are used to perform operations on variables and values.In the example below, we use the + operator to add together two values:Python divides the operators in the following groups:', 'Arithmetic operators are used with numeric values to perform common mathematical operations:', 'Assignment operators are used to assign values to variables:', 'Comparison operators are used to compare two values:', 'Logical operators are used to combine conditional statements:', 'Identity operators are used to compare the objects, not if they are equal, but if they are actually the same object, with the same memory location:', 'Membership operators are used to test if a sequence is presented in an object:', 'Bitwise operators are used to compare (binary) numbers:']","['\n  print(10 + 5)', '', '', '', '', '', '', '']",['Python Operators###&&&|||Arithmetic operators|||Assignment operators|||Comparison operators|||Logical operators|||Identity operators|||Membership operators|||Bitwise operators|||'],"['Operator|||Name|||Example|||Try it|||&&&+|||Addition|||x + y|||Try it »|||&&&-|||Subtraction|||x - y|||Try it »|||&&&*|||Multiplication|||x * y|||Try it »|||&&&/|||Division|||x / y|||Try it »|||&&&%|||Modulus|||x % y|||Try it »|||&&&**|||Exponentiation|||x ** y|||Try it »|||&&&//|||Floor division|||x // y|||Try it »|||&&&', 'Operator|||Example|||Same As|||Try it|||&&&=|||x = 5|||x = 5|||Try it »|||&&&+=|||x += 3|||x = x + 3|||Try it »|||&&&-=|||x -= 3|||x = x - 3|||Try it »|||&&&*=|||x *= 3|||x = x * 3|||Try it »|||&&&/=|||x /= 3|||x = x / 3|||Try it »|||&&&%=|||x %= 3|||x = x % 3|||Try it »|||&&&//=|||x //= 3|||x = x // 3|||Try it »|||&&&**=|||x **= 3|||x = x ** 3|||Try it »|||&&&&=|||x &= 3|||x = x & 3|||Try it »|||&&&|=|||x |= 3|||x = x | 3|||Try it »|||&&&^=|||x ^= 3|||x = x ^ 3|||Try it »|||&&&>>=|||x >>= 3|||x = x >> 3|||Try it »|||&&&<<=|||x <<= 3|||x = x << 3|||Try it »|||&&&', 'Operator|||Name|||Example|||Try it|||&&&==|||Equal|||x == y|||Try it »|||&&&!=|||Not equal|||x != y|||Try it »|||&&&>|||Greater than|||x > y|||Try it »|||&&&<|||Less than|||x < y|||Try it »|||&&&>=|||Greater than or equal to|||x >= y|||Try it »|||&&&<=|||Less than or equal to|||x <= y|||Try it »|||&&&', 'Operator|||Description|||Example|||Try it|||&&&and\xa0|||Returns True if both statements are true|||x < 5 and\xa0 x < 10|||Try it »|||&&&or|||Returns True if one of the statements is true|||x < 5 or x < 4|||Try it »|||&&&not|||Reverse the result, returns False if the result is true|||not(x < 5 and x < 10)|||Try it »|||&&&', 'Operator|||Description|||Example|||Try it|||&&&is\xa0|||Returns True if both variables are the same object|||x is y|||Try it »|||&&&is not|||Returns True if both variables are not the same object|||x is not y|||Try it »|||&&&', 'Operator|||Description|||Example|||Try it|||&&&in\xa0|||Returns True if a sequence with the specified value is present in the object|||x in y|||Try it »|||&&&not in|||Returns True if a sequence with the specified value is not present in the \nobject|||x not in y|||Try it »|||&&&', 'Operator|||Name|||Description|||&&&&\xa0|||AND|||Sets each bit to 1 if both bits are 1|||&&&||||OR|||Sets each bit to 1 if one of two bits is 1|||&&&\xa0^|||XOR|||Sets each bit to 1 if only one of two bits is 1|||&&&~\xa0|||NOT|||Inverts all the bits|||&&&<<|||Zero fill left shift|||Shift left by pushing zeros in from the right and let the leftmost bits fall \noff|||&&&>>|||Signed right shift|||Shift right by pushing copies of the leftmost bit in from the left, and let \nthe rightmost bits fall off|||&&&']",[]
python||Lists,https://www.w3schools.com/python/python_lists.asp,,"['List', 'List Items', 'Ordered', 'Changeable', 'Allow Duplicates', 'List Length', 'List Items - Data Types', 'type()', 'The list() Constructor', 'Python Collections (Arrays)']","['Lists are used to store multiple items in a single variable.Lists are one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are Tuple, \nSet, and Dictionary, all with different qualities and usage.Lists are created using square brackets:', 'List items are ordered, changeable, and allow duplicate values.List items are indexed, the first item has index [0],\nthe second item has index [1] etc.', 'When we say that lists are ordered, it means that the items have a defined order, and that order will not change.If you add new items to a list,\nthe new items will be placed at the end of the list.', 'The list is changeable, meaning that we can change, add, and remove items in a list after it has been created.', 'Since lists are indexed, lists can have items with the same value:', 'To determine how many items a list has, use the \nlen() function:', 'List items can be of any data type:A list can contain different data types:', ""From Python's perspective, lists are defined as objects with the data type 'list':"", 'It is also possible to use the list() constructor when creating a \nnew list.', 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthislist = [""apple"", ""banana"", ""cherry""]\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry"", ""apple"", ""cherry""]\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\nprint(len(thislist))\n', '\nlist1 = [""apple"", ""banana"", ""cherry""]\nlist2 = [1, 5, 7, 9, 3]\nlist3 = [True, False, False]\n &&&&&& \nlist1 = [""abc"", 34, True, 40, ""male""]\n', '\nmylist = [""apple"", ""banana"", ""cherry""]\nprint(type(mylist))\n', '\nthislist = list((""apple"", ""banana"", ""cherry"")) # note the double round-brackets\nprint(thislist)\n', '', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, |||unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** |||and changeable. No duplicate members.|||']",[],[]
python||Lists,https://www.w3schools.com/python/python_lists.asp,,"['List', 'List Items', 'Ordered', 'Changeable', 'Allow Duplicates', 'List Length', 'List Items - Data Types', 'type()', 'The list() Constructor', 'Python Collections (Arrays)']","['Lists are used to store multiple items in a single variable.Lists are one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are Tuple, \nSet, and Dictionary, all with different qualities and usage.Lists are created using square brackets:', 'List items are ordered, changeable, and allow duplicate values.List items are indexed, the first item has index [0],\nthe second item has index [1] etc.', 'When we say that lists are ordered, it means that the items have a defined order, and that order will not change.If you add new items to a list,\nthe new items will be placed at the end of the list.', 'The list is changeable, meaning that we can change, add, and remove items in a list after it has been created.', 'Since lists are indexed, lists can have items with the same value:', 'To determine how many items a list has, use the \nlen() function:', 'List items can be of any data type:A list can contain different data types:', ""From Python's perspective, lists are defined as objects with the data type 'list':"", 'It is also possible to use the list() constructor when creating a \nnew list.', 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthislist = [""apple"", ""banana"", ""cherry""]\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry"", ""apple"", ""cherry""]\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\nprint(len(thislist))\n', '\nlist1 = [""apple"", ""banana"", ""cherry""]\nlist2 = [1, 5, 7, 9, 3]\nlist3 = [True, False, False]\n &&&&&& \nlist1 = [""abc"", 34, True, 40, ""male""]\n', '\nmylist = [""apple"", ""banana"", ""cherry""]\nprint(type(mylist))\n', '\nthislist = list((""apple"", ""banana"", ""cherry"")) # note the double round-brackets\nprint(thislist)\n', '', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, |||unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** |||and changeable. No duplicate members.|||']",[],[]
python||,https://www.w3schools.com/python/python_lists_access.asp,,"['Access Items', 'Check if Item Exists']","['List items are indexed and you can access them by referring to the index number:Negative indexing means start from the end-1 refers to the last item, \n-2 refers to the second last item etc.You can specify a range of indexes by specifying where to start and where to \nend the range.When specifying a range, the return value will be a new list with the \nspecified items.By leaving out the start value, the range will start at the first item:By leaving out the end value, the range will go on to the end of the list:', 'Specify negative indexes if you want to start the search from the end of the \nlist:', 'To determine if a specified item is present in a list use the in keyword:']","['\nthislist = [""apple"", ""banana"", ""cherry""]\nprint(thislist[1])\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry""]\nprint(thislist[-1])\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry"", ""orange"", \n  ""kiwi"", ""melon"", ""mango""]\nprint(thislist[2:5])\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry"", ""orange"", \n  ""kiwi"", ""melon"", ""mango""]\nprint(thislist[:4])\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry"", ""orange"", \n  ""kiwi"", ""melon"", ""mango""]\nprint(thislist[2:])\n', '\nthislist = [""apple"", ""banana"", ""cherry"", ""orange"", \n  ""kiwi"", ""melon"", ""mango""]\nprint(thislist[-4:-1])\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\n  if ""apple"" in thislist:\xa0 print(""Yes, \'apple\' is in the fruits list"")']",[''],[],[]
python||Change List Items,https://www.w3schools.com/python/python_lists_change.asp,,"['Change Item Value', 'Change a Range of Item Values', 'Insert Items']","['To change the value of a specific item, \nrefer to the index number:', 'To change the value of items within a specific range, define a list with the new values, and refer to the range of index numbers where you want to insert the new values:If you insert more items than you replace, the new items will be inserted \nwhere you specified, and the remaining items will move accordingly:If you insert less items than you replace, the new items will be inserted \nwhere you specified, and the remaining items will move accordingly:', 'To insert a new list item, without replacing any of the existing values, we can use the insert() method.The insert() method inserts an item at the specified index:']","['\nthislist = [""apple"", ""banana"", ""cherry""]\nthislist[1] = ""blackcurrant""\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry"", ""orange"", ""kiwi"", ""mango""]\nthislist[1:3] = [""blackcurrant"", ""watermelon""]\nprint(thislist)\n &&&&&& \n  thislist = [""apple"", ""banana"", ""cherry""]thislist[1:2] = [""blackcurrant"", \n  ""watermelon""]print(thislist)  &&&&&& \n  thislist = [""apple"", ""banana"", ""cherry""]thislist[1:3] = [""watermelon""]print(thislist) ', '\nthislist = [""apple"", ""banana"", ""cherry""]\nthislist.insert(2, ""watermelon"")\nprint(thislist)\n']",[''],[],[]
python||,https://www.w3schools.com/python/python_lists_add.asp,,"['Append Items', 'Insert Items', 'Extend List', 'Add Any Iterable']","['To add an item to the end of the list, use the append() \nmethod:', 'To insert a list item at a specified index, use the insert() method.The insert() method inserts an item at the specified index:', 'To append elements from another list to the current list, use the extend() method.The elements will be added to the end of the list.', 'The extend() method does not have to append\nlists, you can add any iterable object (tuples, sets, dictionaries \netc.).']","['\nthislist = [""apple"", ""banana"", ""cherry""]\nthislist.append(""orange"")\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\nthislist.insert(1, ""orange"")\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\ntropical = [""mango"", ""pineapple"", ""papaya""]\nthislist.extend(tropical)\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\n  thistuple = (""kiwi"", ""orange"")\nthislist.extend(thistuple)\nprint(thislist)\n']",[''],[],[]
python||,https://www.w3schools.com/python/python_lists_remove.asp,,"['Remove Specified Item', 'Remove Specified Index', 'Clear the List']","['The remove() method removes the specified item.', 'The pop() method removes the specified \nindex.If you do not specify the index, the pop() method removes the last item.The del keyword also removes the specified \nindex:The del keyword can also delete the list completely.', 'The clear() method empties the list.The list still remains, but it has no content.']","['\nthislist = [""apple"", ""banana"", ""cherry""]\nthislist.remove(""banana"")\nprint(thislist)\n', '\nthislist = [""apple"", ""banana"", ""cherry""]\nthislist.pop(1)\nprint(thislist)\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry""]\nthislist.pop()\nprint(thislist)\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry""]\n  del\nthislist[0]print(thislist)\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry""]\n  del\nthislist', '\nthislist = [""apple"", ""banana"", ""cherry""]\n  thislist.clear()print(thislist)\n']",[''],[],[]
python||,https://www.w3schools.com/python/python_lists_loop.asp,,"['Loop Through a List', 'Loop Through the Index Numbers', 'Using a While Loop', 'Looping Using List Comprehension']","['You can loop through the list items by using a for \nloop:Learn more about for loops in our Python For Loops Chapter.', 'You can also loop through the list items by referring to their index number.Use the range() and\nlen() functions to create a suitable iterable.The iterable created in the example above is [0, 1, 2].', 'You can loop through the list items by using a while loop.Use the len() function to determine the length of the list,\nthen start at 0 and loop your way through the list items by refering to their indexes.Remember to increase the index by 1 after each iteration.Learn more about while loops in our \nPython While Loops Chapter.', 'List Comprehension offers the shortest syntax for looping through lists:Learn more about list comprehension in the next chapter:\nList Comprehension.']","['\nthislist = [""apple"", ""banana"", ""cherry""]\n  for x in thislist:\xa0 print(x)', '\nthislist = [""apple"", ""banana"", ""cherry""]for i \n  in range(len(thislist)):\n\xa0\nprint(thislist[i])', '\nthislist = [""apple"", ""banana"", ""cherry""]i = 0\n  while i < len(thislist):\n\xa0\nprint(thislist[i])\xa0 i = i + 1', '\nthislist = [""apple"", ""banana"", ""cherry""][print(x) for x in thislist]']",[''],[],[]
python||,https://www.w3schools.com/python/python_lists_comprehension.asp,,"['List Comprehension', 'The Syntax']","['List comprehension offers a shorter syntax when you want to create a new list based on the values of an \nexisting list.Example:Based on a list of fruits, you want a new list, containing only the fruits \nwith the letter ""a"" in the name.Without list comprehension you will have to write a for statement \nwith a conditional test inside:With list comprehension you can do all that with only one line of code:', 'The return value is a new list, leaving the old list unchanged.', 'The condition is like a filter that only accepts the items that valuate to \nTrue.The condition\nif x != ""apple""\n\xa0will return True for all elements other \nthan ""apple"", making the new list contain all fruits except ""apple"".The condition is optional and can be omitted:', 'The iterable can be any iterable object, like a list, tuple, set etc.Same example, but with a condition:', 'The expression is the current item in the iteration, but it is also the \noutcome, which you can manipulate before it ends up like a list item in the new \nlist:You can set the outcome to whatever you like:The expression can also contain conditions, not like a filter, but as a \nway to manipulate the outcome:The expression in the example above says:""Return the item if it is not banana, if it is banana return orange"".']","['\n  fruits = [""apple"", ""banana"", ""cherry"", ""kiwi"", ""mango""]newlist = []\nfor x in fruits:\xa0 if ""a"" in x:\xa0\xa0\xa0 \n  newlist.append(x)print(newlist) &&&&&& \n  fruits = [""apple"", ""banana"", ""cherry"", ""kiwi"", ""mango""]newlist = [x \n  for x in fruits if ""a"" in x]print(newlist)', '\n  newlist = [x for x in fruits if x != ""apple""] &&&&&& \n  newlist = [x for x in fruits]', '\n  newlist = [x for x in range(10)] &&&&&& \n  newlist = [x for x in range(10) if x < 5]', '\n  newlist = [x.upper() \n  for x in fruits] &&&&&& \nnewlist = [\'hello\' for x in fruits] &&&&&& \n  newlist = [x if x != ""banana"" else ""orange"" \n  for x in fruits]']",[''],[],[]
python||Sort Lists,https://www.w3schools.com/python/python_lists_sort.asp,,"['Sort List Alphanumerically', 'Sort Descending', 'Customize Sort Function', 'Case Insensitive Sort', 'Reverse Order']","['List objects have a \nsort() method that will sort the list alphanumerically, ascending, by default:', 'To sort descending, use the keyword argument reverse = True:', 'You can also customize your own function by using the keyword argument key = \nfunction.The function will return a number that will be used to sort the list (the \nlowest number first):', 'By default the sort() method is case sensitive,\nresulting in all capital letters being sorted before lower case letters:Luckily we can use built-in functions as key functions when sorting a list.So if you want a case-insensitive sort function, use str.lower as a key function:', 'What if you want to reverse the order of a list, regardless of the alphabet?The reverse() method reverses the current sorting order of the elements.']","['\nthislist = [""orange"", ""mango"", ""kiwi"", \n  ""pineapple"", ""banana""]thislist.sort()\nprint(thislist)\n &&&&&& \nthislist = [100, 50, 65, 82, 23]thislist.sort()\nprint(thislist)\n', '\nthislist = [""orange"", ""mango"", ""kiwi"", \n  ""pineapple"", ""banana""]thislist.sort(reverse = True)\nprint(thislist)\n &&&&&& \nthislist = [100, 50, 65, 82, 23]thislist.sort(reverse = True)\nprint(thislist)\n', '\n  def myfunc(n):\xa0 return abs(n - 50)thislist = [100, 50, 65, 82, 23]thislist.sort(key = \n  myfunc)print(thislist)\n', '\n  thislist = [""banana"", ""Orange"", ""Kiwi"", ""cherry""]thislist.sort()print(thislist)\n &&&&&& \n  thislist = [""banana"", ""Orange"", ""Kiwi"", ""cherry""]thislist.sort(key \n  = str.lower)print(thislist)\n', '\n  thislist = [""banana"", ""Orange"", ""Kiwi"", ""cherry""]thislist.reverse()print(thislist)\n']",[''],[],[]
python||,https://www.w3schools.com/python/python_lists_copy.asp,,['Copy a List'],"['You cannot copy a list simply by typing list2 = \nlist1, because: list2 will only be a \nreference to list1, and changes made in\nlist1 will automatically also be made in\nlist2.There are ways to make a copy, one way is to use the built-in List \nmethod \ncopy().Another way to make a copy is to use the built-in method list().']","['\nthislist = [""apple"", ""banana"", ""cherry""]mylist \n  = thislist.copy()\n  print(mylist)\n &&&&&& \nthislist = [""apple"", ""banana"", ""cherry""]mylist \n  = list(thislist)\n  print(mylist)\n']",[''],[],[]
python||Join Lists,https://www.w3schools.com/python/python_lists_join.asp,,['Join Two Lists'],"['There are several ways to join, or concatenate, two or more lists in Python.One of the easiest ways are by using the + \noperator.Another way to join two lists is by appending all the items from list2 into \nlist1, one by one:Or you can use the extend() \nmethod, \nwhich purpose is to add elements from one list to another \nlist:']","['\n  list1 = [""a"", ""b"", ""c""]list2 = [1, 2, 3]list3 = list1 + list2\n  print(list3) &&&&&& \n  list1 = [""a"", ""b"" , ""c""]list2 = [1, 2, 3]\nfor x in list2:\xa0 list1.append(x)print(list1) &&&&&& \n  list1 = [""a"", ""b"" , ""c""]list2 = [1, 2, 3]list1.extend(list2)\n  print(list1)']",[''],[],[]
python||List Methods,https://www.w3schools.com/python/python_lists_methods.asp,,['List Methods'],['Python has a set of built-in methods that you can use on lists.'],[''],[''],"['Method|||Description|||&&&append()|||Adds an element at \n  the end of the list|||&&&clear()|||Removes all the \n  elements from the list|||&&&copy()|||Returns a copy of the \n  list|||&&&count()|||Returns the number of \n  elements with the specified value|||&&&extend()|||Add the elements of a \n  list (or any iterable), to the end of the current list|||&&&index()|||Returns the index of \n  the first element with the specified value|||&&&insert()|||Adds an element at \n  the specified position|||&&&pop()|||Removes the element at the \n  specified position|||&&&remove()|||Removes the  \n  item with the specified value|||&&&reverse()|||Reverses the order \n  of the list|||&&&sort()|||Sorts the list|||&&&']",[]
python||List Exercises,https://www.w3schools.com/python/python_lists_exercises.asp,,[],"['Now you have learned a lot about lists, and how to use them in Python.Are you ready for a test?Try to insert the missing part to make the code work as expected:Go to the Exercise section and test all of our Python List Exercises:\nPython List Exercises\n']",[],[''],[],[]
python||Tuples,https://www.w3schools.com/python/python_tuples.asp,,"['Tuple', 'Tuple Items', 'Ordered', 'Unchangeable', 'Allow Duplicates', 'Tuple Length', 'Create Tuple With One Item', 'Tuple Items - Data Types', 'type()', 'The tuple() Constructor', 'Python Collections (Arrays)']","['Tuples are used to store multiple items in a single variable.Tuple is one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are List, \nSet, and Dictionary, all with different qualities and usage.A tuple is a collection which is ordered and unchangeable.Tuples are written with round brackets.', 'Tuple items are ordered, unchangeable, and allow duplicate values.Tuple items are indexed, the first item has index [0], the second item has index [1] etc.', 'When we say that tuples are ordered, it means that the items have a defined order, and that order will not change.', 'Tuples are unchangeable, meaning that we cannot change, add or remove items after the tuple has been created.', 'Since tuples are indexed, they can have items with the same value:', 'To determine how many items a tuple has, use the \nlen() function:', 'To create a tuple with only one item, you have to add a comma after the item, \notherwise Python will not recognize it as a tuple.', 'Tuple items can be of any data type:A tuple can contain different data types:', ""From Python's perspective, tuples are defined as objects with the data type 'tuple':"", 'It is also possible to use the tuple() constructor to make a tuple.', 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(thistuple)\n', '\nthistuple = (""apple"", ""banana"", ""cherry"", ""apple"", ""cherry"")\nprint(thistuple)\n', '\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(len(thistuple))\n', '\nthistuple = (""apple"",)\n  print(type(thistuple))#NOT a tuplethistuple = (""apple"")\n  print(type(thistuple))', '\ntuple1 = (""apple"", ""banana"", ""cherry"")\ntuple2 = (1, 5, 7, 9, 3)\ntuple3 = (True, False, False)\n &&&&&& \ntuple1 = (""abc"", 34, True, 40, ""male"")\n', '\nmytuple = (""apple"", ""banana"", ""cherry"")\nprint(type(mytuple))\n', '\nthistuple = tuple((""apple"", ""banana"", ""cherry"")) # note the double round-brackets\nprint(thistuple)\n', '', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, |||unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** |||and changeable. No duplicate members.|||']",[],[]
python||Tuples,https://www.w3schools.com/python/python_tuples.asp,,"['Tuple', 'Tuple Items', 'Ordered', 'Unchangeable', 'Allow Duplicates', 'Tuple Length', 'Create Tuple With One Item', 'Tuple Items - Data Types', 'type()', 'The tuple() Constructor', 'Python Collections (Arrays)']","['Tuples are used to store multiple items in a single variable.Tuple is one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are List, \nSet, and Dictionary, all with different qualities and usage.A tuple is a collection which is ordered and unchangeable.Tuples are written with round brackets.', 'Tuple items are ordered, unchangeable, and allow duplicate values.Tuple items are indexed, the first item has index [0], the second item has index [1] etc.', 'When we say that tuples are ordered, it means that the items have a defined order, and that order will not change.', 'Tuples are unchangeable, meaning that we cannot change, add or remove items after the tuple has been created.', 'Since tuples are indexed, they can have items with the same value:', 'To determine how many items a tuple has, use the \nlen() function:', 'To create a tuple with only one item, you have to add a comma after the item, \notherwise Python will not recognize it as a tuple.', 'Tuple items can be of any data type:A tuple can contain different data types:', ""From Python's perspective, tuples are defined as objects with the data type 'tuple':"", 'It is also possible to use the tuple() constructor to make a tuple.', 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(thistuple)\n', '\nthistuple = (""apple"", ""banana"", ""cherry"", ""apple"", ""cherry"")\nprint(thistuple)\n', '\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(len(thistuple))\n', '\nthistuple = (""apple"",)\n  print(type(thistuple))#NOT a tuplethistuple = (""apple"")\n  print(type(thistuple))', '\ntuple1 = (""apple"", ""banana"", ""cherry"")\ntuple2 = (1, 5, 7, 9, 3)\ntuple3 = (True, False, False)\n &&&&&& \ntuple1 = (""abc"", 34, True, 40, ""male"")\n', '\nmytuple = (""apple"", ""banana"", ""cherry"")\nprint(type(mytuple))\n', '\nthistuple = tuple((""apple"", ""banana"", ""cherry"")) # note the double round-brackets\nprint(thistuple)\n', '', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, |||unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** |||and changeable. No duplicate members.|||']",[],[]
python||Access Tuple Items,https://www.w3schools.com/python/python_tuples_access.asp,,"['Access Tuple Items', 'Negative Indexing', 'Range of Indexes', 'Range of Negative Indexes', 'Check if Item Exists']","['You can access tuple items by referring to the index number, inside square \nbrackets:', 'Negative indexing means start from the end.-1 refers to the last item, \n-2 refers to the second last item etc.', 'You can specify a range of indexes by specifying where to start and where to \nend the range.When specifying a range, the return value will be a new tuple with the \nspecified items.By leaving out the start value, the range will start at the first item:By leaving out the end value, the range will go on to the end of the list:', 'Specify negative indexes if you want to start the search from the end of the \ntuple:', 'To determine if a specified item is present in a tuple use the in keyword:']","['\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(thistuple[1])\n', '\nthistuple = (""apple"", ""banana"", ""cherry"")\nprint(thistuple[-1])\n', '\nthistuple = (""apple"", ""banana"", ""cherry"", ""orange"", ""kiwi"", ""melon"", ""mango"")\nprint(thistuple[2:5])\n &&&&&& \nthistuple = (""apple"", ""banana"", ""cherry"", ""orange"", ""kiwi"", ""melon"", ""mango"")\nprint(thistuple[:4])\n &&&&&& \nthistuple = (""apple"", ""banana"", ""cherry"", ""orange"", ""kiwi"", ""melon"", ""mango"")\nprint(thistuple[2:])\n', '\nthistuple = (""apple"", ""banana"", ""cherry"", ""orange"", ""kiwi"", ""melon"", ""mango"")\nprint(thistuple[-4:-1])\n', '\nthistuple = (""apple"", ""banana"", ""cherry"")\n  if ""apple"" in thistuple:\xa0 print(""Yes, \'apple\' is in the fruits \n  tuple"")']",[''],[],[]
python||Update Tuples,https://www.w3schools.com/python/python_tuples_update.asp,,"['Change Tuple Values', 'Add Items', 'Remove Items']","['Tuples are unchangeable, meaning that you cannot change, add, or remove items once the tuple is created.But there are some workarounds.', 'Once a tuple is created, you cannot change its values. Tuples are unchangeable, \nor immutable as it also is called.But there is a workaround. You can convert the tuple into a list, change the \nlist, and convert the list back into a tuple.', 'Since tuples are immutable, they do not have a build-in \nappend() method, but \nthere are other ways to add items to a tuple.1. Convert into a list: Just like the workaround for changing a tuple, you can convert it into a list, add your item(s), and convert it back into a tuple.2. Add tuple to a tuple. You are allowed to add tuples to \ntuples, so if you want to add one item, (or many), create a new tuple with the \nitem(s), and add it to the existing tuple:', 'Tuples are unchangeable, so you cannot remove items \nfrom it, but you can use the same workaround as we used for changing and adding tuple items:Or you can delete the tuple completely:']","['\n  x = (""apple"", ""banana"", ""cherry"")y = list(x)y[1] = ""kiwi""x = \n  tuple(y)print(x)', '\n  thistuple = (""apple"", ""banana"", ""cherry"")y = list(thistuple)y.append(""orange"")\n  thistuple = \n  tuple(y) &&&&&& \n  thistuple = (""apple"", ""banana"", ""cherry"")y = (""orange"",)thistuple += y\nprint(thistuple)', '\n  thistuple = (""apple"", ""banana"", ""cherry"")y = list(thistuple)y.remove(""apple"")\n  thistuple = \n  tuple(y) &&&&&& \nthistuple = (""apple"", ""banana"", ""cherry"")\n  del\nthistupleprint(thistuple)\n  #this will raise an error because the tuple no longer exists']",[''],[],[]
python||Unpack Tuples,https://www.w3schools.com/python/python_tuples_unpack.asp,,"['Unpacking a Tuple', '']","['When we create a tuple, we normally assign values to it. This is called ""packing"" a tuple:But, in Python, we are also allowed to extract the values back into variables. This is called ""unpacking"":', 'If the number of variables is less than the number of values, you can add an * to the variable name and the\nvalues will be assigned to the variable as a list:If the asterisk is added to another variable name than the last,\nPython will assign values to the variable until the number of values left matches the number of variables left.']","['\nfruits = (""apple"", ""banana"", ""cherry"")\n &&&&&& \nfruits = (""apple"", ""banana"", ""cherry"")\n\n(green, yellow, red) = fruits\n\nprint(green)\nprint(yellow)\nprint(red)\n', '\nfruits = (""apple"", ""banana"", ""cherry"", ""strawberry"", ""raspberry"")\n\n(green, yellow, *red) = fruits\n\nprint(green)\nprint(yellow)\nprint(red)\n &&&&&& \nfruits = (""apple"", ""mango"", ""papaya"", ""pineapple"", ""cherry"")\n\n(green, *tropic, red) = fruits\n\nprint(green)\nprint(tropic)\nprint(red)\n']",[''],[],[]
python||Loop Tuples,https://www.w3schools.com/python/python_tuples_loop.asp,,"['Loop Through a Tuple', 'Loop Through the Index Numbers', 'Using a While Loop']","['You can loop through the tuple items by using a for loop.Learn more about for loops in our Python For Loops Chapter.', 'You can also loop through the tuple items by referring to their index number.Use the range() and len() functions to create a suitable iterable.', 'You can loop through the list items by using a while loop.Use the len() function to determine the length of the tuple,\nthen start at 0 and loop your way through the tuple items by refering to their indexes.Remember to increase the index by 1 after each iteration.Learn more about while loops in our \nPython While Loops Chapter.']","['\nthistuple = (""apple"", ""banana"", ""cherry"")\n  for x in thistuple:\xa0 print(x)', '\nthistuple = (""apple"", ""banana"", ""cherry"")\nfor i in range(len(thistuple)):\n\xa0 print(thistuple[i])', '\nthistuple = (""apple"", ""banana"", ""cherry"")\ni = 0\nwhile i < len(thistuple):\n\xa0 print(thistuple[i])\n\xa0 i = i + 1\n']",[''],[],[]
python||Join Tuples,https://www.w3schools.com/python/python_tuples_join.asp,,"['Join Two Tuples', 'Multiply Tuples']","['To join two or more tuples you can use the + \noperator:', 'If you want to multiply the content of a tuple a given number of times, you can use the * \noperator:']","['\n  tuple1 = (""a"", ""b"" , ""c"")tuple2 = (1, 2, 3)\n  tuple3 = tuple1 + tuple2\n  print(tuple3)', '\n  fruits = (""apple"", ""banana"", ""cherry"")mytuple = fruits * 2\n  print(mytuple)']",[''],[],[]
python||Tuple Methods,https://www.w3schools.com/python/python_tuples_methods.asp,,['Tuple Methods'],['Python has two built-in methods that you can use on tuples.'],[''],[''],['Method|||Description|||&&&count()|||Returns the number of times a specified value occurs in a tuple|||&&&index()|||Searches the tuple for a specified value and returns the position of where it was found|||&&&'],[]
python||Tuple Exercises,https://www.w3schools.com/python/python_tuples_exercises.asp,,[],"['Now you have learned a lot about tuples, and how to use them in Python.Are you ready for a test?Try to insert the missing part to make the code work as expected:Go to the Exercise section and test all of our Python Tuple Exercises:\nPython Tuple Exercises\n']",[],[''],[],[]
python||Sets,https://www.w3schools.com/python/python_sets.asp,,"['Set', 'Set Items', 'Unordered', 'Unchangeable', 'Duplicates Not Allowed', 'Get the Length of a Set', 'Set Items - Data Types', 'type()', 'The set() Constructor', 'Python Collections (Arrays)']","['Sets are used to store multiple items in a single variable.Set is one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are List, \nTuple, and Dictionary, all with different qualities and usage.A set is a collection which is unordered, unchangeable*, and unindexed.Sets are written with curly brackets.', 'Set items are unordered, unchangeable, and do not allow duplicate values.', 'Unordered means that the items in a set do not have a defined order.Set items can appear in a different order every time you use them, \nand cannot be referred to by index or key.', 'Set items are unchangeable, meaning that we cannot change the items after the set has been created.', 'Sets cannot have two items with the same value.', 'To determine how many items a set has, use the len() \nfunction.', 'Set items can be of any data type:A set can contain different data types:', ""From Python's perspective, sets are defined as objects with the data type 'set':"", 'It is also possible to use the set() \nconstructor to make a set.', 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthisset = {""apple"", ""banana"", ""cherry""}print(thisset)', '\n  thisset = {""apple"", ""banana"", ""cherry"", ""apple""}\n  print(thisset)\n', '\n  thisset = {""apple"", ""banana"", ""cherry""}\n  print(len(thisset))', '\n  set1 = {""apple"", ""banana"", ""cherry""}\n  set2 = {1, 5, 7, 9, 3}\n  set3 = {True, False, False} &&&&&& \n  set1 = {""abc"", 34, True, 40, ""male""}', '\nmyset = {""apple"", ""banana"", ""cherry""}\nprint(type(myset))\n', '\nthisset = set((""apple"", ""banana"", ""cherry"")) # note the double round-brackets\nprint(thisset)', '', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** |||and changeable. No duplicate members.|||']",[],[]
python||Sets,https://www.w3schools.com/python/python_sets.asp,,"['Set', 'Set Items', 'Unordered', 'Unchangeable', 'Duplicates Not Allowed', 'Get the Length of a Set', 'Set Items - Data Types', 'type()', 'The set() Constructor', 'Python Collections (Arrays)']","['Sets are used to store multiple items in a single variable.Set is one of 4 built-in data types in Python used to store collections of \ndata, the other 3 are List, \nTuple, and Dictionary, all with different qualities and usage.A set is a collection which is unordered, unchangeable*, and unindexed.Sets are written with curly brackets.', 'Set items are unordered, unchangeable, and do not allow duplicate values.', 'Unordered means that the items in a set do not have a defined order.Set items can appear in a different order every time you use them, \nand cannot be referred to by index or key.', 'Set items are unchangeable, meaning that we cannot change the items after the set has been created.', 'Sets cannot have two items with the same value.', 'To determine how many items a set has, use the len() \nfunction.', 'Set items can be of any data type:A set can contain different data types:', ""From Python's perspective, sets are defined as objects with the data type 'set':"", 'It is also possible to use the set() \nconstructor to make a set.', 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthisset = {""apple"", ""banana"", ""cherry""}print(thisset)', '\n  thisset = {""apple"", ""banana"", ""cherry"", ""apple""}\n  print(thisset)\n', '\n  thisset = {""apple"", ""banana"", ""cherry""}\n  print(len(thisset))', '\n  set1 = {""apple"", ""banana"", ""cherry""}\n  set2 = {1, 5, 7, 9, 3}\n  set3 = {True, False, False} &&&&&& \n  set1 = {""abc"", 34, True, 40, ""male""}', '\nmyset = {""apple"", ""banana"", ""cherry""}\nprint(type(myset))\n', '\nthisset = set((""apple"", ""banana"", ""cherry"")) # note the double round-brackets\nprint(thisset)', '', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** |||and changeable. No duplicate members.|||']",[],[]
python||Access Set Items,https://www.w3schools.com/python/python_sets_access.asp,,"['Access Items', 'Change Items']","['You cannot access items in a set by referring to an index or a key.But you can loop through the set items using a for \nloop, or ask if a specified value is present in a set, by using the\nin keyword.', '']","['\n  thisset = {""apple"", ""banana"", ""cherry""}for x in thisset:\xa0 print(x) &&&&&& \n  thisset = {""apple"", ""banana"", ""cherry""}print(""banana"" \n  in thisset)', '']",[''],[],[]
python||Add Set Items,https://www.w3schools.com/python/python_sets_add.asp,,"['Add Items', 'Add Sets', 'Add Any Iterable']","['To add one item to a set use the add() \nmethod.', 'To add items from another set into the current set, use the update() \nmethod.', 'The object in the update() method does not have \nto be a set, it can be any iterable object (tuples, lists, dictionaries etc.).']","['\n  thisset = {""apple"", ""banana"", ""cherry""}\n  thisset.add(""orange"")print(thisset)', '\n  thisset = {""apple"", ""banana"", ""cherry""}tropical = {""pineapple"", ""mango"", ""papaya""}\n  thisset.update(tropical)\nprint(thisset)', '\n  thisset = {""apple"", ""banana"", ""cherry""}\n  mylist = [""kiwi"", ""orange""]\n  thisset.update(mylist)\nprint(thisset)']",[''],[],[]
python||Remove Set Items,https://www.w3schools.com/python/python_sets_remove.asp,,['Remove Item'],"['To remove an item in a set, use the remove(), or the discard() method.You can also use the pop() method to remove \nan item, but this method will remove the last item. Remember that sets \nare unordered, so you will not know what item that gets removed.The return value of the pop() method is the \nremoved item.']","['\n  thisset = {""apple"", ""banana"", ""cherry""}\n  thisset.remove(""banana"")\n  print(thisset) &&&&&& \n  thisset = {""apple"", ""banana"", ""cherry""}\n  thisset.discard(""banana"")\n  print(thisset) &&&&&& \n  thisset = {""apple"", ""banana"", ""cherry""}\n  x =\n  thisset.pop()print(x)\n  print(thisset) &&&&&& \n  thisset = {""apple"", ""banana"", ""cherry""}\n  thisset.clear()\n  print(thisset) &&&&&& \n  thisset = {""apple"", ""banana"", ""cherry""}\n  del\n  thisset\n  print(thisset)']",[''],[],[]
python||Loop Sets,https://www.w3schools.com/python/python_sets_loop.asp,,['Loop Items'],['You can loop through the set items by using a for \nloop:'],"['\n  thisset = {""apple"", ""banana"", ""cherry""}for x in thisset:\xa0 print(x)']",[''],[],[]
python||Join Sets,https://www.w3schools.com/python/python_sets_join.asp,,"['Join Two Sets', 'Keep ONLY the Duplicates', 'Keep All, But NOT the Duplicates']","['There are several ways to join two or more sets in Python.You can use the union() method that returns a new set containing all items from both sets,\nor the update() method that inserts all the items from one set into another:', 'The intersection_update() method will keep only the items that are present in both sets.The intersection() method will return a new set, that only contains the items that are present in both sets.', 'The symmetric_difference_update() method will \nkeep only the elements that are NOT present in both sets.The symmetric_difference() method will return a new set,\nthat contains only the elements that are NOT present in both sets.']","['\n  set1 = {""a"", ""b"" , ""c""}set2 = {1, 2, 3}\n  set3 = set1.union(set2)print(set3) &&&&&& \n  set1 = {""a"", ""b"" , ""c""}set2 = {1, 2, 3}\n  set1.update(set2)print(set1)', '\n  x = {""apple"", ""banana"", ""cherry""}y = {""google"", ""microsoft"", ""apple""}\nx.intersection_update(y)print(x) &&&&&& \n  x = {""apple"", ""banana"", ""cherry""}y = {""google"", ""microsoft"", ""apple""}\nz = x.intersection(y)print(z)', '\n  x = {""apple"", ""banana"", ""cherry""}y = {""google"", ""microsoft"", ""apple""}\nx.symmetric_difference_update(y)print(x) &&&&&& \n  x = {""apple"", ""banana"", ""cherry""}y = {""google"", ""microsoft"", ""apple""}\nz = x.symmetric_difference(y)print(z)']",[''],[],[]
python||Set Methods,https://www.w3schools.com/python/python_sets_methods.asp,,['Set Methods'],['Python has a set of built-in methods that you can use on sets.'],[''],[''],"['Method|||Description|||&&&add()|||Adds an element to the \n  set|||&&&clear()|||Removes all the \n  elements from the set|||&&&copy()|||Returns a copy of the set|||&&&difference()|||Returns a set \n    containing the difference between two or more sets|||&&&difference_update()|||Removes the \n    items in this set that are also included in another, specified set|||&&&discard()|||Remove the specified \n  item|||&&&intersection()|||Returns a set, \n    that is the intersection of two other sets|||&&&intersection_update()|||\n  Removes the items in this set that are not present in other, specified set(s)|||&&&isdisjoint()|||Returns whether \n    two sets have a intersection or not|||&&&issubset()|||Returns whether \n    another set contains this set or not|||&&&issuperset()|||Returns whether \n  this set contains another set or not|||&&&pop()|||Removes an element from the \n  set|||&&&remove()|||Removes the specified element|||&&&symmetric_difference()|||Returns \n    a set with the symmetric differences of two sets|||&&&symmetric_difference_update()|||\n  inserts the symmetric differences from this set and another|||&&&union()|||Return a set containing \n    the union of sets|||&&&update()|||Update the set with the \n  union of this set and others|||&&&']",[]
python||Set Exercises,https://www.w3schools.com/python/python_sets_exercises.asp,,[],"['Now you have learned a lot about sets, and how to use them in Python.Are you ready for a test?Try to insert the missing part to make the code work as expected:', 'Go to the Exercise section and test all of our Python Set Exercises:\nPython Set Exercises\n']",[],[''],[],[]
python||Dictionaries,https://www.w3schools.com/python/python_dictionaries.asp,,"['Dictionary', 'Dictionary Items', 'Ordered or Unordered?', 'Changeable', 'Duplicates Not Allowed', 'Dictionary Length', 'Dictionary Items - Data Types', 'type()', 'Python Collections (Arrays)']","['Dictionaries are used to store data values in key:value pairs.A dictionary is a collection which is ordered*, changeable and do not \nallow duplicates.Dictionaries are written with curly brackets, and have keys and values:', 'Dictionary items are ordered, changeable, and does not allow duplicates.Dictionary items are presented in key:value pairs, and can be referred to by \nusing the key name.', 'When we say that dictionaries are ordered, it means that the items have a defined order, and that order will not change.Unordered means that the items does not \nhave a defined order, you cannot refer to an item by using an index.', 'Dictionaries are changeable, meaning that we can change, add or remove items after the \ndictionary has been created.', 'Dictionaries cannot have two items with the same key:', 'To determine how many items a dictionary has, use the \nlen() function:', 'The values in dictionary items can be of any data type:', ""From Python's perspective, dictionaries are defined as objects with the data type 'dict':"", 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\nprint(thisdict)\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\nprint(thisdict[""brand""])\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964,\xa0 ""year"": 2020\n}\nprint(thisdict)', '\nprint(len(thisdict))\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""electric"": False,\n\xa0\xa0""year"": 1964,\xa0 ""colors"": [""red"", ""white"", ""blue""]\n} ', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\nprint(type(thisdict))', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, |||unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** and changeable. No duplicate members.|||']",[],[]
python||Dictionaries,https://www.w3schools.com/python/python_dictionaries.asp,,"['Dictionary', 'Dictionary Items', 'Ordered or Unordered?', 'Changeable', 'Duplicates Not Allowed', 'Dictionary Length', 'Dictionary Items - Data Types', 'type()', 'Python Collections (Arrays)']","['Dictionaries are used to store data values in key:value pairs.A dictionary is a collection which is ordered*, changeable and do not \nallow duplicates.Dictionaries are written with curly brackets, and have keys and values:', 'Dictionary items are ordered, changeable, and does not allow duplicates.Dictionary items are presented in key:value pairs, and can be referred to by \nusing the key name.', 'When we say that dictionaries are ordered, it means that the items have a defined order, and that order will not change.Unordered means that the items does not \nhave a defined order, you cannot refer to an item by using an index.', 'Dictionaries are changeable, meaning that we can change, add or remove items after the \ndictionary has been created.', 'Dictionaries cannot have two items with the same key:', 'To determine how many items a dictionary has, use the \nlen() function:', 'The values in dictionary items can be of any data type:', ""From Python's perspective, dictionaries are defined as objects with the data type 'dict':"", 'There are four collection data types in the Python programming language:When choosing a collection type, it is useful to understand the properties of that type. Choosing the right type for a particular data set could mean retention of meaning, and, it could mean an increase in efficiency or security.']","['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\nprint(thisdict)\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\nprint(thisdict[""brand""])\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964,\xa0 ""year"": 2020\n}\nprint(thisdict)', '\nprint(len(thisdict))\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""electric"": False,\n\xa0\xa0""year"": 1964,\xa0 ""colors"": [""red"", ""white"", ""blue""]\n} ', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\nprint(type(thisdict))', '', '', '']","['Python Collections (Arrays)###&&&|||List is a collection which is ordered and changeable. Allows duplicate members.|||Tuple is a collection which is ordered and unchangeable. Allows duplicate members.|||Set is a collection which is unordered, |||unchangeable*, and unindexed. No duplicate members.|||Dictionary is a collection which is ordered** and changeable. No duplicate members.|||']",[],[]
python||Access Dictionary Items,https://www.w3schools.com/python/python_dictionaries_access.asp,,"['Accessing Items', 'Get Keys', 'Get Values', 'Get Items', 'Check if Key Exists']","['You can access the items of a dictionary by referring to its key name, inside \nsquare brackets:There is also a method called get() that will give you the same result:', 'The keys() method will return a list of all the keys in the dictionary.The list of the keys is a view of the dictionary, meaning that any \nchanges done to the dictionary will be reflected in the keys list.', 'The values() method will return a list of all the values in the dictionary.The list of the values is a view of the dictionary, meaning that any \nchanges done to the dictionary will be reflected in the values list.', 'The items() method will return each item in a dictionary, as tuples in a list.The returned list is a view of the items of the dictionary, meaning that any \nchanges done to the dictionary will be reflected in the items list.', 'To determine if a specified key is present in a dictionary use the in keyword:']","['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}x = thisdict[""model""]\n &&&&&& \n  x = thisdict.get(""model"")\n', '\n  x = thisdict.keys() &&&&&& \n  car = {""brand"": ""Ford"",""model"": ""Mustang"",""year"": 1964}\nx = car.keys()print(x) #before the changecar[""color""] = \n  ""white""print(x) #after the change', '\n  x = thisdict.values() &&&&&& \n  car = {""brand"": ""Ford"",""model"": ""Mustang"",""year"": 1964}\nx = car.values()print(x) #before the changecar[""year""] \n  = 2020print(x) #after the change &&&&&& \n  car = {""brand"": ""Ford"",""model"": ""Mustang"",""year"": 1964}\nx = car.values()print(x) #before the changecar[""color""] \n  = ""red""print(x) #after the change', '\n  x = thisdict.items() &&&&&& \n  car = {""brand"": ""Ford"",""model"": ""Mustang"",""year"": 1964}\nx = car.items()print(x) #before the changecar[""year""] \n  = 2020print(x) #after the change &&&&&& \n  car = {""brand"": ""Ford"",""model"": ""Mustang"",""year"": 1964}\nx = car.items()print(x) #before the changecar[""color""] \n  = ""red""print(x) #after the change', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}\n  if ""model"" in thisdict:\xa0 print(""Yes, \'model\' is \n  one of the keys in the thisdict dictionary"")']",[''],[],[]
python||Change Dictionary Items,https://www.w3schools.com/python/python_dictionaries_change.asp,,"['Change Values', 'Update Dictionary']","['You can change the value of a specific item by referring to its key name:', 'The update() method will update the dictionary with the items from the given \nargument.The argument must be a dictionary, or an iterable object with key:value pairs.']","['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict[""year""] = 2018\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict.update({""year"": 2020})']",[''],[],[]
python||Add Dictionary Items,https://www.w3schools.com/python/python_dictionaries_add.asp,,"['Adding Items', 'Update Dictionary']","['Adding an item to the dictionary is done by using a new index key and assigning a value to it:', 'The update() method will update the dictionary with the items from \na given \nargument. If the item does not exist, the item will be added.The argument must be a dictionary, or an iterable object with key:value pairs.']","['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict[""color""] = ""red""print(thisdict)\n', '\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict.update({""color"": \n  ""red""})']",[''],[],[]
python||Remove Dictionary Items,https://www.w3schools.com/python/python_dictionaries_remove.asp,,['Removing Items'],['There are several methods to remove items from a dictionary:'],"['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict.pop(""model"")\n  print(thisdict) &&&&&& \nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict.popitem()\n  print(thisdict) &&&&&& \nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}del thisdict[""model""]print(thisdict) &&&&&& \nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}del thisdictprint(thisdict) #this will cause an error because ""thisdict"" \n  no longer exists. &&&&&& \nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}thisdict.clear()print(thisdict)']",[''],[],[]
python||Loop Dictionaries,https://www.w3schools.com/python/python_dictionaries_loop.asp,,['Loop Through a Dictionary'],"['You can loop through a dictionary by using a\nfor loop.When looping through a dictionary, the return value are the keys of \nthe dictionary, but there are methods to return the values as well.']","['\n  for x in thisdict:\xa0 print(x) &&&&&& \n  for x in thisdict:\xa0 print(thisdict[x]) &&&&&& \n  for x in thisdict.values():\xa0 print(x) &&&&&& \n  for x in thisdict.keys():\xa0 print(x) &&&&&& \n  for x, y in thisdict.items():\xa0 print(x, y)']",[''],[],[]
python||Copy Dictionaries,https://www.w3schools.com/python/python_dictionaries_copy.asp,,['Copy a Dictionary'],"['You cannot copy a dictionary simply by typing dict2 = \ndict1, because: dict2 will only be a \nreference to dict1, and changes made in\ndict1 will automatically also be made in\ndict2.There are ways to make a copy, one way is to use the built-in Dictionary \nmethod \ncopy().Another way to make a copy is to use the built-in function \ndict().']","['\nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}mydict \n  = thisdict.copy()\n  print(mydict)\n &&&&&& \nthisdict =\t{\n\xa0\xa0""brand"": ""Ford"",\n\xa0\xa0""model"": ""Mustang"",\n\xa0\xa0""year"": 1964\n}mydict \n  = dict(thisdict)\n  print(mydict)']",[''],[],[]
python||Nested Dictionaries,https://www.w3schools.com/python/python_dictionaries_nested.asp,,['Nested Dictionaries'],"['A dictionary can contain dictionaries, this is called nested \ndictionaries.Or, if you want to add three dictionaries into a new \ndictionary:']","['\n  myfamily = {\xa0 ""child1"" : {\xa0\xa0\xa0 ""name"" : ""Emil"",\n  \xa0\xa0\xa0 ""year"" : 2004\xa0 },\xa0 ""child2"" : {\xa0\xa0\xa0 \n  ""name"" : ""Tobias"",\xa0\xa0\xa0 ""year"" : 2007\xa0 },\xa0 \n  ""child3"" : {\xa0\xa0\xa0 ""name"" : ""Linus"",\n  \xa0\xa0\xa0 ""year"" : 2011\xa0 }}  &&&&&& \n  child1 = {\xa0 ""name"" : ""Emil"",\xa0 ""year"" : 2004}child2 = {\xa0 \n  ""name"" : ""Tobias"",\xa0 ""year"" : 2007}child3 = {\xa0 ""name"" : ""Linus"",\xa0 \n  ""year"" : 2011}myfamily = {\xa0 ""child1"" : child1,\xa0 \n  ""child2"" : child2,\xa0 ""child3"" : child3}']",[''],[],[]
python||Dictionary Methods,https://www.w3schools.com/python/python_dictionaries_methods.asp,,['Dictionary Methods'],['Python has a set of built-in methods that you can use on dictionaries.'],[''],[''],"[""Method|||Description|||&&&clear()|||Removes all the elements from the dictionary|||&&&copy()|||Returns a copy of the dictionary|||&&&fromkeys()|||Returns a dictionary with the specified keys and value|||&&&get()|||Returns the value of the specified key|||&&&items()|||Returns a list containing a tuple for each key value pair|||&&&keys()|||Returns a list containing the dictionary's keys|||&&&pop()|||Removes the element with the specified key|||&&&popitem()|||Removes the last \n  inserted key-value pair|||&&&setdefault()|||Returns the value of the specified key. If the key does not exist: insert the key, with the specified value|||&&&update()|||Updates the dictionary with the specified key-value pairs|||&&&values()|||Returns a list of all the values in the dictionary|||&&&""]",[]
python||Dictionary Exercises,https://www.w3schools.com/python/python_dictionaries_exercises.asp,,[],"['Now you have learned a lot about dictionaries, and how to use them in Python.Are you ready for a test?Try to insert the missing part to make the code work as expected:', 'Go to the Exercise section and test all of our Python Dictionary Exercises:\nPython Dictionary Exercises\n']",[],[''],[],[]
python||If ... Else,https://www.w3schools.com/python/python_conditions.asp,,"['Python Conditions and If statements', 'Indentation']","['Python supports the usual logical conditions from mathematics:These conditions can be used in several ways, most commonly in ""if statements"" and loops.An ""if statement"" is written by using the if keyword.In this example we use two variables, a and b,\nwhich are used as part of the if statement to test whether b is greater than a.\nAs a is 33, and b is 200,\nwe know that 200 is greater than 33, and so we print to screen that ""b is greater than a"".Python relies on indentation (whitespace at the beginning of a line) to define scope in the code. Other programming languages often use curly-brackets for this purpose.\n\n\nExample\nIf statement, without indentation (will raise an error):\n\na = 33\nb = 200\nif b > a:\nprint(""b is greater than a"")\n# you will get an error\n\nTry it Yourself »\n\n\n\n\n\n\n\n\nElif\nThe elif keyword is pythons way of saying ""if the previous conditions were not true, then \ntry this condition"".\n\nExample\n\na = 33\nb = 33\nif b > a:\n\t\xa0\n\tprint(""b is greater than a"")\nelif a == b:\n\t\xa0\n\tprint(""a and b are equal"")\n\nTry it Yourself »\n\nIn this example a is equal to b, so the first condition is not true, but the elif condition is true, so we print to screen that ""a and b are equal"".\n\nElse\nThe else keyword catches anything which isn\'t caught by the preceding conditions.\n\nExample\n\na = 200\nb = 33\nif b > a:\n\t\xa0\n\tprint(""b is greater than a"")\nelif a == b:\n\t\xa0\n\tprint(""a and b are equal"")\n  else:\n\t\xa0\n\tprint(""a is greater than b"")\n\nTry it Yourself »\n\nIn this example a is greater than b,\nso the first condition is not true, also the elif condition is not true,\nso we go to the else condition and print to screen that ""a is greater than b"".\nYou can also have an else without the\nelif:\n\nExample\n\na = 200\nb = 33\nif b > a:\n\t\xa0\n\tprint(""b is greater than a"")\n  else:\n\t\xa0\n\tprint(""b is not greater than a"")\n\nTry it Yourself »\n\n\nShort Hand If\nIf you have only one statement to execute, you can put it on the same line as the if statement.\n\nExample\nOne line if statement:\n\n  if a > b: print(""a is greater than b"")\n\nTry it Yourself »\n\n\nShort Hand If ... Else\nIf you have only one statement to execute, one for if, and one for else, you can put it \nall on the same line:\n\nExample\nOne line if else statement:\n\n  a = 2b = 330print(""A"") if a > b else print(""B"")\nTry it Yourself »\n\n\nThis technique is known as Ternary Operators, or Conditional \n  Expressions.\n\nYou can also have multiple else statements on the same line:\n\nExample\nOne line if else statement, with 3 conditions:\n\n  a = 330b = 330print(""A"") if a > b else print(""="") if a == b else print(""B"")\nTry it Yourself »\n\n\nAnd\nThe and keyword is a logical operator, and \nis used to combine conditional statements:\n\nExample\nTest if a is greater than\n  b, AND if c \n  is greater than a:\n\n  a = 200b = 33c = 500if a > b and c > a:\n\t\xa0\n\tprint(""Both conditions are True"")\n\nTry it Yourself »\n\n\nOr\nThe or keyword is a logical operator, and \nis used to combine conditional statements:\n\nExample\nTest if a is greater than\n  b, OR if a \n  is greater than c:\n\n  a = 200b = 33c = 500if a > b or a > c:\n\t\xa0\n\tprint(""At least one of the conditions is True"")\n\nTry it Yourself »\n\n\nNested If\nYou can have if statements inside \nif statements, this is called nested\nif statements.\n\nExample\n\n  x = 41if x > 10:\n\t\xa0\n\tprint(""Above ten,"")\xa0 if x > 20:\xa0\xa0\xa0 print(""and \n  also above 20!"")\xa0 else:\xa0\xa0\xa0 print(""but not \n  above 20."")\nTry it Yourself »\n\n\nThe pass Statement\nif statements cannot be empty, but if you \nfor some reason have an if statement with no content, put in the pass statement to avoid getting an error.\n\nExample\n\n  a = 33b = 200if b > a:\xa0 pass\nTry it Yourself »\n\n\n\nTest Yourself With Exercises\n\nExercise:\nPrint ""Hello World"" if a is greater than b.\n\n\na = 50\nb = 10\n a  b\n  print(""Hello World"")\n\n\n\nSubmit Answer »\nStart the Exercise\n\n\n\n\n\n❮ Previous\nNext ❯\n\n\n\n', 'The elif keyword is pythons way of saying ""if the previous conditions were not true, then \ntry this condition"".In this example a is equal to b, so the first condition is not true, but the elif condition is true, so we print to screen that ""a and b are equal"".', 'The else keyword catches anything which isn\'t caught by the preceding conditions.In this example a is greater than b,\nso the first condition is not true, also the elif condition is not true,\nso we go to the else condition and print to screen that ""a is greater than b"".You can also have an else without the\nelif:', 'If you have only one statement to execute, you can put it on the same line as the if statement.', 'If you have only one statement to execute, one for if, and one for else, you can put it \nall on the same line:You can also have multiple else statements on the same line:', 'The and keyword is a logical operator, and \nis used to combine conditional statements:', 'The or keyword is a logical operator, and \nis used to combine conditional statements:', 'You can have if statements inside \nif statements, this is called nested\nif statements.', 'if statements cannot be empty, but if you \nfor some reason have an if statement with no content, put in the pass statement to avoid getting an error.']","['\na = 33\nb = 200\nif b > a:\xa0 print(""b is greater than a"")\n &&&&&& \na = 33\nb = 200\nif b > a:\nprint(""b is greater than a"")\n# you will get an error\n', '\na = 33\nb = 33\nif b > a:\n\t\xa0\n\tprint(""b is greater than a"")\nelif a == b:\n\t\xa0\n\tprint(""a and b are equal"")\n', '\na = 200\nb = 33\nif b > a:\n\t\xa0\n\tprint(""b is greater than a"")\nelif a == b:\n\t\xa0\n\tprint(""a and b are equal"")\n  else:\n\t\xa0\n\tprint(""a is greater than b"")\n &&&&&& \na = 200\nb = 33\nif b > a:\n\t\xa0\n\tprint(""b is greater than a"")\n  else:\n\t\xa0\n\tprint(""b is not greater than a"")\n', '\n  if a > b: print(""a is greater than b"")\n', '\n  a = 2b = 330print(""A"") if a > b else print(""B"") &&&&&& \n  a = 330b = 330print(""A"") if a > b else print(""="") if a == b else print(""B"")', '\n  a = 200b = 33c = 500if a > b and c > a:\n\t\xa0\n\tprint(""Both conditions are True"")\n', '\n  a = 200b = 33c = 500if a > b or a > c:\n\t\xa0\n\tprint(""At least one of the conditions is True"")\n', '\n  x = 41if x > 10:\n\t\xa0\n\tprint(""Above ten,"")\xa0 if x > 20:\xa0\xa0\xa0 print(""and \n  also above 20!"")\xa0 else:\xa0\xa0\xa0 print(""but not \n  above 20."")', '\n  a = 33b = 200if b > a:\xa0 pass']",['Python Conditions and If statements###&&&|||Equals: a == b|||Not Equals: a != b|||Less than: a < b|||Less than or equal to: a <= b|||Greater than: a > b|||Greater than or equal to: a >= b|||'],[],[]
python||While Loops,https://www.w3schools.com/python/python_while_loops.asp,,"['Python Loops', 'The while Loop', 'The break Statement', 'The continue Statement', 'The else Statement']","['Python has two primitive loop commands:', 'With the while loop we can execute a set of statements as long as a condition is true.The while loop requires relevant variables to be ready, in this example we need to define an indexing variable, i, \nwhich we set to 1.', 'With the break statement we can stop the loop even if the \nwhile condition is true:', 'With the continue statement we can stop the \ncurrent iteration, and continue with the next:', 'With the else statement we can run a block of code once when the \ncondition no longer is true:']","['\ni = 1\nwhile i < 6:\n\xa0\xa0print(i)\n\xa0\xa0i += 1\n', '\ni = 1\nwhile i < 6:\n\xa0\xa0print(i)\n  \xa0 if i == 3:\xa0\xa0\xa0 break\xa0\xa0i += 1\n', '\ni = 0\nwhile i < 6:\n  \xa0\xa0i += 1\n\xa0 if i == 3:\xa0\xa0\xa0 continue\xa0\xa0print(i)\n', '\ni = 1\nwhile i < 6:\n\xa0\xa0print(i)\n\xa0\xa0i += 1else:\xa0 print(""i is no longer less than 6"")\n', '']",['Python Loops###&&&|||while loops|||for loops|||'],[],[]
python||For Loops,https://www.w3schools.com/python/python_for_loops.asp,,"['Python For Loops', 'Looping Through a String', 'The break Statement', 'The continue Statement', 'The range() Function']","['A for loop is used for iterating over a sequence (that is either a list, a tuple, \na dictionary, a set, or a string).This is less like the for keyword in other programming languages, and works more like an iterator method as found in other object-orientated programming languages.With the for loop we can execute a set of statements, once for each item in a list, tuple, set etc.The for loop does not require an indexing variable to set beforehand.', 'Even strings are iterable objects, they contain a sequence of characters:', 'With the break statement we can stop the \nloop before it has looped through all the items:', 'With the continue statement we can stop the \ncurrent iteration of the loop, and continue with the next:', '']","['\n  fruits = [""apple"", ""banana"", ""cherry""]for \n  x in fruits:\n\t\xa0\n\tprint(x)\n', '\n  for x in ""banana"":\xa0 print(x)\n', '\n  fruits = [""apple"", ""banana"", ""cherry""]for x in fruits:\xa0 print(x)\n  \xa0 if x == \n  ""banana"":\xa0\xa0\xa0 break\n &&&&&& \n  fruits = [""apple"", ""banana"", ""cherry""]for x in fruits:\xa0 if x == \n  ""banana"":\xa0\xa0\xa0 break\xa0 print(x)\n', '\n  fruits = [""apple"", ""banana"", ""cherry""]for x in fruits:\xa0 if x == \n  ""banana"":\xa0\xa0\xa0 continue\xa0 print(x)\n', '\n  for x in range(6):\n\t\xa0\n\tprint(x)\n &&&&&& \n  for x in range(2, 6):\n\t\xa0\n\tprint(x)\n &&&&&& \n  for x in range(2, 30, 3):\n\t\xa0\n\tprint(x)\n', '\n  for x in range(6):\xa0\n\tprint(x)else:\xa0\n\tprint(""Finally finished!"") &&&&&& \n  for x in range(6):\xa0 if x == 3: break\xa0\n\tprint(x)else:\xa0\n\tprint(""Finally finished!"")', '\n  adj = [""red"", ""big"", ""tasty""]fruits = [""apple"", ""banana"", ""cherry""]\nfor x in adj:\xa0 for y in fruits:\xa0\xa0\xa0 print(x, y)', '\n  for x in [0, 1, 2]:\xa0 pass']",[''],[],[]
python||Functions,https://www.w3schools.com/python/python_functions.asp,A function is a block of code which only runs when it is called.,"['Creating a Function', 'Calling a Function', 'Arguments', 'Parameters or Arguments?', 'Number of Arguments', 'Arbitrary Arguments, *args', 'Keyword Arguments', 'Arbitrary Keyword Arguments, **kwargs', 'Default Parameter Value', 'Passing a List as an Argument', 'Return Values', 'The pass Statement', 'Recursion']","['You can pass data, known as parameters, into a function.A function can return data as a result.', 'In Python a function is defined using the def \nkeyword:', 'To call a function, use the function name followed by parenthesis:', 'Information can be passed into functions as arguments.Arguments are specified after the function name, inside the parentheses.\nYou can add as many arguments as you want, just separate them with a comma.\nThe following example has a function with one argument (fname).\nWhen the function is called, we pass along a first name,\nwhich is used inside the function to print the full name:\n', 'The terms parameter and argument can be used for the same thing: information that are passed into a function.', 'By default, a function must be called with the correct number of arguments. \nMeaning that if your function expects 2 arguments, you have to call the function \nwith 2 arguments, not more, and not less. ', 'If you do not know how many arguments that will be passed into your function,\nadd a * before the parameter name in the function definition.This way the function will receive a tuple of arguments, and can access the items accordingly:', 'You can also send arguments with the key = value syntax.This way the order of the arguments does not matter.', 'If you do not know how many keyword arguments that will be passed into your function,\nadd two asterisk: ** before the parameter name in the function definition.This way the function will receive a dictionary of arguments, and can access the items accordingly:', 'The following example shows how to use a default parameter value.If we call the function without argument, it uses the default value:', 'You can send any data types of argument to a function (string, number, list, dictionary etc.), \nand it will\nbe treated as the same data type inside the function.E.g. if you send a List as an argument, it will still be a List when it \nreaches the function:', 'To let a function return a value, use the return \nstatement:', 'function definitions cannot be empty, but if \nyou for some reason have a function definition with no content, put in the pass statement to avoid getting an error.', 'Python also accepts function recursion, which means a defined function can call itself.Recursion is a common mathematical and programming concept. It means that a function calls itself. This has the benefit of meaning that you can loop through data to reach a result.The developer should be very careful with recursion as it can be quite easy to slip into writing a function which never terminates, or one that uses excess amounts of memory or processor power. However, when written correctly recursion can be a very efficient and mathematically-elegant approach to programming.In this example, tri_recursion() is a function that we have defined to call itself (""recurse""). We use the k variable as the data, which decrements (-1) every time we recurse. The recursion ends when the condition is not greater than 0 (i.e. when it is 0).To a new developer it can take some time to work out how exactly this works, best way to find out is by testing and modifying it.']","['\n  def my_function():\xa0 print(""Hello from a function"")', '\n  def my_function():\xa0 print(""Hello from a function"")\nmy_function()', '\n  def my_function(fname):\xa0 print(fname + "" Refsnes"")\n  my_function(""Emil"")my_function(""Tobias"")my_function(""Linus"")', '\n  def my_function(fname, lname):\xa0 print(fname + "" "" + lname)\n  my_function(""Emil"", ""Refsnes"") &&&&&& \n  def my_function(fname, lname):\xa0 print(fname + "" "" + lname)\n  my_function(""Emil"")', '\n  def my_function(*kids):\xa0 print(""The youngest child \n  is "" + kids[2])\n  my_function(""Emil"", ""Tobias"", ""Linus"")', '\n  def my_function(child3, child2, child1):\xa0 print(""The youngest child \n  is "" + child3)\n  my_function(child1 = ""Emil"", child2 = ""Tobias"", child3 = ""Linus"")', '\n  def my_function(**kid):\xa0 print(""His last name is "" + kid[""lname""])\nmy_function(fname = ""Tobias"", lname = ""Refsnes"")', '\n  def my_function(country = ""Norway""):\xa0 print(""I am from "" + \n  country)\n  my_function(""Sweden"")my_function(""India"")my_function()my_function(""Brazil"")', '\n  def my_function(food):\xa0 for x in food:\xa0\xa0\xa0 \n  print(x)fruits = [""apple"", ""banana"", ""cherry""]\n  my_function(fruits)', '\n  def my_function(x):\xa0 return 5 * xprint(my_function(3))print(my_function(5))\n  print(my_function(9))', '\n  def myfunction():\xa0 pass', '\ndef tri_recursion(k):\n\t\xa0\n\tif(k > 0):\n\t\t\xa0\xa0\xa0\n\t\tresult = k + tri_recursion(k - 1)\n\t\t\xa0\xa0\xa0\n\t\tprint(result)\n\t\xa0\n\telse:\n\t\t\xa0\xa0\xa0\n\t\tresult = 0\n\t\xa0\n\treturn result\n\nprint(""\\n\\nRecursion Example Results"")\ntri_recursion(6)\n', '']",[''],[],[]
python||Lambda,https://www.w3schools.com/python/python_lambda.asp,A lambda function is a small anonymous function.,"['Syntax', 'Why Use Lambda Functions?']","['A lambda function can take any number of arguments, but can only have one expression.', 'The expression is executed and the result is returned:Lambda functions can take any number of arguments:', 'The power of lambda is better shown when you use them as an anonymous \nfunction inside another function.Say you have a function definition that takes one argument, and that argument \nwill be multiplied with an unknown number:Use that function definition to make a function that always doubles the \nnumber you send in:Or, use the same function definition to make a function that always triples the \nnumber you send in:Or, use the same function definition to make both functions, in the same \nprogram:']","['\n  x = lambda a : a + 10print(x(5)) &&&&&& \n  x = lambda a, b : a * bprint(x(5, 6)) &&&&&& \n  x = lambda a, b, c : a + b + cprint(x(5, 6, \n  2))', '\ndef myfunc(n):\n\xa0\xa0return lambda a : a * n\n &&&&&& \ndef myfunc(n):\n\xa0\xa0return lambda a : a * n\n\n  mydoubler = myfunc(2)\nprint(mydoubler(11))\n &&&&&& \ndef myfunc(n):\n\xa0\xa0return lambda a : a * n\n\n  mytripler = myfunc(3)\nprint(mytripler(11))\n &&&&&& \ndef myfunc(n):\n\xa0\xa0return lambda a : a * n\n\n  mydoubler = myfunc(2)mytripler = myfunc(3)\nprint(mydoubler(11))\nprint(mytripler(11))\n']",[''],[],[]
python||Arrays,https://www.w3schools.com/python/python_arrays.asp,,"['Arrays', 'What is an Array?', 'Access the Elements of an Array', 'The Length of an Array', 'Looping Array Elements', 'Adding Array Elements', 'Removing Array Elements', 'Array Methods']","['Arrays are used to store multiple values in one single variable:', 'An array is a special variable, which can hold more than one value at a time.If you have a list of items (a list of car names, for example), storing the \ncars in single variables could look like this:However, what if you want to loop through the cars and find a specific one? \nAnd what if you had not 3 cars, but 300?The solution is an array!An array can hold many values under a single name, and you can \naccess the values by referring to an index number.', 'You refer to an array element by referring to the index number.', 'Use the len() method to return the length of \nan array (the number of elements in an array).', 'You can use the for in loop to loop through all the elements of an array.', 'You can use the append() method to add an element to an array.', 'You can use the pop() method to remove an element from the array.You can also use the remove() method to remove an element from the array.', 'Python has a set of built-in methods that you can use on lists/arrays.']","['\n  cars = [""Ford"", ""Volvo"", ""BMW""]', '\n  x = cars[0] &&&&&& \n  cars[0] = ""Toyota""', '\n  x = len(cars)', '\n  for x in cars:\xa0 print(x)', '\ncars.append(""Honda"")', '\ncars.pop(1) &&&&&& \ncars.remove(""Volvo"")', '', '']",[''],"['Method|||Description|||&&&append()|||Adds an element at \n  the end of the list|||&&&clear()|||Removes all the \n  elements from the list|||&&&copy()|||Returns a copy of the \n  list|||&&&count()|||Returns the number of \n  elements with the specified value|||&&&extend()|||Add the elements of a \n  list (or any iterable), to the end of the current list|||&&&index()|||Returns the index of \n  the first element with the specified value|||&&&insert()|||Adds an element at \n  the specified position|||&&&pop()|||Removes the element at the \n  specified position|||&&&remove()|||Removes the first \n  item with the specified value|||&&&reverse()|||Reverses the order \n  of the list|||&&&sort()|||Sorts the list|||&&&']",[]
python||Classes and Objects,https://www.w3schools.com/python/python_classes.asp,,"['Python Classes/Objects', 'Create a Class', 'Create Object', 'The __init__() Function', 'Object Methods', 'The self Parameter', 'Modify Object Properties', 'Delete Object Properties', 'Delete Objects', 'The pass Statement']","['Python is an object oriented programming language.Almost everything in Python is an object, with its properties and methods.A Class is like an object constructor, or a ""blueprint"" for creating objects.', 'To create a class, use the keyword class:', 'Now we can use the class named MyClass to create objects:', 'The examples above are classes and objects in their simplest form, and are \nnot really useful in real life applications.To understand the meaning of classes we have to understand the built-in __init__() \nfunction.All classes have a function called __init__(), which is always executed when \nthe class is being initiated.Use the __init__() function to assign values to object properties, or other \noperations that are necessary to do when the object \nis being created:', 'Objects can also contain methods. Methods in objects are functions that \nbelong to the object.Let us create a method in the Person class:', 'The self parameter is a reference to the \ncurrent instance of the class, and is used to access variables that belongs to the class.It does not have to be named self , you can \ncall it whatever you like, but it has to be the first parameter of any function \nin the class:', 'You can modify properties on objects like this:', 'You can delete properties on objects by using the \ndel keyword:', 'You can delete objects by using the del keyword:', 'class definitions cannot be empty, but if \nyou for some reason have a class definition with no content, put in the pass statement to avoid getting an error.']","['\n  class MyClass:\xa0 x = 5', '\n  p1 = MyClass()print(p1.x)', '\n  class Person:\xa0 def __init__(self, name, age):\xa0\xa0\xa0 \n  self.name = name\xa0\xa0\xa0 self.age = agep1 = Person(""John"", \n  36)\nprint(p1.name)print(p1.age)', '\n  class Person:\xa0 def __init__(self, name, age):\xa0\xa0\xa0 \n  self.name = name\xa0\xa0\xa0 self.age = age\xa0 def myfunc(self):\xa0\xa0\xa0 \n  print(""Hello my name is "" + self.name)p1 = Person(""John"", \n  36)p1.myfunc()', '\n  class Person:\xa0 def __init__(mysillyobject, name, age):\xa0\xa0\xa0 \n  mysillyobject.name = name\xa0\xa0\xa0 mysillyobject.age = age\xa0 def myfunc(abc):\xa0\xa0\xa0 \n  print(""Hello my name is "" + abc.name)p1 = Person(""John"", \n  36)p1.myfunc()', '\n  p1.age = 40', '\n  del p1.age', '\n  del p1', '\n  class Person:\xa0 pass', '']",[''],[],[]
python||Inheritance,https://www.w3schools.com/python/python_inheritance.asp,,"['Python Inheritance', 'Create a Parent Class', 'Create a Child Class', 'Add the __init__() Function', 'Use the super() Function', 'Add Properties', 'Add Methods']","['Inheritance allows us to define a class that inherits all the methods and properties from another class.Parent class is the class being inherited from, also called \nbase class.Child class is the class that inherits from another class, \nalso called derived class.', 'Any class can be a parent class, so the syntax is the same as creating any \nother class:', 'To create a class that inherits the functionality from another class, send the parent class as a parameter when creating the child \nclass:Now the Student class has the same properties and methods as the Person \nclass.', ""So far we have created a child class that inherits the properties and methods \nfrom its parent.We want to add the __init__() function to the child class (instead of the pass keyword).When you add the __init__() function, the child class will no longer inherit \nthe parent's __init__() function.To keep the inheritance of the parent's __init__() \nfunction, add a call to the \nparent's __init__() function:Now we have successfully added the __init__() function, and kept the \ninheritance of the parent class, and we are ready to add functionality in the\n__init__() function."", 'Python also has a super() function that \nwill make the child class inherit all the methods and properties from its \nparent:By using the super() function, you do not \nhave to use the name of the parent element, it will automatically inherit the \nmethods and properties from its parent.', 'In the example below, the year 2019 should be a variable, and passed into the \nStudent class when creating student objects.\nTo do so, add another parameter in the __init__() function:', 'If you add a method in the child class with the same name as a function in \nthe parent class, the inheritance of the parent method will be overridden.']","['\nclass Person:\xa0 def __init__(self, fname, lname):\xa0\xa0\xa0 \n  self.firstname = fname\xa0\xa0\xa0 self.lastname = lname\xa0 \n  def printname(self):\xa0\xa0\xa0 print(self.firstname, \n  self.lastname)#Use the Person class to create an object, and then \n  execute the printname method:x = Person(""John"", ""Doe"")\n  x.printname()', '\nclass Student(Person):\xa0 pass &&&&&& \n  x = Student(""Mike"", ""Olsen"")x.printname()', '\n  class Student(Person):\xa0 def __init__(self, fname, lname):\xa0\xa0\xa0 \n  #add properties etc. &&&&&& \n  class Student(Person):\xa0 def __init__(self, fname, lname):\xa0\xa0\xa0 \n  Person.__init__(self, fname, lname)', '\n  class Student(Person):\xa0 def __init__(self, fname, lname):\xa0\xa0\xa0 \n    super().__init__(fname, lname)', '\n  class Student(Person):\xa0 def __init__(self, fname, lname):\xa0\xa0\xa0 \n  super().__init__(fname, lname)\xa0\xa0\xa0 self.graduationyear \n  = 2019 &&&&&& \n  class Student(Person):\xa0 def __init__(self, fname, lname, year):\xa0\xa0\xa0 \n  super().__init__(fname, lname)\xa0\xa0\xa0 self.graduationyear \n  = yearx = Student(""Mike"", ""Olsen"", 2019)', '\n  class Student(Person):\xa0 def __init__(self, fname, lname, year):\xa0\xa0\xa0 \n  super().__init__(fname, lname)\xa0\xa0\xa0 self.graduationyear \n  = year\xa0 def welcome(self):\xa0\xa0\xa0 print(""Welcome"", \n  self.firstname, self.lastname, ""to the class of"", self.graduationyear)', '']",[''],[],[]
python||Iterators,https://www.w3schools.com/python/python_iterators.asp,,"['Python Iterators', 'Iterator vs Iterable', 'Looping Through an Iterator', 'Create an Iterator', 'StopIteration']","['An iterator is an object that contains a countable number of values.An iterator is an object that can be iterated upon, meaning that you can \ntraverse through all the values.Technically, in Python, an iterator is an object which implements the \niterator protocol, which consist of the methods __iter__() \nand __next__().', 'Lists, tuples, dictionaries, and sets are all iterable objects. They are iterable\ncontainers which you can get an iterator from.All these objects have a iter() method which is used to get an iterator:Even strings are iterable objects, and can return an iterator:', 'We can also use a for loop to iterate through an iterable object:The for loop actually creates an iterator object and executes the next() \nmethod for each loop.', 'To create an object/class as an iterator you have to implement the methods\n__iter__() and \n__next__() to your object.As you have learned in the Python \nClasses/Objects chapter, all classes have a function called\n__init__(), which allows you to do some \ninitializing when the object is being created.The __iter__() method acts similar, you can \ndo operations (initializing etc.), but must always return the iterator object \nitself.The __next__() method also allows you to do \noperations, and must return the next item in the sequence.', 'The example above would continue forever if you had enough next() statements, or if it was used in a \nfor loop.To prevent the iteration to go on forever, we can use the \nStopIteration statement.In the __next__() method, we can add a terminating condition to raise an error if the iteration is done a specified number of times:']","['\n    mytuple = (""apple"", ""banana"", ""cherry"")myit = iter(mytuple)\n    print(next(myit))print(next(myit))print(next(myit))\n &&&&&& \n    mystr = ""banana""myit = iter(mystr)\n    print(next(myit))print(next(myit))print(next(myit))\n    print(next(myit))print(next(myit))print(next(myit))\n', '\n    mytuple = (""apple"", ""banana"", ""cherry"")\nfor x in mytuple:\n    \xa0 print(x) &&&&&& \n    mystr = ""banana""\nfor x in mystr:\n    \xa0 print(x)', '\n  class MyNumbers:\xa0 def __iter__(self):\xa0\xa0\xa0 self.a = \n  1\xa0\xa0\xa0 return self\xa0 def __next__(self):\xa0\xa0\xa0 \n  x = self.a\xa0\xa0\xa0 self.a += 1\xa0\xa0\xa0 return x\nmyclass = MyNumbers()myiter = iter(myclass)print(next(myiter))\n  print(next(myiter))print(next(myiter))print(next(myiter))\n  print(next(myiter))', '\n  class MyNumbers:\xa0 def __iter__(self):\xa0\xa0\xa0 self.a = \n  1\xa0\xa0\xa0 return self\xa0 def __next__(self):\xa0\xa0\xa0 \n  if self.a <= 20:\xa0\xa0\xa0\xa0\xa0 x = self.a\xa0\xa0\xa0\xa0\xa0 \n  self.a += 1\xa0\xa0\xa0\xa0\xa0 return x\xa0\xa0\xa0 \n  else:\xa0\xa0\xa0\xa0\xa0 raise StopIterationmyclass = \n  MyNumbers()myiter = iter(myclass)for x in myiter:\xa0 \n  print(x)\n', '']",[''],[],[]
python||Scope,https://www.w3schools.com/python/python_scope.asp,"A variable is only available from inside the region it is 
created. This is called scope.","['Local Scope', 'Global Scope', 'Global Keyword']","['A variable created inside a function belongs to the local scope of \nthat function, and can only be used inside that function.As explained in the example above, the variable x is not available outside the function, \nbut it is available for any function inside the function:', 'A variable created in the main body of the Python code is a global variable \nand belongs to the global scope.Global variables are available from within any scope, global and local.If you operate with the same variable name inside and outside of a function, Python will treat them as two \nseparate variables,\none available in the global scope (outside the function) and one available in the local scope (inside the function):', 'If you need to create a global variable, but are stuck in the local scope, you can use the \nglobal keyword.The global keyword makes the variable global.Also, use the global keyword if you want to \nmake a change to a global variable inside a function.']","['\n  def myfunc():\xa0 x = 300\xa0 print(x)myfunc() &&&&&& \n  def myfunc():\xa0 x = 300\xa0 def myinnerfunc():\xa0 \xa0 print(x)\xa0 \n  myinnerfunc()myfunc()', '\n    x = 300def myfunc():\xa0 print(x)myfunc()print(x) &&&&&& \n    x = 300def myfunc():\xa0 x = 200\xa0 \n    print(x)myfunc()print(x)', '\n    def myfunc():\xa0 global x\xa0 x = 300myfunc()\n    print(x) &&&&&& \n  x = 300def myfunc():\xa0 global x\xa0 x = 200myfunc()\nprint(x)']",[''],[],[]
python||Modules,https://www.w3schools.com/python/python_modules.asp,,"['What is a Module?', 'Create a Module', 'Use a Module', 'Variables in Module', 'Naming a Module', 'Re-naming a Module', 'Built-in Modules', 'Using the dir() Function', 'Import From Module']","['Consider a module to be the same as a code library.A file containing a set of functions you want to include in your application.', 'To create a module just save the code you want in a file with the file extension .py:Now we can use the module we just created, by using the import statement:', 'The module can contain functions, as already described, but also variables of \nall types (arrays, dictionaries, objects etc):', 'You can name the module file whatever you like, but it must have the file extension \n.pyYou can create an alias when you import a module, by using the as keyword:', 'There are several built-in modules in Python, which you can import whenever you like.', 'There is a built-in function to list all the function names (or variable \nnames) in a module. The dir() function:', 'You can choose to import only parts from a module, by using the from keyword.', '', '']","['\n  def greeting(name):\xa0 print(""Hello, "" + name) &&&&&& \n  import mymodulemymodule.greeting(""Jonathan"")\n', '\n  person1 = {\xa0 ""name"": ""John"",\xa0 ""age"": 36,\xa0 \n  ""country"": ""Norway""} &&&&&& \n  import mymodulea = mymodule.person1[""age""]print(a)', '\n  import mymodule as mxa = mx.person1[""age""]print(a)', '\n  import platformx = platform.system()print(x)', '\n  import platformx = dir(platform)print(x)', '\n  def greeting(name):\xa0 print(""Hello, "" + name)person1 \n  = {\xa0 ""name"": ""John"",\xa0 ""age"": 36,\xa0 ""country"": \n  ""Norway""} &&&&&& \n  from mymodule import person1print (person1[""age""])', '', '', '']",[''],[],[]
python||Datetime,https://www.w3schools.com/python/python_datetime.asp,,"['Python Dates', 'Date Output', 'Creating Date Objects', 'The strftime() Method']","['A date in Python is not a data type of its own, but we can import a module \nnamed datetime to work with dates as date \nobjects.', 'When we execute the code from the example above the result will be:The date contains year, month, day, hour, minute, second, and microsecond.The datetime module has many methods to return information about the date \nobject.Here are a few examples, you will learn more about them later in this \nchapter: ', 'To create a date, we can use the datetime() class (constructor) of the\ndatetime module.The datetime() class requires three parameters to create a date: year, \nmonth, day.The datetime() class also takes parameters for time and timezone (hour, \nminute, second, microsecond, tzone), but they are optional, and has a default \nvalue of 0, (None for timezone).', 'The datetime object has a method for formatting date objects into readable strings.The method is called strftime(), and takes one parameter, \nformat, to specify the format of the returned string:A reference of all the legal format codes:']","['\n  import datetimex = datetime.datetime.now()print(x)', '\n  import datetimex = datetime.datetime.now()print(x.year)\n  print(x.strftime(""%A""))', '\n  import datetimex = datetime.datetime(2020, 5, 17)\nprint(x)', '\n  import datetimex = datetime.datetime(2018, 6, 1)print(x.strftime(""%B""))']",[''],"['Directive|||Description|||Example|||Try it|||&&&%a|||Weekday, short version|||Wed|||Try it »|||&&&%A|||Weekday, full version|||Wednesday|||Try it »|||&&&%w|||Weekday as a number 0-6, 0 is Sunday|||3|||Try it »|||&&&%d|||Day of month 01-31|||31|||Try it »|||&&&%b|||Month name, short version|||Dec|||Try it »|||&&&%B|||Month name, full version|||December|||Try it »|||&&&%m|||Month as a number 01-12|||12|||Try it »|||&&&%y|||Year, short version, without century|||18|||Try it »|||&&&%Y|||Year, full version|||2018|||Try it »|||&&&%H|||Hour 00-23|||17|||Try it »|||&&&%I|||Hour 00-12|||05|||Try it »|||&&&%p|||AM/PM|||PM|||Try it »|||&&&%M|||Minute 00-59|||41|||Try it »|||&&&%S|||Second 00-59|||08|||Try it »|||&&&%f|||Microsecond 000000-999999|||548513|||Try it »|||&&&%z|||UTC offset|||+0100||||||&&&%Z|||Timezone|||CST||||||&&&%j|||Day number of year 001-366|||365|||Try it »|||&&&%U|||Week number of year, Sunday as the first day of week, 00-53|||52|||Try it »|||&&&%W|||Week number of year, Monday as the first day of week, 00-53|||52|||Try it »|||&&&%c|||Local version of date and time|||Mon Dec 31 17:41:00 2018|||Try it »|||&&&%C|||Century|||20|||Try it »|||&&&%x|||Local version of date|||12/31/18|||Try it »|||&&&%X|||Local version of time|||17:41:00|||Try it »|||&&&%%|||A % character|||%|||Try it »|||&&&%G|||ISO 8601 year|||2018|||Try it »|||&&&%u|||ISO 8601 weekday (1-7)|||1|||Try it »|||&&&%V|||ISO 8601 weeknumber (01-53)|||01|||Try it »|||&&&']",[]
python||Math,https://www.w3schools.com/python/python_math.asp,"Python has a set of built-in math functions, including an extensive math module, that allows you to perform mathematical tasks on numbers.","['Built-in Math Functions', 'The Math Module', 'Complete Math Module Reference']","['The min() and max() functions can be used to find the lowest or highest value in an iterable:The abs() function returns the absolute (positive) value of the specified number:The pow(x, y) function returns the value of x to the power of y (xy).', 'Python has also a built-in module called math, which extends the list of mathematical functions.To use it, you must import the math module:When you have imported the math module, you \ncan start using methods and constants of the module.The math.sqrt() method for example, returns the square root of a number:The math.ceil() method rounds a number upwards to \nits nearest integer, and the math.floor() \nmethod rounds a number downwards to its nearest integer, and returns the result:The math.pi constant, returns the value of \nPI (3.14...):', 'In our Math Module Reference you will \nfind a complete reference of all methods and constants that belongs to the Math module.']","['\n    x = min(5, 10, 25)y = max(5, 10, 25)print(x)print(y) &&&&&& \n    x = abs(-7.25)print(x) &&&&&& \n    x = pow(4, 3)print(x)', 'import math &&&&&& \n    import \n    mathx = math.sqrt(64)print(x) &&&&&& \n    import \n    mathx = math.ceil(1.4)y = math.floor(1.4)print(x) # \n    returns 2print(y) # returns 1 &&&&&& \n    import \n    mathx = math.piprint(x) ', '']",[''],[],[]
python||JSON,https://www.w3schools.com/python/python_json.asp,JSON is a syntax for storing and exchanging data.,"['JSON in Python', 'Parse JSON - Convert from JSON to Python', 'Convert from Python to JSON', 'Format the Result', 'Order the Result']","['JSON is text, written with JavaScript object notation.', 'Python has a built-in package called json, which can be used to work with JSON data.', 'If you have a JSON string, you can parse it by using the\njson.loads() method.', 'If you have a Python object, you can convert it into a JSON string by \nusing the json.dumps() method.', 'You can convert Python objects of the following types, into JSON strings:', 'When you convert from Python to JSON, Python objects are converted into the JSON (JavaScript) equivalent:', 'The example above prints a JSON string, but it is not very easy to read, with no indentations and line breaks.The json.dumps() method has parameters to \nmake it easier to read the result:You can also define the separators, default value is ("", "", "": ""), which \nmeans using a comma and a space to separate each object, and a colon and a space \nto separate keys from values:', 'The json.dumps() method has parameters to \norder the keys in the result:']","['\n    import json\n  ', '\n  import json# some JSON:x =\xa0 \'{ ""name"":""John"", ""age"":30, ""city"":""New \n  York""}\'# parse x:y = json.loads(x)# the result is a \n  Python dictionary:print(y[""age""])', '\n  import json# a Python object (dict):x = {\xa0 ""name"": \n  ""John"",\xa0 ""age"": 30,\xa0 ""city"": ""New York""}# \n  convert into JSON:y = json.dumps(x)# the result is a JSON string:\n  print(y)', '\n  import jsonprint(json.dumps({""name"": ""John"", ""age"": 30}))print(json.dumps([""apple"", \n  ""bananas""]))print(json.dumps((""apple"", ""bananas"")))\n  print(json.dumps(""hello""))print(json.dumps(42))print(json.dumps(31.76))print(json.dumps(True))print(json.dumps(False))print(json.dumps(None))', '\n  import jsonx = {\xa0 ""name"": \n  ""John"",\xa0 ""age"": 30,\xa0 ""married"": True,\xa0 \n  ""divorced"": False,\xa0 ""children"": (""Ann"",""Billy""),\xa0 ""pets"": \n  None,\xa0 ""cars"": [\xa0\xa0\xa0 {""model"": ""BMW 230"", ""mpg"": \n  27.5},\xa0\xa0\xa0 {""model"": ""Ford Edge"", ""mpg"": 24.1}\xa0 ]\n  }print(json.dumps(x))', '\n    json.dumps(x, indent=4) &&&&&& \n    json.dumps(x, indent=4, separators=("". "", "" = ""))', '\n    json.dumps(x, indent=4, sort_keys=True)']",['Convert from Python to JSON###&&&|||dict|||list|||tuple|||string|||int|||float|||True|||False|||None|||'],['Python|||JSON|||&&&dict|||Object|||&&&list|||Array|||&&&tuple|||Array|||&&&str|||String|||&&&int|||Number|||&&&float|||Number|||&&&True|||true|||&&&False|||false|||&&&None|||null|||&&&'],[]
python||RegEx,https://www.w3schools.com/python/python_regex.asp,"A RegEx, or Regular Expression, is a sequence of characters that forms a search pattern.","['RegEx Module', 'RegEx in Python', 'RegEx Functions', 'Metacharacters', 'Special Sequences', 'Sets', 'The findall() Function', 'The search() Function', 'The split() Function', 'The sub() Function', 'Match Object']","['RegEx can be used to check if a string contains the specified search pattern.', 'Python has a built-in package called re, which can be used to work with \nRegular Expressions.Import the re module:', 'When you have imported the re module, you \ncan start using regular expressions:', 'The re module offers a set of functions that allows \nus to search a string for a match:', 'Metacharacters are characters with a special meaning:', 'A special sequence is a \\ followed by one of the characters in the list below, and has a special meaning:', 'A set is a set of characters inside a pair of square brackets \n[] with a special meaning:', 'The findall() function returns a list containing all matches.The list contains the matches in the order they are found.If no matches are found, an empty list is returned:', 'The search() function searches the string \nfor a match, and returns a Match object if there is a \nmatch.If there is more than one match, \nonly the first occurrence of the match will be returned:If no matches are found, the value None is returned:', 'The split() function returns a list where \nthe string has been split at each match:You can control the number of occurrences by specifying the \nmaxsplit \nparameter:', 'The sub() function replaces the matches with \nthe text of your choice:You can control the number of replacements by specifying the\ncount \nparameter:', 'A Match Object is an object containing information \nabout the search and the result.The Match object has properties and methods used to retrieve information \nabout the search, and the result:\n.span() returns a tuple containing the start-, and end positions of the match.\n.string returns the string passed into the function\n.group() returns the part of the string where there was a match\n']","['import re', '\n    import \n    retxt = ""The rain in Spain""x = re.search(""^The.*Spain$"", txt)', '\n  import retxt = ""The rain in Spain""x = re.findall(""ai"", \n  txt)\n  print(x) &&&&&& \n  import retxt = ""The rain in Spain""x = re.findall(""Portugal"", \n  txt)\n  print(x)', '\n  import retxt = ""The rain in Spain""x = re.search(""\\s"", \n  txt)\nprint(""The first white-space character is located in \n  position:"", x.start())  &&&&&& \n  import retxt = ""The rain in Spain""x = re.search(""Portugal"", \n  txt)\n  print(x)', '\n  import retxt = ""The rain in Spain""x = re.split(""\\s"", \n  txt)\n  print(x) &&&&&& \n  import retxt = ""The rain in Spain""x = re.split(""\\s"", \n  txt, \n  1)\n  print(x)', '\n  import retxt = ""The rain in Spain""x = re.sub(""\\s"", \n  ""9"", txt)\n  print(x) &&&&&& \n  import retxt = ""The rain in Spain""x = re.sub(""\\s"", \n  ""9"", txt, 2)\n  print(x)', '\n  import retxt = ""The rain in Spain""x = re.search(""ai"", \n  txt)\n  print(x) #this will print an object &&&&&& \n    import re\n    txt = ""The rain in Spain""\n    x = re.search(r""\\bS\\w+"", txt)\n    print(x.span()) &&&&&& \n    import re\n    txt = ""The rain in Spain""\n    x = re.search(r""\\bS\\w+"", txt)\n    print(x.string) &&&&&& \n    import re\n    txt = ""The rain in Spain""\n    x = re.search(r""\\bS\\w+"", txt)\n    print(x.group())', '', '', '', '']",[''],"['Function|||Description|||&&&findall|||Returns a list containing all matches|||&&&search|||Returns a Match object if there is a match anywhere in the string|||&&&split|||Returns a list where the string has been split at each match |||&&&sub|||Replaces one or many matches with a string|||&&&', 'Character|||Description|||Example|||Try it|||&&&[]|||A set of characters|||""[a-m]""|||Try it »|||&&&\\|||Signals a special sequence (can also be used to escape special characters)|||""\\d""|||Try it »|||&&&.|||Any character (except newline character)|||""he..o""|||Try it »|||&&&^|||Starts with|||""^hello""|||Try it »|||&&&$|||Ends with|||""planet$""|||Try it »|||&&&*|||Zero or more occurrences|||""he.*o""|||Try it »|||&&&+|||One or more occurrences|||""he.+o""|||Try it »|||&&&?|||Zero or one occurrences|||""he.?o""|||Try it »|||&&&{}|||Exactly the specified number of occurrences|||""he{2}o""|||Try it »|||&&&||||Either or|||""falls|stays""|||Try it »|||&&&()|||Capture and group|||\xa0|||\xa0|||&&&', 'Character|||Description|||Example|||Try it|||&&&\\A|||Returns a match if the specified characters are at the beginning of the \nstring|||""\\AThe""|||Try it »|||&&&\\b|||Returns a match where the specified characters are at the beginning or at the \nend of a word(the ""r"" in the beginning is making sure that the string is \nbeing treated as a ""raw string"")|||r""\\bain""r""ain\\b""|||Try it »\nTry it »|||&&&\\B|||Returns a match where the specified characters are present, but NOT at the beginning \n(or at \nthe end) of a word(the ""r"" in the beginning is making sure that the string \nis being treated as a ""raw string"")|||r""\\Bain""r""ain\\B""|||Try it »\nTry it »|||&&&\\d|||Returns a match where the string contains digits (numbers from 0-9)|||""\\d""|||Try it »|||&&&\\D|||Returns a match where the string DOES NOT contain digits|||""\\D""|||Try it »|||&&&\\s|||Returns a match where the string contains a white space character|||""\\s""|||Try it »|||&&&\\S|||Returns a match where the string DOES NOT contain a white space character|||""\\S""|||Try it »|||&&&\\w|||Returns a match where the string contains any word characters (characters from \na to Z, digits from 0-9, and the underscore _ character)|||""\\w""|||Try it »|||&&&\\W|||Returns a match where the string DOES NOT contain any word characters|||""\\W""|||Try it »|||&&&\\Z|||Returns a match if the specified characters are at the end of the string|||""Spain\\Z""|||Try it »|||&&&', 'Set|||Description|||Try it|||&&&[arn]|||Returns a match where one of the specified characters (a,\nr, or n) are \npresent|||Try it »|||&&&[a-n]|||Returns a match for any lower case character, alphabetically between\na and n|||Try it »|||&&&[^arn]|||Returns a match for any character EXCEPT a,\nr, and n|||Try it »|||&&&[0123]|||Returns a match where any of the specified digits (0,\n1, 2, or \n3) are \npresent|||Try it »|||&&&[0-9]|||Returns a match for any digit between\n0 and 9|||Try it »|||&&&[0-5][0-9]|||Returns a match for any two-digit numbers from 00 and \n59|||Try it »|||&&&[a-zA-Z]|||Returns a match for any character alphabetically between\na and z, lower case OR upper case|||Try it »|||&&&[+]|||In sets, +, *,\n., |,\n(), $,{} \nhas no special meaning, so [+] means: return a match for any\n+ character in the string|||Try it »|||&&&']",[]
python||PIP,https://www.w3schools.com/python/python_pip.asp,,"['What is PIP?', 'What is a Package?', 'Check if PIP is Installed', 'Install PIP', 'Download a Package', 'Using a Package', 'Find Packages', 'Remove a Package', 'List Packages']","['PIP is a package manager for Python packages, or modules if you like.', 'A package contains all the files you need for a module.Modules are Python code libraries you can include in your project.', ""Navigate your command line to the location of Python's script directory, and type the following:"", 'If you do not have PIP installed, you can download and install it from this page:\nhttps://pypi.org/project/pip/\n', ""Downloading a package is very easy.Open the command line interface and tell PIP to download the package you \nwant.Navigate your command line to the location of Python's script directory, and type the following:Now you have downloaded and installed your first package!"", 'Once the package is installed, it is ready to use.Import the ""camelcase"" package into your project.', 'Find more packages at https://pypi.org/.', 'Use the uninstall command to remove a package:The PIP Package Manager will ask you to confirm that you want to remove the \ncamelcase package:Press y and the package will be removed.', 'Use the list command to list all the packages installed on your system:']","['\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>pip --version\n', '\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>pip \n  install camelcase', '\n  import camelcasec = camelcase.CamelCase()txt = ""hello world""\nprint(c.hump(txt))', '\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>pip \n  uninstall camelcase', '\n  Uninstalling camelcase-02.1:\xa0 Would remove:\xa0\xa0\xa0 c:\\users\\Your Name\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\camecase-0.2-py3.6.egg-info\xa0\xa0\xa0 \n  c:\\users\\Your Name\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\camecase\\*\n  Proceed (y/n)?', '\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>pip list', '\n  Package\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 Version\n  -----------------------camelcase\xa0\xa0\xa0\xa0\xa0\xa0 0.2mysql-connector 2.1.6\n  pip\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n  18.1pymongo\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 3.6.1\n  setuptools\xa0\xa0\xa0\xa0\xa0 39.0.1', '', '']",[''],[],[]
python||Try Except,https://www.w3schools.com/python/python_try_except.asp,"The try block lets you test a 
block of code for errors.","['Exception Handling', 'Many Exceptions', 'Else', 'Finally', 'Raise an exception']","['The except block lets you \nhandle the error.The else block lets you \nexecute code when there is no error.The finally block lets you \nexecute code, regardless of the result of the try- and except blocks.', 'When an error occurs, or exception as we call it, Python will normally stop and \ngenerate an error message.These exceptions can be handled using the try statement:Since the try block raises an error, the except block will be executed.Without the try block, the program will crash and raise an error:', 'You can define as many exception blocks as you want, e.g. if you want to execute a \nspecial block of code for a special kind of error:', 'You can use the else keyword to define a \nblock of code to be executed if no errors were raised:', 'The finally block, if specified, will be executed \nregardless if the try block \nraises an error or not.This can be useful to close objects and clean up resources:The program can continue, without leaving the file object open.', 'As a Python developer you can choose to throw an exception if a condition occurs.To throw (or raise) an exception, use the raise keyword.The raise keyword is used to raise an \nexception.You can define what kind of error to raise, and the text to print to the user.']","['\n  try:\xa0 print(x)except:\xa0 print(""An exception occurred"") &&&&&& \n  print(x)', '\n  try:\xa0 print(x)except NameError:\xa0 print(""Variable x \n  is not defined"")except:\xa0 print(""Something else went \n  wrong"")', '\n  try:\xa0 print(""Hello"")except:\xa0 print(""Something went \n  wrong"")else:\xa0 print(""Nothing went wrong"")', '\n  try:\xa0 print(x)except:\xa0 print(""Something went \n  wrong"")finally:\xa0 print(""The \'try except\' is finished"") &&&&&& \n  try:\xa0 f = open(""demofile.txt"")\xa0 try:\xa0\xa0\xa0 \n  f.write(""Lorum Ipsum"")\xa0 except:\xa0\xa0\xa0 \n  print(""Something went wrong when writing to the file"")\xa0 finally:\xa0\xa0\xa0 \n  f.close()except:\xa0 print(""Something went wrong when opening the \n  file"") ', '\n    x = -1if x < 0:\xa0 raise Exception(""Sorry, no numbers below \n    zero"") &&&&&& \n    x = ""hello""if not type(x) is int:\xa0 raise TypeError(""Only \n    integers are allowed"")']",[''],[],[]
python||User Input,https://www.w3schools.com/python/python_user_input.asp,,['User Input'],"['Python allows for user input.That means we are able to ask the user for input.The method is a bit different in Python 3.6 than Python 2.7.Python 3.6 uses the input() method. Python 2.7 uses the raw_input() method. The following example asks for the username, and when you entered the username, it gets printed on \nthe screen:']","['\n  username = input(""Enter username:"")\nprint(""Username is: "" + username)\n', '\n  username = raw_input(""Enter username:"")\nprint(""Username \n  is: "" + username)\n']",[''],[],[]
python||String Formatting,https://www.w3schools.com/python/python_string_formatting.asp,"To make sure a string will display as expected, we can format the result with 
the format() method.","['String format()', 'Multiple Values', 'Index Numbers', 'Named Indexes']","['The format() method allows you to format selected parts of a string.Sometimes there are parts of a text that you do not control, maybe \nthey come from a database, or user input?To control such values, \nadd placeholders (curly brackets {}) in the text, and run the values through the \nformat() method:You can add parameters inside the curly brackets to specify how to convert \nthe value:Check out all formatting types in our String format() Reference.', 'If you want to use more values, just add more values to the format() method:And add more placeholders:', 'You can use index numbers (a number inside the curly brackets {0}) to be sure the \nvalues are placed \nin the correct placeholders:Also, if you want to refer to the same value more than once, use the index number:', 'You can also use named indexes by entering a name inside the curly brackets {carname}, \nbut then you must use names when you pass the parameter values\ntxt.format(carname = ""Ford""):']","['\n  price = 49txt = ""The price is {} dollars""print(txt.format(price))\n &&&&&& \n  txt = ""The price is {:.2f} dollars""\n', '\nprint(txt.format(price, itemno, count))\n &&&&&& \n  quantity = 3itemno = 567price = 49myorder = ""I want {} pieces of \n  item number {} for {:.2f} dollars.""print(myorder.format(quantity, itemno, price))\n', '\n  quantity = 3itemno = 567price = 49myorder = ""I want {0} pieces of \n  item number {1} for {2:.2f} dollars.""print(myorder.format(quantity, itemno, price))\n &&&&&& \n  age = 36name = ""John""txt = ""His name is {1}. {1} is {0} years old.""print(txt.format(age, \n  name))\n', '\n  myorder = ""I have a {carname}, it is a {model}.""print(myorder.format(carname \n  = ""Ford"", model = ""Mustang""))\n']",[''],[],[]
python||File Open,https://www.w3schools.com/python/python_file_handling.asp,File handling is an important part of any web application.,"['File Handling', 'Syntax']","['Python has several functions for creating, reading, updating, and \ndeleting files.', 'The key function for working with files in Python is the\nopen() function.The open() function takes two parameters;\nfilename, and mode.There are four different methods (modes) for opening a file:In addition you can specify if the file should be handled as binary or text mode', 'To open a file for reading it is enough to specify the name of the file:The code above is the same as:Because ""r"" for read, and \n""t"" for text are the default values, you do not need to specify them.']","['\nf = open(""demofile.txt"")\n', '\nf = open(""demofile.txt"", ""rt"")\n']",[''],[],[]
python||File Open,https://www.w3schools.com/python/python_file_open.asp,,"['Open a File on the Server', 'Read Only Parts of the File', 'Read Lines', 'Close Files']","['Assume we have the following file, located in the same folder as Python:To open the file, use the built-in open() function.The open() function returns a file object, which has a \nread() method for reading the content of the file:If the file is located in a different location, you will have to specify the file path, \nlike this:', 'By default the read() method returns the whole text, but you can also specify how many characters you want to return:', 'You can return one line by using the readline() method:By calling readline() two times, you can read the \ntwo first lines:By looping through the lines of the file, you can read the whole file, line by line:', 'It is a good practice to always close the file when you are done with it.']","['\n  Hello! Welcome to demofile.txtThis file is for testing purposes.Good \n  Luck! &&&&&& \n  f = open(""demofile.txt"", ""r"")print(f.read()) &&&&&& \n  f = open(""D:\\\\myfiles\\welcome.txt"", ""r"")print(f.read())', '\n  f = open(""demofile.txt"", ""r"")print(f.read(5))', '\n  f = open(""demofile.txt"", ""r"")print(f.readline()) &&&&&& \n  f = open(""demofile.txt"", ""r"")print(f.readline())print(f.readline()) &&&&&& \n  f = open(""demofile.txt"", ""r"")for x in f:\xa0 print(x)', '\n  f = open(""demofile.txt"", ""r"")print(f.readline())\n  f.close()']",[''],[],[]
python||File Write,https://www.w3schools.com/python/python_file_write.asp,,"['Write to an Existing File', 'Create a New File']","['To write to an existing file, you must add a parameter to the\nopen() function:""a"" - Append - will append to the end of the file""w"" - Write - will overwrite any existing content', 'To create a new file in Python, use the open() method, \nwith one of the following parameters:""x"" - Create - will create a file, returns \nan error if the file exist""a"" - Append - will create a file if the \nspecified file does not exist""w"" - Write - will create a file if the \nspecified file does not existResult: a new empty file is created!']","['\n  f = open(""demofile2.txt"", ""a"")f.write(""Now the file has more content!"")\n  f.close()#open and read the file after the appending:f = \n  open(""demofile2.txt"", ""r"")print(f.read()) &&&&&& \n  f = open(""demofile3.txt"", ""w"")\n  f.write(""Woops! I have deleted the content!"")f.close()\n  #open and read the file after the appending:f = open(""demofile3.txt"", ""r"")\n  print(f.read())', '\n  f = open(""myfile.txt"", ""x"")\n &&&&&& \n  f = open(""myfile.txt"", ""w"")\n']",[''],[],[]
python||Delete File,https://www.w3schools.com/python/python_file_remove.asp,,"['Delete a File', 'Check if File exist:', 'Delete Folder']","['To delete a file, you must import the OS module, and run its\nos.remove() function:', 'To avoid getting an error, you might want to check if the file exists before you try to delete it:', 'To delete an entire folder, use the os.rmdir() method:']","['\n  import osos.remove(""demofile.txt"")', '\n  import osif os.path.exists(""demofile.txt""):\xa0 os.remove(""demofile.txt"")\n  else:\xa0 print(""The file does not exist"")', '\n  import osos.rmdir(""myfolder"")']",[''],[],[]
python||Tutorial,https://www.w3schools.com/python/numpy/default.asp,,['Learning by Quiz Test'],"['Test your NumPy skills with a quiz test.Start NumPy Quiz', 'In our ""Try it Yourself"" editor, you can use the NumPy module, and modify the code to see the result.Click on the ""Try it Yourself"" button to see how it works.']","['\nimport numpy as np\n\narr = np.array([1, 2, 3, 4, 5])print(arr)\nprint(type(arr))\n']",[''],[],[]
python||Tutorial,https://www.w3schools.com/python/pandas/default.asp,,['Learning by Quiz Test'],"['Test your Pandas skills with a quiz test.Start Pandas Quiz', 'In our ""Try it Yourself"" editor, you can use the Pandas module, and modify the code to see the result.Click on the ""Try it Yourself"" button to see how it works.']","[""\n  import pandas as pddf = pd.read_csv('data.csv')print(df.to_string())\xa0\n""]",[''],[],[]
python||Tutorial,https://www.w3schools.com/python/scipy/index.php,,['Learning by Quiz Test'],"['Test your SciPy skills with a quiz test.Start SciPy Quiz', 'In our ""Try it Yourself"" editor, you can use the SciPy module, and modify the code to see the result.Click on the ""Try it Yourself"" button to see how it works.']",['\nfrom scipy import constants\n\n  print(constants.liter)'],[''],[],[]
python||Tutorial,https://www.w3schools.com/python/matplotlib_intro.asp,,"['What is Matplotlib?', 'Where is the Matplotlib Codebase?']","['Matplotlib is a low level graph plotting library in python that serves as a visualization utility.Matplotlib was created by John D. Hunter.Matplotlib is open source and we can use it freely.Matplotlib is mostly written in python, a few segments are written in C, Objective-C and Javascript for Platform compatibility.', 'The source code for Matplotlib is located at this github repository https://github.com/matplotlib/matplotlib']","['', '']",[''],[],['img_matplotlib1.png']
python||Getting Started,https://www.w3schools.com/python/matplotlib_getting_started.asp,,"['Installation of Matplotlib', 'Import Matplotlib  ', 'Checking Matplotlib Version']","['If you have Python and PIP already installed on a system, then installation of \nMatplotlib is very easy.Install it using this command:If this command fails, then use a python distribution that already has Matplotlib installed,\xa0 like Anaconda, Spyder etc.', 'Once Matplotlib is installed, import it in your applications by adding the\nimport module statement:Now Matplotlib is imported and ready to use:', 'The version string is stored under __version__ \nattribute.']","['\nC:\\Users\\Your Name>pip install matplotlib', '\nimport matplotlib\n', '\n  import matplotlibprint(matplotlib.__version__)\n']",[''],[],[]
python||Pyplot,https://www.w3schools.com/python/matplotlib_pyplot.asp,,['Pyplot'],"['Most of the Matplotlib utilities lies under the pyplot submodule,\nand are usually imported under the plt alias:Now the Pyplot package can be referred to as plt.']","['\nimport matplotlib.pyplot as plt\n &&&&&& \nimport matplotlib.pyplot as plt\nimport numpy as np\n\n  xpoints = np.array([0, 6])ypoints = np.array([0, 250])plt.plot(xpoints, \n  ypoints)\nplt.show()\n']",[''],[],['img_matplotlib_pyplot.png']
python||Plotting,https://www.w3schools.com/python/matplotlib_plotting.asp,,"['Plotting x and y points', 'Plotting Without Line', 'Multiple Points', 'Default X-Points']","['The plot() function is used to draw points (markers) in a diagram.By default, the plot() function draws a line from point to point.The function takes parameters for specifying points in the diagram.Parameter 1 is an array containing the points on the x-axis.Parameter 2 is an array containing the points on the y-axis.If we need to plot a line from (1, 3) to (8, 10), we have to pass two arrays [1, 8] and [3, 10] to the plot function.', ""To plot only the markers, you can use shortcut string notation parameter 'o', which means 'rings'."", 'You can plot as many points as you like, just make sure you have the same number of points in both axis.', 'If we do not specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending on the length of the y-points.So, if we take the same example as above, and leave out the x-points, the diagram will look like this:']","['\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nxpoints = np.array([1, 8])\nypoints = np.array([3, 10])\n\nplt.plot(xpoints, ypoints)\nplt.show()\n', ""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nxpoints = np.array([1, 8])\nypoints = np.array([3, 10])\n\nplt.plot(xpoints, ypoints, 'o')\nplt.show()\n"", '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nxpoints = np.array([1, 2, 6, 8])\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(xpoints, ypoints)\nplt.show()\n', '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n  ypoints = np.array([3, 8, 1, 10, 5, 7])\n\nplt.plot(ypoints)\nplt.show()\n']",[''],[],"['img_matplotlib_plotting1.png', 'img_matplotlib_plot_o.png', 'img_matplotlib_plotting2.png', 'img_matplotlib_plotting4.png']"
python||Markers,https://www.w3schools.com/python/matplotlib_markers.asp,,"['Markers', 'Marker Reference', '']","['You can use the keyword argument marker to \nemphasize each point with a specified marker:', 'You can choose any of these markers:', 'You can use also use the shortcut string notation parameter to specify the marker.This parameter is also called fmt, and is written with this syntax:The marker value can be anything from the Marker Reference above.The line value can be one of the following:The short color value can be one of the following:', 'You can use the keyword argument markersize or the \nshorter version, ms to set the size of the markers:', 'You can use the keyword argument markeredgecolor or \nthe shorter mec to set the color of the \nedge of the markers:You can use the keyword argument markerfacecolor or \nthe shorter mfc to set the color inside the edge of the markers:Use both the mec and mfc arguments to color of the entire marker:You can also use Hexadecimal color values:Or any of the 140 supported color names.']","[""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, marker = 'o')\nplt.show()\n &&&&&& \n...\n\nplt.plot(ypoints, marker = '*')\n...\n"", ""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, 'o:r')\nplt.show()\n"", ""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, marker = 'o', ms = 20)\nplt.show()\n"", ""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, marker = 'o', ms = 20, mec = 'r')\nplt.show()\n &&&&&& \nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, marker = 'o', ms = 20, mfc = 'r')\nplt.show()\n &&&&&& \nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, marker = 'o', ms = 20, mec = 'r', mfc = 'r')\nplt.show()\n &&&&&& \n...\n\nplt.plot(ypoints, marker = 'o', ms = 20, mec = '#4CAF50', mfc = '#4CAF50')\n...\n &&&&&& \n...\n\nplt.plot(ypoints, marker = 'o', ms = 20, mec = 'hotpink', mfc = 'hotpink')\n...\n""]",[''],"[""Marker|||Description|||&&&'o'|||Circle|||Try it  »|||&&&'*'|||Star|||Try it  »|||&&&'.'|||Point|||Try it  »|||&&&','|||Pixel|||Try it  »|||&&&'x'|||X|||Try it  »|||&&&'X'|||X (filled)|||Try it  »|||&&&'+'|||Plus|||Try it  »|||&&&'P'|||Plus (filled)|||Try it  »|||&&&'s'|||Square|||Try it  »|||&&&'D'|||Diamond|||Try it  »|||&&&'d'|||Diamond (thin)|||Try it  »|||&&&'p'|||Pentagon|||Try it  »|||&&&'H'|||Hexagon|||Try it  »|||&&&'h'|||Hexagon|||Try it  »|||&&&'v'|||Triangle Down|||Try it  »|||&&&'^'|||Triangle Up|||Try it  »|||&&&'<'|||Triangle Left|||Try it  »|||&&&'>'|||Triangle Right|||Try it  »|||&&&'1'|||Tri Down|||Try it  »|||&&&'2'|||Tri Up|||Try it  »|||&&&'3'|||Tri Left|||Try it  »|||&&&'4'|||Tri Right|||Try it  »|||&&&'|'|||Vline|||Try it  »|||&&&'_'|||Hline|||Try it  »|||&&&"", ""Line Syntax|||Description|||&&&'-'|||Solid line|||Try it  »|||&&&':'|||Dotted line|||Try it  »|||&&&'--'|||Dashed line|||Try it  »|||&&&'-.'|||Dashed/dotted line|||Try it  »|||&&&"", ""Color Syntax|||Description|||&&&'r'|||Red|||Try it  »|||&&&'g'|||Green|||Try it  »|||&&&'b'|||Blue|||Try it  »|||&&&'c'|||Cyan|||Try it  »|||&&&'m'|||Magenta|||Try it  »|||&&&'y'|||Yellow|||Try it  »|||&&&'k'|||Black|||Try it  »|||&&&'w'|||White|||Try it  »|||&&&""]","['img_matplotlib_marker_o.png', 'img_matplotlib_marker_star.png', 'img_matplotlib_marker_fmt1.png', 'img_matplotlib_marker_o_20.png', 'img_matplotlib_marker_o_mec.png', 'img_matplotlib_marker_o_mfc.png', 'img_matplotlib_marker_o_mec_mfc.png', 'img_matplotlib_marker_o_hex.png', 'img_matplotlib_marker_hotpink.png']"
python||Line,https://www.w3schools.com/python/matplotlib_line.asp,,"['Linestyle', 'Shorter Syntax', 'Line Styles', 'Line Color', 'Line Width', 'Multiple Lines']","['You can use the keyword argument linestyle, or shorter ls, to \nchange the style of the plotted line:', 'The line style can be written in a shorter syntax:linestyle can be written as ls.dotted can be written as :.dashed can be written as --.', 'You can choose any of these styles:', 'You can use the keyword argument color or \nthe shorter c to set the color of the line:You can also use Hexadecimal color values:Or any of the 140 supported color names.', 'You can use the keyword argument linewidth or \nthe shorter lw to change the width of the line.The value is a floating number, in points:', 'You can plot as many lines as you like by simply adding more plt.plot() functions:You can also plot many lines by adding the points for the x- and y-axis for each line in the same plt.plot() function.(In the examples above we only specified the points on the y-axis, meaning that the points on the x-axis got the the default values (0, 1, 2, 3).)The x- and y- values come in pairs:']","[""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, linestyle = 'dotted')\nplt.show()\n &&&&&& \n\nplt.plot(ypoints, linestyle = 'dashed')\n\n"", ""\nplt.plot(ypoints, ls = ':')\n"", ""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, color = 'r')\nplt.show()\n &&&&&& \n...\n\nplt.plot(ypoints, c = '#4CAF50')\n...\n &&&&&& \n...\n\nplt.plot(ypoints, c = 'hotpink')\n...\n"", ""\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nypoints = np.array([3, 8, 1, 10])\n\nplt.plot(ypoints, linewidth = '20.5')\nplt.show()\n"", '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ny1 = np.array([3, 8, 1, 10])\ny2 = np.array([6, 2, 7, 11])\n\nplt.plot(y1)\nplt.plot(y2)\n\nplt.show()\n &&&&&& \nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx1 = np.array([0, 1, 2, 3])\ny1 = np.array([3, 8, 1, 10])\n\nx2 = np.array([0, 1, 2, 3])\ny2 = np.array([6, 2, 7, 11])\n\nplt.plot(x1, y1, x2, y2)\nplt.show()\n', '']",[''],"[""Style|||Or|||&&&'solid' (default)|||'-'|||Try it  »|||&&&'dotted'|||':'|||Try it  »|||&&&'dashed'|||'--'|||Try it  »|||&&&'dashdot'|||'-.'|||Try it  »|||&&&'None'|||'' or ' '|||Try it  »|||&&&""]","['img_matplotlib_line_dotted.png', 'img_matplotlib_line_dashed.png', 'img_matplotlib_line_dotted.png', 'img_matplotlib_line_red.png', 'img_matplotlib_line_hex.png', 'img_matplotlib_line_hotpink.png', 'img_matplotlib_line_lw.png', 'img_matplotlib_line_two.png', 'img_matplotlib_line_two.png']"
python||Labels and Title,https://www.w3schools.com/python/matplotlib_labels.asp,,"['Create Labels for a Plot', 'Create a Title for a Plot', 'Set Font Properties for Title and Labels', 'Position the Title']","['With Pyplot, you can use the xlabel() and \nylabel() functions to set a label for the x- and y-axis.', 'With Pyplot, you can use the title() function to set a title for the plot.', 'You can use the fontdict parameter in\nxlabel(), ylabel(), \nand title() to set font properties for the \ntitle and labels.', ""You can use the loc parameter in\ntitle() to position the title.Legal values are: 'left', 'right', and 'center'. Default value is 'center'.""]","['\nimport numpy as npimport matplotlib.pyplot as pltx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])y = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])plt.plot(x, y)plt.xlabel(""Average \n  Pulse"")plt.ylabel(""Calorie Burnage"")plt.show()\n', '\nimport numpy as npimport matplotlib.pyplot as pltx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])y = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])plt.plot(x, y)plt.title(""Sports Watch Data"")plt.xlabel(""Average \n  Pulse"")plt.ylabel(""Calorie Burnage"")plt.show()\n', '\nimport numpy as npimport matplotlib.pyplot as pltx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])y = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])font1 = {\'family\':\'serif\',\'color\':\'blue\',\'size\':20}\n  font2 = {\'family\':\'serif\',\'color\':\'darkred\',\'size\':15}plt.title(""Sports \n  Watch Data"", fontdict = font1)plt.xlabel(""Average Pulse"", fontdict = \n  font2)plt.ylabel(""Calorie Burnage"", fontdict = font2)plt.plot(x, \n  y)plt.show()\n', '']",[''],[],"['img_matplotlib_labels.png', 'img_matplotlib_title.png', 'img_matplotlib_title_fontdict.png', 'img_matplotlib_title_loc.png']"
python||Adding Grid Lines,https://www.w3schools.com/python/matplotlib_grid.asp,,"['Add Grid Lines to a Plot', 'Specify Which Grid Lines to Display', 'Set Line Properties for the Grid']","['With Pyplot, you can use the grid() function to add grid lines to the plot.', ""You can use the axis parameter in\nthe grid() function to specify which grid lines \nto display.Legal values are: 'x', 'y', and 'both'. Default value is 'both'."", ""You can also set the line properties of the grid, like this: grid(color = 'color', \nlinestyle = 'linestyle', linewidth = number).""]","['\nimport numpy as npimport matplotlib.pyplot as pltx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])y = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])plt.title(""Sports Watch Data"")\n  plt.xlabel(""Average Pulse"")plt.ylabel(""Calorie Burnage"")plt.plot(x, \n  y)plt.grid()plt.show() ', '\nimport numpy as npimport matplotlib.pyplot as pltx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])y = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])plt.title(""Sports Watch Data"")\n  plt.xlabel(""Average Pulse"")plt.ylabel(""Calorie Burnage"")plt.plot(x, \n  y)plt.grid(axis = \'x\')plt.show()  &&&&&& \nimport numpy as npimport matplotlib.pyplot as pltx = np.array([80, \n  85, 90, 95, 100, 105, 110, 115, 120, 125])y = np.array([240, 250, 260, \n  270, 280, 290, 300, 310, 320, 330])plt.title(""Sports Watch Data"")\n  plt.xlabel(""Average Pulse"")plt.ylabel(""Calorie Burnage"")plt.plot(x, \n  y)plt.grid(axis = \'y\')plt.show() ', '']",[''],[],"['img_matplotlib_grid.png', 'img_matplotlib_grid_axisx.png', 'img_matplotlib_grid_axisy.png', 'img_matplotlib_grid_kwargs.png']"
python||Subplots,https://www.w3schools.com/python/matplotlib_subplots.asp,,"['Display Multiple Plots', 'The subplots() Function', 'Title', 'Super Title']","['With the subplots() function you can draw multiple plots in one figure:', 'The subplots() function takes three arguments that describes the layout of the figure.The layout is organized in rows and columns, which are represented by the first\nand second argument.The third argument represents the index of the current plot.So, if we want a figure with 2 rows an 1 column (meaning that the two plots will be displayed on top of each other instead of side-by-side),\nwe can write the syntax like this:You can draw as many plots you like on one figure, just descibe the number of rows, columns, and the index of the plot.', 'You can add a title to each plot with the title() function:', 'You can add a title to the entire figure with the suptitle() function:']","['\n  import matplotlib.pyplot as pltimport numpy as np#plot 1:x = \n  np.array([0, 1, 2, 3])y = np.array([3, 8, 1, 10])plt.subplot(1, 2, 1)\n  plt.plot(x,y)#plot 2:x = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, \n  40])plt.subplot(1, 2, 2)plt.plot(x,y)plt.show()\n', '\n  import matplotlib.pyplot as pltimport numpy as np#plot 1:x = \n  np.array([0, 1, 2, 3])y = np.array([3, 8, 1, 10])plt.subplot(2, 1, 1)\n  plt.plot(x,y)#plot 2:x = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, \n  40])plt.subplot(2, 1, 2)plt.plot(x,y)plt.show()\n &&&&&& \n  import matplotlib.pyplot as pltimport numpy as npx = np.array([0, \n  1, 2, 3])y = np.array([3, 8, 1, 10])plt.subplot(2, 3, 1)\n  plt.plot(x,y)x = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, \n  40])plt.subplot(2, 3, 2)plt.plot(x,y)x = np.array([0, 1, \n  2, 3])y = np.array([3, 8, 1, 10])plt.subplot(2, 3, 3)plt.plot(x,y)\nx = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, 40])\n  plt.subplot(2, 3, 4)plt.plot(x,y)x = np.array([0, 1, 2, 3])y = \n  np.array([3, 8, 1, 10])plt.subplot(2, 3, 5)plt.plot(x,y)x \n  = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, 40])plt.subplot(2, \n  3, 6)plt.plot(x,y)plt.show()', '\n  import matplotlib.pyplot as pltimport numpy as np#plot 1:x = \n  np.array([0, 1, 2, 3])y = np.array([3, 8, 1, 10])plt.subplot(1, 2, 1)\n  plt.plot(x,y)plt.title(""SALES"")#plot 2:x = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, \n  40])plt.subplot(1, 2, 2)plt.plot(x,y)plt.title(""INCOME"")\nplt.show()\n', '\n  import matplotlib.pyplot as pltimport numpy as np#plot 1:x = \n  np.array([0, 1, 2, 3])y = np.array([3, 8, 1, 10])plt.subplot(1, 2, 1)\n  plt.plot(x,y)plt.title(""SALES"")#plot 2:x = np.array([0, 1, 2, 3])y = np.array([10, 20, 30, \n  40])plt.subplot(1, 2, 2)plt.plot(x,y)plt.title(""INCOME"")\nplt.suptitle(""MY SHOP"")plt.show()\n']",[''],[],"['img_matplotlib_subplots1.png', 'img_matplotlib_subplots2.png', 'img_matplotlib_subplots3.png', 'img_matplotlib_subplots4.png', 'img_matplotlib_subplots5.png']"
python||Scatter,https://www.w3schools.com/python/matplotlib_scatter.asp,,"['Creating Scatter Plots', 'Compare Plots', 'Colors', 'Color Each Dot', 'ColorMap', 'Size', 'Alpha', 'Combine Color Size and Alpha']","['With Pyplot, you can use the scatter() function \nto draw a scatter plot.The scatter() function plots one dot for \neach observation. It needs two arrays of the same length, one for the values of \nthe x-axis, and one for values on the y-axis:The observation in the example above is the result of 13 cars passing by.The X-axis shows how old the car is.The Y-axis shows the speed of the car when it passes.Are there any relationships between the observations?It seems that the newer the car, the faster it drives, but that could be a coincidence, after all we only registered 13 cars.', 'In the example above, there seems to be a relationship between speed and age,\nbut what if we plot the observations from another day as well?\nWill the scatter plot tell us something else?By comparing the two plots, I think it is safe to say that they both gives us the same conclusion: the newer the car, the faster it drives.', 'You can set your own color for each scatter plot with the\ncolor or the c \nargument:', 'You can even set a specific color for each dot by using an array of colors as value for the\nc argument:', ""The Matplotlib module has a number of available colormaps.A colormap is like a list of colors, where each color has a value that ranges \nfrom 0 to 100.Here is an example of a colormap:\n\nThis colormap is called 'viridis' and as you can see it ranges from 0, which \nis a purple color, and up to 100, which is a yellow color.You can specify the colormap with the keyword argument\ncmap with the value of the colormap, in this \ncase 'viridis' which is one of the \nbuilt-in colormaps available in Matplotlib.In addition you have to create an array with values (from 0 to 100), one value for each of \nthe point in the scatter plot:You can include the colormap in the drawing by including the plt.colorbar() statement:You can choose any of the built-in colormaps:"", 'You can change the size of the dots with the \ns argument.Just like colors, make sure the array for sizes has the same length as the arrays for the x- and y-axis:', 'You can adjust the transparency of the dots with the \nalpha argument.Just like colors, make sure the array for sizes has the same length as the arrays for the x- and y-axis:', 'You can combine a colormap with different sizes on the dots. This is best visualized if the dots are transparent:']","['\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])plt.scatter(x, y)plt.show()\n', '\n  import matplotlib.pyplot as pltimport numpy as np#day one, the age \n  and speed of 13 cars:x = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])plt.scatter(x, \n  y)#day two, the age and speed of 15 cars:x = np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])y = np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])\n  plt.scatter(x, y)plt.show()', ""\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])plt.scatter(x, \n  y, color = 'hotpink')x = np.array([2,2,8,1,15,8,12,9,7,3,11,4,7,14,12])y = np.array([100,105,84,105,90,99,90,95,94,100,79,112,91,80,85])\n  plt.scatter(x, y, color = '#88c999')plt.show()"", '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])colors = np.array([""red"",""green"",""blue"",""yellow"",""pink"",""black"",""orange"",""purple"",""beige"",""brown"",""gray"",""cyan"",""magenta""])\nplt.scatter(x, y, c=colors)plt.show()', ""\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])colors = np.array([0, \n  10, 20, 30, 40, 45, 50, 55, 60, 70, 80, 90, 100])\nplt.scatter(x, y, c=colors, cmap='viridis')plt.show() &&&&&& \n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])colors = np.array([0, \n  10, 20, 30, 40, 45, 50, 55, 60, 70, 80, 90, 100])\nplt.scatter(x, y, c=colors, cmap='viridis')plt.colorbar()plt.show()"", '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])sizes = \n  np.array([20,50,100,200,500,1000,60,90,10,300,600,800,75])plt.scatter(x, \n  y, s=sizes)plt.show()', '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([5,7,8,7,2,17,2,9,4,11,12,9,6])\n  y = np.array([99,86,87,88,111,86,103,87,94,78,77,85,86])sizes = \n  np.array([20,50,100,200,500,1000,60,90,10,300,600,800,75])plt.scatter(x, \n  y, s=sizes, alpha=0.5)plt.show()', ""\n  import matplotlib.pyplot as pltimport numpy as npx = \n  np.random.randint(100, size=(100))y = np.random.randint(100, size=(100))\n  colors = np.random.randint(100, size=(100))sizes = 10 * np.random.randint(100, \n  size=(100))plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral')\nplt.colorbar()plt.show()""]",[''],['Name||||||\xa0|||Reverse||||||&&&Accent|||Try it  »|||\xa0|||Accent_r|||Try it  »|||&&&Blues|||Try it  »|||\xa0|||Blues_r|||Try it  »|||&&&BrBG|||Try it  »|||\xa0|||BrBG_r|||Try it  »|||&&&BuGn|||Try it  »|||\xa0|||BuGn_r|||Try it  »|||&&&BuPu|||Try it  »|||\xa0|||BuPu_r|||Try it  »|||&&&CMRmap|||Try it  »|||\xa0|||CMRmap_r|||Try it  »|||&&&Dark2|||Try it  »|||\xa0|||Dark2_r|||Try it  »|||&&&GnBu|||Try it  »|||\xa0|||GnBu_r|||Try it  »|||&&&Greens|||Try it  »|||\xa0|||Greens_r|||Try it  »|||&&&Greys|||Try it  »|||\xa0|||Greys_r|||Try it  »|||&&&OrRd|||Try it  »|||\xa0|||OrRd_r|||Try it  »|||&&&Oranges|||Try it  »|||\xa0|||Oranges_r|||Try it  »|||&&&PRGn|||Try it  »|||\xa0|||PRGn_r|||Try it  »|||&&&Paired|||Try it  »|||\xa0|||Paired_r|||Try it  »|||&&&Pastel1|||Try it  »|||\xa0|||Pastel1_r|||Try it  »|||&&&Pastel2|||Try it  »|||\xa0|||Pastel2_r|||Try it  »|||&&&PiYG|||Try it  »|||\xa0|||PiYG_r|||Try it  »|||&&&PuBu|||Try it  »|||\xa0|||PuBu_r|||Try it  »|||&&&PuBuGn|||Try it  »|||\xa0|||PuBuGn_r|||Try it  »|||&&&PuOr|||Try it  »|||\xa0|||PuOr_r|||Try it  »|||&&&PuRd|||Try it  »|||\xa0|||PuRd_r|||Try it  »|||&&&Purples|||Try it  »|||\xa0|||Purples_r|||Try it  »|||&&&RdBu|||Try it  »|||\xa0|||RdBu_r|||Try it  »|||&&&RdGy|||Try it  »|||\xa0|||RdGy_r|||Try it  »|||&&&RdPu|||Try it  »|||\xa0|||RdPu_r|||Try it  »|||&&&RdYlBu|||Try it  »|||\xa0|||RdYlBu_r|||Try it  »|||&&&RdYlGn|||Try it  »|||\xa0|||RdYlGn_r|||Try it  »|||&&&Reds|||Try it  »|||\xa0|||Reds_r|||Try it  »|||&&&Set1|||Try it  »|||\xa0|||Set1_r|||Try it  »|||&&&Set2|||Try it  »|||\xa0|||Set2_r|||Try it  »|||&&&Set3|||Try it  »|||\xa0|||Set3_r|||Try it  »|||&&&Spectral|||Try it  »|||\xa0|||Spectral_r|||Try it  »|||&&&Wistia|||Try it  »|||\xa0|||Wistia_r|||Try it  »|||&&&YlGn|||Try it  »|||\xa0|||YlGn_r|||Try it  »|||&&&YlGnBu|||Try it  »|||\xa0|||YlGnBu_r|||Try it  »|||&&&YlOrBr|||Try it  »|||\xa0|||YlOrBr_r|||Try it  »|||&&&YlOrRd|||Try it  »|||\xa0|||YlOrRd_r|||Try it  »|||&&&afmhot|||Try it  »|||\xa0|||afmhot_r|||Try it  »|||&&&autumn|||Try it  »|||\xa0|||autumn_r|||Try it  »|||&&&binary|||Try it  »|||\xa0|||binary_r|||Try it  »|||&&&bone|||Try it  »|||\xa0|||bone_r|||Try it  »|||&&&brg|||Try it  »|||\xa0|||brg_r|||Try it  »|||&&&bwr|||Try it  »|||\xa0|||bwr_r|||Try it  »|||&&&cividis|||Try it  »|||\xa0|||cividis_r|||Try it  »|||&&&cool|||Try it  »|||\xa0|||cool_r|||Try it  »|||&&&coolwarm|||Try it  »|||\xa0|||coolwarm_r|||Try it  »|||&&&copper|||Try it  »|||\xa0|||copper_r|||Try it  »|||&&&cubehelix|||Try it  »|||\xa0|||cubehelix_r|||Try it  »|||&&&flag|||Try it  »|||\xa0|||flag_r|||Try it  »|||&&&gist_earth|||Try it  »|||\xa0|||gist_earth_r|||Try it  »|||&&&gist_gray|||Try it  »|||\xa0|||gist_gray_r|||Try it  »|||&&&gist_heat|||Try it  »|||\xa0|||gist_heat_r|||Try it  »|||&&&gist_ncar|||Try it  »|||\xa0|||gist_ncar_r|||Try it  »|||&&&gist_rainbow|||Try it  »|||\xa0|||gist_rainbow_r|||Try it  »|||&&&gist_stern|||Try it  »|||\xa0|||gist_stern_r|||Try it  »|||&&&gist_yarg|||Try it  »|||\xa0|||gist_yarg_r|||Try it  »|||&&&gnuplot|||Try it  »|||\xa0|||gnuplot_r|||Try it  »|||&&&gnuplot2|||Try it  »|||\xa0|||gnuplot2_r|||Try it  »|||&&&gray|||Try it  »|||\xa0|||gray_r|||Try it  »|||&&&hot|||Try it  »|||\xa0|||hot_r|||Try it  »|||&&&hsv|||Try it  »|||\xa0|||hsv_r|||Try it  »|||&&&inferno|||Try it  »|||\xa0|||inferno_r|||Try it  »|||&&&jet|||Try it  »|||\xa0|||jet_r|||Try it  »|||&&&magma|||Try it  »|||\xa0|||magma_r|||Try it  »|||&&&nipy_spectral|||Try it  »|||\xa0|||nipy_spectral_r|||Try it  »|||&&&ocean|||Try it  »|||\xa0|||ocean_r|||Try it  »|||&&&pink|||Try it  »|||\xa0|||pink_r|||Try it  »|||&&&plasma|||Try it  »|||\xa0|||plasma_r|||Try it  »|||&&&prism|||Try it  »|||\xa0|||prism_r|||Try it  »|||&&&rainbow|||Try it  »|||\xa0|||rainbow_r|||Try it  »|||&&&seismic|||Try it  »|||\xa0|||seismic_r|||Try it  »|||&&&spring|||Try it  »|||\xa0|||spring_r|||Try it  »|||&&&summer|||Try it  »|||\xa0|||summer_r|||Try it  »|||&&&tab10|||Try it  »|||\xa0|||tab10_r|||Try it  »|||&&&tab20|||Try it  »|||\xa0|||tab20_r|||Try it  »|||&&&tab20b|||Try it  »|||\xa0|||tab20b_r|||Try it  »|||&&&tab20c|||Try it  »|||\xa0|||tab20c_r|||Try it  »|||&&&terrain|||Try it  »|||\xa0|||terrain_r|||Try it  »|||&&&twilight|||Try it  »|||\xa0|||twilight_r|||Try it  »|||&&&twilight_shifted|||Try it  »|||\xa0|||twilight_shifted_r|||Try it  »|||&&&viridis|||Try it  »|||\xa0|||viridis_r|||Try it  »|||&&&winter|||Try it  »|||\xa0|||winter_r|||Try it  »|||&&&'],"['img_matplotlib_scatter.png', 'img_matplotlib_scatter_compare.png', 'img_matplotlib_scatter_color.png', 'img_matplotlib_scatter_colors2.png', 'img_colorbar.png', 'img_matplotlib_scatter_colormap1.png', 'img_matplotlib_scatter_colormap2.png', 'img_matplotlib_scatter_size.png', 'img_matplotlib_scatter_alpha.png', 'img_matplotlib_scatter_combine.png']"
python||Bars,https://www.w3schools.com/python/matplotlib_bars.asp,,"['Creating Bars', 'Horizontal Bars', 'Bar Color', 'Bar Width', 'Bar Height']","['With Pyplot, you can use the bar() function \nto draw bar graphs:The bar() function takes arguments that describes the \nlayout of the bars.The categories and their values represented by the first\nand second argument as arrays.', 'If you want the bars to be displayed horizontally instead of vertically,\nuse the barh() function:', 'The bar() and barh() takes the keyword argument\ncolor to set the color of the bars:You can use any of the 140 supported color names.Or you can use Hexadecimal color values:', 'The bar() takes the keyword argument\nwidth to set the width of the bars:The default width value is 0.8', 'The barh() takes the keyword argument\nheight to set the height of the bars:The default height value is 0.8']","['\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.bar(x,y)plt.show()\n &&&&&& \nx = [""APPLES"", ""BANANAS""]\ny = [400, 350]\nplt.bar(x, y)\n', '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.barh(x, y)plt.show()\n', '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.bar(x, y, color = ""red"")plt.show()\n &&&&&& \n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.bar(x, y, color = ""hotpink"")plt.show()\n &&&&&& \n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.bar(x, y, color = ""#4CAF50"")plt.show()\n', '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.bar(x, y, width = 0.1)plt.show()\n', '\n  import matplotlib.pyplot as pltimport numpy as npx = np.array([""A"", \n  ""B"", ""C"", ""D""])y = np.array([3, 8, 1, 10])plt.barh(x, y, height = 0.1)plt.show()\n']",[''],[],"['img_matplotlib_bars1.png', 'img_matplotlib_bars2.png', 'img_matplotlib_bars_red.png', 'img_matplotlib_bars_hotpink.png', 'img_matplotlib_bars_green.png', 'img_matplotlib_bars_thin.png', 'img_matplotlib_barh_height.png']"
python||Histograms,https://www.w3schools.com/python/matplotlib_histograms.asp,,"['Histogram', 'Create Histogram']","['A histogram is a graph showing frequency distributions.It is a graph showing the number of observations within each given interval.Example: Say you ask for the height of 250 people, you \nmight end up with a histogram like this:\n\nYou can read from the histogram that there are approximately:2 people from 140 to 145cm5 people from 145 to 150cm15 people from \n151 to 156cm31 people from 157 to 162cm46 people from 163 to 168cm53 \npeople from 168 to 173cm45 people from 173 to 178cm28 people from 179 to \n184cm21 people from 185 to 190cm4 people from 190 to 195cm', 'In Matplotlib, we use the hist() function to \ncreate histograms.The hist() function will use an array of \nnumbers to create a histogram, the array is sent into the function as an \nargument.For simplicity we use NumPy to randomly generate an array with 250 values, \nwhere the values will concentrate around 170, and the standard deviation is 10. \nLearn more about Normal Data \nDistribution in our Machine Learning \nTutorial.The hist() function will read the array and produce a histogram:']","['\n  import numpy as npx = \n  np.random.normal(170, 10, 250)print(x) &&&&&& \n  import matplotlib.pyplot as pltimport numpy as npx = \n  np.random.normal(170, 10, 250)plt.hist(x)plt.show()\xa0\n', '']",[''],[],"['img_matplotlib_histogram1.png', 'img_matplotlib_histogram1.png']"
python||Pie Charts,https://www.w3schools.com/python/matplotlib_pie_charts.asp,,"['Creating Pie Charts', 'Labels', 'Start Angle', 'Explode', 'Shadow', 'Colors', 'Legend']","['With Pyplot, you can use the pie() function \nto draw pie charts:As you can see the pie chart draws one piece (called a wedge) for each value \nin the array (in this case [35, 25, 25, 15]).By default the plotting of the first wedge starts from the x-axis and move counterclockwise:\n\n', 'Add labels to the pie chart with the label parameter.The label parameter must be an array with one label for each wedge:', 'As mentioned the default start angle is at the x-axis, but you can change the start angle by specifying a\nstartangle parameter.The startangle parameter is defined with an angle in degrees, default angle is 0:\n\n', 'Maybe you want one of the wedges to stand out? The \nexplode parameter allows you to do that.The explode parameter, if specified, and not None,\nmust be an array with one value for each wedge.Each value represents how far from the center each wedge is displayed:', 'Add a shadow to the pie chart by setting the\nshadows parameter to True:', ""You can set the color of each wedge with the colors parameter.The colors parameter, if specified, \nmust be an array with one value for each wedge:You can use Hexadecimal color values, any of the 140 supported color names, \nor one of these shortcuts:\n'r' - Red\n'g' - Green\n'b' - Blue\n'c' - Cyan\n'm' - Magenta\n'y' - Yellow\n'k' - Black\n'w' - White\n"", 'To add a list of explanation for each wedge, use the legend() function:To add a header to the legend, add the title parameter to the legend\nfunction.']","['\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])plt.pie(y)plt.show()\xa0\n', '\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]plt.pie(y, \n  labels = mylabels)plt.show()\xa0\n', '\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]plt.pie(y, \n  labels = mylabels, startangle = 90)plt.show()\xa0\n', '\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]\n  myexplode = [0.2, 0, 0, 0]plt.pie(y, \n  labels = mylabels, explode = myexplode)plt.show()\xa0\n', '\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]\n  myexplode = [0.2, 0, 0, 0]plt.pie(y, \n  labels = mylabels, explode = myexplode, shadow = True)plt.show()\xa0\n', '\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]\n  mycolors = [""black"", ""hotpink"", ""b"", ""#4CAF50""]plt.pie(y, labels = \n  mylabels, colors = mycolors)plt.show()\xa0\n', '\n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]\nplt.pie(y, labels = mylabels)plt.legend()plt.show()\xa0\n &&&&&& \n  import matplotlib.pyplot as pltimport numpy as npy = np.array([35, \n  25, 25, 15])mylabels = [""Apples"", ""Bananas"", ""Cherries"", ""Dates""]\nplt.pie(y, labels = mylabels)plt.legend(title = ""Four Fruits:"")plt.show()\xa0\n']",[''],[],"['img_matplotlib_pie1.png', 'img_matplotlib_pie_start.png', 'img_matplotlib_pie_labels.png', 'img_matplotlib_pie_angles.png', 'img_matplotlib_pie_angle_90.png', 'img_matplotlib_pie_explode.png', 'img_matplotlib_pie_shadow.png', 'img_matplotlib_pie_color.png', 'img_matplotlib_pie_legend.png', 'img_matplotlib_pie_legend_title.png']"
python||,https://www.w3schools.com/python/python_ml_getting_started.asp,,"['Data Set', 'Data Types']","['In the mind of a computer, a data set is any collection of data.\nIt can be anything from an array to a complete database.Example of an array:Example of a database:By looking at the array, we can guess that the average value is probably around 80 \nor 90, and we are also able to determine the highest value and the lowest value, but what else can we do?And by looking at the database we can see that the most popular color is white, and the oldest car is 17 years,\nbut what if we could predict if a car had an AutoPass, just by looking at the other values?That is what Machine Learning is for! Analyzing data and predicting the outcome!', 'To analyze data, it is important to know what type of data we are dealing with.We can split the data types into three main categories:Numerical data are numbers, and can be split into two \nnumerical categories:Categorical data are values that cannot be measured up \nagainst each other. Example: a color value, or any yes/no values.Ordinal data are like categorical data, but can be measured \nup against each other. Example: school grades where A is better than B and so \non.By knowing the data type of your data source, you will be able to know what \ntechnique to use when analyzing them.You will learn more about statistics and analyzing data in the next chapters.']","['', '']","['Data Types###Data Types###&&&|||Numerical|||Categorical|||Ordinal|||&&&|||Discrete Data- numbers that are limited to integers. Example: The number |||of cars passing by.|||Continuous Data- numbers that are of infinite value. Example: The |||  price of an item, or the size of an item|||']",['Carname|||Color|||Age|||Speed|||AutoPass|||&&&BMW|||red|||5|||99|||Y|||&&&Volvo|||black|||7|||86|||Y|||&&&VW|||gray|||8|||87|||N|||&&&VW|||white|||7|||88|||Y|||&&&Ford|||white|||2|||111|||Y|||&&&VW|||white|||17|||86|||Y|||&&&Tesla|||red|||2|||103|||Y|||&&&BMW|||black|||9|||87|||Y|||&&&Volvo|||gray|||4|||94|||N|||&&&Ford|||white|||11|||78|||N|||&&&Toyota|||gray|||12|||77|||N|||&&&VW|||white|||9|||85|||N|||&&&Toyota|||blue|||6|||86|||Y|||&&&'],[]
python||,https://www.w3schools.com/python/python_ml_mean_median_mode.asp,,"['Mean, Median, and Mode', 'Mean', 'Median', 'Mode']","['What can we learn from looking at a group of numbers?In Machine Learning (and in mathematics) there are often three values that \ninterests us:Example: We have registered the speed of 13 cars:What is the average, the middle, or the most common speed value?', 'The mean value is the average value.To calculate the mean, find the sum of all values, and divide the sum by the number of values:The NumPy module has a method for this. Learn about the NumPy module in our NumPy Tutorial.', 'The median value is the value in the middle, after you have sorted all the values:The NumPy module has a method for this:', 'The Mode value is the value that appears the most number of times:The SciPy module has a method for this. Learn about the SciPy module in our\nSciPy Tutorial.', 'The Mean, Median, and Mode are techniques that are often used in Machine \nLearning, so it is important to understand the concept behind them.']","['\n  import numpyspeed = [99,86,87,88,111,86,103,87,94,78,77,85,86]\nx = numpy.mean(speed)print(x)', '\n  import numpyspeed = [99,86,87,88,111,86,103,87,94,78,77,85,86]\nx = numpy.median(speed)print(x) &&&&&& \n  import numpyspeed = [99,86,87,88,86,103,87,94,78,77,85,86]\nx = numpy.median(speed)print(x)', '\n  from scipy import statsspeed = \n  [99,86,87,88,111,86,103,87,94,78,77,85,86]x = stats.mode(speed)print(x)', '']","['Mean, Median, and Mode###&&&|||Mean - The average value|||Median - The mid point value|||Mode - The most common value|||']",[],[]
python||,https://www.w3schools.com/python/python_ml_standard_deviation.asp,,"['What is Standard Deviation?', 'Variance', 'Standard Deviation', 'Symbols']","['Standard deviation is a number that describes how spread out the values are.A low standard deviation means that most of the numbers are close to the mean (average) value.A high standard deviation means that the values are spread out over a wider range.Example: This time we have registered the speed of 7 cars:The standard deviation is:Meaning that most of the values are within the range of 0.9 from the mean \nvalue, which is 86.4.Let us do the same with a selection of numbers with a wider range:The standard deviation is:Meaning that most of the values are within the range of 37.85 from the mean \nvalue, which is 77.4.As you can see, a higher standard deviation indicates that the values are \nspread out over a wider range.The NumPy module has a method to calculate the standard deviation:', 'Variance is another number that indicates how spread out the values are.In fact, if you take the square root of the variance, you get the standard \ndeviation!Or the other way around, if you multiply the standard deviation by itself, you get the \nvariance!To calculate the variance you have to do as follows:1. Find the mean:2. For each value: find the difference from the mean:3. For each difference: find the square value:4. The variance is the average number of these squared differences:Luckily, NumPy has a method to calculate the variance:', 'As we have learned, the formula to find the standard deviation is the square root of the variance:Or, as in the example from before, use the NumPy to calculate the standard deviation:', 'Standard Deviation is often represented by the symbol Sigma: σ Variance is often represented by the symbol Sigma Square: σ2 ', 'The Standard Deviation and Variance are terms that are often used in Machine Learning, so it is important to understand how to get them, and the concept behind them.']","['\n  import numpyspeed = [86,87,88,86,87,85,86]\nx = numpy.std(speed)print(x) &&&&&& \n  import numpyspeed = [32,111,138,28,59,77,97]\nx = numpy.std(speed)print(x)', '\n  import numpyspeed = [32,111,138,28,59,77,97]\nx = numpy.var(speed)print(x)', '\n  import numpyspeed = [32,111,138,28,59,77,97]\nx = numpy.std(speed)print(x)', '']",[''],[],[]
python||,https://www.w3schools.com/python/python_ml_percentile.asp,,['What are Percentiles?'],"[""Percentiles are used in statistics to give you a number that describes the \nvalue that a given percent of the values are lower than.Example: Let's say we have an array of the ages of all the people that lives in a street.What is the 75. percentile? The answer is 43, meaning that 75% of the people \nare 43 or younger.The NumPy module has a method for finding the specified percentile:""]","['\n  import numpyages = \n  [5,31,43,48,50,41,7,11,15,39,80,82,32,2,8,6,25,36,27,61,31]\nx = numpy.percentile(ages, 75)print(x) &&&&&& \n  import numpyages = \n  [5,31,43,48,50,41,7,11,15,39,80,82,32,2,8,6,25,36,27,61,31]\nx = numpy.percentile(ages, 90)print(x)']",[''],[],[]
python||,https://www.w3schools.com/python/python_ml_data_distribution.asp,,"['Data Distribution', 'Histogram', 'Big Data Distributions']","['Earlier in this tutorial we have worked with very small amounts of data in our examples, just to \nunderstand the different concepts.In the real world, the data sets are much bigger, but it can be difficult to \ngather real world data, at least at an early stage of a project.To create big data sets for testing, we use the Python module NumPy, which \ncomes with a number of methods to create random data sets, of any size.', 'To visualize the data set we can draw a histogram with the data we collected.We will use the Python module Matplotlib to draw a histogram.Learn about the Matplotlib module in our Matplotlib Tutorial.We use the array from the example above to draw a histogram with 5 bars.The first bar represents how many values in the array are between 0 and 1.The second bar represents how many values are between 1 and 2.Etc.Which gives us this result:An array containing 250 values is not considered very big, but now you know how to create a random set of values, and by changing the parameters, you can create the data set \nas big as you want.', '']","['\n  import numpyx = numpy.random.uniform(0.0, 5.0, 250)\nprint(x)', '\n  import numpyimport matplotlib.pyplot as pltx = \n  numpy.random.uniform(0.0, 5.0, 250)plt.hist(x, 5)plt.show() &&&&&& \n  import numpyimport matplotlib.pyplot as pltx = \n  numpy.random.uniform(0.0, 5.0, 100000)plt.hist(x, 100)plt.show()', '']",['Histogram###&&&|||52 values are between 0 and 1|||48 values are between 1 and 2|||49 values are between 2 and 3|||51 values are between 3 and 4|||50 values are between 4 and 5|||'],[],['img_numpy_uniform3.png']
python||,https://www.w3schools.com/python/python_ml_normal_data_distribution.asp,,['Normal Data Distribution'],"['In the previous chapter we learned how to create a completely random array, of a given size, and between two given values.In this chapter we will learn how to create an array where the values are concentrated around a given value.In probability theory this kind of data distribution is known as the normal \ndata distribution, or the Gaussian data distribution, after the mathematician \nCarl Friedrich Gauss who came up with the formula of this data distribution.We use the array from the numpy.random.normal() \nmethod, with 100000 values,\xa0 to draw a histogram with 100 bars.We specify that the mean value is 5.0, and the standard deviation is 1.0.Meaning that the values should be concentrated around 5.0, and rarely further \naway than 1.0 from the mean.And as you can see from the histogram, most values are between 4.0 and 6.0, \nwith a top at approximately 5.0.']","['\n  import numpyimport matplotlib.pyplot as pltx = \n  numpy.random.normal(5.0, 1.0, 100000)plt.hist(x, 100)plt.show()']",[''],[],['img_numpy_normal.png']
python||,https://www.w3schools.com/python/python_ml_scatterplot.asp,,"['Scatter Plot', 'Random Data Distributions']","['A scatter plot is a diagram where each value in the data set is represented by a dot.The Matplotlib module has a method for drawing scatter plots, it needs two arrays of \nthe same length, one for the values of the x-axis, and one for the values of the \ny-axis:The x array represents the age of each car.The y array represents the speed of each car.The x-axis represents ages, and the y-axis represents speeds.What we can read from the diagram is that the two fastest cars were both 2 \nyears old, and the slowest car was 12 years old.', 'In Machine Learning the data sets can contain thousands-, or even millions, of values.You might not have real world data when you are testing an algorithm, you \nmight have to use randomly generated values.As we have learned in the previous chapter, the NumPy module can help us with that!Let us create two arrays that are both filled with 1000 random numbers from a \nnormal data distribution.The first array will have the mean set to 5.0 with a standard deviation of \n1.0.The second array will have the mean set to 10.0 with a standard \ndeviation of 2.0:We can see that the dots are concentrated around the value 5 on the x-axis, \nand 10 on the y-axis.We can also see that the spread is wider on the y-axis than on the x-axis.']","['\n  import matplotlib.pyplot as pltx = \n  [5,7,8,7,2,17,2,9,4,11,12,9,6]y = \n  [99,86,87,88,111,86,103,87,94,78,77,85,86]plt.scatter(x, y)\n  plt.show()\n', '\n  import numpyimport matplotlib.pyplot as pltx = numpy.random.normal(5.0, \n  1.0, 1000)y = numpy.random.normal(10.0, 2.0, 1000)plt.scatter(x, y)\n  plt.show()\n']",[''],[],"['img_scatterplot.png', 'img_matplotlib_scatter.png', 'img_matplotlib_scatter_1000.png']"
python||,https://www.w3schools.com/python/python_ml_linear_regression.asp,,"['Regression', 'Linear Regression', 'How Does it Work?', 'R for Relationship', 'Predict Future Values', 'Bad Fit?']","['The term regression is used when you try to find the relationship between variables.In Machine Learning, and in statistical modeling, that relationship is used to predict the outcome of future events.', 'Linear regression uses the relationship between the data-points to draw a straight line through \nall them.This line can be used to predict future values.In Machine Learning, predicting the future is very important.', 'Python has methods for finding a relationship between data-points and to draw a line of linear regression. \nWe will show you \nhow to use these methods instead of going through the mathematic formula.In the example below, the x-axis represents age, and the y-axis represents speed. We have registered the age and speed of 13 cars as they were passing a \ntollbooth. Let us see if the data we collected could be used in a linear \nregression:Import the modules you need.You can learn about the Matplotlib module in our Matplotlib Tutorial.You can learn about the SciPy module in our SciPy Tutorial.Create the arrays that represent the values of the x and y axis:Execute a method that returns some important key values of Linear Regression:Create a function that uses the slope and \nintercept values to return a new value. This \nnew value represents where on the y-axis the corresponding x value will be \nplaced:Run each value of the x array through the function. This will result in a new \narray with new values for the y-axis:Draw the original scatter plot:Draw the line of linear regression:Display the diagram:', 'It is important to know how the relationship between the values of the \nx-axis and the values of the y-axis is, if there are no relationship the linear \nregression can not be used to predict anything.This relationship - the coefficient of correlation - is called\nr.The r value ranges from -1 to 1, where 0 means no relationship, and 1 \n(and -1) \nmeans 100% related.Python and the Scipy module will compute this value for you, all you have to \ndo is feed it with the x and y values.', 'Now we can use the information we have gathered to predict future values.Example: Let us try to predict the speed of a 10 years old car.To do so, we need the same myfunc() function \nfrom the example above:The example predicted a speed at 85.6, which we also could read from the \ndiagram:', 'Let us create an example where linear regression would not be the best method \nto predict future values.And the r for relationship?']","['\n  import matplotlib.pyplot as pltx = [5,7,8,7,2,17,2,9,4,11,12,9,6]y = \n  [99,86,87,88,111,86,103,87,94,78,77,85,86]plt.scatter(x, y)plt.show() &&&&&& \n  import matplotlib.pyplot as pltfrom scipy import stats\nx = [5,7,8,7,2,17,2,9,4,11,12,9,6]y = \n  [99,86,87,88,111,86,103,87,94,78,77,85,86]slope, intercept, r, \n  p, std_err = stats.linregress(x, y)def myfunc(x):\xa0 \n  return slope * x + interceptmymodel = list(map(myfunc, x))\n  plt.scatter(x, y)plt.plot(x, mymodel)plt.show()', '\n  from scipy import statsx = \n  [5,7,8,7,2,17,2,9,4,11,12,9,6]y = \n  [99,86,87,88,111,86,103,87,94,78,77,85,86]slope, intercept, r, \n  p, std_err = stats.linregress(x, y)print(r)\n', '\n  from scipy import stats\nx = [5,7,8,7,2,17,2,9,4,11,12,9,6]y = \n  [99,86,87,88,111,86,103,87,94,78,77,85,86]slope, intercept, r, \n  p, std_err = stats.linregress(x, y)def myfunc(x):\xa0 \n  return slope * x + interceptspeed = myfunc(10)\n  print(speed)', '\n  import matplotlib.pyplot as pltfrom scipy import stats\nx = [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]y = \n  [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]slope, \n  intercept, r, p, std_err = stats.linregress(x, y)def \n  myfunc(x):\xa0 return slope * x + interceptmymodel = list(map(myfunc, \n  x))plt.scatter(x, y)plt.plot(x, mymodel)plt.show() &&&&&& \n  import numpyfrom scipy import statsx = \n  [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]y = \n  [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]slope, intercept, r, \n  p, std_err = stats.linregress(x, y)print(r)\n', '', '']",[''],[],"['img_linear_regression.png', 'img_matplotlib_scatter.png', 'img_linear_regression.png', 'img_linear_regression2.png', 'img_linear_regression_badfit.png']"
python||,https://www.w3schools.com/python/python_ml_polynomial_regression.asp,,"['Polynomial Regression', 'How Does it Work?', 'R-Squared', 'Predict Future Values', 'Bad Fit?']","['If your data points clearly will not fit a linear regression (a straight line \nthrough all data points), it might be ideal for polynomial regression.Polynomial regression, like linear regression, uses the relationship between the \nvariables x and y to find the best way to draw a line through the data points.', ""Python has methods for finding a relationship between data-points and to draw \na line of polynomial regression. We will show you how to use these methods \ninstead of going through the mathematic formula.In the example below, we have registered 18 cars as they were passing a \ncertain tollbooth.We have registered the car's speed, and the time of day (hour) the passing \noccurred.The x-axis represents the hours of the day and the y-axis represents the \nspeed:Import the modules you need.You can learn about the NumPy module in our NumPy Tutorial.You can learn about the SciPy module in our SciPy Tutorial.Create the arrays that represent the values of the x and y axis:NumPy has a method that lets us make a polynomial model:Then specify how the line will display, we start at position 1, and end at \nposition 22:Draw the original scatter plot:Draw the line of polynomial regression:Display the diagram:"", 'It is important to know how well the relationship between the values of the \nx- and y-axis is, if there are no relationship the \npolynomial \nregression can not be used to predict anything.The relationship is measured with a value called the r-squared.The r-squared value ranges from 0 to 1, where 0 means no relationship, and 1 \nmeans 100% related.Python and the Sklearn module will compute this value for you, all you have to \ndo is feed it with the x and y arrays:', 'Now we can use the information we have gathered to predict future values.Example: Let us try to predict the speed of a car that passes the tollbooth \nat around 17 P.M:To do so, we need the same mymodel array \nfrom the example above:The example predicted a speed to be 88.87, which we also could read from the diagram:', 'Let us create an example where polynomial regression would not be the best method \nto predict future values.And the r-squared value?']","['\n  import matplotlib.pyplot as pltx = [1,2,3,5,6,7,8,9,10,12,13,14,15,16,18,19,21,22]y = [100,90,80,60,60,55,60,65,70,70,75,76,78,79,90,99,99,100]\n  plt.scatter(x, y)plt.show() &&&&&& \n  import numpyimport matplotlib.pyplot as pltx = [1,2,3,5,6,7,8,9,10,12,13,14,15,16,18,19,21,22]y = \n  [100,90,80,60,60,55,60,65,70,70,75,76,78,79,90,99,99,100]mymodel = \n  numpy.poly1d(numpy.polyfit(x, y, 3))myline = numpy.linspace(1, 22, 100)plt.scatter(x, y)plt.plot(myline, mymodel(myline))\n  plt.show()', '\n  import numpyfrom sklearn.metrics import r2_scorex = \n  [1,2,3,5,6,7,8,9,10,12,13,14,15,16,18,19,21,22]y = \n  [100,90,80,60,60,55,60,65,70,70,75,76,78,79,90,99,99,100]mymodel = \n  numpy.poly1d(numpy.polyfit(x, y, 3))print(r2_score(y, mymodel(x)))', '\n  import numpyfrom sklearn.metrics import r2_scorex = \n  [1,2,3,5,6,7,8,9,10,12,13,14,15,16,18,19,21,22]y = \n  [100,90,80,60,60,55,60,65,70,70,75,76,78,79,90,99,99,100]mymodel = \n  numpy.poly1d(numpy.polyfit(x, y, 3))speed = mymodel(17)print(speed)', '\n  import numpyimport matplotlib.pyplot as pltx = \n  [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]y = \n  [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]mymodel = \n  numpy.poly1d(numpy.polyfit(x, y, 3))myline = numpy.linspace(2, 95, 100)\nplt.scatter(x, y)plt.plot(myline, mymodel(myline))plt.show() &&&&&& \n  import numpyfrom sklearn.metrics import r2_scorex = \n  [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]y = \n  [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]mymodel = \n  numpy.poly1d(numpy.polyfit(x, y, 3))print(r2_score(y, mymodel(x)))\n', '']",[''],[],"['img_polynomial_regression.png', 'img_polynomial_scatter.png', 'img_polynomial_regression.png', 'img_polynomial_prediction.png', 'img_polynomial_badfit.png']"
python||,https://www.w3schools.com/python/python_ml_multiple_regression.asp,,"['Multiple Regression', 'How Does it Work?', 'Coefficient', 'Result Explained']","['Multiple regression is like linear regression, but with more than one \nindependent value, meaning that we try to predict a value based on two \nor more variables.Take a look at the data set below, it contains some information about cars.We can predict the CO2 emission of a car based on \nthe size of the engine, but with multiple regression we can throw in more \nvariables, like the weight of the car, to make the prediction more accurate.', ""In Python we have modules that will do the work for us. Start by importing \nthe Pandas module.Learn about the Pandas module in our Pandas Tutorial.The Pandas module allows us to read csv files and return a DataFrame object.The file is meant for testing purposes only, you can download it here: cars.csvThen make a list of the independent values and call this \nvariable X. Put the dependent values in a variable called y.We will use some methods from the sklearn module, so we will have to import that module as well:From the sklearn module we will use the LinearRegression() method \nto create a linear regression object.This object has a method called fit() that takes \nthe independent and dependent values as parameters and fills the regression object with data that describes the relationship:Now we have a regression object that are ready to predict CO2 values based on \na car's weight and volume:We have predicted that a car with 1.3 liter engine, and a weight of 2300 kg, will release approximately 107 grams of CO2 for every \nkilometer it drives."", 'The coefficient is a factor that describes the relationship \nwith an unknown variable.Example: if x is a variable, then\n2x is x two \ntimes. x is the unknown variable, and the \nnumber 2 is the coefficient.In this case, we can ask for the coefficient value of weight against CO2, and \nfor volume against CO2. The answer(s) we get tells us what would happen if we \nincrease, or decrease, one of the independent values.The result array represents the coefficient values of weight and volume.Weight: 0.00755095\nVolume: 0.00780526These values tell us that if the weight increase by 1kg, the CO2 \nemission increases by 0.00755095g.And if the engine size (Volume) increases by 1 cm3, the CO2 emission \nincreases by 0.00780526 g.I think that is a fair guess, but let test it!We have already predicted that if a car with a 1300cm3 engine weighs 2300kg, the CO2 emission will be approximately 107g.What if we increase the weight with 1000kg?\nWe have predicted that a car with 1.3 liter engine, and a weight of \n3300 kg, will release approximately 115 grams of CO2 for every kilometer it drives.\nWhich shows that the coefficient of 0.00755095 is correct:\n107.2087328 + (1000 * 0.00755095) = 114.75968', '']","['\n  import pandasfrom sklearn import linear_modeldf = pandas.read_csv(""cars.csv"")\nX = df[[\'Weight\', \'Volume\']]y = df[\'CO2\']regr = \n  linear_model.LinearRegression()regr.fit(X, y)#predict the CO2 \n  emission of a car where the weight is 2300kg, and the volume is 1300cm3:\n  predictedCO2 = regr.predict([[2300, 1300]])\nprint(predictedCO2)', '\n  import pandasfrom sklearn import linear_modeldf = pandas.read_csv(""cars.csv"")\nX = df[[\'Weight\', \'Volume\']]y = df[\'CO2\']regr = \n  linear_model.LinearRegression()regr.fit(X, y)print(regr.coef_) &&&&&& \n  import pandasfrom sklearn import linear_modeldf = pandas.read_csv(""cars.csv"")\nX = df[[\'Weight\', \'Volume\']]y = df[\'CO2\']regr = \n  linear_model.LinearRegression()regr.fit(X, y)predictedCO2 = regr.predict([[3300, 1300]])\nprint(predictedCO2)', '', '']",[''],"['Car|||Model|||Volume|||Weight|||CO2||||||&&&', 'Toyota|||Aygo|||1000|||790|||99|||&&&Mitsubishi|||Space Star|||1200|||1160|||95|||&&&Skoda|||Citigo|||1000|||929|||95|||&&&Fiat|||500|||900|||865|||90|||&&&Mini|||Cooper|||1500|||1140|||105|||&&&VW|||Up!|||1000|||929|||105|||&&&Skoda|||Fabia|||1400|||1109|||90|||&&&Mercedes|||A-Class|||1500|||1365|||92|||&&&Ford|||Fiesta|||1500|||1112|||98|||&&&Audi|||A1|||1600|||1150|||99|||&&&Hyundai|||I20|||1100|||980|||99|||&&&Suzuki|||Swift|||1300|||990|||101|||&&&Ford|||Fiesta|||1000|||1112|||99|||&&&Honda|||Civic|||1600|||1252|||94|||&&&Hundai|||I30|||1600|||1326|||97|||&&&Opel|||Astra|||1600|||1330|||97|||&&&BMW|||1|||1600|||1365|||99|||&&&Mazda|||3|||2200|||1280|||104|||&&&Skoda|||Rapid|||1600|||1119|||104|||&&&Ford|||Focus|||2000|||1328|||105|||&&&Ford|||Mondeo|||1600|||1584|||94|||&&&Opel|||Insignia|||2000|||1428|||99|||&&&Mercedes|||C-Class|||2100|||1365|||99|||&&&Skoda|||Octavia|||1600|||1415|||99|||&&&Volvo|||S60|||2000|||1415|||99|||&&&Mercedes|||CLA|||1500|||1465|||102|||&&&Audi|||A4|||2000|||1490|||104|||&&&Audi|||A6|||2000|||1725|||114|||&&&Volvo|||V70|||1600|||1523|||109|||&&&BMW|||5|||2000|||1705|||114|||&&&Mercedes|||E-Class|||2100|||1605|||115|||&&&Volvo|||XC70|||2000|||1746|||117|||&&&Ford|||B-Max|||1600|||1235|||104|||&&&BMW|||2|||1600|||1390|||108|||&&&Opel|||Zafira|||1600|||1405|||109|||&&&Mercedes|||SLK|||2500|||1395|||120|||&&&']",[]
python||,https://www.w3schools.com/python/python_ml_scale.asp,,"['Scale Features', 'Predict CO2 Values']","['When your data has different values, and even different measurement units, it can be difficult to \ncompare them. What is kilograms compared to meters? Or altitude compared to time?The answer to this problem is scaling. We can scale data into new values that are easier to \ncompare.Take a look at the table below, it is the same data set that we used in the \nmultiple regression chapter, but this time the volume column \ncontains values in liters instead of cm3 (1.0 instead of 1000).The file is meant for testing purposes only, you can download it here: cars2.csvIt can be difficult to compare the volume 1.0 with the weight 790, but if we \nscale them both into comparable values, we can easily see how much one value \nis compared to the other.There are different methods for scaling data, in this tutorial we will use a \nmethod called standardization.The standardization method  \nuses this formula:z = (x - u) / sWhere z is the new value, \nx is the original value, \nu is the mean and s is the \nstandard deviation.If you take the weight column from the data set above, the first value \nis 790, and the scaled value will be:If you take the volume column from the data set above, the first value \nis 1.0, and the scaled value \nwill be:(1.0 - 1.61) / 0.38 = -1.59Now you can compare -2.1 with -1.59 instead of comparing 790 with 1.0.You do not have to do this manually,\nthe Python sklearn module has a method called StandardScaler()\nwhich returns a Scaler object with methods for transforming data sets.', 'The task in the Multiple Regression chapter was to predict the CO2 emission from a car \nwhen you only knew its weight and volume.When the data set is scaled, you will have to use the scale when you predict values:']","['\n  import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\ndf = pandas.read_csv(""cars2.csv"")X = df[[\'Weight\', \'Volume\']]\nscaledX = scale.fit_transform(X)\n  print(scaledX)', '\n  import pandasfrom sklearn import linear_modelfrom \n  sklearn.preprocessing import StandardScalerscale = StandardScaler()\ndf = pandas.read_csv(""cars2.csv"")X = df[[\'Weight\', \'Volume\']]\n  y = df[\'CO2\']\nscaledX = scale.fit_transform(X)\n  regr = linear_model.LinearRegression()regr.fit(scaledX, y)scaled = \n  scale.transform([[2300, 1.3]])predictedCO2 = regr.predict([scaled[0]])\n  print(predictedCO2)']",[''],"['Car|||Model|||Volume|||Weight|||CO2||||||&&&', 'Toyota|||Aygo|||1.0|||790|||99|||&&&Mitsubishi|||Space Star|||1.2|||1160|||95|||&&&Skoda|||Citigo|||1.0|||929|||95|||&&&Fiat|||500|||0.9|||865|||90|||&&&Mini|||Cooper|||1.5|||1140|||105|||&&&VW|||Up!|||1.0|||929|||105|||&&&Skoda|||Fabia|||1.4|||1109|||90|||&&&Mercedes|||A-Class|||1.5|||1365|||92|||&&&Ford|||Fiesta|||1.5|||1112|||98|||&&&Audi|||A1|||1.6|||1150|||99|||&&&Hyundai|||I20|||1.1|||980|||99|||&&&Suzuki|||Swift|||1.3|||990|||101|||&&&Ford|||Fiesta|||1.0|||1112|||99|||&&&Honda|||Civic|||1.6|||1252|||94|||&&&Hundai|||I30|||1.6|||1326|||97|||&&&Opel|||Astra|||1.6|||1330|||97|||&&&BMW|||1|||1.6|||1365|||99|||&&&Mazda|||3|||2.2|||1280|||104|||&&&Skoda|||Rapid|||1.6|||1119|||104|||&&&Ford|||Focus|||2.0|||1328|||105|||&&&Ford|||Mondeo|||1.6|||1584|||94|||&&&Opel|||Insignia|||2.0|||1428|||99|||&&&Mercedes|||C-Class|||2.1|||1365|||99|||&&&Skoda|||Octavia|||1.6|||1415|||99|||&&&Volvo|||S60|||2.0|||1415|||99|||&&&Mercedes|||CLA|||1.5|||1465|||102|||&&&Audi|||A4|||2.0|||1490|||104|||&&&Audi|||A6|||2.0|||1725|||114|||&&&Volvo|||V70|||1.6|||1523|||109|||&&&BMW|||5|||2.0|||1705|||114|||&&&Mercedes|||E-Class|||2.1|||1605|||115|||&&&Volvo|||XC70|||2.0|||1746|||117|||&&&Ford|||B-Max|||1.6|||1235|||104|||&&&BMW|||2|||1.6|||1390|||108|||&&&Opel|||Zafira|||1.6|||1405|||109|||&&&Mercedes|||SLK|||2.5|||1395|||120|||&&&']",[]
python||,https://www.w3schools.com/python/python_ml_train_test.asp,,"['Evaluate Your Model', 'What is Train/Test', 'Start With a Data Set', 'Split Into Train/Test', 'Display the Training Set', 'Display the Testing Set', 'Fit the Data Set', 'R2', 'Bring in the Testing Set', 'Predict Values']","['In Machine Learning we create models to predict the outcome of certain events,\nlike in the previous chapter where we predicted the CO2 emission of a car when we knew\nthe weight and engine size.To measure if the model is good enough, we can use a method called Train/Test.', 'Train/Test is a method to measure the accuracy of your model.It is called Train/Test because you split the the data set into two sets: a training set and a testing set.You train the model using the training set.You test the model using the testing set.', 'Start with a data set you want to test.Our data set illustrates 100 customers in a shop, and their shopping habits.', 'The training set should be a random selection of 80% of the original data.The testing set should be the remaining 20%.', 'Display the same scatter plot with the training set:', 'To make sure the testing set is not completely different, we will take a look at the testing set as well.', 'What does the data set look like? In my opinion I think the best fit would be \na polynomial regression, so let us draw a line of polynomial regression.To draw a line through the data points, we use the \nplot() method of the matplotlib module:The result can back my suggestion of the data set fitting a polynomial \nregression, even though it would give us some weird results if we try to predict \nvalues outside of the data set. Example: the line indicates that a customer \nspending 6 minutes in the shop would make a purchase worth 200. That is probably \na sign of overfitting.But what about the R-squared score? The R-squared score is a good indicator \nof how well my data set is fitting the model.', 'Remember R2, also known as R-squared?It measures the relationship between the x axis and the y \naxis, and the value ranges from 0 to 1, where 0 means no relationship, and 1 \nmeans totally related.The sklearn module has a method called r2_score() \nthat will help us find this relationship.In this case we would like to measure the relationship  \nbetween the minutes a customer stays in the shop and how much money they spend.Now we have made a model that is OK, at least when it comes to training data.Now we want to test the model with the testing data as well, to see if gives us the \nsame result.', 'Now that we have established that our model is OK, we can start predicting \nnew values.The example predicted the customer to spend 22.88 dollars, as seems to correspond to the diagram:', '']","['\n  import numpyimport matplotlib.pyplot as pltnumpy.random.seed(2)\nx = numpy.random.normal(3, 1, 100)y = numpy.random.normal(150, 40, \n  100) / xplt.scatter(x, y)plt.show()', '\n  plt.scatter(train_x, \n  train_y)plt.show()', '\n  plt.scatter(test_x, \n  test_y)plt.show()', '\n  import numpyimport \n  matplotlib.pyplot as pltnumpy.random.seed(2)x = \n  numpy.random.normal(3, 1, 100)y = numpy.random.normal(150, 40, 100) / x\ntrain_x = x[:80]train_y = y[:80]test_x = x[80:]test_y = \n  y[80:]mymodel = numpy.poly1d(numpy.polyfit(train_x, train_y, 4))\nmyline = numpy.linspace(0, 6, 100)plt.scatter(train_x, train_y)\n  plt.plot(myline, mymodel(myline))plt.show()', '\n  import numpyfrom sklearn.metrics import r2_scorenumpy.random.seed(2)\nx = numpy.random.normal(3, 1, 100)y = numpy.random.normal(150, 40, \n  100) / xtrain_x = x[:80]train_y = y[:80]test_x = x[80:]\n  test_y = y[80:]mymodel = numpy.poly1d(numpy.polyfit(train_x, train_y, \n  4))r2 = r2_score(train_y, mymodel(train_x))print(r2) &&&&&& \n  import numpyfrom sklearn.metrics import r2_scorenumpy.random.seed(2)\nx = numpy.random.normal(3, 1, 100)y = numpy.random.normal(150, 40, \n  100) / xtrain_x = x[:80]train_y = y[:80]test_x = x[80:]\n  test_y = y[80:]mymodel = numpy.poly1d(numpy.polyfit(train_x, train_y, \n  4))r2 = r2_score(test_y, mymodel(test_x))print(r2)', '\n  print(mymodel(5))', '', '', '', '']",[''],[],"['img_traintest1.png', 'img_traintest2.png', 'img_traintest3.png', 'img_traintest3_2.png', 'img_traintest_predict.png']"
python||,https://www.w3schools.com/python/python_ml_decision_tree.asp,,"['Decision Tree', 'How Does it Work?', 'Result Explained', 'Predict Values']","['In this chapter we will show you how to make a ""Decision Tree"". A Decision \nTree is a Flow Chart, and can help you make decisions based on previous experience.In the example, a person will try to decide if he/she should go to a comedy show or \nnot.Luckily our example person has registered every time there was a comedy show \nin town, and registered some information about the comedian, and also \nregistered if he/she went or not.Now, based on this data set, Python can create a decision tree that can be used to decide \nif any new shows are worth attending to.', ""First, import the modules you need, and read the dataset with pandas:To make a decision tree, all data has to be numerical.We have to convert the non numerical columns 'Nationality' and 'Go' into numerical values.Pandas has a map() method that takes a dictionary with information on how to \nconvert the values.{'UK': 0, 'USA': 1, 'N': 2}Means convert the values 'UK' to 0, 'USA' to 1, and 'N' to 2.Then we have to separate the feature columns from the target column.The feature columns are the columns that we try to predict from, and \nthe target column is the column with the values we try to predict.Now we can create the actual decision tree, fit it with our details, and save \na .png file on the computer:"", 'The decision tree uses your earlier decisions to calculate the odds for you to wanting to go see \na comedian or not.Let us read the different aspects of the decision tree:Rank <= 6.5 means that every comedian with a rank of 6.5 or \nlower will follow the \nTrue arrow (to the left), and the rest will \nfollow the False arrow (to the right).gini = 0.497 refers to the quality of the \nsplit, and is always a number between 0.0 and 0.5, where 0.0 would mean all of \nthe samples got the same result, and 0.5 would mean that the split is done \nexactly in the middle.samples = 13 means that there are 13 \ncomedians left at this point in the decision, which is all of them since this is \nthe first step.value = [6, 7] means that of these 13 \ncomedians, 6 will get a ""NO"", and 7 will get a \n""GO"".The next step contains two boxes, one box for the comedians with a \'Rank\' of \n6.5 or lower, and one box with the rest.gini = 0.0 means all of the samples got the \nsame result.samples = 5 means that there are 5 comedians \nleft in this branch (5 comedian with a Rank of 6.5 or lower).value = [5, 0] means that 5 will get a ""NO"" \nand 0 will get a ""GO"".Nationality <= 0.5 means that the comedians \nwith a nationality value of less than 0.5 will follow the arrow to the left \n(which means everyone from the UK, ), and the rest will follow the arrow to the \nright.gini = 0.219 means that about 22% of the \nsamples would go in one direction.samples = 8 means that there are 8 comedians \nleft in this branch (8 comedian with a Rank higher than 6.5).value = [1, 7] means that of these 8 \ncomedians, 1 will get a ""NO"" and 7 will get a ""GO"".', 'Age <= 35.5 means that comedians \nat the age of 35.5 or younger will follow the arrow to the left, and the rest will follow the arrow to the \nright.gini = 0.375 means that about 37,5% of the \nsamples would go in one direction.samples = 4 means that there are 4 comedians \nleft in this branch (4 comedians from the UK).value = [1, 3] means that of these 4 \ncomedians, 1 will get a ""NO"" and 3 will get a ""GO"".gini = 0.0 means all of the samples got the \nsame result.samples = 4 means that there are 4 comedians \nleft in this branch (4 comedians not from the UK).value = [0, 4] means that of these 4 \ncomedians, 0 will get a ""NO"" and 4 will get a ""GO"".', 'gini = 0.0 means all of the samples got the \nsame result.samples = 2 means that there are 2 comedians \nleft in this branch (2 comedians at the age 35.5 or younger).value = [0, 2] means that of these 2 \ncomedians, 0 will get a ""NO"" and 2 will get a ""GO"".Experience <= 9.5 means that comedians \nwith 9.5 years of experience, or less, will follow the arrow to the left, and the rest will follow the arrow to the \nright.gini = 0.5 means that 50% of the samples \nwould go in one direction.samples = 2 means that there are 2 comedians \nleft in this branch (2 comedians older than 35.5).value = [1, 1] means that of these 2 \ncomedians, 1 will get a ""NO"" and 1 will get a ""GO"".', 'gini = 0.0 means all of the samples got the \nsame result.samples = 1 means that there is 1 comedian \nleft in this branch (1 comedian with 9.5 years of experience or less).value = [0, 1] means that 0 will get a ""NO"" and \n1 will get a ""GO"".gini = 0.0 means all of the samples got the \nsame result.samples = 1 means that there is 1 comedians \nleft in this branch (1 comedian with more than 9.5 years of experience).value = [1, 0] means that 1 will get a ""NO"" and \n0 will get a ""GO"".', 'We can use the Decision Tree to predict new values.Example: Should I go see a show starring a 40 years old American comedian, with 10 years of experience, \nand a comedy ranking of 7?']","['\n  import pandasfrom sklearn import treeimport pydotplusfrom \n  sklearn.tree import DecisionTreeClassifierimport matplotlib.pyplot as plt\n  import matplotlib.image as pltimgdf = pandas.read_csv(""shows.csv"")\nprint(df) &&&&&& \n  d = {\'UK\': 0, \n  \'USA\': 1, \'N\': 2}df[\'Nationality\'] = df[\'Nationality\'].map(d)d = \n  {\'YES\': 1, \'NO\': 0}df[\'Go\'] = df[\'Go\'].map(d)print(df) &&&&&& \n  features = [\'Age\', \'Experience\', \'Rank\', \'Nationality\']X = df[features]y = df[\'Go\']\n  print(X)print(y) &&&&&& \n  dtree = DecisionTreeClassifier()dtree = dtree.fit(X, y)data = \n  tree.export_graphviz(dtree, out_file=None, feature_names=features)graph = \n  pydotplus.graph_from_dot_data(data)graph.write_png(\'mydecisiontree.png\')\nimg=pltimg.imread(\'mydecisiontree.png\')imgplot = plt.imshow(img)\n  plt.show()', '\n  print(dtree.predict([[40, 10, 7, 1]])) &&&&&& \n  print(dtree.predict([[40, 10, 6, 1]]))', '', '']",[''],['Age|||Experience|||Rank|||Nationality|||Go|||36|||10|||9|||UK|||NO|||42|||12|||4|||USA|||NO|||23|||4|||6|||N|||NO|||52|||4|||4|||USA|||NO|||43|||21|||8|||USA|||YES|||44|||14|||5|||UK|||NO|||66|||3|||7|||N|||YES|||35|||14|||9|||UK|||YES|||52|||13|||7|||N|||YES|||35|||5|||9|||N|||YES|||24|||3|||5|||USA|||NO|||18|||3|||7|||UK|||YES|||45|||9|||9|||UK|||YES|||&&&36|||10|||9|||UK|||NO|||&&&42|||12|||4|||USA|||NO|||&&&23|||4|||6|||N|||NO|||&&&52|||4|||4|||USA|||NO|||&&&43|||21|||8|||USA|||YES|||&&&44|||14|||5|||UK|||NO|||&&&66|||3|||7|||N|||YES|||&&&35|||14|||9|||UK|||YES|||&&&52|||13|||7|||N|||YES|||&&&35|||5|||9|||N|||YES|||&&&24|||3|||5|||USA|||NO|||&&&18|||3|||7|||UK|||YES|||&&&45|||9|||9|||UK|||YES|||&&&'],"['img_ml_decision_tree.png', 'img_decisiontree1.png', 'img_decisiontree2.png', 'img_decisiontree3_2.png', 'img_decisiontree4_2.png', 'img_decisiontree5.png']"
python||MySQL,https://www.w3schools.com/python/python_mysql_getstarted.asp,Python can be used in database applications.,"['MySQL Database', 'Install MySQL Driver', 'Test MySQL Connector', 'Create Connection']","['One of the most popular databases is MySQL.', 'To be able to experiment with the code examples in this tutorial, you should \nhave MySQL installed on your computer.You can download a free MySQL database at\nhttps://www.mysql.com/downloads/.', 'Python needs a MySQL driver to access the MySQL database.In this tutorial we will use the driver ""MySQL Connector"".We recommend that you use PIP to install ""MySQL Connector"".PIP is most likely already installed in your Python environment.Navigate your command line to the location of PIP, and type the following:Now you have downloaded and installed a MySQL driver.', 'To test if the installation was successful, or if you already have ""MySQL \nConnector"" \ninstalled, create a Python page with \nthe following content:If the above code was executed with no errors, ""MySQL Connector"" is installed and \nready to be used.', 'Start by creating a connection to the database.Use the username and password from your MySQL database:Now you can start querying the database using SQL statements.']","['\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>python -m pip install \n  mysql-connector-python\n', '\n  import mysql.connector', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0 user=""yourusername"",\xa0 password=""yourpassword"")\nprint(mydb)', '']",[''],[],[]
python||Create Database,https://www.w3schools.com/python/python_mysql_create_db.asp,,"['Creating a Database', 'Check if Database Exists']","['To create a database in MySQL, use the ""CREATE DATABASE"" statement:If the above code was executed with no errors, you have successfully \ncreated a database.', 'You can check if a database exist by listing all databases in your system by \nusing the ""SHOW DATABASES"" statement:Or you can try to access the database when making the connection:If the database does not exist, you will get an error.']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\n  \xa0\n  user=""yourusername"",\xa0 password=""yourpassword"")mycursor = mydb.cursor()mycursor.execute(""CREATE DATABASE \n  mydatabase"")', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0 \n  user=""yourusername"",\xa0 password=""yourpassword"")mycursor = mydb.cursor()\n  mycursor.execute(""SHOW DATABASES"")for x in mycursor:\xa0 \n  print(x) &&&&&& \n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0 \n  user=""yourusername"",\xa0 password=""yourpassword"",\n\xa0 \n  database=""mydatabase"")']",[''],[],[]
python||Create Table,https://www.w3schools.com/python/python_mysql_create_table.asp,,"['Creating a Table', 'Check if Table Exists', 'Primary Key']","['To create a table in MySQL, use the ""CREATE TABLE"" statement.Make sure you define the name of the database when you create the connectionIf the above code was executed with no errors, you have now successfully \ncreated a table.', 'You can check if a table exist by listing all tables in your database with the ""SHOW TABLES"" statement:', 'When creating a table, you should also create a column with a unique key for each \nrecord.This can be done by defining a PRIMARY KEY.We use the statement ""INT AUTO_INCREMENT PRIMARY KEY"" which will insert a \nunique number for each record. Starting at 1, and increased by one for each \nrecord.If the table already exists, use the ALTER TABLE keyword:']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\n  \xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\n  \xa0 database=""mydatabase"")mycursor = mydb.cursor()\nmycursor.execute(""CREATE TABLE customers (name VARCHAR(255), \n  address VARCHAR(255))"")', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0 \n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = mydb.cursor()\n  mycursor.execute(""SHOW TABLES"")for x in mycursor:\xa0 \n  print(x)', '']",[''],[],[]
python||Insert Into Table,https://www.w3schools.com/python/python_mysql_insert.asp,,"['Insert Into Table', 'Insert Multiple Rows', 'Get Inserted ID']","['To fill a table in MySQL, use the ""INSERT INTO"" statement.', 'To insert multiple rows into a table, use the \nexecutemany() method.The second parameter of the executemany() method \nis a list of tuples, containing the data you want to insert:', 'You can get the id of the row you \njust inserted by asking the cursor object.']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\n  \xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""INSERT INTO customers (name, \n  address) VALUES (%s, %s)""val = (""John"", ""Highway 21"")mycursor.execute(sql, \n  val)\nmydb.commit()print(mycursor.rowcount, ""record inserted."")', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\n  \xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""INSERT INTO customers (name, \n  address) VALUES (%s, %s)""val = [\xa0 (\'Peter\', \'Lowstreet 4\'),\xa0 \n  (\'Amy\', \'Apple st 652\'),\xa0 (\'Hannah\', \'Mountain 21\'),\xa0 \n  (\'Michael\', \'Valley 345\'),\xa0 (\'Sandy\', \'Ocean blvd 2\'),\xa0 \n  (\'Betty\', \'Green Grass 1\'),\xa0 (\'Richard\', \'Sky st 331\'),\xa0 \n  (\'Susan\', \'One way 98\'),\xa0 (\'Vicky\', \'Yellow Garden 2\'),\xa0 \n  (\'Ben\', \'Park Lane 38\'),\xa0 (\'William\', \'Central st 954\'),\xa0 \n  (\'Chuck\', \'Main Road 989\'),\xa0 (\'Viola\', \'Sideway 1633\')]\n  mycursor.executemany(sql, val)mydb.commit()print(mycursor.rowcount, ""was inserted."")', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\n  \xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""INSERT INTO customers (name, \n  address) VALUES (%s, %s)""val = (""Michelle"", ""Blue Village"")\n  mycursor.execute(sql, val)mydb.commit()print(""1 record \n  inserted, ID:"", mycursor.lastrowid)']",[''],[],[]
python||Select From,https://www.w3schools.com/python/python_mysql_select.asp,,"['Select From a Table', 'Selecting Columns', 'Using the fetchone() Method']","['To select from a table in MySQL, use the ""SELECT"" statement:', 'To select only some of the columns in a table, use the ""SELECT"" statement \nfollowed by the column name(s):', 'If you are only interested in one row, you can use the \nfetchone() method.The fetchone() method will return the first row of \nthe result:']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()mycursor.execute(""SELECT * FROM customers"")\n  myresult = mycursor.fetchall()for x in myresult:\xa0 print(x)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()mycursor.execute(""SELECT name, \n  address FROM \n  customers"")myresult = mycursor.fetchall()for x in myresult:\xa0 \n  print(x)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\n  \xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()mycursor.execute(""SELECT * FROM customers"")\n  myresult = mycursor.fetchone()print(myresult)']",[''],[],[]
python||Where,https://www.w3schools.com/python/python_mysql_where.asp,,"['Select With a Filter', 'Wildcard Characters', 'Prevent SQL Injection']","['When selecting records from a table, you can filter the selection by using \nthe ""WHERE"" statement:', 'You can also select the records that starts, includes, or ends with a given letter \nor phrase.Use the %\xa0 to represent wildcard \ncharacters:', 'When query values are provided by the user, you should escape the values.This is to prevent SQL injections, which is a common web hacking technique to  \ndestroy or misuse your database.The mysql.connector module has methods to escape query values:']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()sql = ""SELECT * FROM customers WHERE address =\'Park Lane \n  38\'""mycursor.execute(sql)\n  myresult = mycursor.fetchall()for x in myresult:\xa0 print(x)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""SELECT * FROM customers WHERE address \n  LIKE \'%way%\'""mycursor.execute(sql)myresult = mycursor.fetchall()for x in myresult:\xa0 \n  print(x)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""SELECT * FROM customers WHERE \n  address = %s""adr = (""Yellow Garden 2"", )\n  mycursor.execute(sql, adr)myresult = mycursor.fetchall()for x in myresult:\xa0 \n  print(x)']",[''],[],[]
python||Order By,https://www.w3schools.com/python/python_mysql_orderby.asp,,"['Sort the Result', 'ORDER BY DESC']","['Use the ORDER BY statement to sort the result in ascending or descending \norder.The ORDER BY keyword sorts the result ascending by default. To sort the \nresult in descending order, use the DESC keyword.', 'Use the DESC keyword to sort the result in a descending order.']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()sql = ""SELECT * FROM customers ORDER BY name""mycursor.execute(sql)\n  myresult = mycursor.fetchall()for x in myresult:\xa0 print(x)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""SELECT * FROM customers ORDER BY \n  name DESC""mycursor.execute(sql)myresult = mycursor.fetchall()for x in myresult:\xa0 \n  print(x)']",[''],[],[]
python||Delete From By,https://www.w3schools.com/python/python_mysql_delete.asp,,"['Delete Record', 'Prevent SQL Injection']","['You can delete records from an existing table by using the ""DELETE FROM"" statement:', 'It is considered a good practice to escape the values of any query, also in delete statements.This is to prevent SQL injections, which is a common web hacking technique to  \ndestroy or misuse your database.The mysql.connector module uses the placeholder %s to escape values in the delete statement:']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()sql = ""DELETE FROM customers WHERE address = \n  \'Mountain 21\'""mycursor.execute(sql)mydb.commit()print(mycursor.rowcount, ""record(s) deleted"")', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""DELETE FROM customers WHERE address = \n  %s""adr = (""Yellow Garden 2"", )\n  mycursor.execute(sql, adr)mydb.commit()print(mycursor.rowcount, ""record(s) deleted"")']",[''],[],[]
python||Drop Table,https://www.w3schools.com/python/python_mysql_drop_table.asp,,"['Delete a Table', 'Drop Only if Exist']","['You can delete an existing table by using \nthe ""DROP TABLE"" statement:', 'If the the table you want to delete is already deleted, or for any other \nreason does not exist, you can use the IF EXISTS keyword to avoid getting an \nerror.']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()sql = ""DROP TABLE customers""mycursor.execute(sql)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = \n  mydb.cursor()sql = ""DROP TABLE IF EXISTS customers""mycursor.execute(sql)']",[''],[],[]
python||Update Table,https://www.w3schools.com/python/python_mysql_update.asp,,"['Update Table', 'Prevent SQL Injection']","['You can update existing records in a table by using \nthe ""UPDATE"" statement:', 'It is considered a good practice to escape the values of any query, also in \nupdate statements.This is to prevent SQL injections, which is a common web hacking technique to  \ndestroy or misuse your database.The mysql.connector module uses the placeholder %s to escape values in the delete statement:']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()sql = ""UPDATE customers SET address = \'Canyon 123\' \n  WHERE address = \'Valley 345\'""mycursor.execute(sql)mydb.commit()\nprint(mycursor.rowcount, ""record(s) affected"")', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\nmycursor = mydb.cursor()sql = ""UPDATE customers SET address = %s \n  WHERE address = %s""val = (""Valley 345"", ""Canyon 123"")mycursor.execute(sql, \n  val)mydb.commit()print(mycursor.rowcount, ""record(s) \n  affected"")']",[''],[],[]
python||Limit,https://www.w3schools.com/python/python_mysql_limit.asp,,"['Limit the Result', 'Start From Another Position']","['You can limit the number of records returned from the query, by using the ""LIMIT"" statement:', 'If you want to return five records, starting from the third record, you \ncan use the ""OFFSET"" keyword:']","['\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()mycursor.execute(""SELECT * FROM customers LIMIT 5"")myresult = mycursor.fetchall()for x in \n  myresult:\xa0 print(x)', '\n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")mycursor = \n  mydb.cursor()mycursor.execute(""SELECT * FROM customers LIMIT 5 \n  OFFSET 2"")myresult = mycursor.fetchall()for x in \n  myresult:\xa0 print(x)']",[''],[],[]
python||Join,https://www.w3schools.com/python/python_mysql_join.asp,,"['Join Two or More Tables', 'LEFT JOIN', 'RIGHT JOIN']","['You can combine rows from two or more tables, based on a related column \nbetween them, by using a JOIN statement.Consider you have a ""users"" table and a ""products"" table:These two tables can be combined by using users\' fav field and products\' \nid field.', 'In the example above, Hannah, and Michael were excluded from the result, that \nis because INNER JOIN only shows the records where there is a match.If you want to show all users, even if they do not have a favorite product, \nuse the LEFT JOIN statement:', 'If you want to return all products, and the users who have them as their \nfavorite, even if no user have them as their favorite, use the RIGHT JOIN \nstatement:']","['{ id: 1, name: \'John\', fav: 154},{ id: \n  2, name: \'Peter\', fav: 154},{ id: 3, name: \'Amy\', fav: 155},{ id: 4, name: \'Hannah\', fav:},{ id: 5, name: \'Michael\', fav:} &&&&&& { id: 154, name: \n  \'Chocolate Heaven\' },{ id: 155, name: \'Tasty Lemons\' },{ \n  id: 156, name: \'Vanilla Dreams\' } &&&&&& \n  import mysql.connectormydb = mysql.connector.connect(\xa0 host=""localhost"",\xa0\n  user=""yourusername"",\xa0 password=""yourpassword"",\xa0 database=""mydatabase"")\n  mycursor = mydb.cursor()sql = ""SELECT \\\xa0 users.name AS user, \n  \\\xa0 products.name AS favorite \\\xa0 FROM users \\\xa0 INNER JOIN \n  products ON users.fav = products.id""mycursor.execute(sql)\n  myresult = mycursor.fetchall()for x in myresult:\xa0 print(x)', '\n  sql = ""SELECT \\\xa0 users.name AS user, \n  \\\xa0 products.name AS favorite \\\xa0 FROM users \\\xa0 LEFT JOIN \n  products ON users.fav = products.id""', '\n  sql = ""SELECT \\\xa0 users.name AS user, \n  \\\xa0 products.name AS favorite \\\xa0 FROM users \\\xa0 RIGHT JOIN \n  products ON users.fav = products.id""']",[''],[],[]
python||MongoDB,https://www.w3schools.com/python/python_mongodb_getstarted.asp,Python can be used in database applications.,"['MongoDB', 'PyMongo', 'Test PyMongo']","['One of the most popular NoSQL database is MongoDB.', 'MongoDB stores data in JSON-like documents, which makes the database very \nflexible and scalable.To be able to experiment with the code examples in this tutorial, you will need access to a MongoDB database.You can download a free MongoDB database at\nhttps://www.mongodb.com.Or get started right away with a MongoDB cloud service at \nhttps://www.mongodb.com/cloud/atlas.', 'Python needs a MongoDB driver to access the MongoDB database.In this tutorial we will use the MongoDB driver ""PyMongo"".We recommend that you use PIP to install ""PyMongo"".PIP is most likely already installed in your Python environment.Navigate your command line to the location of PIP, and type the following:Now you have downloaded and installed a mongoDB driver.', 'To test if the installation was successful, or if you already have ""pymongo"" \ninstalled, create a Python page with \nthe following content:If the above code was executed with no errors, ""pymongo"" is installed and \nready to be used.']","['\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>python -m pip install pymongo\n', '\n  import pymongo', '']",[''],[],[]
python||Create Database,https://www.w3schools.com/python/python_mongodb_create_db.asp,,"['Creating a Database', 'Check if Database Exists']","['To create a database in MongoDB, start by creating a MongoClient object, then specify a connection URL with the \ncorrect ip address and the name of the database you want to create.MongoDB will create the database if it does not exist, and make a connection \nto it.MongoDB waits until you have created a collection (table), with at least one document (record) before it actually creates the database (and collection).', 'You can check if a database exist by listing all databases in you system:Or you can check a specific database by name:']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\nmydb = myclient[""mydatabase""]', '\n  print(myclient.list_database_names()) &&&&&& \n  dblist = myclient.list_database_names()if ""mydatabase"" in dblist:\xa0 \n  print(""The database exists."")']",[''],[],[]
python||Create Collection,https://www.w3schools.com/python/python_mongodb_create_collection.asp,,"['Creating a Collection', 'Check if Collection Exists']","['To create a collection in MongoDB, use database object and specify the name \nof the collection you want to create.MongoDB will create the collection if it does not exist.MongoDB waits until you have inserted a document before it actually creates the collection.', 'You can check if a collection exist in a database by listing all collections:Or you can check a specific collection by name:']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]', '\n  print(mydb.list_collection_names()) &&&&&& \n  collist = mydb.list_collection_names()if ""customers"" in collist:\xa0 \n  print(""The collection exists."")']",[''],[],[]
python||Insert Document,https://www.w3schools.com/python/python_mongodb_insert.asp,,"['Insert Into Collection', 'Return the _id Field', 'Insert Multiple Documents', 'Insert Multiple Documents, with Specified IDs']","['To insert a record, or document as it is called in MongoDB, into a collection, we use the \ninsert_one() method.The first parameter of the insert_one() method is a \ndictionary containing the \nname(s) and value(s) of each field in the document you want to insert.', 'The insert_one() method returns a InsertOneResult object, which has a \nproperty, inserted_id, that holds the id of the inserted document.If you do not specify an _id field, then MongoDB \nwill add one for you and assign a unique id for each document.In the example above no _id field was \nspecified, so MongoDB assigned a unique \n_id for the record (document).', 'To insert multiple documents into a collection in MongoDB, we use the \ninsert_many() method.The first parameter of the insert_many() method \nis a list containing dictionaries with the data you want to insert:The insert_many() method returns a InsertManyResult object, which has a property, inserted_ids, that holds the ids of the inserted documents.', 'If you do not want MongoDB to assign unique ids for you document, you can \nspecify the _id field when you insert the document(s).Remember that the values has to be unique. Two documents cannot have the same \n_id.']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmydict = { ""name"": ""John"", ""address"": ""Highway 37"" }\n  x =\n  mycol.insert_one(mydict)', '\n  mydict = { ""name"": ""Peter"", ""address"": ""Lowstreet 27"" }\n  x = mycol.insert_one(mydict)print(x.inserted_id)', '\n    import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\nmydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmylist = [\xa0 { ""name"": ""Amy"", ""address"": ""Apple st 652""},\xa0 \n    { ""name"": ""Hannah"", ""address"": ""Mountain 21""},\xa0 { ""name"": \n    ""Michael"", ""address"": ""Valley 345""},\xa0 { ""name"": ""Sandy"", ""address"": \n    ""Ocean blvd 2""},\xa0 { ""name"": ""Betty"", ""address"": ""Green Grass 1""},\xa0 \n    { ""name"": ""Richard"", ""address"": ""Sky st 331""},\xa0 { ""name"": ""Susan"", \n    ""address"": ""One way 98""},\xa0 { ""name"": ""Vicky"", ""address"": ""Yellow \n    Garden 2""},\xa0 { ""name"": ""Ben"", ""address"": ""Park Lane 38""},\xa0 \n    { ""name"": ""William"", ""address"": ""Central st 954""},\xa0 { ""name"": \n    ""Chuck"", ""address"": ""Main Road 989""},\xa0 { ""name"": ""Viola"", \n    ""address"": ""Sideway 1633""}]x = mycol.insert_many(mylist)#print list of the _id values of the inserted \n    documents:print(x.inserted_ids)', '\n    import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\nmydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmylist = [\xa0 { ""_id"": 1, ""name"": ""John"", ""address"": ""Highway 37""},\xa0 \n    { ""_id"": 2, ""name"": ""Peter"", ""address"": ""Lowstreet 27""},\xa0 { ""_id"": \n    3, ""name"": ""Amy"", ""address"": ""Apple st 652""},\xa0 { ""_id"": 4, ""name"": \n    ""Hannah"", ""address"": ""Mountain 21""},\xa0 { ""_id"": 5, ""name"": \n    ""Michael"", ""address"": ""Valley 345""},\xa0 { ""_id"": 6, ""name"": ""Sandy"", \n    ""address"": ""Ocean blvd 2""},\xa0 { ""_id"": 7, ""name"": ""Betty"", \n    ""address"": ""Green Grass 1""},\xa0 { ""_id"": 8, ""name"": ""Richard"", \n    ""address"": ""Sky st 331""},\xa0 { ""_id"": 9, ""name"": ""Susan"", ""address"": \n    ""One way 98""},\xa0 { ""_id"": 10, ""name"": ""Vicky"", ""address"": ""Yellow \n    Garden 2""},\xa0 { ""_id"": 11, ""name"": ""Ben"", ""address"": ""Park Lane \n    38""},\xa0 { ""_id"": 12, ""name"": ""William"", ""address"": ""Central st \n    954""},\xa0 { ""_id"": 13, ""name"": ""Chuck"", ""address"": ""Main Road 989""},\xa0 \n    { ""_id"": 14, ""name"": ""Viola"", ""address"": ""Sideway 1633""}]x = mycol.insert_many(mylist)#print list of the _id values of the inserted \n    documents:print(x.inserted_ids)']",[''],[],[]
python||Find,https://www.w3schools.com/python/python_mongodb_find.asp,,"['Find One', 'Find All', 'Return Only Some Fields']","['To select data from a collection in MongoDB, we can use the\nfind_one() method.The find_one() method returns the first \noccurrence in the selection.', 'To select data from a table in MongoDB, we can also use the\nfind() method.The find() method returns all \noccurrences in the selection.The first parameter of the find() method \nis a query object. In this example we use an empty query object, which selects \nall documents in the collection.', 'The second parameter of the find() method \nis an object describing which fields to include in the result.This parameter is optional, and if omitted, all fields will be included in \nthe result.']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nx = mycol.find_one()print(x)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nfor x in mycol.find():\xa0 print(x)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nfor x in mycol.find({},{ ""_id"": 0, ""name"": 1, ""address"": 1 }):\xa0 \n    print(x) &&&&&& \n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nfor x in mycol.find({},{ ""address"": 0 }):\xa0 \n    print(x) &&&&&& \n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nfor x in mycol.find({},{ ""name"": 1, ""address"": 0 }):\xa0 \n    print(x)']",[''],[],[]
python||Query,https://www.w3schools.com/python/python_mongodb_query.asp,,"['Filter the Result', 'Advanced Query', 'Filter With Regular Expressions']","['When finding documents in a collection, you can filter the result by using a \nquery object.The first argument of the find() method \nis a query object, and is used to limit the search.', 'To make advanced queries you can use modifiers as values in the query object.E.g. to find the documents where the ""address"" field starts with the letter ""S"" \nor higher (alphabetically), use the greater than modifier:\n{""$gt"": ""S""}:', 'You can also use regular expressions as a modifier.To find only the documents where the ""address"" field starts with the letter ""S"", use the regular \nexpression {""$regex"": ""^S""}:']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": ""Park Lane 38"" }\nmydoc = mycol.find(myquery)for x in mydoc:\xa0 print(x)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": { ""$gt"": ""S"" } }mydoc = mycol.find(myquery)\nfor x in mydoc:\xa0 print(x)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": { ""$regex"": ""^S"" } }mydoc = mycol.find(myquery)\nfor x in mydoc:\xa0 print(x)']",[''],[],[]
python||Sort,https://www.w3schools.com/python/python_mongodb_sort.asp,,"['Sort the Result', 'Sort Descending']","['Use the sort() method to sort the result in \nascending or descending order.The sort() method takes one parameter for \n""fieldname"" and one parameter for ""direction"" (ascending is the default \ndirection).', 'Use the value -1 as the second parameter to sort descending.']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmydoc = mycol.find().sort(""name"")for x in mydoc:\xa0 print(x)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmydoc = mycol.find().sort(""name"", -1)for x in mydoc:\xa0 print(x)']",[''],[],[]
python||Delete Document,https://www.w3schools.com/python/python_mongodb_delete.asp,,"['Delete Document', 'Delete Many Documents', 'Delete All Documents in a Collection']","['To delete one document, we use the\ndelete_one() method.The first parameter of the delete_one() method \nis a query object defining which document to delete.', 'To delete more than one document, use the\ndelete_many() method.The first parameter of the delete_many() method \nis a query object defining which documents to delete.', 'To delete all documents in a collection, pass an empty query object to the delete_many() method:']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": ""Mountain 21"" }\nmycol.delete_one(myquery)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": {""$regex"": ""^S""} }\nx = mycol.delete_many(myquery)print(x.deleted_count, "" documents \n  deleted."")', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nx = mycol.delete_many({})print(x.deleted_count, "" documents \n  deleted."")']",[''],[],[]
python||Drop Collection,https://www.w3schools.com/python/python_mongodb_drop_collection.asp,,['Delete Collection'],"['You can delete a table, or collection as it is called in MongoDB, by using \nthe drop() method.The drop() method returns true if the collection was dropped successfully, \nand false if the collection does not exist.']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmycol.drop()']",[''],[],[]
python||Update,https://www.w3schools.com/python/python_mongodb_update.asp,,"['Update Collection', 'Update Many']","['You can update a record, or document as it is called in MongoDB, by using \nthe update_one() method.The first parameter of the update_one() method \nis a query object defining which document to update.The second parameter  \nis an object defining the new values of the document.', 'To update all documents that meets the criteria of the query, use \nthe update_many() method.']","['\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": ""Valley 345"" }newvalues = { ""$set"": { \n  ""address"": ""Canyon 123"" } }\nmycol.update_one(myquery, newvalues)#print ""customers"" after the update:for x in mycol.find():\xa0 print(x)', '\n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyquery = { ""address"": { ""$regex"": ""^S"" } }newvalues = { ""$set"": { \n  ""name"": ""Minnie"" } }\nx = mycol.update_many(myquery, newvalues)print(x.modified_count, ""documents updated."")']",[''],[],[]
python||Limit,https://www.w3schools.com/python/python_mongodb_limit.asp,,['Limit the Result'],"['To limit the result in MongoDB, we use the limit() \nmethod.The limit() method takes one parameter, a number defining how many documents \nto return.Consider you have a ""customers"" collection:']","['\n{\'_id\': 1, \'name\': \'John\', \'address\': \'Highway37\'}\n{\'_id\': 2, \'name\': \'Peter\', \'address\': \'Lowstreet 27\'}\n{\'_id\': 3, \'name\': \'Amy\', \'address\': \'Apple st 652\'}\n{\'_id\': 4, \'name\': \'Hannah\', \'address\': \'Mountain 21\'}\n{\'_id\': 5, \'name\': \'Michael\', \'address\': \'Valley 345\'}\n{\'_id\': 6, \'name\': \'Sandy\', \'address\': \'Ocean blvd 2\'}\n{\'_id\': 7, \'name\': \'Betty\', \'address\': \'Green Grass 1\'}\n{\'_id\': 8, \'name\': \'Richard\', \'address\': \'Sky st 331\'}\n{\'_id\': 9, \'name\': \'Susan\', \'address\': \'One way 98\'}\n{\'_id\': 10, \'name\': \'Vicky\', \'address\': \'Yellow Garden 2\'}\n{\'_id\': 11, \'name\': \'Ben\', \'address\': \'Park Lane 38\'}\n{\'_id\': 12, \'name\': \'William\', \'address\': \'Central st 954\'}\n{\'_id\': 13, \'name\': \'Chuck\', \'address\': \'Main Road 989\'}\n{\'_id\': 14, \'name\': \'Viola\', \'address\': \'Sideway 1633\'}\n &&&&&& \n  import pymongomyclient = pymongo.MongoClient(""mongodb://localhost:27017/"")\n  mydb = myclient[""mydatabase""]mycol = mydb[""customers""]\nmyresult = mycol.find().limit(5)#print the result:for x in myresult:\xa0 print(x)']",[''],[],[]
python||Reference,https://www.w3schools.com/python/python_reference.asp,This section contains a Python reference documentation.,"['Python Reference', 'Module Reference']","['', '']","['', '']",[''],[],[]
python||Built in Functions,https://www.w3schools.com/python/python_ref_functions.asp,,[],['Python has a set of built-in functions.'],[],[''],"[""Function|||Description|||&&&abs()|||Returns the absolute value of a number|||&&&all()|||Returns True if all items in an iterable object are true|||&&&any()|||Returns True if any item in an iterable object is true|||&&&ascii()|||Returns a readable version of an object. Replaces none-ascii characters with escape character|||&&&bin()|||Returns the binary version of a number|||&&&bool()|||Returns the boolean value of the specified object|||&&&bytearray()|||Returns an array of bytes|||&&&bytes()|||Returns a bytes object|||&&&callable()|||Returns True if the specified object is callable, otherwise False|||&&&chr()|||Returns a character from the specified \n  Unicode code.|||&&&classmethod()|||Converts a method into a class method|||&&&compile()|||Returns the specified source as an object, ready to be executed|||&&&complex()|||Returns a complex number|||&&&delattr()|||Deletes the specified attribute (property or method) from the specified object|||&&&dict()|||Returns a dictionary (Array)|||&&&dir()|||Returns a list of the specified object's properties and methods|||&&&divmod()|||Returns the quotient and the remainder when argument1 is divided by argument2|||&&&enumerate()|||Takes a collection (e.g. a tuple) and returns it as an enumerate object|||&&&eval()|||Evaluates and executes an expression|||&&&exec()|||Executes the specified code (or object)|||&&&filter()|||Use a filter function to exclude items in an iterable object|||&&&float()|||Returns a floating point number|||&&&format()|||Formats a specified value|||&&&frozenset()|||Returns a frozenset object|||&&&getattr()|||Returns the value of the specified attribute (property or method)|||&&&globals()|||Returns the current global symbol table as a dictionary|||&&&hasattr()|||Returns True if the specified object has the specified attribute (property/method)|||&&&hash()|||Returns the hash value of a specified object|||&&&help()|||Executes the built-in help system|||&&&hex()|||Converts a number into a hexadecimal value|||&&&id()|||Returns the id of an object|||&&&input()|||Allowing user input|||&&&int()|||Returns an integer number|||&&&isinstance()|||Returns True if a specified object is an instance of a specified object|||&&&issubclass()|||Returns True if a specified class is a subclass of a specified object|||&&&iter()|||Returns an iterator object|||&&&len()|||Returns the length of an object|||&&&list()|||Returns a list|||&&&locals()|||Returns an updated dictionary of the current local symbol table|||&&&map()|||Returns the specified iterator with the specified function applied to each item|||&&&max()|||Returns the largest item in an iterable|||&&&memoryview()|||Returns a memory view object|||&&&min()|||Returns the smallest item in an iterable|||&&&next()|||Returns the next item in an iterable|||&&&object()|||Returns a new object|||&&&oct()|||Converts a number into an octal|||&&&open()|||Opens a file and returns a file object|||&&&ord()|||Convert an integer \n  representing the Unicode of the specified character|||&&&pow()|||Returns the value of x to the power of y|||&&&print()|||Prints to the standard output device|||&&&property()|||Gets, sets, deletes a property|||&&&range()|||Returns a sequence of numbers, starting from 0 and increments by 1 (by default)|||&&&repr()|||Returns a readable version of an object|||&&&reversed()|||Returns a reversed iterator|||&&&round()|||Rounds a numbers|||&&&set()|||Returns a new set object|||&&&setattr()|||Sets an attribute (property/method) of an object|||&&&slice()|||Returns a slice object|||&&&sorted()|||Returns a sorted list|||&&&staticmethod()|||Converts a method into a static method|||&&&str()|||Returns a string object|||&&&sum()|||Sums the items of an iterator|||&&&super()|||Returns an object that represents the parent class|||&&&tuple()|||Returns a tuple|||&&&type()|||Returns the type of an object|||&&&vars()|||Returns the __dict__ property of an object|||&&&zip()|||Returns an iterator, from two or more iterators|||&&&""]",[]
python||String Methods,https://www.w3schools.com/python/python_ref_string.asp,,[],"['Python has a set of built-in methods that you can use on strings.', 'Learn more about strings in our Python Strings Tutorial.']",[],[''],"['Method|||Description|||&&&capitalize()|||Converts the first \n    character to upper case|||&&&casefold()|||Converts string into \n    lower case|||&&&center()|||Returns a centered \n    string|||&&&count()|||Returns the number of \n    times a specified value occurs in a string|||&&&encode()|||Returns an encoded \n    version of the string|||&&&endswith()|||Returns true if the \n    string ends with the specified value|||&&&expandtabs()|||Sets the \n    tab size of the string|||&&&find()|||Searches the string for a \n    specified value and returns the position of where it was found|||&&&format()|||Formats specified \n    values in a string|||&&&format_map()|||Formats specified \n    values in a string|||&&&index()|||Searches the string \n    for a specified value and returns the position of where it was found|||&&&isalnum()|||Returns True if all \n    characters in the string are alphanumeric|||&&&isalpha()|||Returns True if all \n    characters in the string are in the alphabet|||&&&isascii()|||Returns True if all \n    characters in the string are ascii characters|||&&&isdecimal()|||Returns True if all \n    characters in the string are decimals|||&&&isdigit()|||Returns True if all \n    characters in the string are digits|||&&&isidentifier()|||Returns True if \n    the string is an identifier|||&&&islower()|||Returns True if all \n    characters in the string are lower case|||&&&isnumeric()|||Returns True if \n    all characters in the string are numeric|||&&&isprintable()|||Returns True if \n    all characters in the string are printable|||&&&isspace()|||Returns True if all \n    characters in the string are whitespaces|||&&&istitle()|||Returns True if the string follows the rules of a \n    title|||&&&isupper()|||Returns True if all \n    characters in the string are upper case|||&&&join()|||Converts the elements of \n    an iterable into a string|||&&&ljust()|||Returns a left justified \n    version of the string|||&&&lower()|||Converts a string into \n    lower case|||&&&lstrip()|||Returns a left trim \n    version of the string|||&&&maketrans()|||Returns a \n    translation table to be used in translations|||&&&partition()|||Returns a tuple \n    where the string is parted into three parts|||&&&replace()|||Returns a string \n    where a specified value is replaced with a specified value|||&&&rfind()|||Searches the string for \n    a specified value and returns the last position of where it was found|||&&&rindex()|||Searches the string for \n    a specified value and returns the last position of where it was found|||&&&rjust()|||Returns a right justified \n    version of the string|||&&&rpartition()|||Returns a tuple \n    where the string is parted into three parts|||&&&rsplit()|||Splits the string at \n    the specified separator, and returns a list|||&&&rstrip()|||Returns a right trim \n    version of the string|||&&&split()|||Splits the string at \n    the specified separator, and returns a list|||&&&splitlines()|||Splits the string \n    at line breaks and returns a list|||&&&startswith()|||Returns true if \n    the string starts with the specified value|||&&&strip()|||Returns a trimmed version of the string|||&&&swapcase()|||Swaps cases, lower \n    case becomes upper case and vice versa|||&&&title()|||Converts the first \n    character of each word to upper case|||&&&translate()|||Returns a \n    translated string|||&&&upper()|||Converts a string \n    into upper case|||&&&zfill()|||Fills the string with \n  a specified number of 0 values at the beginning|||&&&']",[]
python||List/Array Methods,https://www.w3schools.com/python/python_ref_list.asp,,[],"['Python has a set of built-in methods that you can use on lists/arrays.', 'Learn more about lists in our Python Lists Tutorial.Learn more about arrays in our Python Arrays Tutorial.']",[],[''],"['Method|||Description|||&&&append()|||Adds an element at \n  the end of the list|||&&&clear()|||Removes all the \n  elements from the list|||&&&copy()|||Returns a copy of the \n  list|||&&&count()|||Returns the number of \n  elements with the specified value|||&&&extend()|||Add the elements of a \n  list (or any iterable), to the end of the current list|||&&&index()|||Returns the index of \n  the first element with the specified value|||&&&insert()|||Adds an element at \n  the specified position|||&&&pop()|||Removes the element at the \n  specified position|||&&&remove()|||Removes the first \n  item with the specified value|||&&&reverse()|||Reverses the order \n  of the list|||&&&sort()|||Sorts the list|||&&&']",[]
python||Dictionary Methods,https://www.w3schools.com/python/python_ref_dictionary.asp,,[],"['Python has a set of built-in methods that you can use on dictionaries.', 'Learn more about dictionaries in our Python Dictionaries Tutorial.']",[],[''],"[""Method|||Description|||&&&clear()|||Removes all the elements from the dictionary|||&&&copy()|||Returns a copy of the dictionary|||&&&fromkeys()|||Returns a dictionary with the specified keys and value|||&&&get()|||Returns the value of the specified key|||&&&items()|||Returns a list containing a tuple for each key value pair|||&&&keys()|||Returns a list containing the dictionary's keys|||&&&pop()|||Removes the element with the specified key|||&&&popitem()|||Removes the last \n  inserted key-value pair|||&&&setdefault()|||Returns the value of the specified key. If the key does not exist: insert the key, with the specified value|||&&&update()|||Updates the dictionary with the specified key-value pairs|||&&&values()|||Returns a list of all the values in the dictionary|||&&&""]",[]
python||Tuple Methods,https://www.w3schools.com/python/python_ref_tuple.asp,,[],"['Python has two built-in methods that you can use on tuples.', 'Learn more about tuples in our Python Tuples Tutorial.']",[],[''],['Method|||Description|||&&&count()|||Returns the number of times a specified value occurs in a tuple|||&&&index()|||Searches the tuple for a specified value and returns the position of where it was found|||&&&'],[]
python||Set Methods,https://www.w3schools.com/python/python_ref_set.asp,,[],"['Python has a set of built-in methods that you can use on sets.', 'Learn more about sets in our Python Sets Tutorial.']",[],[''],"['Method|||Description|||&&&add()|||Adds an element to the \n  set|||&&&clear()|||Removes all the \n  elements from the set|||&&&copy()|||Returns a copy of the set|||&&&difference()|||Returns a set \n    containing the difference between two or more sets|||&&&difference_update()|||Removes the \n    items in this set that are also included in another, specified set|||&&&discard()|||Remove the specified \n  item|||&&&intersection()|||Returns a set, \n    that is the intersection of two or more sets|||&&&intersection_update()|||\n  Removes the items in this set that are not present in other, specified set(s)|||&&&isdisjoint()|||Returns whether \n    two sets have a intersection or not|||&&&issubset()|||Returns whether \n    another set contains this set or not|||&&&issuperset()|||Returns whether \n  this set contains another set or not|||&&&pop()|||Removes an element from the \n  set|||&&&remove()|||Removes the specified element|||&&&symmetric_difference()|||Returns \n    a set with the symmetric differences of two sets|||&&&symmetric_difference_update()|||\n  inserts the symmetric differences from this set and another|||&&&union()|||Return a set containing \n    the union of sets|||&&&update()|||Update the set with \n  another set, or any other iterable|||&&&']",[]
python||File Methods,https://www.w3schools.com/python/python_ref_file.asp,,[],"['Python has a set of methods available for the file object.', 'Learn more about the file object in our Python File Handling Tutorial.']",[],[''],"[""Method|||Description|||&&&close()|||Closes the file|||&&&detach()|||Returns the separated \n    raw stream from the buffer|||&&&fileno()|||Returns a number that \n    represents the stream, from the operating system's perspective|||&&&flush()|||Flushes the internal \n    buffer|||&&&isatty()|||Returns whether the \n    file stream is interactive or not|||&&&read()|||Returns the file content|||&&&readable()|||Returns whether \n    the file stream can be read or not|||&&&readline()|||Returns one line \n    from the file|||&&&readlines()|||Returns a list \n    of lines from the file|||&&&seek()|||Change the file position|||&&&seekable()|||Returns whether \n    the file allows us to change the file position|||&&&tell()|||Returns the current file \n    position|||&&&truncate()|||Resizes the file \n    to a specified size|||&&&writable()|||Returns whether \n    the file can be written to or not|||&&&write()|||Writes the specified \n    string to the file|||&&&writelines()|||Writes a list \n    of strings to the file|||&&&""]",[]
python||Keywords,https://www.w3schools.com/python/python_ref_keywords.asp,,[],"['Python has a set of keywords that are reserved words that cannot be used as \nvariable names, function names, or any other identifiers:']",[],[''],"['Keyword|||Description|||&&&and|||A logical operator|||&&&as|||To create an alias|||&&&assert|||For debugging|||&&&break|||To break out of a loop|||&&&class|||To define a class|||&&&continue|||To continue to the \n    next iteration of a loop|||&&&def|||To define a function|||&&&del|||To delete an object|||&&&elif|||Used in conditional \n    statements, same as else if|||&&&else|||Used in conditional \n    statements|||&&&except|||Used with exceptions, \n    what to do when an exception occurs|||&&&False|||Boolean value, result of \n    comparison operations|||&&&finally|||Used with exceptions, a \n    block of code that will be executed no matter if there is an exception or \n    not|||&&&for|||To create a for loop|||&&&from|||To import specific parts of \n    a module|||&&&global|||To declare a global \n    variable|||&&&if|||To make a conditional \n    statement|||&&&import|||To import a module|||&&&in|||To check if a value is \n    present in a list, tuple, etc.|||&&&is|||To test if two variables are \n    equal|||&&&lambda|||To create an anonymous \n    function |||&&&None|||Represents a null value|||&&&nonlocal|||To declare a \n    non-local variable|||&&&not|||A logical operator|||&&&or|||A logical operator|||&&&pass|||A null statement, a \n  statement that will do nothing|||&&&raise|||To raise an exception|||&&&return|||To exit a function and \n  return a value|||&&&True|||Boolean value, result of \n    comparison operations|||&&&try|||To make a try...except \n  statement|||&&&while|||To create a while loop|||&&&with|||Used to simplify \n  exception handling|||&&&yield|||To end a function, returns \n  a generator|||&&&']",[]
python||Built-in Exceptions,https://www.w3schools.com/python/python_ref_exceptions.asp,,['Built-in Exceptions'],['The table below shows built-in exceptions that are usually raised in Python:'],[''],[''],"['Exception|||Description|||&&&\n        ArithmeticError\n      |||\n      Raised when an error occurs in numeric calculations|||&&&\n        AssertionError\n      |||\n        Raised when an assert statement fails|||&&&\n        AttributeError\n      |||\n      Raised when attribute reference or assignment fails|||&&&\n        Exception\n      |||\n      Base class for all exceptions|||&&&\n        EOFError\n      |||\n      Raised when \n      the input() method hits an ""end of file"" condition (EOF)|||&&&\n        FloatingPointError\n      |||\n      Raised when a floating point calculation fails|||&&&\n        GeneratorExit\n      |||\n      Raised when a generator is closed (with the close() method)|||&&&\n        ImportError\n      |||\n      Raised when an imported module does not exist|||&&&\n        IndentationError\n      |||\n      Raised when indendation is not correct|||&&&\n        IndexError\n      |||\n      Raised when an index of a sequence does not exist|||&&&\n        KeyError\n      |||\n      Raised when a key does not exist in a dictionary\n      |||&&&\n        KeyboardInterrupt\n      |||\n      Raised when the user presses Ctrl+c, \n      Ctrl+z or Delete|||&&&\n        LookupError\n      |||\n      Raised when errors raised cant be found\n      |||&&&\n        MemoryError\n      |||\n      Raised when a program runs out of memory|||&&&\n        NameError\n      |||\n      Raised when a variable does not exist|||&&&\n        NotImplementedError\n      |||\n      Raised when an abstract method requires an inherited class to override the \n      method|||&&&\n        OSError\n      |||\n      Raised when a system related operation causes an error |||&&&\n        OverflowError\n      |||\n      Raised when the result of a numeric calculation is too large|||&&&\n        ReferenceError\n      |||\n      Raised when a weak reference object does not exist|||&&&\n        RuntimeError\n      |||\n      Raised when an error occurs that do not belong to any specific expections|||&&&\n        StopIteration\n      |||\n      Raised when the next() method of an iterator has no further values|||&&&\n        SyntaxError\n      |||\n      Raised when a syntax error occurs|||&&&\n        TabError\n      |||\n      Raised when indentation consists of tabs or spaces|||&&&\n        SystemError\n      |||\n      Raised when a system error occurs|||&&&\n        SystemExit\n      |||\n      Raised when the sys.exit() function is called|||&&&\n        TypeError\n      |||\n      Raised when two different types are combined|||&&&\n        UnboundLocalError\n      |||\n      Raised when a local variable is referenced before assignment|||&&&\n        UnicodeError\n      |||\n      Raised when a unicode problem occurs|||&&&\n        UnicodeEncodeError\n      |||\n      Raised when a unicode encoding problem occurs|||&&&\n        UnicodeDecodeError\n      |||\n      Raised when a unicode decoding problem occurs|||&&&\n        UnicodeTranslateError\n      |||\n      Raised when a unicode translation problem occurs|||&&&\n        ValueError\n      |||\n      Raised when there is a wrong value in a specified data type|||&&&\n        ZeroDivisionError\n      |||\n      Raised when the second operator in a division is zero|||&&&']",[]
python||Glossary,https://www.w3schools.com/python/python_ref_glossary.asp,,[],['This is a list of all the features explained in the Python Tutorial.'],[],[''],"['Feature|||Description|||&&&Indentation|||Indentation refers to the spaces at the beginning of a code line|||&&&Comments|||Comments are code lines that will not be executed|||&&&Multi Line Comments|||How to insert comments on multiple lines|||&&&Creating Variables|||Variables are containers for storing data values|||&&&Variable Names|||How to name your variables|||&&&Assign Values to Multiple Variables|||How to assign values to multiple variables|||&&&Output Variables|||Use the print statement to output variables|||&&&String Concatenation|||How to combine strings|||&&&Global Variables|||Global variables are variables that belongs to the global scope|||&&&Built-In Data Types|||Python has a set of built-in data types|||&&&Getting Data Type|||How to get the data type of an object|||&&&Setting Data Type|||How to set the data type of an object|||&&&Numbers|||There are three numeric types in Python|||&&&Int|||The integer number type|||&&&Float|||The floating number type|||&&&Complex|||The complex number type|||&&&Type Conversion|||How to convert from one number type to another|||&&&Random Number|||How to create a random number|||&&&Specify a Variable Type|||How to specify a certain data type for a variable|||&&&String Literals|||How to create string literals|||&&&Assigning a String to a Variable|||How to assign a string value to a variable|||&&&Multiline Strings|||How to create a multi line string|||&&&Strings are Arrays|||Strings in Python are arrays of bytes representing Unicode characters|||&&&Slicing a String|||How to slice a string|||&&&Negative Indexing on a String|||How to use negative indexing when accessing a string|||&&&String Length|||How to get the length of a string|||&&&Check In String|||How to check if a string contains a specified phrase|||&&&Format String|||How to combine two strings|||&&&Escape Characters|||How to use escape characters|||&&&Boolean Values|||True or False|||&&&Evaluate Booleans|||Evaluate a value or statement and return either True or False|||&&&Return Boolean Value|||Functions that return a Boolean value|||&&&Operators|||Use operator to perform operations in Python|||&&&Arithmetic Operators|||Arithmetic operator are used to perform common mathematical operations|||&&&Assignment Operators|||Assignment operators are use to assign values to variables|||&&&Comparison Operators|||Comparison operators are used to compare two values|||&&&Logical Operators|||Logical operators are used to combine conditional statements|||&&&Identity Operators|||Identity operators are used to see if two objects are in fact the same object|||&&&Membership Operators|||Membership operators are used to test is a sequence is present in an object|||&&&Bitwise Operators|||Bitwise operators are used to compare (binary) numbers|||&&&Lists|||A list is an ordered, and changeable, collection|||&&&Access List Items|||How to access items in a list|||&&&Change List Item|||How to change the value of a list item|||&&&Loop Through List Items|||How to loop through the items in a list|||&&&List Comprehension|||How use a list comprehensive|||&&&Check if List Item Exists|||How to check if a specified item is present in a list|||&&&List Length|||How to determine the length of a list|||&&&Add List Items|||How to add items to a list|||&&&Remove List Items|||How to remove list items|||&&&Copy a List|||How to copy a list|||&&&Join Two Lists|||How to join two lists|||&&&Tuple|||A tuple is an ordered, and unchangeable, collection|||&&&Access Tuple Items|||How to access items in a tuple|||&&&Change Tuple Item|||How to change the value of a tuple item|||&&&Loop List Items|||How to loop through the items in a tuple|||&&&Check if Tuple Item Exists|||How to check if a specified item is present in a tuple|||&&&Tuple Length|||How to determine the length of a tuple|||&&&Tuple With One Item|||How to create a tuple with only one item|||&&&Remove Tuple Items|||How to remove tuple items|||&&&Join Two Tuples|||How to join two tuples|||&&&Set|||A set is an unordered, and unchangeable, collection|||&&&Access Set Items|||How to access items in a set|||&&&Add Set Items|||How to add items to a set|||&&&Loop Set Items|||DETTE KAPITTELET MANGLER|||&&&Check if Set Item Exists|||DETTE KAPITTELET MANGLER|||&&&Set Length|||How to determine the length of a set|||&&&Remove Set Items|||How to remove set items|||&&&Join Two Sets|||How to join two sets|||&&&Dictionary|||A dictionary is an unordered, and changeable, collection|||&&&Access Dictionary Items|||How to access items in a dictionary|||&&&Change Dictionary Item|||How to change the value of a dictionary item|||&&&Loop Dictionary Items|||How to loop through the items in a tuple|||&&&Check if Dictionary Item Exists|||How to check if a specified item is present in a dictionary|||&&&Dictionary Length|||How to determine the length of a dictionary|||&&&Add Dictionary Item|||How to add an item to a dictionary|||&&&Remove Dictionary Items|||How to remove dictionary items|||&&&Copy Dictionary|||How to copy a dictionary|||&&&Nested Dictionaries|||A dictionary within a dictionary|||&&&If Statement|||How to write an if statement|||&&&If Indentation|||If statemnts in Python relies on indentation (whitespace at the beginning of a line)|||&&&Elif|||elif is the same as ""else if"" in other programming languages|||&&&Else|||How to write an if...else statement|||&&&Shorthand If|||How to write an if statement in one line|||&&&Shorthand If Else|||How to write an if...else statement in one line|||&&&If AND|||Use the and keyword to combine if statements|||&&&If OR|||Use the or keyword to combine if statements|||&&&Nested If|||How to write an if statement inside an if statement|||&&&The pass Keyword in If|||Use the pass keyword inside empty if statements|||&&&While|||How to write a while loop|||&&&While Break|||How to break a while loop|||&&&While Continue|||How to stop the current iteration and continue wit the next|||&&&While Else|||How to use an else statement in a while loop|||&&&For|||How to write a for loop|||&&&Loop Through a String|||How to loop through a string|||&&&For Break|||How to break a for loop|||&&&For Continue|||How to stop the current iteration and continue wit the next|||&&&Looping Through a rangee|||How to loop through a range of values|||&&&For Else|||How to use an else statement in a for loop|||&&&Nested Loops|||How to write a loop inside a loop|||&&&For pass|||Use the pass keyword inside empty for loops|||&&&Function|||How to create a function in Python|||&&&Call a Function|||How to call a function in Python|||&&&Function Arguments|||How to use arguments in a function|||&&&*args|||To deal with an unknown number of arguments in a function, use the * symbol before the parameter name|||&&&Keyword Arguments|||How to use keyword arguments in a function|||&&&**kwargs|||To deal with an unknown number of keyword arguments in a function, use the * symbol before the parameter name|||&&&Default Parameter Value|||How to use a default parameter value|||&&&Passing a List as an Argument|||How to pass a list as an argument|||&&&Function Return Value|||How to return a value from a function|||&&&The pass Statement i Functions|||Use the pass statement in empty functions|||&&&Function Recursion|||Functions that can call itself is called recursive functions|||&&&Lambda Function|||How to create anonymous functions in Python|||&&&Why Use Lambda Functions|||Learn when to use a lambda function or not|||&&&Array|||Lists can be used as Arrays|||&&&What is an Array|||Arrays are variables that can hold more than one value|||&&&Access Arrays|||How to access array items|||&&&Array Length|||How to get the length of an array|||&&&Looping Array Elements|||How to loop through array elements|||&&&Add Array Element|||How to add elements from an array|||&&&Remove Array Element|||How to remove elements from an array|||&&&Array Methods|||Python has a set of Array/Lists methods|||&&&Class|||A class is like an object constructor|||&&&Create Class|||How to create a class|||&&&The Class __init__() Function|||The __init__() function is executed when the class is initiated|||&&&Object Methods|||Methods in objects are functions that belongs to the object|||&&&self|||The self parameter refers to the current instance of the class|||&&&Modify Object Properties|||How to modify properties of an object|||&&&Delete Object Properties|||How to modify properties of an object|||&&&Delete Object|||How to delete an object|||&&&Class pass Statement|||Use the pass statement in empty classes|||&&&Create Parent Class|||How to create a parent class|||&&&Create Child Class|||How to create a child class|||&&&Create the __init__() Function|||How to create the __init__() function|||&&&super Function|||The super() function make the child class inherit the parent class|||&&&Add Class Properties|||How to add a property to a class|||&&&Add Class Methods|||How to add a method to a class|||&&&Iterators|||An iterator is an object that contains a countable number of values|||&&&Iterator vs Iterable|||What is the difference between an iterator and an iterable|||&&&Loop Through an Iterator|||How to loop through the elements of an iterator|||&&&Create an Iterator|||How to create an iterator|||&&&StopIteration|||How to stop an iterator|||&&&Global Scope|||When does a variable belong to the global scope?|||&&&Global Keyword|||The global keyword makes the variable global|||&&&Create a Module|||How to create a module|||&&&Variables in Modules|||How to use variables in a module|||&&&Renaming a Module|||How to rename a module|||&&&Built-in Modules|||How to import built-in modules|||&&&Using the dir() Function|||List all variable names and function names in a module|||&&&Import From Module|||How to import only parts from a module|||&&&Datetime Module|||How to work with dates in Python|||&&&Date Output|||How to output a date|||&&&Create a Date Object|||How to create a date object|||&&&The strftime Method|||How to format a date object into a readable string|||&&&Date Format Codes|||The datetime module has a set of legal format codes|||&&&JSON|||How to work with JSON in Python|||&&&Parse JSON|||How to parse JSON code in Python|||&&&Convert into JSON|||How to convert a Python object in to JSON|||&&&Format JSON|||How to format JSON output with indentations and line breaks|||&&&Sort JSON|||How to sort JSON|||&&&RegEx Module|||How to import the regex module|||&&&RegEx Functions|||The re module has a set of functions|||&&&Metacharacters in RegEx|||Metacharacters are characters with a special meaning|||&&&RegEx Special Sequences|||A backslash followed by a a character has a special meaning|||&&&RegEx Sets|||A set is a set of characters inside a pair of square brackets with a special meaning|||&&&RegEx Match Object|||The Match Object is an object containing information about the search and the result|||&&&Install PIP|||How to install PIP|||&&&PIP Packages|||How to download and install a package with PIP|||&&&PIP Remove Package|||How to remove a package with PIP|||&&&Error Handling|||How to handle errors in Python|||&&&Handle Many Exceptions|||How to handle more than one exception|||&&&Try Else|||How to use the else keyword in a try statement|||&&&Try Finally|||How to use the finally keyword in a try statement|||&&&raise|||How to raise an exception in Python|||&&&']",[]
python||Random Module,https://www.w3schools.com/python/module_random.asp,,[],['Python has a built-in module that you can use to make random numbers.The random module has a set of methods:'],[],[''],"['Method|||Description|||&&&seed()|||Initialize the random number generator|||&&&getstate()|||Returns the current internal state of the random number generator|||&&&setstate()|||Restores the internal state of the random number generator|||&&&getrandbits()|||Returns a number representing the random bits|||&&&randrange()|||Returns a random number between the given range|||&&&randint()|||Returns a random number between the given range|||&&&choice()|||Returns a random element from the given sequence|||&&&choices()|||Returns a list with a random selection from the given sequence|||&&&shuffle()|||Takes a sequence and returns the sequence in a random order|||&&&sample()|||Returns a given sample of a sequence|||&&&random()|||Returns a random float number between 0 and 1|||&&&uniform()|||Returns a random float number between two given parameters|||&&&triangular()|||Returns a random float number between two given parameters, you can also set \na mode parameter to specify the midpoint between the two other parameters|||&&&betavariate()|||Returns a random float number between 0 and 1 based on the Beta distribution \n(used in statistics)|||&&&expovariate()|||Returns a random float number based on the Exponential distribution (used in \nstatistics)|||&&&gammavariate()|||Returns a random float number based on the Gamma \ndistribution (used in statistics)|||&&&gauss()|||Returns a random float number based on the Gaussian \ndistribution (used in probability theories)|||&&&lognormvariate()|||Returns a random float number based on a log-normal \ndistribution (used in probability theories)|||&&&normalvariate()|||Returns a random float number based on the normal \ndistribution (used in probability theories)|||&&&vonmisesvariate()|||Returns a random float number based on the von Mises \ndistribution (used in directional statistics)|||&&&paretovariate()|||Returns a random float number based on the Pareto \ndistribution (used in probability theories)|||&&&weibullvariate()|||Returns a random float number based on the Weibull \ndistribution (used in statistics)|||&&&']",[]
python||Requests,https://www.w3schools.com/python/module_requests.asp,,"['Definition and Usage', 'Download and Install the Requests Module', 'Syntax', 'Methods']","['The requests module allows you to send HTTP \nrequests using Python.The HTTP request returns a Response Object with all the response data \n(content, encoding, status, etc).', 'Navigate your command line to the location of PIP, and type the following:', '', '']","[""\n    import requestsx = requests.get('https://w3schools.com/python/demopage.htm')print(x.text)"", '\nC:\\Users\\Your Name\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>pip install requests\n', '', '']",[''],"['Method|||Description|||&&&delete(url, args)|||Sends a DELETE request to the specified url|||&&&get(url, params, args)|||Sends a GET request to the specified url|||&&&head(url, args)|||Sends a HEAD request to the specified url|||&&&patch(url, data, args)|||Sends a PATCH request to the specified url|||&&&post(url, data, json, args)|||Sends a POST request to the specified url|||&&&put(url, data, args)|||Sends a PUT request to the specified url|||&&&request(method, url, args)|||Sends a request of the specified method to the specified url|||&&&']",[]
python||statistics Module,https://www.w3schools.com/python/module_statistics.asp,,"['Python statistics Module', 'Statistics Methods']","['Python has a built-in module that you can use to calculate mathematical \nstatistics of numeric data.The statistics module was new in Python 3.4.', '']","['', '']",[''],['Method|||Description|||&&&statistics.harmonic_mean()|||Calculates the harmonic mean (central location) of the given data|||&&&statistics.mean()|||Calculates the mean (average) of the given data|||&&&statistics.median()|||Calculates the median (middle value) of the given data|||&&&statistics.median_grouped()|||Calculates the median of grouped continuous  \n    data|||&&&statistics.median_high()|||Calculates the high median of the given data|||&&&statistics.median_low()|||Calculates the low median of the given data|||&&&statistics.mode()|||Calculates the mode (central tendency) of the given numeric or nominal data|||&&&statistics.pstdev()|||Calculates the standard deviation from an entire population|||&&&statistics.stdev()|||Calculates the standard deviation from a sample of data|||&&&statistics.pvariance()|||Calculates the variance of an entire population|||&&&statistics.variance()|||Calculates the variance from a sample of data|||&&&'],[]
python||math Module,https://www.w3schools.com/python/module_math.asp,,"['Python math Module', 'Math Methods', 'Math Constants']","['Python has a built-in module that you can use for mathematical tasks.The math module has a set of methods and constants.', '', '']","['', '', '']",[''],"['Method|||Description|||&&&math.acos()|||Returns the arc cosine of a number|||&&&math.acosh()|||Returns the inverse hyperbolic cosine of a number|||&&&math.asin()|||Returns the arc sine of a number|||&&&math.asinh()|||Returns the inverse hyperbolic sine of a number|||&&&math.atan()|||Returns the arc tangent of a number in radians|||&&&math.atan2()|||Returns the arc tangent of y/x in radians |||&&&math.atanh()|||Returns the inverse hyperbolic tangent of a number|||&&&math.ceil()|||Rounds a number up to the nearest integer|||&&&math.comb()|||Returns the number of ways to choose k items from n items without repetition and order|||&&&math.copysign()|||Returns a float consisting of the value of the first parameter and the sign of the second parameter|||&&&math.cos()|||Returns the cosine of a number|||&&&math.cosh()|||Returns the hyperbolic cosine of a number|||&&&math.degrees()|||Converts an angle from radians to degrees|||&&&math.dist()|||Returns the Euclidean distance between two points (p and q), where p and \n    q are the coordinates of that point|||&&&math.erf()|||Returns the error function of a number|||&&&math.erfc()|||Returns the complementary error function of a number|||&&&math.exp()|||Returns E raised to the power of x|||&&&math.expm1()|||Returns Ex \n    - 1|||&&&math.fabs()|||Returns the absolute value of a number|||&&&math.factorial()|||Returns the factorial of a number|||&&&math.floor()|||Rounds a number down to the nearest integer|||&&&math.fmod()|||Returns the remainder of x/y|||&&&math.frexp()|||Returns the mantissa and the exponent, of a specified number|||&&&math.fsum()|||Returns the sum of all items in any iterable (tuples, arrays, lists, etc.)|||&&&math.gamma()|||Returns the gamma function at x|||&&&math.gcd()|||Returns the greatest common divisor of two integers|||&&&math.hypot()|||Returns the Euclidean norm|||&&&math.isclose()|||Checks whether two values are close to each other, or not|||&&&math.isfinite()|||Checks whether a number is finite or not|||&&&math.isinf()|||Checks whether a number is infinite or not|||&&&math.isnan()|||Checks whether a value is NaN (not a number) or not|||&&&math.isqrt()|||Rounds a square root number downwards to the nearest integer|||&&&math.ldexp()|||Returns the inverse of math.frexp() \n    which is x * (2**i) of the given numbers x and i|||&&&math.lgamma()|||Returns the log gamma value of x|||&&&math.log()|||Returns the natural logarithm of a number, or the logarithm of number to base|||&&&math.log10()|||Returns the base-10 logarithm of x|||&&&math.log1p()|||Returns the natural logarithm of 1+x|||&&&math.log2()|||Returns the base-2 logarithm of x|||&&&math.perm()|||Returns the number of ways to choose k items from n items with order and without repetition|||&&&math.pow()|||Returns the value of x to the power of y|||&&&math.prod()|||Returns the product of all the elements in an iterable|||&&&math.radians()|||Converts a degree value into radians|||&&&math.remainder()|||Returns the closest value that can make numerator completely divisible by the denominator|||&&&math.sin()|||Returns the sine of a number|||&&&math.sinh()|||Returns the hyperbolic sine of a number|||&&&math.sqrt()|||Returns the square root of a number|||&&&math.tan()|||Returns the tangent of a number|||&&&math.tanh()|||Returns the hyperbolic tangent of a number|||&&&math.trunc()|||Returns the truncated integer parts of a number|||&&&', ""Constant|||Description|||&&&math.e|||Returns Euler's number (2.7182...)|||&&&math.inf|||Returns a floating-point positive infinity|||&&&math.nan|||Returns a floating-point NaN (Not a Number) value|||&&&math.pi|||Returns PI (3.1415...)|||&&&math.tau|||Returns tau (6.2831...)|||&&&""]",[]
python||cmath Module,https://www.w3schools.com/python/module_cmath.asp,,"['Python cmath Module', 'cMath Methods', 'cMath Constants']","['Python has a built-in module that you can use for mathematical tasks for \ncomplex numbers.The methods in this module accepts int, float,  and complex numbers. It even accepts Python objects that has a __complex__() or __float__() method.The methods in this module almost always return a complex number. If the return \nvalue can be expressed as a real number, the return value has an imaginary part \nof 0.The cmath module has a set of methods and constants.', '', '']","['', '', '']",[''],"[""Method|||Description|||&&&cmath.acos(x)|||Returns the arc cosine value of x|||&&&cmath.acosh(x)|||Returns the hyperbolic arc cosine of x|||&&&cmath.asin(x)|||Returns the arc sine of x|||&&&cmath.asinh(x)|||Returns the hyperbolic arc sine of x|||&&&cmath.atan(x)|||Returns the arc tangent value of x|||&&&cmath.atanh(x)|||Returns the hyperbolic arctangent value of x|||&&&cmath.cos(x)|||Returns the cosine of x|||&&&cmath.cosh(x)|||Returns the hyperbolic cosine of x|||&&&cmath.exp(x)|||Returns the value of Ex, where E is Euler's number (approximately 2.718281...), and x is the number passed to it|||&&&cmath.isclose()|||Checks whether two values are close, or not|||&&&cmath.isfinite(x)|||Checks whether x is a finite number|||&&&cmath.isinf(x)|||Check whether x is a positive or negative infinty|||&&&cmath.isnan(x)|||Checks whether x is NaN (not a number)|||&&&cmath.log(x[, base])|||Returns the logarithm of x to the base|||&&&cmath.log10(x)|||Returns the base-10 logarithm of x|||&&&cmath.phase()|||Return the phase of a complex number|||&&&cmath.polar()|||Convert a complex number to polar coordinates|||&&&cmath.rect()|||Convert polar coordinates to rectangular form|||&&&cmath.sin(x)|||Returns the sine of x|||&&&cmath.sinh(x)|||Returns the hyperbolic sine of x|||&&&cmath.sqrt(x)|||Returns the square root of x|||&&&cmath.tan(x)|||Returns the tangent of x|||&&&cmath.tanh(x)|||Returns the hyperbolic tangent of x|||&&&"", ""Constant|||Description|||&&&cmath.e|||Returns Euler's number (2.7182...)|||&&&cmath.inf|||Returns a floating-point positive infinity value|||&&&cmath.infj|||Returns a complex infinity value|||&&&cmath.nan|||Returns floating-point NaN (Not a Number) value|||&&&cmath.nanj|||Returns coplext NaN (Not a Number) value|||&&&cmath.pi|||Returns PI (3.1415...)|||&&&cmath.tau|||Returns tau (6.2831...)|||&&&""]",[]
python||,https://www.w3schools.com/python/python_howto_remove_duplicates.asp,Learn how to remove duplicates from a List in Python.,"['Example Explained', 'Create a Function', 'Example Explained']","['First we have a List that contains duplicates:Create a dictionary, \nusing the List items as keys. This will automatically remove any duplicates \nbecause dictionaries cannot have duplicate keys.Then, convert the dictionary back into a list:Now we have a List without any duplicates, and it has the same order as the \noriginal List.Print the List to demonstrate the result', 'If you like to have a function where you can send your lists, and get them \nback without duplicates, you can create a function and insert the code from the \nexample above.Create a function that takes a List as an argument.Create a dictionary, using this List items as keys.Convert the dictionary into a list.Return the listCall the function, with a list as a parameter:Print the result:', '']","['\n  mylist = [""a"", ""b"", ""a"", ""c"", ""c""]mylist = list(dict.fromkeys(mylist))\n  print(mylist)', '\nmylist = [""a"", ""b"", ""a"", ""c"", ""c""]\n\n\nmylist = list(dict.fromkeys(mylist))\nprint(mylist)\n\n', '\n\n      mylist = [""a"", ""b"", ""a"", ""c"", ""c""]\n\nmylist = list(dict.fromkeys(mylist))\n    print(mylist)\n', '\n\n      mylist = [""a"", ""b"", ""a"", ""c"", ""c""]\n\nmylist = list(dict.fromkeys(mylist))\nprint(mylist)\n', '\n\n    mylist = [""a"", ""b"", ""a"", ""c"", ""c""]\n    mylist = list(dict.fromkeys(mylist))\nprint(mylist)\n', '\n  def my_function(x):\xa0 return list(dict.fromkeys(x))mylist = \n  my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)', '\ndef my_function(x):\n  \xa0 return list(dict.fromkeys(x))mylist = \n  my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)\n', '\ndef my_function(x):\n  \xa0 return list(dict.fromkeys(x))mylist = \n  my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)\n', '\ndef my_function(x):\n  \xa0 return list(dict.fromkeys(x))mylist = \n  my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)\n', '\ndef my_function(x):\n  \xa0 return list(dict.fromkeys(x))mylist = \n  my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)\n', '\ndef my_function(x):\n  \xa0 return list(dict.fromkeys(x))\nmylist = my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)\n', '\ndef my_function(x):\n  \xa0 return list(dict.fromkeys(x))\n  mylist = my_function([""a"", ""b"", ""a"", ""c"", ""c""])\nprint(mylist)\n']",[''],[],[]
python||,https://www.w3schools.com/python/python_howto_reverse_string.asp,Learn how to reverse a String in Python.,"['Example Explained', 'Create a Function', 'Example Explained']","['There is no built-in function to reverse a String in Python.The fastest (and easiest?) way is to use a slice that steps backwards, -1.We have a string, ""Hello World"", which we want to reverse:Create a slice that starts at the end of the string, and moves backwards.In this particular example, the slice statement [::-1] means start at \nthe end of the string and end at position 0, move with the \nstep -1, negative one, which means one step backwards. Now we have a string txt that reads ""Hello \nWorld"" backwards.Print the String to demonstrate the result', 'If you like to have a function where you can send your strings, and return \nthem \nbackwards, you can create a function and insert the code from the \nexample above.Create a function that takes a String as an argument.Slice the string starting at the end of the string and move backwards.Return the backward StringCall the function, with a string as a parameter:Print the result:', '']","['\n  txt = ""Hello World""[::-1]print(txt)', '\ntxt = ""Hello World""[::-1]\n  print(txt)', '\ntxt = ""Hello World""[::-1]\n  print(txt)', '\ntxt = ""Hello World""[::-1]\nprint(txt)', '\n  def my_function(x):\xa0 return x[::-1]mytxt = \n  my_function(""I wonder how this text looks like backwards"")\nprint(mytxt)', '\ndef my_function(x):\n  \xa0 return x[::-1]mytxt = \n  my_function(""I wonder how this text looks like backwards"")\nprint(mytxt)\n', '\ndef my_function(x):\n  \xa0 return x[::-1]mytxt = \n  my_function(""I wonder how this text looks like backwards"")\nprint(mytxt)\n', '\ndef my_function(x):\n  \xa0 return \n  x[::-1]mytxt = \n  my_function(""I wonder how this text looks like backwards"")\nprint(mytxt )\n', '\ndef my_function(x):\n  \xa0 return \n  x[::-1]\nmytxt = my_function(""I \n  wonder how this text looks like backwards"")\nprint(mytxt)\n', '\ndef my_function(x):\n  \xa0 return \n  x[::-1]\n  mytxt = my_function(""I wonder how this text looks like backwards"")\nprint(mytxt)\n']",[''],[],[]
python||,https://www.w3schools.com/python/python_howto_add_two_numbers.asp,Learn how to add two numbers in Python.,['Add Two Numbers with User Input'],"['Use the + operator to add two numbers:', 'In this example, the user must input two numbers. Then we print the sum by calculating (adding) the two numbers:']","['\nx = 5y = 10print(x + y)\n', '\n  x = input(""Type a number: "")y = input(""Type another number: "")sum \n  = int(x) + int(y)print(""The sum is: "", sum) ']",[''],[],[]
python||Examples,https://www.w3schools.com/python/python_examples.asp,,"['Python Syntax', 'Python Variables', 'Python Numbers', 'Python Casting', 'Python Strings', 'Python Operators', 'Python Lists', 'Python Tuples', 'Python Sets', 'Python Dictionaries', 'Python If ... Else', 'Python While Loop', 'Python For Loop', 'Python Functions', 'Python Lambda', 'Python Arrays', 'Python Classes and Objects', 'Python Iterators', 'Python Modules', 'Python Dates', 'Python Math', 'Python JSON', 'Python RegEx', 'Python PIP', 'Python Try Except', 'Python File Handling', 'Python MySQL', 'Python MongoDB']","['Syntax Explained', 'Variables Explained', 'Numbers Explained', 'Casting Explained', 'Strings Explained', 'Operators Explained', 'Lists Explained', 'Tuples Explained', 'Sets Explained', 'Dictionaries Explained', 'If ... Else Explained', 'While Loop Explained', 'For Loop Explained', 'Functions Explained', 'Lambda Explained', 'Arrays Explained', 'Classes/Objects Explained', 'Iterators Explained', 'Modules Explained', 'Dates Explained', 'Math Explained', 'JSON Explained', 'RegEx Explained', 'PIP Explained', 'Try Except Explained', 'File Handling Explained', 'MySQL Explained', 'MongoDB Explained']","['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']",[''],[],[]
python||Online Compiler,https://www.w3schools.com/python/python_compiler.asp,,"['Python Compiler (Editor)', 'Python Compiler Explained']","['With our online Python compiler, you can edit Python code, and view the result in your browser.Click on the ""Try it Yourself"" button to see how it works.', 'The window to the left is editable - edit the code and click on the ""Run"" button to view the result in the right window.The icons are explained in the table below:']","['', '']",[''],['Icon|||Description|||&&&|||Go to www.w3schools.com|||&&&|||Menu button for more options|||&&&|||Change orientation (horizontally or vertically)|||&&&|||Change color theme (dark or light)|||&&&'],[]
python||Exercises,https://www.w3schools.com/python/python_exercises.asp,You can test your Python skills with W3Schools' Exercises.,[],"['We have gathered a variety of Python exercises (with answers) for each Python Chapter.Try to solve an exercise by filling in the missing parts of a code. If you\'re stuck, hit the ""Show Answer"" button to see what you\'ve done wrong.You will get 1 point for\neach correct answer. Your score and total score will always be displayed.']",[],[''],[],[]
python||Quiz,https://www.w3schools.com/python/python_quiz.asp,You can test your Python skills with W3Schools' Quiz.,"['The Test', 'Count Your Score']","[""The test contains 25 questions and there is no time limit.The test is not official, it's just a nice way to see how much you know, or don't know, about \nPython.You will get 1 point for each correct answer. At the end of the Quiz,\nyour total score will be displayed. Maximum score is 25 points."", '']","['', '']",[''],[],[]
python||Python Certificate,https://www.w3schools.com/python/python_exam.asp,,['How Does It Work?'],[''],[''],"['How Does It Work?###&&&|||Study for free at W3Schools.com|||Study at your own speed|||Test your skills with W3Schools online quizzes|||Apply for your certificate by paying an exam fee|||Take your exam online, at any time, and from any location|||']","['.cls-1{fill:#04aa6b;}.cls-2{font-size:23px;}.cls-2,.cls-3,.cls-4{fill:#fff;}.cls-2,.cls-3{font-family:RobotoMono-Medium, Roboto Mono;font-weight:500;}.cls-3{font-size:20.08px;}w3schools CERTIFIED  .  2021\n|||\xa0\xa0|||\nW3Schools offers an Online Certification Program.\nThe perfect solution for busy professionals who need to balance work, family, and career building.\nMore than 30 000 certificates already issued!\n|||&&&', '\nDocument Your Skills\nKnowledge is power, especially in the current job market. Documentation of your skills enables you to advance your career, or help you to start a new one.\nGet a Certificate\nGetting a certificate proves your commitment to upgrade your skills,\ngives you the credibility needed for more responsibilities, larger projects, and a higher salary.\n\nGet Your Certificate »\n\n|||\n\n|||&&&']",['/cert/pic_html_cert_small.gif']
