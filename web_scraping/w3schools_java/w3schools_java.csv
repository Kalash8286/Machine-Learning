Heading,Link,Intro,Subheading,Definitions,Example,List_item,table_item,Image_url
java||Tutorial,https://www.w3schools.com/java/default.asp,,['Examples in Each Chapter'],"['Our ""Try it Yourself"" editor makes it easy to learn Java. You can edit Java code and view the result \nin your browser.Click on the ""Run example"" button to see how it works.', 'Test your Java skills with a quiz.Start Java Quiz', 'Learn by examples! This tutorial supplements all explanations with clarifying examples.See All Java Examples', 'Java KeywordsJava String MethodsJava Math Methods', 'Download Java from the official Java web site:\nhttps://www.oracle.com']",[''],[''],[],[]
java||Introduction,https://www.w3schools.com/java/java_intro.asp,,"['What is Java?', 'Why Use Java?', 'Get Started']","['Java is a popular programming language, created in 1995.It is owned by Oracle, and more than 3 billion devices run Java.It is used for:', 'It is not necessary to have any prior programming experience.', '']","['', '', '']","['What is Java?###Why Use Java?###&&&|||Mobile applications (specially Android apps)|||Desktop applications|||Web applications|||Web servers and application servers|||Games|||Database connection|||And much, much more!|||&&&|||Java works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.)|||It is one of the most popular programming language in the world|||It is easy to learn and simple to use|||It is open-source and free|||It is secure, fast and powerful|||It has a huge community support (tens of millions of developers)|||Java is an object oriented language which gives a clear structure to programs and allows code to be reused, lowering development costs|||As Java is close to C++ and C#, it makes it easy for programmers to switch to Java or vice versa|||']",[],[]
java||Getting Started,https://www.w3schools.com/java/java_getstarted.asp,,"['Java Install', 'Setup for Windows', 'Java Quickstart']","['Some PCs might have Java already installed.To check if you have Java installed on a Windows PC, search in the start bar for Java or type the following in Command Prompt (cmd.exe):If Java is installed, you will see something like this (depending on version):If you do not have Java installed on your computer, you can download it for free at oracle.com.Note: In this tutorial, we will write Java code in a text editor. However, it is possible to write Java in an Integrated Development Environment, such as IntelliJ IDEA, Netbeans or Eclipse, which are particularly useful when managing larger collections of Java files.', 'To install Java on Windows:', 'In Java, every application begins with a class name, and that class must match the filename.Let\'s create our first Java file, called Main.java, which can be done in any text editor \n(like Notepad).The file should contain a ""Hello World"" message, which is written with the \nfollowing code:Don\'t worry if you don\'t understand the code above - we will discuss it in detail in later chapters. \nFor now, focus on how to run the code above.Save the code in Notepad as ""Main.java"". Open Command Prompt (cmd.exe), navigate to the directory where you saved your file, and type ""javac \nMain.java"":This will compile your code. If there are no errors in the code, the command prompt will take you to the next line. \nNow, type ""java Main"" to run the file:The output should read:Congratulations! You have written and executed your first Java program.']","['\nC:\\Users\\Your Name>java -version\n', '\n\njava version ""11.0.1"" 2018-10-16 LTS\nJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)\n\n', '\nC:\\Users\\Your Name>javac Main.java\n', '\nC:\\Users\\Your Name>java Main\n', '\n\nHello World\n\n']",[''],[],"['system.png', 'system1.png', 'path2.png', 'path3.png']"
java||Syntax,https://www.w3schools.com/java/java_syntax.asp,,"['Java Syntax', 'The main Method', 'System.out.println()']","['In the previous chapter, we created a Java file called Main.java, and we used the following code to print ""Hello World"" to the screen:Every line of code that runs in Java must be inside a class.\nIn our example, we named the class Main. A class should always start with \nan uppercase first letter.Note: Java is case-sensitive: ""MyClass"" and ""myclass"" has \ndifferent meaning.The name of the java file must match the class name.\nWhen saving the file, save it using the class name and add "".java"" to the end of \nthe filename. To run the example above on your computer, make sure that Java is \nproperly installed: Go to the Get Started Chapter for how to install Java. The output should be:', ""The main() method is required and you will \nsee it in every Java \nprogram:Any code inside the main() method will be executed. You don't have to understand the keywords before and after main. You will get to know \nthem bit by bit while reading this tutorial.For now, just remember that every Java program has a class name which \nmust match the filename, and that every program must contain the \nmain() method."", 'Inside the main() method, we can use the println() \nmethod to print a line of text to the screen:']","['\n\nHello World\n\n', '', '']",[''],[],[]
java||Comments,https://www.w3schools.com/java/java_comments.asp,,"['Java Comments', 'Single-line Comments', 'Java Multi-line Comments']","['Comments can be used to explain Java code, and to make it more readable. It can also be used to \nprevent execution when testing alternative code.', 'Single-line comments start with two forward slashes (//).Any text between // and the end of the line \nis ignored by Java (will not be executed).This example uses a single-line comment before a line of code:This example uses a single-line comment at the end of a line of code:', 'Multi-line comments start with /* and ends with */.Any text between /* and */ will be ignored by Java.This example uses a multi-line comment (a comment block) to explain the code:']","['', '', '']",[''],[],[]
java||Variables,https://www.w3schools.com/java/java_variables.asp,,"['Java Variables', 'Declaring (Creating) Variables', 'Final Variables', 'Other Types', 'Display Variables', 'Declare Many Variables', 'Java Identifiers']","['Variables are containers for storing data values. In Java, there are different types of variables, for example:', ""To create a variable, you must specify the type and assign it a value:Where type is one of Java's types (such as int or String), and \nvariableName is the name of the variable (such as x or\nname). The equal sign is used to assign values to the variable.To create a variable that should store text, look at the following example:To create a variable that should store a number, look at the following example:You can also declare a variable without assigning the value, and assign the value later:Note that if you assign a new value to an existing variable, it will overwrite the previous value:"", 'However, you can add the final keyword if you don\'t want others (or yourself) to overwrite existing values (this will declare the variable as ""final"" or ""constant"", which means unchangeable and read-only):', 'A demonstration of how to declare variables of other types:', 'The println() method is often used to display variables.To combine both text and a variable, use the + character:You can also use the + character to add a variable to another variable:For numeric values, the + character works as a mathematical operator (notice that we use int (integer) variables here):From the example above, you can expect:', 'To declare more than one variable of the same type, use a comma-separated list:', 'All Java variables must be\nidentified with unique names.These unique names are called identifiers.Identifiers can be short names (like x and y) or more descriptive names (age, sum, totalVolume).Note: It is recommended to use descriptive names in order to \ncreate understandable and maintainable code:The general rules for naming variables are:']","['', '', '', '', '', '', '']","['Java Variables###Display Variables###Java Identifiers###&&&|||String - stores text, such as ""Hello"". String values are ||| surrounded by double quotes|||int - stores integers (whole numbers), without decimals, such as 123 or -123|||float - stores floating point numbers, with decimals, such as 19.99 or -19.99|||char - stores single characters, such as ||| \'a\' or \'B\'. Char values are surrounded by single quotes|||boolean - stores values with two states: ||| true or false|||&&&|||x stores the value 5|||y stores the value 6|||Then we use the println() method to display the value of x + y, ||| which is 11|||&&&|||Names can contain letters, digits, underscores, and dollar signs|||Names must begin with a letter|||Names should start with a lowercase letter and it cannot contain whitespace|||Names can also begin with $ and _ (but we will not use it in this tutorial)|||Names are case sensitive (""myVar"" and ""myvar"" are different variables)|||Reserved words (like Java keywords, such as int or |||  boolean) cannot be used as names|||']",[],[]
java||Data Types,https://www.w3schools.com/java/java_data_types.asp,,"['Java Data Types', 'Primitive Data Types', 'Numbers', 'Integer Types', 'Floating Point Types', 'Booleans', 'Characters', 'Strings', 'Non-Primitive Data Types']","['As explained in the previous chapter, a variable in Java must be a specified data type:Data types are divided into two groups:', 'A primitive data type specifies the size and type of variable values, and it has no \nadditional methods.There are eight primitive data types in Java:', 'Primitive number types are divided into two groups:Integer types stores whole numbers, positive or negative (such as 123 or -456), without decimals. \nValid types are byte, short, int \nand long. Which type you should use, depends on the numeric value.Floating point types represents numbers with a fractional part, \ncontaining one or more decimals. There are two types: float and double.', 'The byte data type can store whole numbers \nfrom -128 to 127. This can be used instead of int or other integer types to \nsave memory when you are certain that the value will be within -128 and 127:The short data type can store whole numbers from -32768 to 32767:The int data type can store whole numbers from -2147483648 to 2147483647.  In general, and in our tutorial, the int data type is \nthe preferred data type when we create variables with a numeric value.The long data type can store whole numbers from -9223372036854775808 to 9223372036854775807. This is used when int is not large enough to store the value. Note that you should end the value with an ""L"":', 'You should use a floating point type whenever you need a number with a decimal, such as 9.99 or 3.14515.The float data type can store fractional numbers from 3.4e−038 to 3.4e+038. Note that you should end the value with an ""f"":The double data type can store fractional numbers from 1.7e−308 to 1.7e+308. Note that you should end the value with a ""d"":A floating point number can also be a scientific number with an ""e"" to indicate the power of 10:', 'A boolean data type is declared with the boolean keyword and can only take the values true or false:Boolean values are mostly used for conditional testing, which you will learn more about in a later chapter.', ""The char data type is used to store a \nsingle character. The character must be \nsurrounded by single quotes, like 'A' or 'c':Alternatively, you can use ASCII values to display certain characters:Tip: A list of all ASCII values can be found in our ASCII Table Reference."", 'The String data type is used to store a sequence of characters (text). String values must be surrounded by double quotes:', 'Non-primitive data types are called reference types because \nthey refer to objects.The main difference between primitive and non-primitive data types are:Examples of non-primitive types are Strings, Arrays, Classes, Interface, etc. You will learn more about these in a later chapter.']","['', '', '', '', '', '', '', '', '']","['Java Data Types###Non-Primitive Data Types###&&&|||Primitive data types - includes byte, short, int, long, ||| float, double, boolean and char|||Non-primitive data types - such as String, Arrays and  Classes (you will learn more about these in a later chapter)|||&&&|||Primitive types are predefined (already defined) in Java. Non-primitive types are created by the programmer and |||is not defined by Java (except for String).|||Non-primitive types can be used to call methods to perform certain operations, while primitive types cannot.|||A primitive type has always a value, while non-primitive types can be null.|||A primitive type starts with a lowercase letter, while non-primitive types starts with an uppercase letter.|||The size of a primitive type depends on the data type, while non-primitive types have all the same size.|||']","['Data Type|||Size|||Description|||&&&byte|||1 byte|||Stores whole numbers from -128 to 127|||&&&short|||2 bytes|||Stores whole numbers from -32,768 to 32,767|||&&&int|||4 bytes|||Stores whole numbers from -2,147,483,648 to 2,147,483,647|||&&&long|||8 bytes|||Stores whole numbers from -9,223,372,036,854,775,808 to \n9,223,372,036,854,775,807|||&&&float|||4 bytes|||Stores fractional numbers. Sufficient for \nstoring 6 to 7 decimal digits|||&&&double|||8 bytes|||Stores fractional numbers. Sufficient for \nstoring 15 decimal digits|||&&&boolean|||1 bit|||Stores true or false values|||&&&char|||2 bytes|||Stores a single character/letter or ASCII values|||&&&']",[]
java||Type Casting,https://www.w3schools.com/java/java_type_casting.asp,,"['Java Type Casting', 'Widening Casting', 'Narrowing Casting']","['Type casting is when you assign a value of one primitive data type to another type.In Java, there are two types of casting:', 'Widening casting is done automatically when passing a smaller size type to a \nlarger size type:', 'Narrowing casting must be done manually by placing the type in parentheses \nin front of the value:']","['', '', '']",['Java Type Casting###&&&|||Widening Casting (automatically) - converting a smaller type |||to a larger type size|||byte -> short -> char -> int -> long -> float -> double|||Narrowing Casting (manually) - converting a larger type |||to a smaller size type|||double -> float -> long -> int -> char -> short -> byte|||'],[],[]
java||Operators,https://www.w3schools.com/java/java_operators.asp,,"['Java Operators', 'Arithmetic Operators', 'Java Assignment Operators', 'Java Comparison Operators', 'Java Logical Operators']","['Operators are used to perform operations on variables and values.In the example below, we use the\n+ operator to add together two values:Although the + operator is often used to add together two values, like in the example above, it can also be used to add together a variable and a value, or a variable and another variable:Java divides the operators into the following groups:', 'Arithmetic operators are used to perform common mathematical operations.', 'Assignment operators are used to assign values to variables.In the example below, we use the assignment operator (=) \nto assign the value 10 to a variable called x:The addition assignment operator (+=) adds a value to a variable:A list of all assignment operators:', 'Comparison operators are used to compare two values:', 'Logical operators are used to determine the logic between variables or \nvalues:']","['', '', '', '', '']",['Java Operators###&&&|||Arithmetic operators|||Assignment operators|||Comparison operators|||Logical operators|||Bitwise operators|||'],"['Operator|||Name|||Description|||Example|||Try it|||&&&+|||Addition|||Adds together two values|||x + y|||Try it »|||&&&-|||Subtraction|||Subtracts one value from another|||x - y|||Try it »|||&&&*|||Multiplication|||Multiplies two values|||x * y|||Try it »|||&&&/|||Division|||Divides one value by another|||x / y|||Try it »|||&&&%|||Modulus|||Returns the division remainder|||x % y|||Try it »|||&&&++|||Increment|||Increases the value of a variable by 1|||++x|||Try it »|||&&&--|||Decrement|||Decreases the value of a variable by 1|||--x|||Try it »|||&&&', 'Operator|||Example|||Same As|||Try it|||&&&=|||x = 5|||x = 5|||Try it »|||&&&+=|||x += 3|||x = x + 3|||Try it »|||&&&-=|||x -= 3|||x = x - 3|||Try it »|||&&&*=|||x *= 3|||x = x * 3|||Try it »|||&&&/=|||x /= 3|||x = x / 3|||Try it »|||&&&%=|||x %= 3|||x = x % 3|||Try it »|||&&&&=|||x &= 3|||x = x & 3|||Try it »|||&&&|=|||x |= 3|||x = x | 3|||Try it »|||&&&^=|||x ^= 3|||x = x ^ 3|||Try it »|||&&&>>=|||x >>= 3|||x = x >> 3|||Try it »|||&&&<<=|||x <<= 3|||x = x << 3|||Try it »|||&&&', 'Operator|||Name|||Example|||Try it|||&&&==|||Equal to|||x == y|||Try it »|||&&&!=|||Not equal|||x != y|||Try it »|||&&&>|||Greater than|||x > y|||Try it »|||&&&<|||Less than|||x < y|||Try it »|||&&&>=|||Greater than or equal to|||x >= y|||Try it »|||&&&<=|||Less than or equal to|||x <= y|||Try it »|||&&&', 'Operator|||Name|||Description|||Example|||Try it|||&&&&&\xa0|||Logical and|||Returns true if both statements are true|||x < 5 &&\xa0 x < 10|||Try it »|||&&&||\xa0|||Logical or|||Returns true if one of the statements is true|||x < 5 || x < 4|||Try it »|||&&&!|||Logical not|||Reverse the result, returns false if the result is true|||!(x < 5 && x < 10)|||Try it »|||&&&']",[]
java||Strings,https://www.w3schools.com/java/java_strings.asp,,"['Java Strings', 'String Length', 'More String Methods', 'Finding a Character in a String', 'String Concatenation', 'Special Characters']","['Strings are used for storing text.A String variable contains a collection of characters surrounded by double quotes:', 'A String in Java is actually an object, which contain methods that can perform certain operations on strings. For example, the length of a string can be found with the length() method:', 'There are many string methods available, for example toUpperCase() and toLowerCase():', 'The indexOf() method returns the index (the position) \nof the first occurrence of a specified text in a string \n(including whitespace):', 'The + operator can be used between strings to \ncombine them. This is called concatenation:You can also use the concat() method to concatenate two strings:', 'Because strings must be written within quotes, Java will misunderstand this string, \nand generate an error:The solution to avoid this problem, is to use the backslash escape character.The backslash (\\) escape character turns special characters into string characters:The sequence \\""\xa0 inserts a double quote in a string:\n\nExample\nString txt = ""We are the so-called \\""Vikings\\"" from the north."";\n\n\nTry it Yourself »\n\n\nThe sequence \\\'\xa0 inserts a single quote in a string:\n\nExample\nString txt = ""It\\\'s alright."";\n\n\nTry it Yourself »\n\n\nThe sequence \\\\\xa0 inserts a single backslash in a string:\n\nExample\nString txt = ""The character \\\\ is called backslash."";\n\n\nTry it Yourself »\n\n\nSix other escape sequences are valid in Java:\n\n\nCode\nResult\nTry it\n\n\n\\n\nNew Line\nTry it »\n\n\n\\r\nCarriage Return\nTry it »\n\n\n\\t\nTab\nTry it »\n\n\n\\b\nBackspace\nTry it »\n\n\n\\f\nForm Feed\n\n\n\n\nAdding Numbers and Strings\n\nWARNING!\nJava uses the + operator for both addition and concatenation.\nNumbers are added. Strings are concatenated.\n\nIf you add two numbers, the result will be a number:\n\nExample\nint x = 10;\nint y = 20;\nint z = x + y;\xa0\xa0\xa0\xa0\xa0\xa0// z will be 30 (an integer/number)\n\n\nTry it Yourself »\n\n\nIf you add two strings, the result will be a string concatenation:\n\nExample\nString x = ""10"";\nString y = ""20"";\nString z = x + y;\xa0\xa0 // z will be 1020 (a String)\n\n\nTry it Yourself »\n\n\nIf you add a number and a string, the result will be a string concatenation:\n\nExample\nString x = ""10"";\nint y = 20;\nString z = x + y;\xa0\xa0\xa0// z will be 1020 (a String)\n\n\nTry it Yourself »\n\n\n\n\nComplete String Reference\nFor a complete reference of String methods, go to our Java String Methods Reference.\nThe reference contains descriptions and examples of all string methods.\n\n\n\n\nTest Yourself With Exercises\n\nExercise:\nFill in the missing part to create a greeting variable of type String and assign it the value Hello.\n\n\n greeting = ;\n\n\n\nSubmit Answer »\nStart the Exercise\n\n\n\n\n\n\n\n❮ Previous\nNext ❯\n\n\n\n', 'If you add two numbers, the result will be a number:If you add two strings, the result will be a string concatenation:If you add a number and a string, the result will be a string concatenation:']","['', '', '', '', '', '']",[''],"['Escape character|||Result|||Description|||&&&\\\'|||\'|||Single quote|||&&&\\""|||""|||Double quote|||&&&\\\\|||\\|||Backslash|||&&&', 'Code|||Result|||Try it|||&&&\\n|||New Line|||Try it »|||&&&\\r|||Carriage Return|||Try it »|||&&&\\t|||Tab|||Try it »|||&&&\\b|||Backspace|||Try it »|||&&&\\f|||Form Feed||||||&&&']",[]
java||Math,https://www.w3schools.com/java/java_math.asp,The Java Math class has many methods that allows you to perform mathematical tasks on numbers.,[''],"['The Math.max(x,y) method can be used to find the highest value of x and\ny:', 'The Math.min(x,y) method can be used to find the lowest value of x \nand y:', 'The Math.sqrt(x) method returns the square root of x:', 'The Math.abs(x) method returns the absolute (positive) value of x:', 'Math.random() returns a random number between 0.0 (inclusive), and 1.0 (exclusive):To get more control over the random number, e.g. you only want a random \nnumber between 0 and 100, you can use the following formula:']",[''],[''],[],[]
java||Booleans,https://www.w3schools.com/java/java_booleans.asp,,"['Java Booleans', 'Boolean Values', 'Boolean Expression']","['Very often, in programming, you will need a data type that can only have one of two values, like:For this, Java has a boolean data type, which can take the values true or false.', 'A boolean type is declared with the boolean keyword and can only take the values true or false:However, it is more common to return boolean values from boolean expressions, for conditional testing\n(see below).', 'A Boolean expression is a Java expression that returns a Boolean value: true or false.You can use a comparison operator, such as the greater than (>) operator to find out if an expression (or a variable) is true:Or even easier:In the examples below, we use the equal to (==) operator to evaluate an expression:']","['', '', '']",['Java Booleans###&&&|||YES / NO|||ON / OFF|||TRUE / FALSE|||'],[],[]
java||If ... Else,https://www.w3schools.com/java/java_conditions.asp,,"['Java Conditions and If Statements', 'The if Statement', 'The else Statement', 'The else if Statement', 'Short Hand If...Else (Ternary Operator)']","['Java supports the usual logical conditions from mathematics:You can use these conditions to perform different actions for different decisions.Java has the following conditional statements:', 'Use the if statement to specify a block of Java code to be executed if a condition is true.In the example below, we test two values to find out if 20 is greater than \n18. If the condition is true, print some text:We can also test variables:In the example above we use two variables, x and y, \nto test whether x is greater than y \n(using the > operator). As x is 20, and y is 18, and we know that 20 is greater than 18, we print to the screen that ""x is greater than y"".', 'Use the else statement to specify a block of code to be executed if the condition is false.In the example above, time (20) is greater than 18, so the condition is false. \nBecause of this, we move on to the else condition and print to the screen ""Good \nevening"". If the time was less than 18, the program would print ""Good day"".', 'Use the else if statement to specify a new condition if the first condition is false.In the example above, time (22) is greater than 10, so the first condition is false. The next condition, in the  \nelse if statement, is also false, so we move on to the else\ncondition since condition1 and condition2 is both false - and print to the screen ""Good \nevening"".However, if the time was 14, our program would print ""Good day.""', 'There is also a short-hand if else, which is known as the ternary \noperator because it consists of three operands. It can be used to \nreplace multiple lines of code with a single line. It is often used to replace \nsimple if else statements:Instead of writing:You can simply write:']","['', '', '', '', '']","['Java Conditions and If Statements###Java Conditions and If Statements###&&&|||Less than: a < b|||Less than or equal to: a <= b|||Greater than: a > b|||Greater than or equal to: a >= b|||Equal to a == b|||Not Equal to: a != b|||&&&|||Use if to specify a block of code to be executed, if a specified condition is true|||Use else to specify a block of code to be executed, if the same condition is false|||Use else if to specify a new condition to test, if the first condition is false|||Use switch to specify many alternative blocks of code to be executed|||']",[],[]
java||Switch,https://www.w3schools.com/java/java_switch.asp,,"['Java Switch Statements', 'The break Keyword', 'The default Keyword']","['Use the switch statement to select one of many code blocks to be executed.This is how it works:The example below uses the weekday number to calculate the weekday name:', ""When Java reaches a break \nkeyword, it breaks out of the switch block.This will stop the execution of more code and case testing inside \nthe block.When a match is found, and the job is done, it's time for a break. There is no need for more testing."", 'The default keyword specifies some code to run if there is no \ncase match:']","['', '', '']","['Java Switch Statements###&&&|||The switch expression is evaluated once.|||The value of the expression is compared with the values of each case.|||If there is a match, the associated block of code is executed.|||The break and default keywords are optional, and will be described later in this chapter|||']",[],[]
java||While Loop,https://www.w3schools.com/java/java_while_loop.asp,,"['Loops', 'Java While Loop', 'The Do/While Loop']","['Loops can execute a block of code as long as a specified condition is reached.Loops are handy because they save time, reduce errors, and they make code more readable.', 'The while loop loops through a block of code as long as a specified condition is true:In the example below, the code in the loop will run, over and over again, as long as \na variable (i) is less than 5:', 'The do/while loop is a variant of the while loop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true.The example below uses a do/while loop. The loop will always be \nexecuted at least once, even if the condition is false, because the code block \nis executed before the condition is tested:']","['', '', '']",[''],[],[]
java||For Loop,https://www.w3schools.com/java/java_for_loop.asp,,"['Java For Loop', 'Another Example', 'For-Each Loop']","['When you know exactly how many times you want to loop through a block of \ncode, use the for loop instead of a while loop:Statement 1 is executed (one time) before the execution of the code block.Statement 2 defines the condition for executing the code block.Statement 3 is executed (every time) after the code block has been executed.The example below will print the numbers 0 to 4:Statement 1 sets a variable before the loop starts (int i = 0).Statement 2 defines the condition for the loop to run (i must be less than \n5). If the condition is true, the loop will start over again, if it is false, \nthe loop will end.Statement 3 increases a value (i++) each time the code block in the loop has \nbeen executed.', 'This example will only print even values between 0 and 10:', 'There is also a ""for-each"" loop, which is used exclusively to loop through elements in an array:The following example outputs all elements in the cars \narray, using a ""for-each"" loop:']","['', '', '']",[''],[],[]
java||Break and Continue,https://www.w3schools.com/java/java_break.asp,,"['Java Break', 'Java Continue', 'Break and Continue in While Loop']","['You have already seen the break statement used in an earlier chapter of this tutorial. It was used to ""jump out"" of a switch statement.The break statement can also be used to jump out of a \nloop.This example stops the loop when i is equal to 4:', 'The continue statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.This example skips the value of 4:', 'You can also use break and continue in while loops:']","['', '', '']",[''],[],[]
java||Arrays,https://www.w3schools.com/java/java_arrays.asp,,"['Java Arrays', 'Access the Elements of an Array', 'Change an Array Element', 'Array Length', 'Loop Through an Array', 'Loop Through an Array with For-Each', 'Multidimensional Arrays']","['Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each \nvalue.To declare an array, define the variable type with square brackets:We have now declared a variable that holds an array of strings. To insert \nvalues to it, we can use an array literal - place the values in a \ncomma-separated list, inside curly braces:To create an array of integers, you could write:', 'You access an array element by referring to the index number.This statement accesses the value of the first element in cars:', 'To change the value of a specific element, refer to the index number:', ' \nTo find out how many elements an array has, use the length property:', 'You can loop through the array elements with the for loop, and use the length \nproperty to specify how many times the loop should run.The following example outputs all elements in the cars \narray:', 'There is also a ""for-each"" loop, which is used exclusively to loop through elements in arrays:The following example outputs all elements in the cars \narray, using a ""for-each"" loop:The example above can be read like this: for each String element (called \ni - as in \nindex) in cars, print out the value of i.If you compare the for loop and for-each loop, you will see that the for-each method is easier to write, it \ndoes not require a counter (using the length property), and it is more readable.', 'A multidimensional array is an array of arrays.To create a two-dimensional array, add each array within its own set of \ncurly braces:myNumbers is now an array with two arrays as its elements.To access the elements of the myNumbers array, \nspecify two indexes: one for the array, and one for the element inside that array. \nThis example accesses the third element (2) in the second array (1) of \nmyNumbers:We can also use a for loop inside another for loop to get the elements of a two-dimensional array (we still have to point to the two indexes):']","['', '', '', '', '', '', '']",[''],[],[]
java||Methods,https://www.w3schools.com/java/java_methods.asp,A method is a block of code which only runs when it is called.,"['Create a Method', 'Call a Method']","['You can pass data, known as parameters, into a method.Methods are used to perform certain actions, and they are also known as functions.Why use methods? To reuse code: define the code once, and use \nit many times.', 'A method must be declared within a class. It is defined \nwith the name of the method, followed by parentheses (). Java provides some pre-defined methods, such as System.out.println(), but you can also create your own methods to perform certain actions:', ""To call a method in Java, write the method's name followed by two \nparentheses () and a semicolon;In the following example, myMethod() is used to print a text (the action), when it is called:A method can also be called multiple times:""]","['', '']",['Create a Method###&&&|||myMethod() is the name of the method|||static means that the method belongs to the |||Main class and not an object of the Main class. You will learn more about objects and how to access methods through objects later in this tutorial.|||void means that this method does not have a |||return value. You will learn more about return values later in this chapter|||'],[],[]
java||Method Parameters,https://www.w3schools.com/java/java_methods_param.asp,,"['Parameters and Arguments', 'Multiple Parameters', 'Return Values', 'A Method with If...Else']","['Information can be passed to methods as parameter. Parameters act as variables inside the method.Parameters are specified after the method name, inside the parentheses.\nYou can add as many parameters as you want, just separate them with a comma.\nThe following example has a \nmethod that takes a String called fname as parameter.\nWhen the method is called, we pass along a first name,\nwhich is used inside the method to print the full name:\n', 'You can have as many parameters as you like:', ""The void keyword, used in the examples above, indicates that the method should not return a value. If you \nwant the method to return a value, you can use a primitive data type (such as int, \nchar, etc.) instead of void, and use the return \nkeyword inside the method:This example returns the sum of a method's two parameters:You can also store the result in a variable (recommended, as it is easier to read and maintain):"", 'It is common to use if...else statements inside methods:']","['', '', '', '']",[''],[],[]
java||Method Overloading,https://www.w3schools.com/java/java_methods_overloading.asp,,['Method Overloading'],"['With method overloading, multiple methods can have the same name with different\nparameters:Consider the following example, which has two methods that add numbers of different type:Instead of defining two methods that should do the same thing, it is better to overload one. In the example below, we overload the plusMethod \nmethod to work for both int \nand double:']",[''],[''],[],[]
java||Scope,https://www.w3schools.com/java/java_scope.asp,,"['Java Scope', 'Method Scope', 'Block Scope']","['In Java, variables are only accessible inside the region they are created. This is called\nscope.', 'Variables declared directly inside a method are available anywhere in the method following the line of code in which they were declared:', 'A block of code refers to all of the code between curly braces {}. Variables\ndeclared inside blocks of code are only accessible by the code between the curly braces, which follows the line in which the variable was declared:']","['', '', '']",[''],[],[]
java||Recursion,https://www.w3schools.com/java/java_recursion.asp,,"['Java Recursion', 'Recursion Example', 'Halting Condition']","['Recursion is the technique of making a function call itself. This technique provides a way\nto break complicated problems down into simple problems which are easier to solve.Recursion may be a bit difficult to understand. The\nbest way to figure out how it works is to experiment with it.', 'Adding two numbers together is easy to do, but adding a range of numbers is more\ncomplicated. In the following example, recursion is used to add a range of numbers\ntogether by breaking it down into the simple task of adding two numbers:When the sum() function is called, it adds parameter k to the sum of all numbers smaller\nthan k and returns the result. When k becomes 0, the function just returns 0. When\nrunning, the program follows these steps:Since the function does not call itself when k is 0, the program stops there and returns the\nresult.', 'Just as loops can run into the problem of infinite looping, recursive functions can run into\nthe problem of infinite recursion. Infinite recursion is when the function never stops calling\nitself. Every recursive function should have a halting condition, which is the condition\nwhere the function stops calling itself. In the previous example, the halting condition is\nwhen the parameter k becomes 0.It is helpful to see a variety of different examples to better understand the concept. In this\nexample, the function adds a range of numbers between a start and an end. The halting\ncondition for this recursive function is when end is not greater than start:']","['', '', '']",[''],[],[]
java||OOP,https://www.w3schools.com/java/java_oop.asp,,"['Java - What is OOP?', 'Java - What are Classes and Objects?']","['OOP stands for Object-Oriented Programming.Procedural programming is about writing procedures or methods that perform \noperations on the data, while object-oriented programming is about \ncreating objects that contain both data and methods.Object-oriented programming has several advantages over procedural \nprogramming:Tip: The ""Don\'t Repeat Yourself"" (DRY) principle is about \nreducing the repetition of code. You should extract out the codes that are \ncommon for the application, and place them at a single place and reuse them \ninstead of repeating it.', 'Classes and objects are the two main aspects of object-oriented programming.Look at the following illustration to see the difference between class and \nobjects:Another example:So, a class is a template for objects, and an object is an instance of a class.When the individual objects are created, they inherit all the \nvariables and methods from the class.You will learn much more about classes and objects in the next chapter.']","['', '']","['Java - What is OOP?###&&&|||OOP is faster and easier to execute|||OOP provides a clear structure for the programs|||OOP helps to keep the Java code DRY ""Don\'t Repeat Yourself"", and makes |||  the |||  code easier to maintain, modify and debug|||OOP makes it possible to create full reusable |||  applications with less code and shorter development time|||']",[],[]
java||Classes and Objects,https://www.w3schools.com/java/java_classes.asp,,"['Java Classes/Objects', 'Create a Class', 'Create an Object', 'Multiple Objects', 'Using Multiple Classes']","['Java is an object-oriented programming language.Everything in Java is associated with classes and objects, along with its attributes and \nmethods. For example: in real life, a car is an object. The car has attributes, such as weight and color, and \nmethods, such as drive and brake. A Class is like an object constructor, or a ""blueprint"" for creating objects.', 'To create a class, use the keyword class:', 'In Java, an object is created from a class. We have already created the class named \nMain, \nso now we can use this to create objects.To create an object of Main, \nspecify the class name, followed by the object name, and use the keyword new:', 'You can create multiple objects of one class:', 'You can also create an object of a class and access it in another class. This \nis often used for better organization of classes (one class has all the \nattributes and methods, while the other class holds the main() method (code to \nbe executed)). Remember that the name of the java file should match the class name. In this \nexample, we have created two files in the same directory/folder:When both files have been compiled:Run the Second.java file:And the output will be:']","['\nC:\\Users\\Your Name>javac Main.java\nC:\\Users\\Your Name>javac Second.java\n', '\nC:\\Users\\Your Name>java Second\n', '\n5', '', '']",['Using Multiple Classes###&&&|||Main.java|||Second.java|||'],[],[]
java||Class Attributes,https://www.w3schools.com/java/java_class_attributes.asp,,"['Java Class Attributes', 'Accessing Attributes', 'Modify Attributes', 'Multiple Objects', 'Multiple Attributes']","['In the previous chapter, we used the term ""variable"" for x in the example (as shown below). It is actually an \nattribute of the class. Or you could say that class attributes are variables within a class:', 'You can access attributes by creating an object of the class, and by using the dot syntax (.):The following example will create an object of the Main class, with the \nname myObj. We use the x \nattribute on the object to print its value:', ""You can also modify attribute values:Or override existing values:If you don't want the ability to override existing values, declare the attribute as final:"", 'If you create multiple objects of one class, you can change the attribute values in one object, without affecting the attribute values in the other:', 'You can specify as many attributes as you want:']","['', '', '', '', '']",[''],[],[]
java||Class Methods,https://www.w3schools.com/java/java_class_methods.asp,,"['Java Class Methods', 'Static vs. Non-Static', 'Access Methods With an Object', 'Using Multiple Classes']","[""You learned from the Java Methods chapter that methods are declared within a \nclass, and that they are used to perform certain actions:myMethod() prints a text (the action), when it is \ncalled. To \ncall a method, write the method's name followed by two parentheses () and a semicolon;"", 'You will often see Java programs that have either static or public \nattributes and methods.In the example above, we created a static \nmethod, which means that it can be accessed without creating an object of the class, \nunlike public, which can only be accessed by \nobjects:', '1) We created a custom Main class with the class keyword.2) We created the fullThrottle() and \nspeed() \nmethods in the Main class.3) The fullThrottle() method and the \nspeed() \nmethod will print out some text, when they are called.4) The speed() \nmethod accepts an int parameter called \nmaxSpeed - we \nwill use this in 8).5) In order to use the Main class and its \nmethods, we need to create an object of the \nMain Class.6) Then, go to the main() method, which you know by now is a built-in \nJava method that runs your program (any code inside main is executed).7) By using the new keyword we created an object with the name\nmyCar.8) Then, we call the fullThrottle() and \nspeed() \nmethods on the \nmyCar object, and run the program using the name of the object (myCar), followed by a dot (.), followed by the name of the method (fullThrottle(); and \nspeed(200);). \nNotice that we add an int parameter of 200 inside the \nspeed() method.', 'Like we specified in the Classes chapter, it is \na good practice to create an object of a class and access it in another class.Remember that the name of the java file should match the class name. In this \nexample, we have created two files in the same directory:When both files have been compiled:Run the Second.java file:And the output will be:']","['', '', '', '']",['Using Multiple Classes###&&&|||Main.java|||Second.java|||'],[],[]
java||Constructors,https://www.w3schools.com/java/java_constructors.asp,,"['Java Constructors', 'Constructor Parameters']","['A constructor in Java is a special method that is used to initialize objects. \nThe constructor is called when an object of a class is created. It can be used to \nset initial values for object attributes:', 'Constructors can also take parameters, which is used to initialize \nattributes.The following example adds an int y parameter \nto the constructor. \nInside the constructor we set x to y (x=y). When we call \nthe constructor, we pass a parameter to the constructor (5), which will set the value of \nx to 5:You can have as many parameters as you want:']","['', '']",[''],[],[]
java||Modifiers,https://www.w3schools.com/java/java_modifiers.asp,,"['Modifiers', 'Access Modifiers', 'Non-Access Modifiers', 'Final', 'Static', 'Abstract']","['By now, you are quite familiar with the public keyword that appears in almost \nall of our examples:The public keyword is an access modifier, \nmeaning that it is used to set the access level for classes, attributes, methods and \nconstructors.We divide modifiers into two groups:', 'For classes, you can use either public or default:For attributes, methods and constructors, you can use the one of the \nfollowing:', 'For classes, you can use either final or abstract:For attributes and methods, you can use the one of the \nfollowing:', ""If you don't want the ability to override existing attribute values, declare \nattributes as final:"", 'A static method means that it can be \naccessed without creating an object of the class, unlike public:', 'An abstract method belongs to an abstract class, and it does not have a body. \nThe body is provided by the subclass:']","['', '', '', '', '', '']","['Modifiers###&&&|||Access Modifiers - controls the access level|||Non-Access Modifiers - do not control access level, but provides other functionality|||']","[""Modifier|||Description|||Try it|||&&&public|||The class is accessible by any other class|||Try it »|||&&&default|||The class is only accessible by \nclasses in the same package. This is used when you don't specify a modifier. You will learn more about packages in the Packages chapter|||Try it »|||&&&"", ""Modifier|||Description|||Try it|||&&&public|||The code is accessible for all classes|||Try it »|||&&&private|||The code is only accessible within the declared class|||Try it »|||&&&default|||The code is only accessible in the same package. This is used when you don't specify a modifier. You will learn more about packages in the Packages chapter|||Try it »|||&&&protected|||The code is accessible in the same package and subclasses. You will learn more about subclasses and \nsuperclasses in the Inheritance chapter|||Try it »|||&&&"", 'Modifier|||Description|||Try it|||&&&final|||The class cannot be inherited by other classes (You will learn more about inheritance in the Inheritance chapter)|||Try it »|||&&&abstract|||The class cannot be used to create objects (To access an abstract class, it must be inherited from another class. You will learn more about inheritance and abstraction in the Inheritance and Abstraction chapters)|||Try it »|||&&&', 'Modifier|||Description|||&&&final|||Attributes and methods cannot be overridden/modified|||&&&static|||Attributes and methods belongs to the class, rather than an object|||&&&abstract|||Can only be used in an abstract class, and can only be used on methods. The method does not have a body, for example \nabstract void run();. The body is provided by the \nsubclass (inherited from). You will learn more about inheritance and abstraction in the Inheritance and Abstraction chapters|||&&&transient|||Attributes and methods are skipped when serializing the object containing them|||&&&synchronized|||Methods can only be accessed by one thread at a time|||&&&volatile|||The value of an attribute is not cached thread-locally, and is always read from the ""main memory""|||&&&']",[]
java||Encapsulation,https://www.w3schools.com/java/java_encapsulation.asp,,['Encapsulation'],"['The meaning of Encapsulation, is to make sure that ""sensitive"" data is hidden \nfrom users. To achieve this, you must:\n\ndeclare class variables/attributes as private\nprovide public get \nand set methods to access and update the value of a private \nvariable\n\n\nGet and Set\nYou learned from the previous chapter that private variables can only be \naccessed within the same class (an outside class has no access to it). However, \nit is possible to access them if we provide public get and set methods.\nThe get method returns the variable value, and the set method sets the value.\nSyntax for both is that they start with either get or set, followed by the \nname of the variable, with the first letter in upper case:\n\nExample\npublic class Person {\n\xa0 private String name; // private = restricted access\n\n\xa0 // Getter\n\xa0 public String getName() {\n\xa0\xa0\xa0 return name;\n\xa0 }\n\n\xa0 // Setter\n\xa0 public void setName(String newName) {\n\xa0\xa0\xa0 this.name = newName;\n\xa0 }\n}\n\n\nExample explained\nThe get method returns the value of the variable name.\nThe set method takes a parameter (newName) and assigns it to the\nname variable. The this keyword is used to refer to the current \nobject.\nHowever, as the name variable is declared as private, we \ncannot access it from outside this class:\n\nExample\npublic class Main {\n\xa0 public static void main(String[] args) {\n\xa0\xa0\xa0 Person myObj = new Person();\n\xa0\xa0\xa0 myObj.name = ""John"";\xa0 // error\n\xa0\xa0\xa0 System.out.println(myObj.name); // error\xa0\n\xa0 }\n}\n\n\nRun Example »\n\n\nIf the variable was declared as public, we would expect the following output:\n\n\n\nJohn\n\n\n\nHowever, as we try to access a private variable, we get an error:\n\n\n\nMyClass.java:4: error: name has private access in Person\n\xa0\xa0\xa0\xa0myObj.name = ""John"";\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0^\nMyClass.java:5: error: name has private access in Person\n\xa0\xa0\xa0\xa0System.out.println(myObj.name);\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0^\n2 errors\n\n\n\nInstead, we use the getName() and setName() methods to access and update the variable:\n\nExample\npublic class Main {\n\xa0 public static void main(String[] args) {\n\xa0\xa0\xa0 Person myObj = new Person();\n\xa0\xa0\xa0 myObj.setName(""John""); // Set the value of the name variable to ""John""\n\xa0\xa0\xa0 System.out.println(myObj.getName());\n\xa0 }\n}\n\n// Outputs ""John""\n\n\nTry it Yourself »\n\n\n\nWhy Encapsulation?\n\nBetter control of class attributes and methods\nClass attributes can be made read-only (if you only use the get method), or write-only (if you only use the set method)\nFlexible: the programmer can change one part of the code without affecting other parts\nIncreased security of data\n\n\n\n❮ Previous\nNext ❯\n\n\n\n', 'You learned from the previous chapter that private variables can only be \naccessed within the same class (an outside class has no access to it). However, \nit is possible to access them if we provide public get and set methods.The get method returns the variable value, and the set method sets the value.Syntax for both is that they start with either get or set, followed by the \nname of the variable, with the first letter in upper case:The get method returns the value of the variable name.The set method takes a parameter (newName) and assigns it to the\nname variable. The this keyword is used to refer to the current \nobject.However, as the name variable is declared as private, we \ncannot access it from outside this class:If the variable was declared as public, we would expect the following output:However, as we try to access a private variable, we get an error:Instead, we use the getName() and setName() methods to access and update the variable:']",[''],[''],[],[]
java||Packages,https://www.w3schools.com/java/java_packages.asp,,"['Java Packages & API', 'Built-in Packages', 'Import a Class', 'Import a Package', 'User-defined Packages']","['A package in Java is used to group related classes. Think of it as\na folder in a file directory. We use packages to avoid name conflicts, and \nto write a better maintainable code. Packages are divided into two categories:', 'The Java API is a library of prewritten classes, that are free to use, included in the\nJava Development Environment.The library contains components for managing input, database programming, and much much \nmore. The complete list can be found at Oracles website: https://docs.oracle.com/javase/8/docs/api/.The library is divided into packages and classes. \nMeaning you can either import a single class (along with its methods and \nattributes), or a whole package that contain \nall the classes that belong to the specified package.To use a class or a package from the library, you need to use the import \nkeyword:', 'If you find a class you want to use, for example, the Scanner class, which is used to get \nuser input, write the following code:In the example above, java.util is a package, while Scanner is a class of \nthe java.util package.To use the Scanner class, create an object of the class and use any of the available methods found in the Scanner class documentation. \nIn our example, we will use the nextLine() method, which is used to read a \ncomplete line:', 'There are many packages to choose from. In the previous example, we used the Scanner class from the java.util package. This package also contains date and time \nfacilities, random-number generator and other utility classes.To import a whole package, end the sentence with an asterisk sign (*). \nThe following example \nwill import ALL the classes in the java.util package:', 'To create your own package, you need to understand that Java uses a file system directory to store them. Just like folders on your computer:To create a package, use the package keyword:Save the file as MyPackageClass.java, and compile it:Then compile the package:When we compiled the package in the example above, a new folder was created, called ""mypack"".To run the MyPackageClass.java file, write the following:The output will be:']","['', '', '', '', '']",['Java Packages & API###&&&|||Built-in Packages (packages from the Java API)|||User-defined Packages (create your own packages)|||'],[],[]
java||Inheritance,https://www.w3schools.com/java/java_inheritance.asp,,"['Java Inheritance (Subclass and Superclass)', 'The final Keyword']","['In Java, it is possible to inherit attributes and methods from one class to another. We group the ""inheritance concept"" into two categories:To inherit from a class, use the extends \nkeyword.In the example below, the Car class \n(subclass) inherits the attributes and methods from the Vehicle class \n(superclass):', ""If you don't want other classes to inherit from a class, use the final keyword:""]","['', '']",['Java Inheritance (Subclass and Superclass)###&&&|||subclass (child) - the class that inherits from another class|||superclass (parent) - the class being inherited from|||'],[],[]
java||Polymorphism,https://www.w3schools.com/java/java_polymorphism.asp,,['Java Polymorphism'],"['Polymorphism means ""many forms"", and it occurs when we have many classes that are related to each other by inheritance.Like we specified in the previous chapter; \nInheritance lets us \ninherit attributes and methods from another class. Polymorphism \nuses those methods to perform different tasks. This allows us to perform a single \naction in different ways.For example, think of a superclass called Animal that has a method called animalSound(). Subclasses of Animals could be Pigs, Cats, Dogs, Birds - And they also have their own implementation of an animal sound (the pig oinks, and the cat meows, etc.):Now we can create Pig and \nDog objects and call the animalSound() method on both of them:']",[''],[''],[],[]
java||Inner Classes,https://www.w3schools.com/java/java_inner_classes.asp,,"['Java Inner Classes', 'Private Inner Class', 'Static Inner Class', 'Access Outer Class From Inner Class']","['In Java, it is also possible to nest classes (a class within a class). The purpose \nof nested classes is to group classes that belong together, which makes your code more readable and maintainable.To access the inner class, create an object of the outer class, and then create an object of the inner class:', 'Unlike a ""regular"" class, an inner class can be private or protected. \nIf you don\'t want outside objects to access the inner class, declare \nthe class as private:', 'An inner class can also be static, which means that you can access it without \ncreating an object of the outer class:', 'One advantage of inner classes, is that they can access attributes and methods of the outer class:']","['\n\n  Main.java:13: error: OuterClass.InnerClass has private access in OuterClass\n\xa0\xa0\xa0\xa0OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0^\n\n', '', '', '']",[''],[],[]
java||Abstraction,https://www.w3schools.com/java/java_abstract.asp,,['Abstract Classes and Methods'],"['Data abstraction is the process of hiding certain details and showing only essential information to the user.\nAbstraction can be achieved with either abstract classes or \ninterfaces (which you will learn more about in the next chapter).The abstract keyword is a non-access modifier, used for classes and methods:\nAbstract class: is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).\nAbstract method: can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).\n\nAn abstract class can have both abstract and regular methods:\n\nabstract class Animal {\n\xa0 public abstract void animalSound();\n\xa0 public void sleep() {\n\xa0\xa0\xa0 System.out.println(""Zzz"");\n\xa0 }\n}\n\n\nFrom the example above, it is not possible to create an object of the Animal class:\n\nAnimal myObj = new Animal(); // will generate an error\n\n\nTo access the abstract class, it must be inherited from another class. Let\'s convert the Animal class we used in the Polymorphism chapter to an abstract class:\n\nRemember from the Inheritance chapter that we use the extends keyword to inherit from a class.\n\n\nExample\n// Abstract class\nabstract class Animal {\n\xa0 // Abstract method (does not have a body)\n\xa0 public abstract void animalSound();\n\xa0 // Regular method\n\xa0 public void sleep() {\n\xa0\xa0\xa0 System.out.println(""Zzz"");\n\xa0 }\n}\n\n// Subclass (inherit from Animal)\nclass Pig extends Animal {\n\xa0 public void animalSound() {\n\xa0\xa0\xa0 // The body of animalSound() is provided here\n\xa0\xa0\xa0 System.out.println(""The pig says: wee wee"");\n\xa0 }\n}\n\nclass Main {\n\xa0 public static void main(String[] args) {\n\xa0\xa0\xa0 Pig myPig = new Pig(); // Create a Pig object\n\xa0\xa0\xa0 myPig.animalSound();\n\xa0\xa0\xa0 myPig.sleep();\n\xa0 }\n}\n\n\nTry it Yourself »\n\n\n\nWhy And When To Use Abstract Classes and Methods?\nTo achieve security - hide certain details and only show the important \ndetails of an object.\nNote: Abstraction can also be achieved with Interfaces, which you will learn more about in the next chapter.\n\n\n\n❮ Previous\nNext ❯\n\n\n\n']",[''],[''],[],[]
java||Interface,https://www.w3schools.com/java/java_interface.asp,,"['Interfaces', 'Multiple Interfaces ']","['Another way to achieve abstraction in Java, is with interfaces.An interface is a completely ""abstract class"" \nthat is used to group related methods with empty bodies:To access the interface methods, the interface must be ""implemented"" \n(kinda like inherited) by another class with the implements \nkeyword (instead of extends). The body of the \ninterface method is provided by the ""implement"" class:', 'To implement multiple interfaces, separate them with a comma:']","['', '']",[''],[],[]
java||Enums,https://www.w3schools.com/java/java_enums.asp,,"['Enums', 'Enum inside a Class', 'Enum in a Switch Statement', 'Loop Through an Enum']","['An enum is a special ""class"" that represents a group of \nconstants (unchangeable variables, like final variables).To create an enum, use the enum keyword (instead of class or interface), and separate \nthe constants with a comma. Note that they should be in uppercase letters:', 'You can also have an enum inside a class:', 'Enums are often used in switch statements to check for corresponding values:', 'The enum type has a values() method, which returns an array of all enum constants. This method is useful when you want to loop through the constants of an enum:']","['\n  Level myVar = Level.MEDIUM;', '\n\nMEDIUM\n\n', '\n\nMedium level\n\n', '']",[''],[],[]
java||User Input (Scanner),https://www.w3schools.com/java/java_user_input.asp,,"['Java User Input', 'Input Types']","['The Scanner class is used to get \nuser input, and it is found in the java.util package.To use the Scanner class, create an object of the class and use any of the available methods found in the Scanner class documentation. \nIn our example, we will use the nextLine() method, which is used to read Strings:', 'In the example above, we used the nextLine() method, which is used to read Strings. To read other types, look at the table below:In the example below, we use different methods to read data of various types:']","['', '']",[''],['Method|||Description|||&&&nextBoolean()|||Reads a boolean value from the user|||&&&nextByte()|||Reads a byte value from the user|||&&&nextDouble()|||Reads a double value from the user|||&&&nextFloat()|||Reads a float value from the user|||&&&nextInt()|||Reads a int value from the user|||&&&nextLine()|||Reads a String value from the user|||&&&nextLong()|||Reads a long value from the user|||&&&nextShort()|||Reads a short value from the user|||&&&'],[]
java||Date and Time,https://www.w3schools.com/java/java_date.asp,,"['Java Dates', 'Display Current Date', 'Display Current Time', 'Display Current Date and Time', 'Formatting Date and Time']","['Java does not have a built-in Date class, but we can import the java.time \npackage to work with the date and time API. The package includes many date and time classes. \nFor example:', 'To display the current date, import the java.time.LocalDate class, and use its now() method:', 'To display the current time (hour, minute, second, and nanoseconds), import the java.time.LocalTime class, and use its now() method:', 'To display the current date and time, import the java.time.LocalDateTime class, and use its now() method:', 'The ""T"" in the example above is used to separate the date from the time. You can use the DateTimeFormatter class \nwith the ofPattern() method in the same package to format or parse date-time objects. \nThe following example will remove both the ""T"" and nanoseconds from the date-time:The ofPattern() method accepts all sorts of values, if you want to display \nthe date and time in a different format. For example:']","['\n\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = ""0"" + m\n\nvar day = d.getDate();\nif (day < 10) day = ""0"" + day;\n\nvar x = d.getFullYear() + ""-"" + m + ""-"" + day;\ndocument.write(x);\n\n\n', '\n\n\nvar d = new Date();\n\nvar h = d.getHours();\nif (h < 10) h = ""0"" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = ""0"" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = ""0"" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = ""0"" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = ""0"" + ex;\n}\n\nvar x =h + "":"" + n + "":"" + s + ""."" + ms + ex\ndocument.write(x);\n\n\n', '\n\n\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = ""0"" + m\n\nvar day = d.getDate();\nif (day < 10) day = ""0"" + day;\n\nvar h = d.getHours();\nif (h < 10) h = ""0"" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = ""0"" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = ""0"" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = ""0"" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = ""0"" + ex;\n}\n\nvar x = d.getFullYear() + ""-"" + m + ""-"" + day + ""T"" + h + "":"" + n + "":"" + s + ""."" + ms + ex\ndocument.write(x);\n\n\n', '', '']",[''],"['Class|||Description|||&&&LocalDate|||Represents a date (year, month, day (yyyy-MM-dd))|||&&&LocalTime|||Represents a time (hour, minute, second and nanoseconds (HH-mm-ss-ns))|||&&&LocalDateTime|||Represents both a date and a time (yyyy-MM-dd-HH-mm-ss-ns)|||&&&DateTimeFormatter|||Formatter for displaying and parsing date-time objects|||&&&', 'Value|||Example|||Tryit|||&&&yyyy-MM-dd|||""1988-09-29""|||Try it »|||&&&dd/MM/yyyy|||""29/09/1988""|||Try it »|||&&&dd-MMM-yyyy|||""29-Sep-1988""|||Try it »|||&&&E, MMM dd yyyy|||""Thu, Sep 29 1988""|||Try it »|||&&&']",[]
java||ArrayList,https://www.w3schools.com/java/java_arraylist.asp,,"['Java ArrayList', 'Add Items', 'Access an Item', 'Change an Item', 'Remove an Item', 'ArrayList Size', 'Loop Through an ArrayList', 'Other Types', 'Sort an ArrayList']","['The ArrayList class is a resizable array, which can be found in the java.util package.The difference between a built-in array and an ArrayList in Java, is that the size of an array cannot be modified (if you want to \nadd or remove elements to/from an array, you have to create a new one). While elements can be added and removed from an ArrayList whenever you want. The syntax is also slightly different:', 'The ArrayList class has many useful methods. For example, to add elements to the ArrayList, use the add() method:', 'To access an element in the ArrayList, use the get() method and refer to the index number:', 'To modify an element, use the set() method \nand refer to the index number:', 'To remove an element, use the remove() method \nand refer to the index number:To remove all the elements in the ArrayList, use the clear() method:', 'To find out how many elements an ArrayList have, use the size method:', 'Loop through the elements of an ArrayList with a for loop, and use the \nsize() method to specify how many times the loop should run:You can also loop through an ArrayList with the for-each loop:', 'Elements in an ArrayList are actually objects. In the examples above, we created elements \n(objects) of type ""String"". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent wrapper class: Integer. For other primitive types, \nuse: Boolean for boolean, Character for char, Double for double, \netc:', 'Another useful class in the java.util package is the Collections class, which include the sort() method for sorting lists \nalphabetically or numerically:']","['', '', '', '', '', '', '', '', '']",[''],[],[]
java||LinkedList,https://www.w3schools.com/java/java_linkedlist.asp,,"['Java LinkedList', 'ArrayList vs. LinkedList', 'LinkedList Methods']","['In the previous chapter, you learned about the ArrayList class. The LinkedList class is \nalmost identical to the \nArrayList:', 'The LinkedList class is a collection which can contain many objects of the same type,\njust like the ArrayList.The LinkedList class has all of the same methods as the ArrayList class because\nthey both implement the List interface. This means that you can add items, change\nitems, remove items and clear the list in the same way.However, while the ArrayList class and the LinkedList class can be used in the same way,\nthey are built very differently.The ArrayList class has a regular array inside it. When an element is added, it is placed\ninto the array. If the array is not big enough, a new, larger array is created to replace the\nold one and the old one is removed.The LinkedList stores its items in ""containers."" The list has a link to the first container\nand each container has a link to the next container in the list. To add an element to the list,\nthe element is placed into a new container and that container is linked to one of the other\ncontainers in the list.', 'For many cases, the ArrayList is more efficient as it is common to need access to\nrandom items in the list, but the LinkedList provides several methods to do certain\noperations more efficiently:']","['', '', '']",[''],['Method|||Description|||Try it|||&&&addFirst()|||Adds an item to the beginning of the list.|||Try it »|||&&&addLast()|||Add an item to the end of the list|||Try it »|||&&&removeFirst()|||Remove an item from the beginning of the list.|||Try it »|||&&&removeLast()|||Remove an item from the end of the list|||Try it »|||&&&getFirst()|||Get the item at the beginning of the list|||Try it »|||&&&getLast()|||Get the item at the end of the list|||Try it »|||&&&'],[]
java||HashMap,https://www.w3schools.com/java/java_hashmap.asp,,"['Java HashMap', 'Add Items', 'Access an Item', 'Remove an Item', 'HashMap Size', 'Loop Through a HashMap', 'Other Types']","['In the ArrayList chapter, you learned that Arrays store items as an ordered collection, and you have to access them with an index number (int type).\nA HashMap however, store items in ""key/value"" pairs, and you can access them by an index of another type (e.g. a String).One object is used as a key (index) to another \nobject (value). It can store different types: String keys and Integer values, or the \nsame type, like: String keys and String values:', 'The HashMap class has many useful methods. For example, to \nadd items to it, use the put() method:', 'To access a value in the HashMap, use the get() method and refer to \nits key:', 'To remove an item, use the remove() method \nand refer to the key:To remove all items, use the clear() method:', 'To find out how many items there are, use the size() method:', 'Loop through the items of a HashMap with a for-each loop.Note: Use the keySet() method if you only want the keys, and use the values() method if you only want the values:', 'Keys and values in a HashMap are actually objects. In the examples above, we used objects of type ""String"". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent wrapper class: Integer. For other primitive types, \nuse: Boolean for boolean, Character for char, Double for double, \netc:']","['', '', '', '', '', '', '']",[''],[],[]
java||HashSet,https://www.w3schools.com/java/java_hashset.asp,,"['Java HashSet', 'Add Items', 'Check If an Item Exists', 'Remove an Item', 'HashSet Size', 'Loop Through a HashSet', 'Other Types']","['A HashSet is a collection of items where every item is unique, and it is found in the java.util \npackage:', 'The HashSet class has many useful methods. For example, to \nadd items to it, use the add() method:Note: In the example above, even though BMW is added twice it only appears once in the set\nbecause every item in a set has to be unique.', 'To check whether an item exists in a HashSet, use the contains() method:', 'To remove an item, use the remove() method:To remove all items, use the clear() method:', 'To find out how many items there are, use the size method:', 'Loop through the items of an HashSet with a for-each loop:', 'Items in an HashSet are actually objects. In the examples above, we created \nitems \n(objects) of type ""String"". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent wrapper class: Integer. For other primitive types, \nuse: Boolean for boolean, Character for char, Double for double, \netc:']","['', '', '', '', '', '', '']",[''],[],[]
java||Iterator,https://www.w3schools.com/java/java_iterator.asp,,"['Java Iterator', 'Getting an Iterator', 'Looping Through a Collection', 'Removing Items from a Collection']","['An Iterator is an object that can be used to loop through collections, like ArrayList\nand HashSet. It is called an ""iterator"" because ""iterating"" is the technical term for looping.To use an Iterator, you must import it from the java.util package.', 'The iterator() method can be used to get an Iterator for any collection:', 'To loop through a collection, use the hasNext() and next() methods of the Iterator:', 'Iterators are designed to easily change the collections that they loop through. The remove() method can remove items from a collection while looping.']","['', '', '', '']",[''],[],[]
java||Wrapper Classes,https://www.w3schools.com/java/java_wrapper_classes.asp,,"['Java Wrapper Classes', 'Creating Wrapper Objects']","['Wrapper classes provide a way to use primitive data types (int, boolean, \netc..) as objects.The table below shows the primitive type and the equivalent wrapper class:Sometimes you must use wrapper classes, for example when working with Collection objects, such \nas ArrayList, where primitive types cannot be \nused (the list can only store objects):', 'To create a wrapper object, use the wrapper class instead of the primitive \ntype. To get the value, you can just print the object:', 'Since you\'re now working with objects, you can use certain methods to get \ninformation about the specific object.For example, the following methods are used to get the value associated with \nthe corresponding wrapper object: intValue(), byteValue(), shortValue(), longValue(), \nfloatValue(), doubleValue(), charValue(), \nbooleanValue().This example will output the same result as the example above:Another useful method is the toString() method, which is used to convert wrapper objects to strings.In the following example, we convert an Integer to a String, and use the length() method of the String class to output the length of the ""string"":']","['', '']",[''],['Primitive Data Type|||Wrapper Class|||&&&byte|||Byte|||&&&short|||Short|||&&&int|||Integer|||&&&long|||Long|||&&&float|||Float|||&&&double|||Double|||&&&boolean|||Boolean|||&&&char|||Character|||&&&'],[]
java||Try...Catch,https://www.w3schools.com/java/java_try_catch.asp,,"['Java Exceptions', 'Java try and catch', 'Finally', 'The throw keyword']","['When executing Java code, different errors can occur: coding errors made by the programmer, errors due to wrong input, \nor other unforeseeable things.When an error occurs, Java will normally stop and generate an error message. The technical term for this is: Java will throw an exception (throw an error).', 'The try statement allows you to define a block of code to be \ntested for errors while it is being executed.The catch statement allows you to define a block of code to \nbe executed, if an error occurs in the try block.The try and catch keywords \ncome in pairs:Consider the following example:If an error occurs, we can use try...catch to catch the error and execute some code to handle it:', 'The finally statement lets you execute code, after try...catch, regardless of the result:', 'The throw statement allows you to create a custom error.The throw statement is used together with an exception type. There are many exception types available in Java: ArithmeticException, \nFileNotFoundException, ArrayIndexOutOfBoundsException, SecurityException, etc:If age was 20, you would not get an exception:']","['\n\n  Exception in thread ""main"" java.lang.ArrayIndexOutOfBoundsException: 10\xa0\xa0\xa0\xa0\xa0\xa0\xa0 \n  at Main.main(Main.java:4)\n\n &&&&&& \n\nSomething went wrong.\n', ""\n\nSomething went wrong.\nThe 'try catch' is finished.\n\n"", '\n\nException in thread ""main"" java.lang.ArithmeticException: Access denied - You must be at least 18 years old.\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0at Main.checkAge(Main.java:4)\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0at Main.main(Main.java:12)\n\n &&&&&& \n\nAccess granted - You are old enough!\n\n', '']",[''],[],[]
java||Regular Expressions,https://www.w3schools.com/java/java_regex.asp,,"['What is a Regular Expression?', 'Flags', 'Regular Expression Patterns', 'Metacharacters', 'Quantifiers']","['A regular expression is a sequence of characters that forms a search pattern.\nWhen you search for data in a text, you can use this search pattern to describe what you\nare searching for.A regular expression can be a single character, or a more complicated pattern.Regular expressions can be used to perform all types of text search and text replace\noperations.Java does not have a built-in Regular Expression class, but we can import the java.util.regex \npackage to work with regular expressions. The package includes the following \nclasses:In this example, The word ""w3schools"" is being searched for in a sentence.First, the pattern is created using the Pattern.compile() method. The first parameter\nindicates which pattern is being searched for and the second parameter has a flag to\nindicates that the search should be case-insensitive. The second parameter is optional.The matcher() method is used to search for the pattern in a string. It returns a Matcher\nobject which contains information about the search that was performed.The find() method returns true if the pattern was found in the string and false if it was not\nfound.', 'Flags in the compile() method change how the search is performed. Here are a few of\nthem:', 'The first parameter of the Pattern.compile() method is the pattern. It describes what\nis being searched for.Brackets are used to find a range of characters:Metacharacters are characters with a special meaning:Quantifiers define quantities:', '', '']","['', '', '', '', '']",['What is a Regular Expression?###Flags###&&&|||Pattern Class - Defines a pattern (to be used in a search)|||Matcher Class - Used to search for the |||pattern|||PatternSyntaxException Class - Indicates syntax error in a regular |||expression pattern|||&&&|||Pattern.CASE_INSENSITIVE - The case of letters will be ignored when performing|||a search.|||Pattern.LITERAL - Special characters in the pattern will not have any special|||meaning and will be treated as ordinary characters when performing a search.|||Pattern.UNICODE_CASE - Use it together with the CASE_INSENSITIVE flag to|||also ignore the case of letters outside of the English alphabet|||'],"['Expression|||Description|||&&&[abc]|||Find one character from the options between the brackets|||&&&[^abc]|||Find one character NOT between the brackets|||&&&[0-9]|||Find one character from the range 0 to 9|||&&&', 'Metacharacter|||Description|||&&&||||Find a match for any one of the patterns separated by | as in: cat|dog|fish|||&&&.|||Find just one instance of any character|||&&&^|||Finds a match as the beginning of a string as in: ^Hello|||&&&$|||Finds a match at the end of the string as in: World$|||&&&\\d|||Find a digit|||&&&\\s|||Find a whitespace character|||&&&\\b|||Find a match at the beginning of a word like this: \\bWORD, or at the end of a word like this: WORD\\b|||&&&\\uxxxx|||Find the Unicode character specified by the hexadecimal number xxxx|||&&&', ""Quantifier|||Description|||&&&n+|||Matches any string that contains at least one n|||&&&n*|||Matches any string that contains zero or more occurrences of n|||&&&n?|||Matches any string that contains zero or one occurrences of n|||&&&n{x}|||Matches any string that contains a sequence of X n's|||&&&n{x,y}|||Matches any string that contains a sequence of X to Y n's|||&&&n{x,}|||Matches any string that contains a sequence of at least X n's|||&&&""]",[]
java||Threads,https://www.w3schools.com/java/java_threads.asp,,"['Java Threads', 'Creating a Thread', 'Running Threads', 'Concurrency Problems']","['Threads allows a program to operate more efficiently by doing multiple things at the same\ntime.Threads can be used to perform complicated tasks in the background without interrupting\nthe main program.', 'There are two ways to create a thread.It can be created by extending the Thread class and overriding its run() \nmethod:Another way to create a thread is to implement the Runnable interface:', ""If the class extends the Thread class, the thread can be run by creating an instance of the\nclass and call its start() method:If the class implements the Runnable interface, the thread can be run by passing an\ninstance of the class to a Thread object's constructor and then calling the thread's\nstart() method:"", 'Because threads run at the same time as other parts of the program, there is no way to\nknow in which order the code will run. When the threads and main program are reading\nand writing the same variables, the values are unpredictable. The problems that result\nfrom this are called concurrency problems.To avoid concurrency problems, it is best to share as few attributes between threads as\npossible. If attributes need to be shared, one possible solution is to use the isAlive()\nmethod of the thread to check whether the thread has finished running before using any \nattributes that the thread can change.']","['', '', '', '']",[''],[],[]
java||Lambda Expressions,https://www.w3schools.com/java/java_lambda.asp,,"['Java Lambda Expressions', 'Syntax', 'Using Lambda Expressions']","['Lambda Expressions were added in Java 8.A lambda expression is a short block of code which takes in parameters and returns a\nvalue. Lambda expressions are similar to methods, but they do not need a name and they\ncan be implemented right in the body of a method.', 'The simplest lambda expression contains a single parameter and an expression:To use more than one parameter, wrap them in parentheses:Expressions are limited. They have to immediately return a value, and they cannot contain\nvariables, assignments or statements such as if or for. In order to do more complex\noperations, a code block can be used with curly braces. If the lambda expression needs to\nreturn a value, then the code block should have a return statement.', ""Lambda expressions are usually passed as parameters to a function:Lambda expressions can be stored in variables if the variable's type is an interface which\nhas only one method. The lambda expression should have the same number of\nparameters and the same return type as that method. Java has many of these kinds of\ninterfaces built in, such as the Consumer interface (found in the java.util package) used by lists.To use a lambda expression in a method, the method should have a parameter with a\nsingle-method interface as its type. Calling the interface's method will run the lambda\nexpression:""]","['', '', '']",[''],[],[]
java||Files,https://www.w3schools.com/java/java_files.asp,File handling is an important part of any application.,['Java File Handling'],"['Java has several methods for creating, reading, updating, and \ndeleting files.', 'The File class from the java.io package, allows \nus to work with files.To use the File class, create an object of \nthe class, and specify the filename or directory name: \n\n\nExample\nimport java.io.File;\xa0 // Import the File class\n\nFile myObj = new File(""filename.txt"");\xa0// Specify the filename\n\n\n\nIf you don\'t know what a package is, read our Java Packages Tutorial.\n\nThe File class has many useful methods for creating and getting information \nabout files. \nFor example:\n\n\n\n\nMethod\nType\nDescription\n\n\ncanRead()\nBoolean\nTests whether the file is readable or not\n\n\n\ncanWrite()\nBoolean\nTests whether the file is writable or not\n\n\n\ncreateNewFile()\nBoolean\nCreates an empty file\n\n\n\ndelete()\nBoolean\nDeletes a file\n\n\n\nexists()\nBoolean\nTests whether the file exists\n\n\n\ngetName()\nString\nReturns the name of the file\n\n\n\ngetAbsolutePath()\nString\nReturns the absolute pathname of the file\n\n\n\nlength()\nLong\nReturns the size of the file in bytes\n\n\n\nlist()\nString[]\nReturns an array of the files in the directory\n\n\n\nmkdir()\nBoolean\nCreates a directory\n\n\n\n\n\nYou will learn how to create, write, read and delete files in the next chapters:\n\nCreate/Write Files »\nRead Files »\nDelete Files »\n\n\n\n❮ Previous\nNext ❯\n\n\n\n']",[''],[''],['Method|||Type|||Description|||&&&canRead()|||Boolean|||Tests whether the file is readable or not|||&&&canWrite()|||Boolean|||Tests whether the file is writable or not|||&&&createNewFile()|||Boolean|||Creates an empty file|||&&&delete()|||Boolean|||Deletes a file|||&&&exists()|||Boolean|||Tests whether the file exists|||&&&getName()|||String|||Returns the name of the file|||&&&getAbsolutePath()|||String|||Returns the absolute pathname of the file|||&&&length()|||Long|||Returns the size of the file in bytes|||&&&list()|||String[]|||Returns an array of the files in the directory|||&&&mkdir()|||Boolean|||Creates a directory|||&&&'],[]
java||Create and Write To Files,https://www.w3schools.com/java/java_files_create.asp,,"['Create a File', 'Write To a File']","['To create a file in Java, you can use the createNewFile() method. This method returns a \nboolean value: true if the file was successfully created, and false if the file \nalready exists. Note that the method is enclosed in a try...catch \nblock. This is necessary because it throws an IOException if an error occurs (if the \nfile cannot be created for some reason):To create a file in a specific directory (requires permission), specify the path of the file and use double backslashes to escape the ""\\"" character (for Windows). On Mac and Linux you can just write the path, like: /Users/name/filename.txt', 'In the \nfollowing example, we use the FileWriter class together with its write() method \nto write some text to the file we created in the example above. Note that when you are done writing to the file, \nyou should close it \nwith the close() method:', 'To read the file above, go to the Java Read Files chapter.']","['\nFile created: filename.txt\n &&&&&& \n\nSuccessfully wrote to the file.\n\n', '']",[''],[],[]
java||Read Files,https://www.w3schools.com/java/java_files_read.asp,,"['Read a File', 'Get File Information']","['In the previous chapter, you learned how to create and write to a file.In the \nfollowing example, we use the Scanner class to read the contents of the text file we created in the previous chapter:', 'To get more information about a file, use any of the File methods:']","['\n\nFiles in Java might be tricky, but it is fun enough!\n', '']",[''],[],[]
java||Delete Files,https://www.w3schools.com/java/java_files_delete.asp,,"['Delete a File', 'Delete a Folder']","['To delete a file in Java, use the delete() method:', 'You can also delete a folder. However, it must be empty:']","['\n\nDeleted the file: filename.txt\n\n', '']",[''],[],[]
java||How To Add Two Numbers,https://www.w3schools.com/java/java_howto_add_two_numbers.asp,,"['Add Two Numbers', 'Add Two Numbers with User Input']","['Learn how to add two numbers in Java:', 'Learn how to add two numbers with user input:']","['', '']",[''],[],[]
java||Keywords,https://www.w3schools.com/java/java_ref_keywords.asp,,['Java Reserved Keywords'],"['Java has a set of keywords that are reserved words that cannot be used as \nvariables, methods, classes, or any other identifiers:Note: true, false, and null are not keywords, but they are literals and reserved words that cannot be used as identifiers.']",[''],[''],"['Keyword|||Description|||&&&abstract|||A non-access modifier. Used for classes and methods: An abstract class cannot be used to create objects (to access it, it must be inherited from another class). An abstract method can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from)|||&&&assert|||For debugging|||&&&boolean|||A data type that can only store true and false values|||&&&break|||Breaks out of a loop or a switch block|||&&&byte|||A data type that can store whole numbers from -128 and 127|||&&&case|||Marks a block of code in switch statements|||&&&catch|||Catches exceptions generated by try statements|||&&&char|||A data type that is used to store a single character|||&&&class|||Defines a class|||&&&continue|||Continues to the next iteration of a loop|||&&&const|||Defines a constant. Not in use - use final instead|||&&&default|||Specifies the default block of code in a switch statement|||&&&do|||Used together with while to create a do-while loop|||&&&double|||A data type that can store whole numbers from 1.7e−308 to 1.7e+308|||&&&else|||Used in conditional statements|||&&&enum|||Declares an enumerated (unchangeable) type|||&&&exports|||Exports a package with a module. New in Java 9|||&&&extends|||Extends a class (indicates that a class is inherited from another class)|||&&&final|||A non-access modifier used for classes, attributes and methods, which makes them non-changeable (impossible to inherit or override)|||&&&finally|||Used with exceptions, a block of code that will be executed no matter if there is an exception or not|||&&&float|||A data type that can store whole numbers from 3.4e−038 to 3.4e+038|||&&&for|||Create a for loop|||&&&goto|||Not in use, and has no function|||&&&if|||Makes a conditional statement|||&&&implements|||Implements an interface|||&&&import|||Used to import a package, class or interface|||&&&instanceof|||Checks whether an object is an instance of a specific class or an interface|||&&&int|||A data type that can store whole numbers from -2147483648 to 2147483647|||&&&interface|||Used to declare a special type of class that only contains abstract methods|||&&&long|||A data type that can store whole numbers from -9223372036854775808 to 9223372036854775808|||&&&module|||Declares a module. New in Java 9|||&&&native|||Specifies that a method is not implemented in the same Java source file (but in another language)|||&&&new|||Creates new objects|||&&&package|||Declares a package|||&&&private|||An access modifier used for attributes, methods and constructors, making them only accessible within the declared class|||&&&protected|||An access modifier used for attributes, methods and constructors, making them accessible in the same package and subclasses|||&&&public|||An access modifier used for classes, attributes, methods and constructors, making them accessible by any other class|||&&&requires|||Specifies required libraries inside a module. New in Java 9|||&&&return|||Finished the execution of a method, and can be used to return a value from a method|||&&&short|||A data type that can store whole numbers from -32768 to 32767|||&&&static|||A non-access modifier used for methods and attributes. Static methods/attributes can be accessed without creating an object of a class|||&&&strictfp|||Restrict the precision and rounding of floating point calculations|||&&&super|||Refers to superclass (parent) objects|||&&&switch|||Selects one of many code blocks to be executed|||&&&synchronized|||A non-access modifier, which specifies that methods can only be accessed by one thread at a time|||&&&this|||Refers to the current object in a method or constructor|||&&&throw|||Creates a custom error|||&&&throws|||Indicates what exceptions may be thrown by a method|||&&&transient|||A non-accesss modifier, which specifies that an attribute is not part of an object\'s persistent state|||&&&try|||Creates a try...catch statement|||&&&var|||Declares a variable. New in Java 10|||&&&void|||Specifies that a method should not have a return value|||&&&volatile|||Indicates that an attribute is not cached thread-locally, and is always read from the ""main memory""|||&&&while|||Creates a while loop|||&&&']",[]
java||abstract,https://www.w3schools.com/java/ref_keyword_abstract.asp,,"['Definition and Usage', 'Related Pages']","['The abstract keyword is a non-access modifier, used for classes and methods.Class: An abstract class is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).Method: An abstract method can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).', 'Read more about modifiers in our Java Modifiers Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||boolean,https://www.w3schools.com/java/ref_keyword_boolean.asp,,"['Definition and Usage', 'Related Pages']","['The boolean keyword is a data type that can only take the values true or false.Boolean values are mostly used for conditional testing (read the Java Booleans Tutorial for more information).', 'Read more about data types in our Java Data Types Tutorial.Read more about booleans in our Java Booleans Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||break,https://www.w3schools.com/java/ref_keyword_break.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The break keyword is used to break out a\nfor loop, a while \nloop or a switch block.', 'Use the continue \nkeyword to end the current iteration in a loop, but continue with the next.Read more about for loops in our Java For Loops Tutorial.Read more about while loops in our Java While Loops Tutorial.Read more about break and continue in our Java Break Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||byte,https://www.w3schools.com/java/ref_keyword_byte.asp,,"['Definition and Usage', 'Related Pages']","['The byte keyword is a data type that can store whole numbers from -128 to 127.', 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||case,https://www.w3schools.com/java/ref_keyword_case.asp,,"['Definition and Usage', 'Related Pages']","['The case keyword marks a block of code in a switch statement.', 'Read more about the switch statement in our Java Switch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||catch,https://www.w3schools.com/java/ref_keyword_catch.asp,,"['Definition and Usage', 'Related Pages']","['The catch keyword catches exceptions generated by try statements.The catch statement allows you to define a block of code to be executed, if an error occurs in the try block.', 'Read more about exceptions in our Java Try..Catch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||char,https://www.w3schools.com/java/ref_keyword_char.asp,,"['Definition and Usage', 'Related Pages']","[""The char keyword is a data type that is used to store a single character.A char value must be surrounded by single quotes, like 'A' or 'c'."", 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||class,https://www.w3schools.com/java/ref_keyword_class.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The class keyword is used to create a class.Every line of code that runs in Java must be inside a class. A class should always start with an uppercase first letter, and the name of the java file must match the class name.A class is like an object constructor. See the example below to see how we can use it to create an object.', 'Read more about classes and objects in our Java Classes/Objects Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||continue,https://www.w3schools.com/java/ref_keyword_continue.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The continue keyword is used to end the current iteration in a for loop (or a while loop), and continues to the next iteration.', 'Use the break \nkeyword to break out of a loop.Read more about for loops in our Java For Loops Tutorial.Read more about while loops in our Java While Loops Tutorial.Read more about break and continue in our Java Break Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||default,https://www.w3schools.com/java/ref_keyword_default.asp,,"['Definition and Usage', 'Related Pages']","['The default keyword the default block of code in a switch statement.The default keyword specifies some code to run if there is no case match in the switch.Note: if the default keyword is used \nas the last statement in a switch block, it does not need a break.', 'Read more about the switch statement in our Java Switch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||do,https://www.w3schools.com/java/ref_keyword_do.asp,,"['Definition and Usage', 'Related Pages']","['The do keyword is used together with while to create a do-while loop.The while loop loops through a block of code as long as a specified condition is true:The do/while loop is a variant of the while loop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true.Note: Do not forget to increase the variable used in the condition, otherwise \nthe loop will never end!', 'Read more about while loops in our Java While Loop Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||double,https://www.w3schools.com/java/ref_keyword_double.asp,,"['Definition and Usage', 'Related Pages']","['The double keyword is a data type that can store fractional numbers from 1.7e−308 to 1.7e+308.Note that you should end the value with a ""d"":', 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||else,https://www.w3schools.com/java/ref_keyword_else.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The else statement specifies a block of Java code to be executed if a condition is false in an if statement.Java has the following conditional statements:', 'Read more about conditions in our Java If...Else Tutorial.', '\n❮ Java Keywords\n']","['', '', '']","['Definition and Usage###&&&|||Use if to specify a block of code to be executed, if a specified condition is true|||Use else to specify a block of code to be executed, if the same condition is false|||Use else if to specify a new condition to test, if the first condition is false|||Use switch to specify many alternative blocks of code to be executed|||']",[],[]
java||enum,https://www.w3schools.com/java/ref_keyword_enum.asp,,"['Definition and Usage', 'Related Pages']","['The enum keyword declares an enumerated (unchangeable) type.An enum is a special ""class"" that represents a group of constants (unchangeable variables, like final variables).To create an enum, use the enum keyword (instead of class or interface), and separate the constants with a comma. Note that they should be in uppercase letters.', 'Read more about enums in our Java Enum Tutorial.', '\n❮ Java Keywords\n']","['\n  Level myVar = Level.MEDIUM;', '']",[''],[],[]
java||extends,https://www.w3schools.com/java/ref_keyword_extends.asp,,"['Definition and Usage', 'Related Pages']","['The extends keyword extends a class (indicates that a class is inherited from another class).In Java, it is possible to inherit attributes and methods from one class to another. We group the ""inheritance concept"" into two categories:To inherit from a class, use the extends \nkeyword.', 'Read more about inheritance in our Java Inheritance Tutorial.', '\n❮ Java Keywords\n']","['', '']",['Definition and Usage###&&&|||subclass (child) - the class that inherits from another class|||superclass (parent) - the class being inherited from|||'],[],[]
java||final,https://www.w3schools.com/java/ref_keyword_final.asp,,"['Definition and Usage', 'Related Pages']","['The final keyword is a non-access modifier used for classes, attributes and methods, which makes them non-changeable (impossible to inherit or override).The final keyword is useful when you want a variable to always store the same value, like PI (3.14159...).The final keyword is called a ""modifier"". You will learn more about these in the Java Modifiers Chapter.', 'Read more about attributes our Java Class Attributes Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||finally,https://www.w3schools.com/java/ref_keyword_finally.asp,,"['Definition and Usage', 'Related Pages']","['The finally keyword is used to execute code (used with exceptions \n- try..catch statements) no matter if there is an exception or not.', 'Read more about exceptions in our Java Try..Catch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||float,https://www.w3schools.com/java/ref_keyword_float.asp,,"['Definition and Usage', 'Related Pages']","['The float keyword is a data type that can store fractional numbers from 3.4e−038 to 3.4e+038.Note that you should end the value with an ""f"":', 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||for,https://www.w3schools.com/java/ref_keyword_for.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The for loop loops through a block of code a number of times.From the example above:', 'There is also a ""for-each"" loop, which is used exclusively to loop through elements in an array:The following example outputs all elements in the cars \narray, using a ""for-each"" loop:', 'Read more about for loops in our Java For Loop Tutorial.', '\n❮ Java Keywords\n']","['', '', '']","['Definition and Usage###&&&|||Statement 1 sets a variable before the loop starts (int i = 0).|||Statement 2 defines the condition for the loop to run (i must be less than |||5). If the condition is true, the loop will start over again, if it is false, |||the loop will end.|||Statement 3 increases a value (i++) each time the code block in the loop has |||been executed.|||']",[],[]
java||if,https://www.w3schools.com/java/ref_keyword_if.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The if statement specifies a block of Java code to be executed if a condition is true.Java has the following conditional statements:', 'Read more about conditions in our Java If...Else Tutorial.', '\n❮ Java Keywords\n']","['', '', '']","['Definition and Usage###&&&|||Use if to specify a block of code to be executed, if a specified condition is true|||Use else to specify a block of code to be executed, if the same condition is false|||Use else if to specify a new condition to test, if the first condition is false|||Use switch to specify many alternative blocks of code to be executed|||']",[],[]
java||implements,https://www.w3schools.com/java/ref_keyword_implements.asp,,"['Definition and Usage', 'Multiple Interfaces ', 'Related Pages']","['The implements keyword is used to implement an interface.The interface keyword is used to declare a special type of class that only contains abstract methods.To access the interface methods, the interface must be ""implemented"" \n(kinda like inherited) by another class with the implements \nkeyword (instead of extends). The body of the \ninterface method is provided by the ""implement"" class.', 'To implement multiple interfaces, separate them with a comma:', 'Read more about interfaces in our Java Interface Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||import,https://www.w3schools.com/java/ref_keyword_import.asp,,"['Definition and Usage', 'Related Pages']","['The import keyword is used to import a package, class or interface.', 'Read more about packages in our Java Packages Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||instanceof,https://www.w3schools.com/java/ref_keyword_instanceof.asp,,"['Definition and Usage', 'Related Pages']","['The instanceof keyword checks whether an object is an instance of a specific class or \nan interface.The instanceof keyword compares the instance with type. The return value is either true or false.', 'Read more about objects in our Java Classes/Objects Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||int,https://www.w3schools.com/java/ref_keyword_int.asp,,"['Definition and Usage', 'Related Pages']","['The int keyword is a data type that can store whole numbers from -2147483648 to 2147483647.', 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||interface,https://www.w3schools.com/java/ref_keyword_interface.asp,,"['Definition and Usage', 'Multiple Interfaces ', 'Related Pages']","['The interface keyword is used to declare a special type of class that only contains abstract methods.To access the interface methods, the interface must be ""implemented"" \n(kinda like inherited) by another class with the implements \nkeyword (instead of extends). The body of the \ninterface method is provided by the ""implement"" class.', 'To implement multiple interfaces, separate them with a comma:', 'Read more about interfaces in our Java Interface Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||long,https://www.w3schools.com/java/ref_keyword_long.asp,,"['Definition and Usage', 'Related Pages']","['The long keyword is a data type that can store whole numbers from -9223372036854775808 to 9223372036854775808.Note that you should end the value with an ""L"":', 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||new,https://www.w3schools.com/java/ref_keyword_new.asp,,"['Definition and Usage', 'Related Pages']","['The new keyword creates new objects.', 'Read more about objects in our Java Classes/Objects Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||package,https://www.w3schools.com/java/ref_keyword_package.asp,,"['Definition and Usage', 'Related Pages']","['The package keyword creates a package.', 'Read more about packages in our Java Packages Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||private,https://www.w3schools.com/java/ref_keyword_private.asp,,"['Definition and Usage', 'Related Pages']","['The private keyword is an access modifier used for attributes, methods and constructors, making them only accessible within the declared class.', 'Read more about modifiers in our Java Modifiers Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||protected,https://www.w3schools.com/java/ref_keyword_protected.asp,,"['Definition and Usage', 'Related Pages']","['The protected keyword is an access modifier used for attributes, methods and constructors, making them accessible in the same package and subclasses.', 'Read more about modifiers in our Java Modifiers Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||public,https://www.w3schools.com/java/ref_keyword_public.asp,,"['Definition and Usage', 'Related Pages']","['The public keyword is an access modifier used for classes, attributes, methods and constructors, making them accessible by any other class.', 'Read more about modifiers in our Java Modifiers Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||return,https://www.w3schools.com/java/ref_keyword_return.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The return keyword finished the execution of a method, and can be used to return a value from a method.', 'Tip: Use the void keyword to specify that a method should not have a return value:', 'Read more about methods in our Java Methods Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||short,https://www.w3schools.com/java/ref_keyword_short.asp,,"['Definition and Usage', 'Related Pages']","['The short keyword is a data type that can store whole numbers from -32768 to 32767.', 'Read more about data types in our Java Data Types Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||static,https://www.w3schools.com/java/ref_keyword_static.asp,,"['Definition and Usage', 'Related Pages']","['The static keyword is a non-access modifier used for methods and attributes. Static methods/attributes can be accessed without creating an object of a class.', 'Read more about modifiers in our Java Modifiers Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||super,https://www.w3schools.com/java/ref_keyword_super.asp,,"['Definition and Usage', 'Related Pages']","['The super keyword refers to superclass \n(parent) objects.It is used to call superclass methods, and to access the superclass \nconstructor.The most common use of the super keyword is to eliminate \nthe confusion between superclasses and subclasses that have methods with the \nsame name.To understand the super keyword, you should have a basic understanding of Inheritance and Polymorphism.', 'Read more about inheritance (subclasses and superclasses) in our Java Inheritance Tutorial.Read more about polymorphism in our Java Polymorphism Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||switch,https://www.w3schools.com/java/ref_keyword_switch.asp,,"['Definition and Usage', 'Related Pages']","['The switch keyword selects one of many code blocks to be executed.From the example above, it works like this:', 'Read more about the switch statement in our Java Switch Tutorial.', '\n❮ Java Keywords\n']","['', '']","['Definition and Usage###&&&|||The switch expression is evaluated once.|||The value of the expression is compared with the values of each case.|||If there is a match, the associated block of code is executed.|||The break keyword is used to break out of the switch block when a match is found|||']",[],[]
java||this,https://www.w3schools.com/java/ref_keyword_this.asp,,"['Definition and Usage', 'Related Pages']","['The this keyword refers to the current object in a method or constructor.The most common use of the this keyword is to eliminate \nthe confusion between class attributes and parameters with the same name (because a class attribute is shadowed by a method or constructor parameter). If you omit the keyword in the example above, the output would be ""0"" instead of ""5"".this can also be used to:', 'Read more about objects in our Java Classes/Objects Tutorial.Read more about constructors in our Java Constructors Tutorial.Read more about methods in our Java Methods Tutorial.', '\n❮ Java Keywords\n']","['', '']",['Definition and Usage###&&&|||Invoke current class constructor|||Invoke current class method|||Return the current class object|||Pass an argument in the method call|||Pass an argument in the constructor call|||'],[],[]
java||throw,https://www.w3schools.com/java/ref_keyword_throw.asp,,"['Definition and Usage', 'Related Pages']","['The throw keyword is used to create a custom error.The throw statement is used together with an exception type. There are many exception types available in Java: ArithmeticException, ClassNotFoundException, ArrayIndexOutOfBoundsException, SecurityException, etc.The exception type is often used together with a custom method, like in the example above.Differences between throw and throws:', 'Read more about exceptions in our Java Try..Catch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],['throw|||throws|||&&&Used to throw an exception for a method|||Used to indicate what exception type may be thrown by a method|||&&&Cannot throw multiple exceptions|||Can declare multiple exceptions|||&&&Syntax:\n\nthrow is followed by an object (new type)\nused inside the method\n|||Syntax:\n\nthrows is followed by a class\nand used with the method signature\n|||&&&'],[]
java||throws,https://www.w3schools.com/java/ref_keyword_throws.asp,,"['Definition and Usage', 'Related Pages']","['The throws keyword indicates what exception type may be thrown by a method.There are many exception types available in Java: ArithmeticException, ClassNotFoundException, ArrayIndexOutOfBoundsException, SecurityException, etc.Differences between throw and throws:', 'Read more about exceptions in our Java Try..Catch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],['throw|||throws|||&&&Used to throw an exception for a method|||Used to indicate what exception type may be thrown by a method|||&&&Cannot throw multiple exceptions|||Can declare multiple exceptions|||&&&Syntax:\n\nthrow is followed by an object (new type)\nused inside the method\n|||Syntax:\n\nthrows is followed by a class\nand used with the method signature\n|||&&&'],[]
java||try,https://www.w3schools.com/java/ref_keyword_try.asp,,"['Definition and Usage', 'Related Pages']","['The try keyword creates a try...catch statement.The try statement allows you to define a block of code to be \ntested for errors while it is being executed.The catch statement allows you to define a block of code to \nbe executed, if an error occurs in the try block.', 'Read more about exceptions in our Java Try..Catch Tutorial.', '\n❮ Java Keywords\n']","['', '']",[''],[],[]
java||void,https://www.w3schools.com/java/ref_keyword_void.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The void keyword specifies that a method should not have a return value.', 'Tip: If you \nwant a method to return a value, you can use a primitive data type (such as int, \nchar, etc.) instead of void, and use the return \nkeyword inside the method:', 'Read more about methods in our Java Methods Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||while,https://www.w3schools.com/java/ref_keyword_while.asp,,"['Definition and Usage', 'More Examples', 'Related Pages']","['The while loop loops through a block of code as long as a specified condition is true.Note: Do not forget to increase the variable used in the condition, otherwise \nthe loop will never end!', 'The do/while loop is a variant of the while loop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true:', 'Read more about while loops in our Java While Loop Tutorial.', '\n❮ Java Keywords\n']","['', '', '']",[''],[],[]
java||String Methods,https://www.w3schools.com/java/java_ref_string.asp,,['All String Methods'],['The String class has a set of built-in methods that you can use on strings.'],[''],[''],"['Method|||Description|||Return Type|||&&&charAt()|||Returns the character at the specified index (position)|||char|||&&&codePointAt()|||Returns the Unicode of the character at the specified index|||int|||&&&codePointBefore()|||Returns the Unicode of the character before the specified index|||int|||&&&codePointCount()|||Returns the number of Unicode values found in a string.|||int|||&&&compareTo()|||Compares two strings lexicographically|||int|||&&&compareToIgnoreCase()|||Compares two strings lexicographically, ignoring case differences|||int|||&&&concat()|||Appends a string to the end of another string|||String|||&&&contains()|||Checks whether a string contains a sequence of characters|||boolean|||&&&contentEquals()|||Checks whether a string contains the exact same sequence of characters \n    of the specified CharSequence or StringBuffer|||boolean|||&&&copyValueOf()|||Returns a String that represents the characters of the character array|||String|||&&&endsWith()|||Checks whether a string ends with the specified character(s)|||boolean|||&&&equals()|||Compares two strings. Returns true if the strings are equal, and false \n    if not|||boolean|||&&&equalsIgnoreCase()|||Compares two strings, ignoring case considerations|||boolean|||&&&format()|||Returns a formatted string using the specified locale, format string, and arguments|||String|||&&&getBytes()|||Encodes this String into a sequence of bytes using the named charset, storing the result into a new byte array|||byte[]|||&&&getChars()|||Copies characters from a string to an array of chars|||void|||&&&hashCode()|||Returns the hash code of a string|||int|||&&&indexOf()|||Returns the position of the first found occurrence of specified characters in a string|||int|||&&&intern()|||Returns the canonical representation for the string object|||String|||&&&isEmpty()|||Checks whether a string is empty or not|||boolean|||&&&lastIndexOf()|||Returns the position of the last found occurrence of specified characters in a string|||int|||&&&length()|||Returns the length of a specified string|||int|||&&&matches()|||Searches a string for a match against a regular expression, and returns the matches|||boolean|||&&&offsetByCodePoints()|||Returns the index within this String that is offset from the given index by codePointOffset code points|||int|||&&&regionMatches()|||Tests if two string regions are equal|||boolean|||&&&replace()|||Searches a string for a specified value, and returns a new string where the specified values are replaced|||String|||&&&replaceFirst()|||Replaces the first occurrence of a substring that matches the given regular expression with the given replacement|||String|||&&&replaceAll()|||Replaces each substring of this string that matches the given regular expression with the given replacement|||String|||&&&split()|||Splits a string into an array of substrings|||String[]|||&&&startsWith()|||Checks whether a string starts with specified characters|||boolean|||&&&subSequence()|||Returns a new character sequence that is a subsequence of this sequence|||CharSequence|||&&&substring()|||Returns a new string which is the substring of a specified string|||String|||&&&toCharArray()|||Converts this string to a new character array|||char[]|||&&&toLowerCase()|||Converts a string to lower case letters|||String|||&&&toString()|||Returns the value of a String object|||String|||&&&toUpperCase()|||Converts a string to upper case letters|||String|||&&&trim()|||Removes whitespace from both ends of a string|||String|||&&&valueOf()|||Returns the string representation of the specified value|||String|||&&&']",[]
java||Math Methods,https://www.w3schools.com/java/java_ref_math.asp,The Java Math class has many methods that allows you to perform mathematical tasks on numbers.,['All Math Methods'],['A list of all Math methods can be found in the table below:Note: All Math methods are static.'],[''],[''],"['Method|||Description|||Return Type|||&&&abs(x)|||Returns the absolute value of x|||double|float|int|long|||&&&acos(x)|||Returns the arccosine of x, in radians|||double|||&&&asin(x)|||Returns the arcsine of x, in radians|||double|||&&&atan(x)|||Returns the arctangent of x as a numeric value between -PI/2 and PI/2 radians|||double|||&&&atan2(y,x)|||Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta).|||double|||&&&cbrt(x)|||Returns the cube root of x|||double|||&&&ceil(x)|||Returns the value of x rounded up to its nearest integer|||double|||&&&copySign(x, y)|||Returns the first floating point x with the sign of the second floating point y|||double|||&&&cos(x)|||Returns the cosine of x (x is in radians)|||double|||&&&cosh(x)|||Returns the hyperbolic cosine of a double value|||double|||&&&exp(x)|||Returns the value of Ex|||double|||&&&expm1(x)|||Returns ex -1|||double|||&&&floor(x)|||Returns the value of x rounded down to its nearest integer|||double|||&&&getExponent(x)|||Returns the unbiased exponent used in x|||int|||&&&hypot(x, y)|||Returns sqrt(x2 +y2) without intermediate overflow or underflow|||double|||&&&IEEEremainder(x, y)|||Computes the remainder operation on x and y as prescribed by the IEEE 754 standard|||double|||&&&log(x)|||Returns the natural logarithm (base E) of x|||double|||&&&log10(x)|||Returns the base 10 logarithm of x|||double|||&&&log1p(x)|||Returns the natural logarithm (base E) of the sum of x and 1|||double|||&&&max(x, y)|||Returns the number with the highest value|||double|float|int|long|||&&&min(x, y)|||Returns the number with the lowest value|||double|float|int|long|||&&&nextAfter(x, y)|||Returns the floating point number adjacent to x in the direction of y|||double|float|||&&&nextUp(x)|||Returns the floating point value adjacent to x in the direction of positive infinity|||double|float|||&&&pow(x, y)|||Returns the value of x to the power of y|||double|||&&&random()|||Returns a random number between 0 and 1|||double|||&&&round(x)|||Returns the value of x rounded to its nearest integer|||int|||&&&rint()|||Returns the double value that is closest to x and equal to a mathematical integer|||double|||&&&signum(x)|||Returns the sign of x|||double|||&&&sin(x)|||Returns the sine of x (x is in radians)|||double|||&&&sinh(x)|||Returns the hyperbolic sine of a double value|||double|||&&&sqrt(x)|||Returns the square root of x|||double|||&&&tan(x)|||Returns the tangent of an angle|||double|||&&&tanh(x)|||Returns the hyperbolic tangent of a double value|||double|||&&&toDegrees(x)|||Converts an angle measured in radians to an approx. equivalent angle measured in degrees|||double|||&&&toRadians(x)|||Converts an angle measured in degrees to an approx. angle measured in radians|||double|||&&&ulp(x)|||Returns the size of the unit of least precision (ulp) of x|||double|float|||&&&']",[]
java||Examples,https://www.w3schools.com/java/java_examples.asp,,"['Java Syntax', 'Java Comments', 'Java Variables', 'Java Data Types', 'Java Type Casting', 'Java Operators', 'Java Strings', 'Java Math', 'Java Booleans', 'Java If...Else (Conditions)', 'Java Switch', 'Java Loops', 'Java Arrays', 'Java Methods', 'Java Classes and Objects', 'Java Modifiers', 'Java Encapsulation', 'Java Packages', 'Java Inheritance', 'Java Inner Classes', 'Java Abstraction & Interfaces', 'Java Enums', 'Java User Input', 'Java Dates', 'Java ArrayList', 'Java HashMap', 'Java HashSet', 'Java Iterator', 'Java Wrapper Classes', 'Java Exceptions (Try...Catch)', 'Java Regular Expressions', 'Java Threads', 'Java Files']","['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']","['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']",[''],[],[]
java||Online Compiler,https://www.w3schools.com/java/java_compiler.asp,,"['Java Compiler (Editor)', 'Java Compiler Explained']","['With our online Java compiler, you can edit Java code, and view the result in your browser.Click on the ""Try it Yourself"" button to see how it works.', 'The window to the left is editable - edit the code and click on the ""Run"" button to view the result in the right window.The icons are explained in the table below:']","['', '']",[''],['Icon|||Description|||&&&|||Go to www.w3schools.com|||&&&|||Menu button for more options|||&&&|||Change orientation (horizontally or vertically)|||&&&|||Change color theme (dark or light)|||&&&'],[]
java||Exercises,https://www.w3schools.com/java/java_exercises.asp,You can test your Java skills with W3Schools' Exercises.,[],"[""We have gathered a variety of Java exercises (with answers) for each Java Chapter.Try to solve an exercise by editing some code, or show the answer to see what you've done wrong.You will get 1 point for\neach correct answer. Your score and total score will always be displayed.""]",[],[''],[],[]
java||Quiz,https://www.w3schools.com/java/java_quiz.asp,You can test your Java skills with W3Schools' Quiz.,"['The Test', 'Count Your Score']","[""The test contains 25 questions and there is no time limit.The test is not official, it's just a nice way to see how much you know, or don't know, about \nJava.You will get 1 point for each correct answer. At the end of the Quiz,\nyour total score will be displayed. Maximum score is 25 points."", '']","['', '']",[''],[],[]
java||Java Certificate,https://www.w3schools.com/java/java_exam.asp,,['How Does It Work?'],[''],[''],"['How Does It Work?###&&&|||Study for free at W3Schools.com|||Study at your own speed|||Test your skills with W3Schools online quizzes|||Apply for your certificate by paying an exam fee|||Take your exam online, at any time, and from any location|||']","['.cls-1{fill:#04aa6b;}.cls-2{font-size:23px;}.cls-2,.cls-3,.cls-4{fill:#fff;}.cls-2,.cls-3{font-family:RobotoMono-Medium, Roboto Mono;font-weight:500;}.cls-3{font-size:20.08px;}w3schools CERTIFIED  .  2021\n|||\xa0\xa0|||\nW3Schools offers an Online Certification Program.\nThe perfect solution for busy professionals who need to balance work, family, and career building.\nMore than 30 000 certificates already issued!\n|||&&&', '\nDocument Your Skills\nKnowledge is power, especially in the current job market. Documentation of your skills enables you to advance your career, or help you to start a new one.\nGet a Certificate\nGetting a certificate proves your commitment to upgrade your skills,\ngives you the credibility needed for more responsibilities, larger projects, and a higher salary.\n\nGet Your Certificate »\n\n|||\n\n|||&&&']",['/cert/pic_html_cert_small.gif']
