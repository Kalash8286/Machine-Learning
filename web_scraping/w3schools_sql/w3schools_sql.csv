Heading,Link,Intro,Subheading,Definitions,Example,List_item,table_item,Image_url
sql||Tutorial,https://www.w3schools.com/sql/default.asp,,['Examples in Each Chapter'],"['With our online SQL editor, you can edit the SQL statements, and click on a button to view the result.Click on the ""Try it Yourself"" button to see how it works.', 'Learn by examples! This tutorial supplements all explanations with clarifying examples.See All SQL Examples', 'Test your SQL skills at W3Schools!Start SQL Quiz!', 'At W3Schools you will find a complete reference for keywords and function:SQL Keyword ReferenceMYSQL FunctionsSQLServer FunctionsMS Access FunctionsSQL Quick Reference', 'Data types and ranges for Microsoft Access, MySQL and SQL Server.SQL Data Types']",['\nSELECT * FROM Customers;\n'],[''],[],[]
sql||Introduction to,https://www.w3schools.com/sql/sql_intro.asp,SQL is a standard language for accessing and manipulating databases.,"['What is SQL?', 'What Can SQL do?', 'SQL is a Standard - BUT....', 'Using SQL in Your Web Site', 'RDBMS']","['Although SQL is an ANSI/ISO standard, there are different versions of the SQL language.However, to be compliant with the ANSI standard, they all support at least the major commands (such as \nSELECT, UPDATE, \nDELETE, INSERT, \nWHERE) in a similar manner.', 'To build a web site that shows data from a database, you will need:', 'RDBMS stands for Relational Database Management System.RDBMS is the basis for SQL, and for all modern database systems such as MS SQL Server, IBM DB2, Oracle, MySQL, and Microsoft Access.The data in RDBMS is stored in database objects called tables. A table is a collection of related data entries and it consists of columns and rows.Look at the ""Customers"" table:Every table is broken up into smaller entities called fields. The fields in \nthe Customers table consist of CustomerID, CustomerName, ContactName, Address, \nCity, PostalCode and Country. A field is a column in a table that is designed to maintain \nspecific information about every record in the table.A record, also called a row, is each individual entry that exists in a table. \nFor example, there are 91 records in the above Customers table. A record is a \nhorizontal entity in a table.A column is a vertical entity in a table that contains all information \nassociated with a specific field in a table.', '', '']","['', '', '', '', '']","['What is SQL?###What Can SQL do?###Using SQL in Your Web Site###&&&|||SQL stands for Structured Query Language|||SQL lets you access and manipulate databases|||SQL became a standard of the American National Standards Institute (ANSI) |||  in 1986, and of the International Organization for Standardization (ISO) in |||  1987|||&&&||| SQL can execute queries against a database|||SQL can retrieve data from a database|||SQL can insert records in a database|||SQL can update records in a database|||SQL can delete records from a database|||SQL can create new databases|||SQL can create new tables in a database|||SQL can create stored procedures in a database|||SQL can create views in a database|||SQL can set permissions on tables, procedures, and views|||&&&|||An RDBMS database program (i.e. MS Access, SQL Server, MySQL)|||To use a server-side scripting language, like PHP or ASP|||To use SQL to get the data you want|||To use HTML / CSS to style the page|||']",[],[]
sql||Syntax,https://www.w3schools.com/sql/sql_syntax.asp,,"['Database Tables', 'SQL Statements', 'Keep in Mind That...', 'Semicolon after SQL Statements?', 'Some of The Most Important SQL Commands']","['A database most often contains one or more tables. Each table is identified \nby a name (e.g. ""Customers"" or ""Orders""). Tables contain records (rows) with \ndata.In this tutorial we will use the well-known Northwind sample database \n(included in MS Access and MS SQL Server).Below is a selection from the ""Customers"" table:\nThe table above contains five records (one for each customer) and seven columns \n(CustomerID, CustomerName, ContactName, Address, City, PostalCode, and Country).', 'Most of the actions you need to perform on a database are done with SQL \nstatements.The following SQL statement selects all the records in the ""Customers"" table:In this tutorial we will teach you all about the different SQL statements.', 'In this tutorial we will write all SQL keywords in upper-case.', 'Some database systems require a semicolon at the end of each SQL statement.Semicolon is the standard way to separate each SQL statement in database \nsystems that allow more than one SQL statement to be executed in the same call \nto the server.In this tutorial, we will use semicolon at the end of each SQL statement.', '']","['\n SELECT * FROM Customers;\n', '', '', '', '']",['Keep in Mind That...###Some of The Most Important SQL Commands###&&&|||SQL keywords are NOT case sensitive: select is the same as |||  SELECT|||&&&|||SELECT - extracts data from a database|||UPDATE - updates data in a database|||DELETE - deletes data from a database|||INSERT INTO - inserts new data into a database|||CREATE DATABASE - creates a new database|||ALTER DATABASE - modifies a database|||CREATE TABLE - creates a new table|||ALTER TABLE - modifies a table|||DROP TABLE - deletes a table|||CREATE INDEX - creates an index (search key)|||DROP INDEX - deletes an index|||  |||'],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||SELECT,https://www.w3schools.com/sql/sql_select.asp,,"['The SQL SELECT Statement', 'Demo Database', 'SELECT Column Example', 'SELECT * Example']","['The SELECT statement is used to select data from a database.The data returned is stored in a result table, called the result-set.Here, column1, column2, ... are the field names of the table you want to \nselect data from. If you \nwant to select all the fields available in the table, use the following syntax:', 'Below is a selection from the ""Customers"" table in the Northwind sample database:', 'The following SQL statement selects the ""CustomerName"" and ""City"" columns \nfrom the ""Customers"" table:', 'The following SQL statement selects all the columns from the ""Customers"" \ntable:']","['\nSELECT column1, column2, ...\nFROM table_name;', '\nSELECT * FROM table_name;', '\n SELECT CustomerName, City FROM Customers;\n', '\n SELECT * FROM Customers;\n']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||SELECT DISTINCT,https://www.w3schools.com/sql/sql_distinct.asp,,"['The SQL SELECT DISTINCT Statement', 'Demo Database', 'SELECT Example Without DISTINCT', 'SELECT DISTINCT Examples']","['The SELECT DISTINCT statement is used to return only distinct \n(different) values.Inside a table, a column often contains many duplicate values; and sometimes you \nonly want to list the different (distinct) values.', 'Below is a selection from the ""Customers"" table in the Northwind sample \ndatabase:', 'The following SQL statement selects all (including the duplicates) values from the ""Country"" column in the ""Customers"" table:Now, let us use the SELECT DISTINCT statement and see the result.', 'The following SQL statement selects only the DISTINCT values from the ""Country"" column in the ""Customers"" table:The following SQL statement lists the number of different (distinct) customer countries:Here is the workaround for MS Access:']","['\n SELECT DISTINCT column1, column2, ...\n FROM table_name;', '\nSELECT Country FROM Customers;\n', '\nSELECT DISTINCT Country FROM Customers;\n &&&&&& \n  SELECT COUNT(DISTINCT Country) FROM Customers;\n &&&&&& \n  SELECT Count(*) AS DistinctCountriesFROM (SELECT DISTINCT Country FROM Customers);\n', '']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||WHERE,https://www.w3schools.com/sql/sql_where.asp,,"['The SQL WHERE Clause', 'Demo Database', 'WHERE Clause Example', 'Text Fields vs. Numeric Fields', 'Operators in The WHERE Clause']","['The WHERE clause is used to filter records.It is used to extract only those records that fulfill a specified \ncondition.', 'Below is a selection from the ""Customers"" table in the Northwind sample database:', 'The following SQL statement selects all the customers from the country \n""Mexico"", in the ""Customers"" table:', 'SQL requires single quotes around text values (most database systems will \nalso allow double quotes).However, numeric fields should not be enclosed in quotes:', 'The following operators can be used in the WHERE clause:']","['\nSELECT column1, column2, ...\nFROM table_name\nWHERE condition;', ""\nSELECT * FROM Customers\nWHERE Country='Mexico';"", '\n SELECT * FROM Customers\n WHERE CustomerID=1;', '', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'Operator|||Description|||Example|||&&&=|||Equal|||Try it|||&&&>|||Greater than|||Try it|||&&&<|||Less than|||Try it|||&&&>=|||Greater than or equal|||Try it|||&&&<=|||Less than or equal|||Try it|||&&&<>|||Not equal. Note: In some versions of SQL this operator may be written as !=|||Try it|||&&&BETWEEN|||Between a certain range|||Try it|||&&&LIKE|||Search for a pattern|||Try it|||&&&IN|||To specify multiple possible values for a column|||Try it|||&&&']",[]
"sql||AND, OR and NOT",https://www.w3schools.com/sql/sql_and_or.asp,,"['The SQL AND, OR and NOT Operators', 'Demo Database', 'AND Example', 'OR Example', 'NOT Example', 'Combining AND, OR and NOT']","['The WHERE clause can be combined with \nAND, OR, and \nNOT operators.The AND and OR operators are used to filter records based on more than one \ncondition:The NOT operator displays a record if the condition(s) is NOT TRUE.', 'The table below shows the complete ""Customers"" table from the Northwind sample database:', 'The following SQL statement selects all fields from ""Customers"" where country is ""Germany"" AND city is ""Berlin"":', 'The following SQL statement selects all fields from ""Customers"" where city is ""Berlin"" OR ""München"":The following SQL statement selects all fields from ""Customers"" where country is ""Germany"" OR ""Spain"":', 'The following SQL statement selects all fields from ""Customers"" where country is NOT ""Germany"":', 'You can also combine the AND, \nOR and NOT operators.The following SQL statement selects all fields from ""Customers"" where country is ""Germany"" AND city must be ""Berlin"" \nOR ""München"" (use parenthesis to form complex expressions):The following SQL statement selects all fields from ""Customers"" where country is \nNOT ""Germany"" and NOT ""USA"":']","['\nSELECT column1, column2, ...\nFROM table_name\nWHERE condition1 AND condition2 AND condition3 ...;', '\nSELECT column1, column2, ...\nFROM table_name\nWHERE condition1 OR condition2 OR condition3 ...;', '\nSELECT column1, column2, ...\nFROM table_name\nWHERE NOT condition;', ""\n SELECT * FROM Customers\n WHERE Country='Germany'\n AND City='Berlin';\n"", ""\n SELECT * FROM Customers\n WHERE City='Berlin'\n OR City='München';\n &&&&&& \n SELECT * FROM Customers\n WHERE Country='Germany'\n OR Country='Spain';\n"", ""\n SELECT * FROM Customers\n WHERE \n  NOT Country='Germany';\n"", ""\n SELECT * FROM Customers\n WHERE Country='Germany'\n AND (City='Berlin' OR City='München'); &&&&&& \n SELECT * FROM Customers\n WHERE NOT Country='Germany'\n AND NOT Country='USA';""]","['The SQL AND, OR and NOT Operators###&&&|||The AND operator displays a record if all the conditions separated by |||  AND |||  are TRUE.|||The OR operator displays a record if any of the conditions separated by |||  OR is TRUE.|||']","[""CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&6|||Blauer See Delikatessen|||Hanna Moos|||Forsterstr. 57|||Mannheim|||68306|||Germany|||&&&7|||Blondel père et fils|||Frédérique Citeaux|||24, place Kléber|||Strasbourg|||67000|||France|||&&&8|||Bólido Comidas preparadas|||Martín Sommer|||C/ Araquil, 67|||Madrid|||28023|||Spain|||&&&9|||Bon app'|||Laurence Lebihans|||12, rue des Bouchers|||Marseille|||13008|||France|||&&&10|||Bottom-Dollar Marketse|||Elizabeth Lincoln|||23 Tsawassen Blvd.|||Tsawassen|||T2F 8M4|||Canada|||&&&11|||B's Beverages|||Victoria Ashworth|||Fauntleroy Circus|||London|||EC2 5NT|||UK|||&&&12|||Cactus Comidas para llevar|||Patricio Simpson|||Cerrito 333|||Buenos Aires|||1010|||Argentina|||&&&13|||Centro comercial Moctezuma|||Francisco Chang|||Sierras de Granada 9993|||México D.F.|||05022|||Mexico|||&&&14|||Chop-suey Chinese|||Yang Wang|||Hauptstr. 29|||Bern|||3012|||Switzerland|||&&&15|||Comércio Mineiro|||Pedro Afonso|||Av. dos Lusíadas, 23|||São Paulo|||05432-043|||Brazil|||&&&16|||Consolidated Holdings|||Elizabeth Brown|||Berkeley Gardens 12 Brewery|||London|||WX1 6LT|||UK|||&&&17|||Drachenblut Delikatessend|||Sven Ottlieb|||Walserweg 21|||Aachen|||52066|||Germany|||&&&18|||Du monde entier|||Janine Labrune|||67, rue des Cinquante Otages|||Nantes|||44000|||France|||&&&19|||Eastern Connection|||Ann Devon|||35 King George|||London|||WX3 6FW|||UK|||&&&20|||Ernst Handel|||Roland Mendel|||Kirchgasse 6|||Graz|||8010|||Austria|||&&&21|||Familia Arquibaldo|||Aria Cruz|||Rua Orós, 92|||São Paulo|||05442-030|||Brazil|||&&&22|||FISSA Fabrica Inter. Salchichas S.A.|||Diego Roel|||C/ Moralzarzal, 86|||Madrid|||28034|||Spain|||&&&23|||Folies gourmandes|||Martine Rancé|||184, chaussée de Tournai|||Lille|||59000|||France|||&&&24|||Folk och fä HB|||Maria Larsson|||Åkergatan 24|||Bräcke|||S-844 67|||Sweden|||&&&25|||Frankenversand|||Peter Franken|||Berliner Platz 43|||München|||80805|||Germany|||&&&26|||France restauration|||Carine Schmitt|||54, rue Royale|||Nantes|||44000|||France|||&&&27|||Franchi S.p.A.|||Paolo Accorti|||Via Monte Bianco 34|||Torino|||10100|||Italy|||&&&28|||Furia Bacalhau e Frutos do Mar|||Lino Rodriguez|||Jardim das rosas n. 32|||Lisboa|||1675|||Portugal|||&&&29|||Galería del gastrónomo|||Eduardo Saavedra|||Rambla de Cataluña, 23|||Barcelona|||08022|||Spain|||&&&30|||Godos Cocina Típica|||José Pedro Freyre|||C/ Romero, 33|||Sevilla|||41101|||Spain|||&&&31|||Gourmet Lanchonetes|||André Fonseca|||Av. Brasil, 442|||Campinas|||04876-786|||Brazil|||&&&32|||Great Lakes Food Market|||Howard Snyder|||2732 Baker Blvd.|||Eugene|||97403|||USA|||&&&33|||GROSELLA-Restaurante|||Manuel Pereira|||5ª Ave. Los Palos Grandes|||Caracas|||1081|||Venezuela|||&&&34|||Hanari Carnes|||Mario Pontes|||Rua do Paço, 67|||Rio de Janeiro|||05454-876|||Brazil|||&&&35|||HILARIÓN-Abastos|||Carlos Hernández|||Carrera 22 con Ave. Carlos Soublette #8-35|||San Cristóbal|||5022|||Venezuela|||&&&36|||Hungry Coyote Import Store|||Yoshi Latimer|||City Center Plaza 516 Main St.|||Elgin|||97827|||USA|||&&&37|||Hungry Owl All-Night Grocers|||Patricia McKenna|||8 Johnstown Road|||Cork||||||Ireland|||&&&38|||Island Trading|||Helen Bennett|||Garden House Crowther Way|||Cowes|||PO31 7PJ|||UK|||&&&39|||Königlich Essen|||Philip Cramer|||Maubelstr. 90|||Brandenburg|||14776|||Germany|||&&&40|||La corne d'abondance|||Daniel Tonini|||67, avenue de l'Europe|||Versailles|||78000|||France|||&&&41|||La maison d'Asie|||Annette Roulet|||1 rue Alsace-Lorraine|||Toulouse|||31000|||France|||&&&42|||Laughing Bacchus Wine Cellars|||Yoshi Tannamuri|||1900 Oak St.|||Vancouver|||V3F 2K1|||Canada|||&&&43|||Lazy K Kountry Store|||John Steel|||12 Orchestra Terrace|||Walla Walla|||99362|||USA|||&&&44|||Lehmanns Marktstand|||Renate Messner|||Magazinweg 7|||Frankfurt a.M. |||60528|||Germany|||&&&45|||Let's Stop N Shop|||Jaime Yorres|||87 Polk St. Suite 5|||San Francisco|||94117|||USA|||&&&46|||LILA-Supermercado|||Carlos González|||Carrera 52 con Ave. Bolívar #65-98 Llano Largo|||Barquisimeto|||3508|||Venezuela|||&&&47|||LINO-Delicateses|||Felipe Izquierdo|||Ave. 5 de Mayo Porlamar|||I. de Margarita|||4980|||Venezuela|||&&&48|||Lonesome Pine Restaurant|||Fran Wilson|||89 Chiaroscuro Rd.|||Portland|||97219|||USA|||&&&49|||Magazzini Alimentari Riuniti|||Giovanni Rovelli|||Via Ludovico il Moro 22|||Bergamo|||24100|||Italy|||&&&50|||Maison Dewey|||Catherine Dewey|||Rue Joseph-Bens 532|||Bruxelles|||B-1180|||Belgium|||&&&51|||Mère Paillarde|||Jean Fresnière|||43 rue St. Laurent|||Montréal|||H1J 1C3|||Canada|||&&&52|||Morgenstern Gesundkost|||Alexander Feuer|||Heerstr. 22|||Leipzig|||04179|||Germany|||&&&53|||North/South|||Simon Crowther|||South House 300 Queensbridge|||London|||SW7 1RZ|||UK|||&&&54|||Océano Atlántico Ltda.|||Yvonne Moncada|||Ing. Gustavo Moncada 8585 Piso 20-A|||Buenos Aires|||1010|||Argentina|||&&&55|||Old World Delicatessen|||Rene Phillips|||2743 Bering St.|||Anchorage|||99508|||USA|||&&&56|||Ottilies Käseladen|||Henriette Pfalzheim|||Mehrheimerstr. 369|||Köln|||50739|||Germany|||&&&57|||Paris spécialités|||Marie Bertrand|||265, boulevard Charonne|||Paris|||75012|||France|||&&&58|||Pericles Comidas clásicas|||Guillermo Fernández|||Calle Dr. Jorge Cash 321|||México D.F.|||05033|||Mexico|||&&&59|||Piccolo und mehr|||Georg Pipps|||Geislweg 14|||Salzburg|||5020|||Austria|||&&&60|||Princesa Isabel Vinhoss|||Isabel de Castro|||Estrada da saúde n. 58|||Lisboa|||1756|||Portugal|||&&&61|||Que Delícia|||Bernardo Batista|||Rua da Panificadora, 12|||Rio de Janeiro|||02389-673|||Brazil|||&&&62|||Queen Cozinha|||Lúcia Carvalho|||Alameda dos Canàrios, 891|||São Paulo|||05487-020|||Brazil|||&&&63|||QUICK-Stop|||Horst Kloss|||Taucherstraße 10|||Cunewalde|||01307|||Germany|||&&&64|||Rancho grande|||Sergio Gutiérrez|||Av. del Libertador 900|||Buenos Aires|||1010|||Argentina|||&&&65|||Rattlesnake Canyon Grocery|||Paula Wilson|||2817 Milton Dr.|||Albuquerque|||87110|||USA|||&&&66|||Reggiani Caseifici|||Maurizio Moroni|||Strada Provinciale 124|||Reggio Emilia|||42100|||Italy|||&&&67|||Ricardo Adocicados|||Janete Limeira|||Av. Copacabana, 267|||Rio de Janeiro|||02389-890|||Brazil|||&&&68|||Richter Supermarkt|||Michael Holz|||Grenzacherweg 237|||Genève|||1203|||Switzerland|||&&&69|||Romero y tomillo|||Alejandra Camino|||Gran Vía, 1|||Madrid|||28001|||Spain|||&&&70|||Santé Gourmet|||Jonas Bergulfsen|||Erling Skakkes gate 78|||Stavern|||4110|||Norway|||&&&71|||Save-a-lot Markets|||Jose Pavarotti|||187 Suffolk Ln.|||Boise|||83720|||USA|||&&&72|||Seven Seas Imports|||Hari Kumar|||90 Wadhurst Rd.|||London|||OX15 4NB|||UK|||&&&73|||Simons bistro|||Jytte Petersen|||Vinbæltet 34|||København|||1734|||Denmark|||&&&74|||Spécialités du monde|||Dominique Perrier|||25, rue Lauriston|||Paris|||75016|||France|||&&&75|||Split Rail Beer & Ale|||Art Braunschweiger|||P.O. Box 555|||Lander|||82520|||USA|||&&&76|||Suprêmes délices|||Pascale Cartrain|||Boulevard Tirou, 255|||Charleroi|||B-6000|||Belgium|||&&&77|||The Big Cheese|||Liz Nixon|||89 Jefferson Way Suite 2|||Portland|||97201|||USA|||&&&78|||The Cracker Box|||Liu Wong|||55 Grizzly Peak Rd.|||Butte|||59801|||USA|||&&&79|||Toms Spezialitäten|||Karin Josephs|||Luisenstr. 48|||Münster|||44087|||Germany|||&&&80|||Tortuga Restaurante|||Miguel Angel Paolino|||Avda. Azteca 123|||México D.F.|||05033|||Mexico|||&&&81|||Tradição Hipermercados|||Anabela Domingues|||Av. Inês de Castro, 414|||São Paulo|||05634-030|||Brazil|||&&&82|||Trail's Head Gourmet Provisioners|||Helvetius Nagy|||722 DaVinci Blvd.|||Kirkland|||98034|||USA|||&&&83|||Vaffeljernet|||Palle Ibsen|||Smagsløget 45|||Århus|||8200|||Denmark|||&&&84|||Victuailles en stock|||Mary Saveley|||2, rue du Commerce|||Lyon|||69004|||France|||&&&85|||Vins et alcools Chevalier|||Paul Henriot|||59 rue de l'Abbaye|||Reims|||51100|||France|||&&&86|||Die Wandernde Kuh|||Rita Müller|||Adenauerallee 900|||Stuttgart|||70563|||Germany|||&&&87|||Wartian Herkku|||Pirkko Koskitalo|||Torikatu 38|||Oulu|||90110|||Finland|||&&&88|||Wellington Importadora|||Paula Parente|||Rua do Mercado, 12|||Resende|||08737-363|||Brazil|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&""]",[]
sql||ORDER BY,https://www.w3schools.com/sql/sql_orderby.asp,,"['The SQL ORDER BY Keyword', 'Demo Database', 'ORDER BY Example', 'ORDER BY DESC Example', 'ORDER BY Several Columns Example', 'ORDER BY Several Columns Example 2']","['The ORDER BY keyword is used to sort the result-set in ascending or \ndescending order.The ORDER BY keyword sorts the records in ascending order by default. To sort the records in descending order, use the \nDESC keyword.', 'Below is a selection from the ""Customers"" table in the Northwind sample database:', 'The following SQL statement selects all customers from the ""Customers"" table, \nsorted by the ""Country"" column:', 'The following SQL statement selects all customers from the ""Customers"" table, \nsorted DESCENDING by the ""Country"" column:', 'The following SQL statement selects all customers from the ""Customers"" table, \nsorted by the ""Country"" and the ""CustomerName"" column. This means that it orders \nby Country, but if some rows have the same Country, it orders them by \nCustomerName:', 'The following SQL statement selects all customers from the ""Customers"" table, \nsorted ascending by the ""Country"" and descending by the ""CustomerName"" column:']","['\nSELECT column1, column2, ...\nFROM table_name\nORDER BY column1, column2, ... ASC|DESC;', '\n SELECT * FROM Customers\n ORDER BY Country;\n', '\n SELECT * FROM Customers\n ORDER BY Country DESC;', '\n SELECT * FROM Customers\n ORDER BY Country, CustomerName;', '\n SELECT * FROM Customers\n ORDER BY Country ASC, CustomerName DESC;', '']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||INSERT INTO,https://www.w3schools.com/sql/sql_insert.asp,,"['The SQL INSERT INTO Statement', 'Demo Database', 'INSERT INTO Example', 'Insert Data Only in Specified Columns']","['The INSERT INTO statement is used to insert new records in a table.It is possible to write the INSERT INTO \nstatement in two ways:1. Specify both the column names and the values to be inserted:2. If you are adding values for all the columns of the table, you do not need to \nspecify the column names in the SQL query. However, make sure the order of the \nvalues is in the same order as the columns in the table. Here, the \nINSERT INTO syntax \nwould be as follows:', 'Below is a selection from the ""Customers"" table in the Northwind \nsample database:', 'The following SQL statement inserts a new record in the ""Customers"" table:The selection from the ""Customers"" table will now look like this:', 'It is also possible to only insert data in specific columns.The following SQL statement will insert a new record, but only insert data in the ""CustomerName"", \n""City"", and ""Country"" columns (CustomerID will \nbe updated automatically):The selection from the ""Customers"" table will now look like this:']","['\nINSERT INTO table_name (column1, column2, column3, ...)\nVALUES (value1, value2, value3, ...);', '\nINSERT INTO table_name\nVALUES (value1, value2, value3, ...);', ""\nINSERT INTO Customers (CustomerName, ContactName, Address, City, PostalCode, Country)\nVALUES ('Cardinal', 'Tom B. Erichsen', 'Skagen 21', 'Stavanger', '4006', 'Norway');\n"", ""\nINSERT INTO Customers (CustomerName, City, Country)\nVALUES ('Cardinal', 'Stavanger', 'Norway');\n""]",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&92|||Cardinal|||Tom B. Erichsen|||Skagen 21|||Stavanger|||4006|||Norway|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&92|||Cardinal|||null|||null\xa0|||Stavanger|||null|||Norway|||&&&']",[]
sql||NULL Values,https://www.w3schools.com/sql/sql_null_values.asp,,"['What is a NULL Value?', 'How to Test for NULL Values?', 'Demo Database', 'The IS NULL Operator', 'The IS NOT NULL Operator']","['A field with a NULL value is a field with no value.If a field in a table is optional, it is possible to insert a new record or \nupdate a record without adding a value to this field. Then, the field will be \nsaved with a NULL value.', 'It is not possible to test for NULL values with comparison operators, such as \n=, <, or <>.We will have to use the IS NULL and \nIS NOT NULL operators instead.', 'Below is a selection from the ""Customers"" table in the Northwind sample \ndatabase:', 'The IS NULL operator is used to test for empty values (NULL values).The following SQL lists all customers with a NULL value in the ""Address"" field:', 'The IS NOT NULL operator is used to test for non-empty values (NOT NULL \nvalues).The following SQL lists all customers with a value in the ""Address"" field:']","['\n  SELECT column_namesFROM table_name\n  WHERE column_name IS NULL;', '\n  SELECT column_namesFROM table_name\n  WHERE column_name IS NOT NULL;', '\n  SELECT CustomerName, ContactName, AddressFROM CustomersWHERE Address \n  IS NULL;\n', '\n  SELECT CustomerName, ContactName, AddressFROM CustomersWHERE Address \n  IS NOT NULL;\n', '']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||UPDATE,https://www.w3schools.com/sql/sql_update.asp,,"['The SQL UPDATE Statement', 'Demo Database', 'UPDATE Table', 'UPDATE Multiple Records', 'Update Warning!']","['The UPDATE statement is used to modify the existing records in a table.', 'Below is a selection from the ""Customers"" table in the Northwind sample \ndatabase:', 'The following SQL statement updates the first customer (CustomerID = 1) with a new contact person and \na new city.The selection from the ""Customers"" table will now look like this:', 'It is the WHERE clause that determines how many records will be updated.The following SQL statement will \nupdate the ContactName to ""Juan"" for all records where country is ""Mexico"":', 'The selection from the ""Customers"" table will now look like this:']","['\n UPDATE table_name\n SET column1 = value1, column2 = value2, ...\n WHERE condition;', ""\n UPDATE Customers\n SET ContactName = 'Alfred Schmidt', City= 'Frankfurt'\n WHERE CustomerID = 1;\n"", ""\nUPDATE Customers\nSET ContactName='Juan'\nWHERE Country='Mexico';\n"", ""\nUPDATE Customers\nSET ContactName='Juan';\n"", '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Alfred Schmidt|||Obere Str. 57|||Frankfurt|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Alfred Schmidt|||Obere Str. 57|||Frankfurt|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Juan|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Juan|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Juan|||Obere Str. 57|||Frankfurt|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Juan|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Juan|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Juan|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Juan|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&']",[]
sql||DELETE,https://www.w3schools.com/sql/sql_delete.asp,,"['The SQL DELETE Statement', 'Demo Database', 'SQL DELETE Example', 'Delete All Records']","['The DELETE statement is used to delete existing records in a table.', 'Below is a selection from the ""Customers"" table in the Northwind sample \ndatabase:', 'The following SQL statement deletes the customer ""Alfreds Futterkiste"" from \nthe ""Customers"" table:The ""Customers"" table will now look like this:', 'It is possible to delete all rows in a table without deleting the table. This \nmeans that the table structure, attributes, and indexes will be intact:The following SQL statement deletes all rows in the ""Customers"" table, \nwithout deleting the table:']","['\n DELETE FROM table_name WHERE condition;\n', ""\n DELETE FROM Customers\n WHERE CustomerName='Alfreds Futterkiste';\n"", '\nDELETE FROM table_name;\n &&&&&& \n  DELETE FROM Customers;\n', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&']",[]
"sql||TOP, LIMIT, FETCH FIRST or ROWNUM",https://www.w3schools.com/sql/sql_top.asp,,"['The SQL SELECT TOP Clause', 'Demo Database', 'SQL TOP, LIMIT and FETCH FIRST Examples', 'SQL TOP PERCENT Example', 'ADD a WHERE CLAUSE']","['The SELECT TOP clause is used to specify the number of records to return.The SELECT TOP clause is useful on large tables with thousands of \nrecords. Returning a large number of records can impact performance.SQL Server / MS Access Syntax:MySQL Syntax:Oracle 12 Syntax:Older Oracle Syntax:Older Oracle Syntax (with ORDER BY):', 'Below is a selection from the ""Customers"" table in the Northwind sample database:', 'The following SQL statement selects the first three records from the ""Customers"" table \n(for SQL Server/MS Access):The following SQL statement shows the equivalent example for MySQL:The following SQL statement shows the equivalent example for \nOracle:', 'The following SQL statement selects the first 50% of the records from the \n""Customers"" table (for SQL Server/MS Access):The following SQL statement shows the equivalent example for \nOracle:', 'The following SQL statement selects the first three records from the ""Customers"" table, \nwhere the country is ""Germany"" (for SQL Server/MS Access):The following SQL statement shows the equivalent example for MySQL:The following SQL statement shows the equivalent example for \nOracle:']","['\nSELECT TOP number|percent column_name(s)\nFROM table_nameWHERE condition;', '\nSELECT column_name(s)\nFROM table_nameWHERE condition\nLIMIT number;', '\nSELECT column_name(s)\nFROM table_nameORDER BY \n  column_name(s)\n  FETCH FIRST number ROWS ONLY;', '\nSELECT column_name(s)\nFROM table_name\nWHERE ROWNUM <= number;', '\n  SELECT *FROM (SELECT column_name(s) FROM table_name \n  ORDER BY column_name(s))\nWHERE ROWNUM <= number;', '\n SELECT TOP 3 * FROM Customers;\n &&&&&& \n SELECT * FROM CustomersLIMIT 3; &&&&&& \nSELECT * FROM CustomersFETCH FIRST 3 ROWS ONLY;', '\n SELECT TOP 50 PERCENT * FROM Customers;\n &&&&&& \nSELECT * FROM CustomersFETCH FIRST 50 PERCENT ROWS ONLY;\n']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||MIN() and MAX(),https://www.w3schools.com/sql/sql_min_max.asp,,"['The SQL MIN() and MAX() Functions', 'Demo Database', 'MIN() Example', 'MAX() Example']","['The MIN() function returns the smallest value of the selected column.The MAX() function returns the largest value of the selected column.', 'Below is a selection from the ""Products"" table in the Northwind sample database:', 'The following SQL statement finds the price of the cheapest product:', 'The following SQL statement finds the price of the most expensive product:']","['\nSELECT MIN(column_name)\nFROM table_name\nWHERE condition;', '\nSELECT MAX(column_name)\nFROM table_name\nWHERE condition;', '\n  SELECT MIN(Price) AS SmallestPriceFROM Products;\n', '\n  SELECT MAX(Price) AS LargestPriceFROM Products;']",[''],"[""ProductID|||ProductName|||SupplierID|||CategoryID|||Unit|||Price|||&&&1|||Chais|||1|||1|||10 boxes x 20 bags|||18|||&&&2|||Chang|||1|||1|||24 - 12 oz bottles|||19|||&&&3|||Aniseed Syrup|||1|||2|||12 - 550 ml bottles|||10|||&&&4|||Chef Anton's Cajun Seasoning|||2|||2|||48 - 6 oz jars|||22|||&&&5|||Chef Anton's Gumbo Mix|||2|||2|||36 boxes|||21.35|||&&&""]",[]
"sql||COUNT(), AVG() and SUM()",https://www.w3schools.com/sql/sql_count_avg_sum.asp,,"['The SQL COUNT(), AVG() and SUM() Functions', 'Demo Database', 'COUNT() Example', 'AVG() Example', 'Demo Database', 'SUM() Example']","['The COUNT() function returns the number of rows that matches a specified criterion.The AVG() function returns the average value of a numeric column.\xa0The SUM() function returns the total sum of a numeric column.\xa0', 'Below is a selection from the ""Products"" table in the Northwind sample database:', 'The following SQL statement finds the number of products:Note: NULL values are not counted.', 'The following SQL statement finds the average price of all products:Note: NULL values are ignored.', 'Below is a selection from the ""OrderDetails"" table in the Northwind \nsample database:', 'The following SQL statement finds the sum of the ""Quantity"" fields \nin the ""OrderDetails"" table:Note: NULL values are ignored.']","['\nSELECT COUNT(column_name)\nFROM table_name\nWHERE condition;', '\nSELECT AVG(column_name)\nFROM table_name\nWHERE condition;', '\nSELECT SUM(column_name)\nFROM table_name\nWHERE condition;', '\n  SELECT COUNT(ProductID)FROM Products;\n', '\n  SELECT AVG(Price)FROM Products;\n', '\nSELECT SUM(Quantity)FROM OrderDetails;']",[''],"[""ProductID|||ProductName|||SupplierID|||CategoryID|||Unit|||Price|||&&&1|||Chais|||1|||1|||10 boxes x 20 bags|||18|||&&&2|||Chang|||1|||1|||24 - 12 oz bottles|||19|||&&&3|||Aniseed Syrup|||1|||2|||12 - 550 ml bottles|||10|||&&&4|||Chef Anton's Cajun Seasoning|||2|||2|||48 - 6 oz jars|||22|||&&&5|||Chef Anton's Gumbo Mix|||2|||2|||36 boxes|||21.35|||&&&"", 'OrderDetailID|||OrderID|||ProductID|||Quantity|||&&&1|||10248|||11|||12|||&&&2|||10248|||42|||10|||&&&3|||10248|||72|||5|||&&&4|||10249|||14|||9|||&&&5|||10249|||51|||40|||&&&']",[]
sql||LIKE,https://www.w3schools.com/sql/sql_like.asp,,"['The SQL LIKE Operator', 'Demo Database', 'SQL LIKE Examples']","[""The LIKE operator is used in a \nWHERE clause to search for a specified pattern in a column.There are two wildcards often used in conjunction with the \nLIKE operator:The percent sign and the underscore can also be used in combinations!Here are some examples showing different LIKE operators with '%' and '_' wildcards:"", 'The table below shows the complete ""Customers"" table from the Northwind sample database:', 'The following SQL statement selects all customers with a CustomerName starting with \n""a"":The following SQL statement selects all customers with a CustomerName ending with ""a"":The following SQL statement selects all customers with a CustomerName that \nhave ""or"" in any position:The following SQL statement selects all customers with a CustomerName that \nhave ""r"" in the second position:The following SQL statement selects all customers with a CustomerName that \nstarts with ""a"" and are at least 3 characters in length:The following SQL statement selects all customers with a ContactName that \nstarts with ""a"" and ends with ""o"":The following SQL statement selects all customers with a CustomerName that \ndoes \nNOT start with ""a"":']","['\nSELECT column1, column2, ...\nFROM table_name\nWHERE columnN LIKE pattern;', ""\n SELECT * FROM Customers\n WHERE CustomerName LIKE 'a%'; &&&&&& \n SELECT * FROM Customers\n WHERE CustomerName LIKE '%a';  &&&&&& \n SELECT * FROM Customers\n  WHERE CustomerName LIKE '%or%';\n &&&&&& \n SELECT * FROM Customers\n  WHERE CustomerName LIKE '_r%';\n &&&&&& \n SELECT * FROM Customers\n  WHERE CustomerName LIKE 'a__%'; &&&&&& \n SELECT * FROM Customers\n  WHERE ContactName LIKE 'a%o'; &&&&&& \n SELECT * FROM Customers\n  WHERE CustomerName NOT LIKE 'a%';\n"", '']","['The SQL LIKE Operator###&&&|||\xa0The percent sign (%) represents zero, one, or multiple characters|||\xa0The underscore sign (_) represents one, single character|||']","['LIKE Operator|||Description|||&&&WHERE CustomerName LIKE \'a%\'|||Finds any values that start with ""a""|||&&&WHERE CustomerName LIKE \'%a\'|||Finds any values that end with ""a""|||&&&WHERE CustomerName LIKE \'%or%\'|||Finds any values that have ""or"" in any position|||&&&WHERE CustomerName LIKE \'_r%\'|||Finds any values that have ""r"" in the second position|||&&&WHERE CustomerName LIKE \'a_%\'|||Finds any values that start with ""a"" and are at least 2 characters in length|||&&&WHERE CustomerName LIKE \'a__%\'|||Finds any values that start with ""a"" and are at least 3 characters in length|||&&&WHERE ContactName LIKE \'a%o\'|||Finds any values that start with ""a"" and ends with ""o""|||&&&', ""CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&6|||Blauer See Delikatessen|||Hanna Moos|||Forsterstr. 57|||Mannheim|||68306|||Germany|||&&&7|||Blondel père et fils|||Frédérique Citeaux|||24, place Kléber|||Strasbourg|||67000|||France|||&&&8|||Bólido Comidas preparadas|||Martín Sommer|||C/ Araquil, 67|||Madrid|||28023|||Spain|||&&&9|||Bon app'|||Laurence Lebihans|||12, rue des Bouchers|||Marseille|||13008|||France|||&&&10|||Bottom-Dollar Marketse|||Elizabeth Lincoln|||23 Tsawassen Blvd.|||Tsawassen|||T2F 8M4|||Canada|||&&&11|||B's Beverages|||Victoria Ashworth|||Fauntleroy Circus|||London|||EC2 5NT|||UK|||&&&12|||Cactus Comidas para llevar|||Patricio Simpson|||Cerrito 333|||Buenos Aires|||1010|||Argentina|||&&&13|||Centro comercial Moctezuma|||Francisco Chang|||Sierras de Granada 9993|||México D.F.|||05022|||Mexico|||&&&14|||Chop-suey Chinese|||Yang Wang|||Hauptstr. 29|||Bern|||3012|||Switzerland|||&&&15|||Comércio Mineiro|||Pedro Afonso|||Av. dos Lusíadas, 23|||São Paulo|||05432-043|||Brazil|||&&&16|||Consolidated Holdings|||Elizabeth Brown|||Berkeley Gardens 12 Brewery|||London|||WX1 6LT|||UK|||&&&17|||Drachenblut Delikatessend|||Sven Ottlieb|||Walserweg 21|||Aachen|||52066|||Germany|||&&&18|||Du monde entier|||Janine Labrune|||67, rue des Cinquante Otages|||Nantes|||44000|||France|||&&&19|||Eastern Connection|||Ann Devon|||35 King George|||London|||WX3 6FW|||UK|||&&&20|||Ernst Handel|||Roland Mendel|||Kirchgasse 6|||Graz|||8010|||Austria|||&&&21|||Familia Arquibaldo|||Aria Cruz|||Rua Orós, 92|||São Paulo|||05442-030|||Brazil|||&&&22|||FISSA Fabrica Inter. Salchichas S.A.|||Diego Roel|||C/ Moralzarzal, 86|||Madrid|||28034|||Spain|||&&&23|||Folies gourmandes|||Martine Rancé|||184, chaussée de Tournai|||Lille|||59000|||France|||&&&24|||Folk och fä HB|||Maria Larsson|||Åkergatan 24|||Bräcke|||S-844 67|||Sweden|||&&&25|||Frankenversand|||Peter Franken|||Berliner Platz 43|||München|||80805|||Germany|||&&&26|||France restauration|||Carine Schmitt|||54, rue Royale|||Nantes|||44000|||France|||&&&27|||Franchi S.p.A.|||Paolo Accorti|||Via Monte Bianco 34|||Torino|||10100|||Italy|||&&&28|||Furia Bacalhau e Frutos do Mar|||Lino Rodriguez|||Jardim das rosas n. 32|||Lisboa|||1675|||Portugal|||&&&29|||Galería del gastrónomo|||Eduardo Saavedra|||Rambla de Cataluña, 23|||Barcelona|||08022|||Spain|||&&&30|||Godos Cocina Típica|||José Pedro Freyre|||C/ Romero, 33|||Sevilla|||41101|||Spain|||&&&31|||Gourmet Lanchonetes|||André Fonseca|||Av. Brasil, 442|||Campinas|||04876-786|||Brazil|||&&&32|||Great Lakes Food Market|||Howard Snyder|||2732 Baker Blvd.|||Eugene|||97403|||USA|||&&&33|||GROSELLA-Restaurante|||Manuel Pereira|||5ª Ave. Los Palos Grandes|||Caracas|||1081|||Venezuela|||&&&34|||Hanari Carnes|||Mario Pontes|||Rua do Paço, 67|||Rio de Janeiro|||05454-876|||Brazil|||&&&35|||HILARIÓN-Abastos|||Carlos Hernández|||Carrera 22 con Ave. Carlos Soublette #8-35|||San Cristóbal|||5022|||Venezuela|||&&&36|||Hungry Coyote Import Store|||Yoshi Latimer|||City Center Plaza 516 Main St.|||Elgin|||97827|||USA|||&&&37|||Hungry Owl All-Night Grocers|||Patricia McKenna|||8 Johnstown Road|||Cork||||||Ireland|||&&&38|||Island Trading|||Helen Bennett|||Garden House Crowther Way|||Cowes|||PO31 7PJ|||UK|||&&&39|||Königlich Essen|||Philip Cramer|||Maubelstr. 90|||Brandenburg|||14776|||Germany|||&&&40|||La corne d'abondance|||Daniel Tonini|||67, avenue de l'Europe|||Versailles|||78000|||France|||&&&41|||La maison d'Asie|||Annette Roulet|||1 rue Alsace-Lorraine|||Toulouse|||31000|||France|||&&&42|||Laughing Bacchus Wine Cellars|||Yoshi Tannamuri|||1900 Oak St.|||Vancouver|||V3F 2K1|||Canada|||&&&43|||Lazy K Kountry Store|||John Steel|||12 Orchestra Terrace|||Walla Walla|||99362|||USA|||&&&44|||Lehmanns Marktstand|||Renate Messner|||Magazinweg 7|||Frankfurt a.M. |||60528|||Germany|||&&&45|||Let's Stop N Shop|||Jaime Yorres|||87 Polk St. Suite 5|||San Francisco|||94117|||USA|||&&&46|||LILA-Supermercado|||Carlos González|||Carrera 52 con Ave. Bolívar #65-98 Llano Largo|||Barquisimeto|||3508|||Venezuela|||&&&47|||LINO-Delicateses|||Felipe Izquierdo|||Ave. 5 de Mayo Porlamar|||I. de Margarita|||4980|||Venezuela|||&&&48|||Lonesome Pine Restaurant|||Fran Wilson|||89 Chiaroscuro Rd.|||Portland|||97219|||USA|||&&&49|||Magazzini Alimentari Riuniti|||Giovanni Rovelli|||Via Ludovico il Moro 22|||Bergamo|||24100|||Italy|||&&&50|||Maison Dewey|||Catherine Dewey|||Rue Joseph-Bens 532|||Bruxelles|||B-1180|||Belgium|||&&&51|||Mère Paillarde|||Jean Fresnière|||43 rue St. Laurent|||Montréal|||H1J 1C3|||Canada|||&&&52|||Morgenstern Gesundkost|||Alexander Feuer|||Heerstr. 22|||Leipzig|||04179|||Germany|||&&&53|||North/South|||Simon Crowther|||South House 300 Queensbridge|||London|||SW7 1RZ|||UK|||&&&54|||Océano Atlántico Ltda.|||Yvonne Moncada|||Ing. Gustavo Moncada 8585 Piso 20-A|||Buenos Aires|||1010|||Argentina|||&&&55|||Old World Delicatessen|||Rene Phillips|||2743 Bering St.|||Anchorage|||99508|||USA|||&&&56|||Ottilies Käseladen|||Henriette Pfalzheim|||Mehrheimerstr. 369|||Köln|||50739|||Germany|||&&&57|||Paris spécialités|||Marie Bertrand|||265, boulevard Charonne|||Paris|||75012|||France|||&&&58|||Pericles Comidas clásicas|||Guillermo Fernández|||Calle Dr. Jorge Cash 321|||México D.F.|||05033|||Mexico|||&&&59|||Piccolo und mehr|||Georg Pipps|||Geislweg 14|||Salzburg|||5020|||Austria|||&&&60|||Princesa Isabel Vinhoss|||Isabel de Castro|||Estrada da saúde n. 58|||Lisboa|||1756|||Portugal|||&&&61|||Que Delícia|||Bernardo Batista|||Rua da Panificadora, 12|||Rio de Janeiro|||02389-673|||Brazil|||&&&62|||Queen Cozinha|||Lúcia Carvalho|||Alameda dos Canàrios, 891|||São Paulo|||05487-020|||Brazil|||&&&63|||QUICK-Stop|||Horst Kloss|||Taucherstraße 10|||Cunewalde|||01307|||Germany|||&&&64|||Rancho grande|||Sergio Gutiérrez|||Av. del Libertador 900|||Buenos Aires|||1010|||Argentina|||&&&65|||Rattlesnake Canyon Grocery|||Paula Wilson|||2817 Milton Dr.|||Albuquerque|||87110|||USA|||&&&66|||Reggiani Caseifici|||Maurizio Moroni|||Strada Provinciale 124|||Reggio Emilia|||42100|||Italy|||&&&67|||Ricardo Adocicados|||Janete Limeira|||Av. Copacabana, 267|||Rio de Janeiro|||02389-890|||Brazil|||&&&68|||Richter Supermarkt|||Michael Holz|||Grenzacherweg 237|||Genève|||1203|||Switzerland|||&&&69|||Romero y tomillo|||Alejandra Camino|||Gran Vía, 1|||Madrid|||28001|||Spain|||&&&70|||Santé Gourmet|||Jonas Bergulfsen|||Erling Skakkes gate 78|||Stavern|||4110|||Norway|||&&&71|||Save-a-lot Markets|||Jose Pavarotti|||187 Suffolk Ln.|||Boise|||83720|||USA|||&&&72|||Seven Seas Imports|||Hari Kumar|||90 Wadhurst Rd.|||London|||OX15 4NB|||UK|||&&&73|||Simons bistro|||Jytte Petersen|||Vinbæltet 34|||København|||1734|||Denmark|||&&&74|||Spécialités du monde|||Dominique Perrier|||25, rue Lauriston|||Paris|||75016|||France|||&&&75|||Split Rail Beer & Ale|||Art Braunschweiger|||P.O. Box 555|||Lander|||82520|||USA|||&&&76|||Suprêmes délices|||Pascale Cartrain|||Boulevard Tirou, 255|||Charleroi|||B-6000|||Belgium|||&&&77|||The Big Cheese|||Liz Nixon|||89 Jefferson Way Suite 2|||Portland|||97201|||USA|||&&&78|||The Cracker Box|||Liu Wong|||55 Grizzly Peak Rd.|||Butte|||59801|||USA|||&&&79|||Toms Spezialitäten|||Karin Josephs|||Luisenstr. 48|||Münster|||44087|||Germany|||&&&80|||Tortuga Restaurante|||Miguel Angel Paolino|||Avda. Azteca 123|||México D.F.|||05033|||Mexico|||&&&81|||Tradição Hipermercados|||Anabela Domingues|||Av. Inês de Castro, 414|||São Paulo|||05634-030|||Brazil|||&&&82|||Trail's Head Gourmet Provisioners|||Helvetius Nagy|||722 DaVinci Blvd.|||Kirkland|||98034|||USA|||&&&83|||Vaffeljernet|||Palle Ibsen|||Smagsløget 45|||Århus|||8200|||Denmark|||&&&84|||Victuailles en stock|||Mary Saveley|||2, rue du Commerce|||Lyon|||69004|||France|||&&&85|||Vins et alcools Chevalier|||Paul Henriot|||59 rue de l'Abbaye|||Reims|||51100|||France|||&&&86|||Die Wandernde Kuh|||Rita Müller|||Adenauerallee 900|||Stuttgart|||70563|||Germany|||&&&87|||Wartian Herkku|||Pirkko Koskitalo|||Torikatu 38|||Oulu|||90110|||Finland|||&&&88|||Wellington Importadora|||Paula Parente|||Rua do Mercado, 12|||Resende|||08737-363|||Brazil|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&""]",[]
sql||Wildcards,https://www.w3schools.com/sql/sql_wildcards.asp,,"['SQL Wildcard Characters', 'Demo Database', 'Using the % Wildcard', 'Using the _ Wildcard', 'Using the [charlist] Wildcard', 'Using the [!charlist] Wildcard']","[""A wildcard character is used to substitute one or more characters in a string.Wildcard characters are used with the \nLIKE \noperator. The LIKE operator is used in a \nWHERE clause to search for a specified pattern in a column.All the wildcards can also be used in combinations!Here are some examples showing different LIKE operators with '%' and '_' wildcards:"", 'The table below shows the complete ""Customers"" table from the Northwind sample database:', 'The following SQL statement selects all customers with a City starting with \n""ber"":The following SQL statement selects all customers with a City containing the \npattern ""es"":\xa0', 'The following SQL statement selects all customers with a City starting with \nany character, followed by ""ondon"":The following SQL statement selects all customers with a City starting with \n""L"", followed by any character, followed by ""n"", followed by any character, \nfollowed by ""on"":', 'The following SQL statement selects all customers with a City starting with \n""b"", ""s"", or ""p"":The following SQL statement selects all customers with a City starting with \n""a"", ""b"", or ""c"":', 'The two following SQL statements select all customers with a City NOT starting \nwith ""b"", ""s"", or ""p"":Or:']","[""\n SELECT * FROM Customers\n WHERE City LIKE 'ber%';  &&&&&& \n SELECT * FROM Customers\n WHERE City LIKE '%es%';\n"", ""\n SELECT * FROM Customers\n WHERE City LIKE '_ondon';\n &&&&&& \n SELECT * FROM Customers\n WHERE City LIKE 'L_n_on';\n"", ""\n SELECT * FROM Customers\n WHERE City LIKE '[bsp]%';\n &&&&&& \n SELECT * FROM Customers\n WHERE City LIKE '[a-c]%';\n"", ""\n SELECT * FROM Customers\n WHERE City LIKE '[!bsp]%'; &&&&&& \n SELECT * FROM Customers\n WHERE City NOT LIKE '[bsp]%';"", '', '']",[''],"['Symbol|||Description|||Example|||&&&*|||Represents zero or more characters|||bl* finds bl, black, blue, and blob|||&&&?|||Represents a single character|||h?t finds hot, hat, and hit|||&&&[]|||Represents any single character within the brackets|||h[oa]t finds hot and hat, but not hit|||&&&!|||Represents any character not in the brackets|||h[!oa]t finds hit, but not hot and hat|||&&&-|||Represents any single character within the specified range|||c[a-b]t finds cat and cbt|||&&&#|||Represents any single numeric character|||2#5 finds 205, 215, 225, 235, 245, 255, 265, 275, 285, and 295|||&&&', 'Symbol|||Description|||Example|||&&&%|||Represents zero or more characters|||bl% finds bl, black, blue, and blob|||&&&_|||Represents a single character|||h_t finds hot, hat, and hit|||&&&[]|||Represents any single character within the brackets|||h[oa]t finds hot and hat, but not hit|||&&&^|||Represents any character not in the brackets|||h[^oa]t finds hit, but not hot and hat|||&&&-|||Represents any single character within the specified range|||c[a-b]t finds cat and cbt|||&&&', 'LIKE Operator|||Description|||&&&WHERE CustomerName LIKE \'a%\'|||Finds any values that starts with ""a""|||&&&WHERE CustomerName LIKE \'%a\'|||Finds any values that ends with ""a""|||&&&WHERE CustomerName LIKE \'%or%\'|||Finds any values that have ""or"" in any position|||&&&WHERE CustomerName LIKE \'_r%\'|||Finds any values that have ""r"" in the second position|||&&&WHERE CustomerName LIKE \'a__%\'|||Finds any values that starts with ""a"" and are at least 3 characters in length|||&&&WHERE ContactName LIKE \'a%o\'|||Finds any values that starts with ""a"" and ends with ""o""|||&&&', ""CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&6|||Blauer See Delikatessen|||Hanna Moos|||Forsterstr. 57|||Mannheim|||68306|||Germany|||&&&7|||Blondel père et fils|||Frédérique Citeaux|||24, place Kléber|||Strasbourg|||67000|||France|||&&&8|||Bólido Comidas preparadas|||Martín Sommer|||C/ Araquil, 67|||Madrid|||28023|||Spain|||&&&9|||Bon app'|||Laurence Lebihans|||12, rue des Bouchers|||Marseille|||13008|||France|||&&&10|||Bottom-Dollar Marketse|||Elizabeth Lincoln|||23 Tsawassen Blvd.|||Tsawassen|||T2F 8M4|||Canada|||&&&11|||B's Beverages|||Victoria Ashworth|||Fauntleroy Circus|||London|||EC2 5NT|||UK|||&&&12|||Cactus Comidas para llevar|||Patricio Simpson|||Cerrito 333|||Buenos Aires|||1010|||Argentina|||&&&13|||Centro comercial Moctezuma|||Francisco Chang|||Sierras de Granada 9993|||México D.F.|||05022|||Mexico|||&&&14|||Chop-suey Chinese|||Yang Wang|||Hauptstr. 29|||Bern|||3012|||Switzerland|||&&&15|||Comércio Mineiro|||Pedro Afonso|||Av. dos Lusíadas, 23|||São Paulo|||05432-043|||Brazil|||&&&16|||Consolidated Holdings|||Elizabeth Brown|||Berkeley Gardens 12 Brewery|||London|||WX1 6LT|||UK|||&&&17|||Drachenblut Delikatessend|||Sven Ottlieb|||Walserweg 21|||Aachen|||52066|||Germany|||&&&18|||Du monde entier|||Janine Labrune|||67, rue des Cinquante Otages|||Nantes|||44000|||France|||&&&19|||Eastern Connection|||Ann Devon|||35 King George|||London|||WX3 6FW|||UK|||&&&20|||Ernst Handel|||Roland Mendel|||Kirchgasse 6|||Graz|||8010|||Austria|||&&&21|||Familia Arquibaldo|||Aria Cruz|||Rua Orós, 92|||São Paulo|||05442-030|||Brazil|||&&&22|||FISSA Fabrica Inter. Salchichas S.A.|||Diego Roel|||C/ Moralzarzal, 86|||Madrid|||28034|||Spain|||&&&23|||Folies gourmandes|||Martine Rancé|||184, chaussée de Tournai|||Lille|||59000|||France|||&&&24|||Folk och fä HB|||Maria Larsson|||Åkergatan 24|||Bräcke|||S-844 67|||Sweden|||&&&25|||Frankenversand|||Peter Franken|||Berliner Platz 43|||München|||80805|||Germany|||&&&26|||France restauration|||Carine Schmitt|||54, rue Royale|||Nantes|||44000|||France|||&&&27|||Franchi S.p.A.|||Paolo Accorti|||Via Monte Bianco 34|||Torino|||10100|||Italy|||&&&28|||Furia Bacalhau e Frutos do Mar|||Lino Rodriguez|||Jardim das rosas n. 32|||Lisboa|||1675|||Portugal|||&&&29|||Galería del gastrónomo|||Eduardo Saavedra|||Rambla de Cataluña, 23|||Barcelona|||08022|||Spain|||&&&30|||Godos Cocina Típica|||José Pedro Freyre|||C/ Romero, 33|||Sevilla|||41101|||Spain|||&&&31|||Gourmet Lanchonetes|||André Fonseca|||Av. Brasil, 442|||Campinas|||04876-786|||Brazil|||&&&32|||Great Lakes Food Market|||Howard Snyder|||2732 Baker Blvd.|||Eugene|||97403|||USA|||&&&33|||GROSELLA-Restaurante|||Manuel Pereira|||5ª Ave. Los Palos Grandes|||Caracas|||1081|||Venezuela|||&&&34|||Hanari Carnes|||Mario Pontes|||Rua do Paço, 67|||Rio de Janeiro|||05454-876|||Brazil|||&&&35|||HILARIÓN-Abastos|||Carlos Hernández|||Carrera 22 con Ave. Carlos Soublette #8-35|||San Cristóbal|||5022|||Venezuela|||&&&36|||Hungry Coyote Import Store|||Yoshi Latimer|||City Center Plaza 516 Main St.|||Elgin|||97827|||USA|||&&&37|||Hungry Owl All-Night Grocers|||Patricia McKenna|||8 Johnstown Road|||Cork||||||Ireland|||&&&38|||Island Trading|||Helen Bennett|||Garden House Crowther Way|||Cowes|||PO31 7PJ|||UK|||&&&39|||Königlich Essen|||Philip Cramer|||Maubelstr. 90|||Brandenburg|||14776|||Germany|||&&&40|||La corne d'abondance|||Daniel Tonini|||67, avenue de l'Europe|||Versailles|||78000|||France|||&&&41|||La maison d'Asie|||Annette Roulet|||1 rue Alsace-Lorraine|||Toulouse|||31000|||France|||&&&42|||Laughing Bacchus Wine Cellars|||Yoshi Tannamuri|||1900 Oak St.|||Vancouver|||V3F 2K1|||Canada|||&&&43|||Lazy K Kountry Store|||John Steel|||12 Orchestra Terrace|||Walla Walla|||99362|||USA|||&&&44|||Lehmanns Marktstand|||Renate Messner|||Magazinweg 7|||Frankfurt a.M. |||60528|||Germany|||&&&45|||Let's Stop N Shop|||Jaime Yorres|||87 Polk St. Suite 5|||San Francisco|||94117|||USA|||&&&46|||LILA-Supermercado|||Carlos González|||Carrera 52 con Ave. Bolívar #65-98 Llano Largo|||Barquisimeto|||3508|||Venezuela|||&&&47|||LINO-Delicateses|||Felipe Izquierdo|||Ave. 5 de Mayo Porlamar|||I. de Margarita|||4980|||Venezuela|||&&&48|||Lonesome Pine Restaurant|||Fran Wilson|||89 Chiaroscuro Rd.|||Portland|||97219|||USA|||&&&49|||Magazzini Alimentari Riuniti|||Giovanni Rovelli|||Via Ludovico il Moro 22|||Bergamo|||24100|||Italy|||&&&50|||Maison Dewey|||Catherine Dewey|||Rue Joseph-Bens 532|||Bruxelles|||B-1180|||Belgium|||&&&51|||Mère Paillarde|||Jean Fresnière|||43 rue St. Laurent|||Montréal|||H1J 1C3|||Canada|||&&&52|||Morgenstern Gesundkost|||Alexander Feuer|||Heerstr. 22|||Leipzig|||04179|||Germany|||&&&53|||North/South|||Simon Crowther|||South House 300 Queensbridge|||London|||SW7 1RZ|||UK|||&&&54|||Océano Atlántico Ltda.|||Yvonne Moncada|||Ing. Gustavo Moncada 8585 Piso 20-A|||Buenos Aires|||1010|||Argentina|||&&&55|||Old World Delicatessen|||Rene Phillips|||2743 Bering St.|||Anchorage|||99508|||USA|||&&&56|||Ottilies Käseladen|||Henriette Pfalzheim|||Mehrheimerstr. 369|||Köln|||50739|||Germany|||&&&57|||Paris spécialités|||Marie Bertrand|||265, boulevard Charonne|||Paris|||75012|||France|||&&&58|||Pericles Comidas clásicas|||Guillermo Fernández|||Calle Dr. Jorge Cash 321|||México D.F.|||05033|||Mexico|||&&&59|||Piccolo und mehr|||Georg Pipps|||Geislweg 14|||Salzburg|||5020|||Austria|||&&&60|||Princesa Isabel Vinhoss|||Isabel de Castro|||Estrada da saúde n. 58|||Lisboa|||1756|||Portugal|||&&&61|||Que Delícia|||Bernardo Batista|||Rua da Panificadora, 12|||Rio de Janeiro|||02389-673|||Brazil|||&&&62|||Queen Cozinha|||Lúcia Carvalho|||Alameda dos Canàrios, 891|||São Paulo|||05487-020|||Brazil|||&&&63|||QUICK-Stop|||Horst Kloss|||Taucherstraße 10|||Cunewalde|||01307|||Germany|||&&&64|||Rancho grande|||Sergio Gutiérrez|||Av. del Libertador 900|||Buenos Aires|||1010|||Argentina|||&&&65|||Rattlesnake Canyon Grocery|||Paula Wilson|||2817 Milton Dr.|||Albuquerque|||87110|||USA|||&&&66|||Reggiani Caseifici|||Maurizio Moroni|||Strada Provinciale 124|||Reggio Emilia|||42100|||Italy|||&&&67|||Ricardo Adocicados|||Janete Limeira|||Av. Copacabana, 267|||Rio de Janeiro|||02389-890|||Brazil|||&&&68|||Richter Supermarkt|||Michael Holz|||Grenzacherweg 237|||Genève|||1203|||Switzerland|||&&&69|||Romero y tomillo|||Alejandra Camino|||Gran Vía, 1|||Madrid|||28001|||Spain|||&&&70|||Santé Gourmet|||Jonas Bergulfsen|||Erling Skakkes gate 78|||Stavern|||4110|||Norway|||&&&71|||Save-a-lot Markets|||Jose Pavarotti|||187 Suffolk Ln.|||Boise|||83720|||USA|||&&&72|||Seven Seas Imports|||Hari Kumar|||90 Wadhurst Rd.|||London|||OX15 4NB|||UK|||&&&73|||Simons bistro|||Jytte Petersen|||Vinbæltet 34|||København|||1734|||Denmark|||&&&74|||Spécialités du monde|||Dominique Perrier|||25, rue Lauriston|||Paris|||75016|||France|||&&&75|||Split Rail Beer & Ale|||Art Braunschweiger|||P.O. Box 555|||Lander|||82520|||USA|||&&&76|||Suprêmes délices|||Pascale Cartrain|||Boulevard Tirou, 255|||Charleroi|||B-6000|||Belgium|||&&&77|||The Big Cheese|||Liz Nixon|||89 Jefferson Way Suite 2|||Portland|||97201|||USA|||&&&78|||The Cracker Box|||Liu Wong|||55 Grizzly Peak Rd.|||Butte|||59801|||USA|||&&&79|||Toms Spezialitäten|||Karin Josephs|||Luisenstr. 48|||Münster|||44087|||Germany|||&&&80|||Tortuga Restaurante|||Miguel Angel Paolino|||Avda. Azteca 123|||México D.F.|||05033|||Mexico|||&&&81|||Tradição Hipermercados|||Anabela Domingues|||Av. Inês de Castro, 414|||São Paulo|||05634-030|||Brazil|||&&&82|||Trail's Head Gourmet Provisioners|||Helvetius Nagy|||722 DaVinci Blvd.|||Kirkland|||98034|||USA|||&&&83|||Vaffeljernet|||Palle Ibsen|||Smagsløget 45|||Århus|||8200|||Denmark|||&&&84|||Victuailles en stock|||Mary Saveley|||2, rue du Commerce|||Lyon|||69004|||France|||&&&85|||Vins et alcools Chevalier|||Paul Henriot|||59 rue de l'Abbaye|||Reims|||51100|||France|||&&&86|||Die Wandernde Kuh|||Rita Müller|||Adenauerallee 900|||Stuttgart|||70563|||Germany|||&&&87|||Wartian Herkku|||Pirkko Koskitalo|||Torikatu 38|||Oulu|||90110|||Finland|||&&&88|||Wellington Importadora|||Paula Parente|||Rua do Mercado, 12|||Resende|||08737-363|||Brazil|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&""]",[]
sql||IN,https://www.w3schools.com/sql/sql_in.asp,,"['The SQL IN Operator', 'Demo Database', 'IN Operator Examples']","['The IN operator allows you to specify multiple values in a \nWHERE clause.The IN operator is a shorthand for multiple \nOR conditions.or:', 'The table below shows the complete ""Customers"" table from the Northwind sample database:', 'The following SQL statement selects all customers that are located in ""Germany"", ""France"" \nor ""UK"":The following SQL statement selects all customers that are NOT located in ""Germany"", ""France"" or ""UK"":The following SQL statement selects all customers that are from the same \ncountries as the suppliers:']","['\nSELECT column_name(s)\nFROM table_name\nWHERE column_name IN (value1, value2, ...);', '\nSELECT column_name(s)\nFROM table_name\nWHERE column_name IN (SELECT STATEMENT);', ""\n SELECT * FROM Customers\n  WHERE Country IN ('Germany', 'France', 'UK');\n &&&&&& \n SELECT * FROM Customers\n  WHERE Country NOT IN ('Germany', 'France', 'UK');\n &&&&&& \n SELECT * FROM Customers\n  WHERE Country IN (SELECT Country FROM Suppliers);\n""]",[''],"[""CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&6|||Blauer See Delikatessen|||Hanna Moos|||Forsterstr. 57|||Mannheim|||68306|||Germany|||&&&7|||Blondel père et fils|||Frédérique Citeaux|||24, place Kléber|||Strasbourg|||67000|||France|||&&&8|||Bólido Comidas preparadas|||Martín Sommer|||C/ Araquil, 67|||Madrid|||28023|||Spain|||&&&9|||Bon app'|||Laurence Lebihans|||12, rue des Bouchers|||Marseille|||13008|||France|||&&&10|||Bottom-Dollar Marketse|||Elizabeth Lincoln|||23 Tsawassen Blvd.|||Tsawassen|||T2F 8M4|||Canada|||&&&11|||B's Beverages|||Victoria Ashworth|||Fauntleroy Circus|||London|||EC2 5NT|||UK|||&&&12|||Cactus Comidas para llevar|||Patricio Simpson|||Cerrito 333|||Buenos Aires|||1010|||Argentina|||&&&13|||Centro comercial Moctezuma|||Francisco Chang|||Sierras de Granada 9993|||México D.F.|||05022|||Mexico|||&&&14|||Chop-suey Chinese|||Yang Wang|||Hauptstr. 29|||Bern|||3012|||Switzerland|||&&&15|||Comércio Mineiro|||Pedro Afonso|||Av. dos Lusíadas, 23|||São Paulo|||05432-043|||Brazil|||&&&16|||Consolidated Holdings|||Elizabeth Brown|||Berkeley Gardens 12 Brewery|||London|||WX1 6LT|||UK|||&&&17|||Drachenblut Delikatessend|||Sven Ottlieb|||Walserweg 21|||Aachen|||52066|||Germany|||&&&18|||Du monde entier|||Janine Labrune|||67, rue des Cinquante Otages|||Nantes|||44000|||France|||&&&19|||Eastern Connection|||Ann Devon|||35 King George|||London|||WX3 6FW|||UK|||&&&20|||Ernst Handel|||Roland Mendel|||Kirchgasse 6|||Graz|||8010|||Austria|||&&&21|||Familia Arquibaldo|||Aria Cruz|||Rua Orós, 92|||São Paulo|||05442-030|||Brazil|||&&&22|||FISSA Fabrica Inter. Salchichas S.A.|||Diego Roel|||C/ Moralzarzal, 86|||Madrid|||28034|||Spain|||&&&23|||Folies gourmandes|||Martine Rancé|||184, chaussée de Tournai|||Lille|||59000|||France|||&&&24|||Folk och fä HB|||Maria Larsson|||Åkergatan 24|||Bräcke|||S-844 67|||Sweden|||&&&25|||Frankenversand|||Peter Franken|||Berliner Platz 43|||München|||80805|||Germany|||&&&26|||France restauration|||Carine Schmitt|||54, rue Royale|||Nantes|||44000|||France|||&&&27|||Franchi S.p.A.|||Paolo Accorti|||Via Monte Bianco 34|||Torino|||10100|||Italy|||&&&28|||Furia Bacalhau e Frutos do Mar|||Lino Rodriguez|||Jardim das rosas n. 32|||Lisboa|||1675|||Portugal|||&&&29|||Galería del gastrónomo|||Eduardo Saavedra|||Rambla de Cataluña, 23|||Barcelona|||08022|||Spain|||&&&30|||Godos Cocina Típica|||José Pedro Freyre|||C/ Romero, 33|||Sevilla|||41101|||Spain|||&&&31|||Gourmet Lanchonetes|||André Fonseca|||Av. Brasil, 442|||Campinas|||04876-786|||Brazil|||&&&32|||Great Lakes Food Market|||Howard Snyder|||2732 Baker Blvd.|||Eugene|||97403|||USA|||&&&33|||GROSELLA-Restaurante|||Manuel Pereira|||5ª Ave. Los Palos Grandes|||Caracas|||1081|||Venezuela|||&&&34|||Hanari Carnes|||Mario Pontes|||Rua do Paço, 67|||Rio de Janeiro|||05454-876|||Brazil|||&&&35|||HILARIÓN-Abastos|||Carlos Hernández|||Carrera 22 con Ave. Carlos Soublette #8-35|||San Cristóbal|||5022|||Venezuela|||&&&36|||Hungry Coyote Import Store|||Yoshi Latimer|||City Center Plaza 516 Main St.|||Elgin|||97827|||USA|||&&&37|||Hungry Owl All-Night Grocers|||Patricia McKenna|||8 Johnstown Road|||Cork||||||Ireland|||&&&38|||Island Trading|||Helen Bennett|||Garden House Crowther Way|||Cowes|||PO31 7PJ|||UK|||&&&39|||Königlich Essen|||Philip Cramer|||Maubelstr. 90|||Brandenburg|||14776|||Germany|||&&&40|||La corne d'abondance|||Daniel Tonini|||67, avenue de l'Europe|||Versailles|||78000|||France|||&&&41|||La maison d'Asie|||Annette Roulet|||1 rue Alsace-Lorraine|||Toulouse|||31000|||France|||&&&42|||Laughing Bacchus Wine Cellars|||Yoshi Tannamuri|||1900 Oak St.|||Vancouver|||V3F 2K1|||Canada|||&&&43|||Lazy K Kountry Store|||John Steel|||12 Orchestra Terrace|||Walla Walla|||99362|||USA|||&&&44|||Lehmanns Marktstand|||Renate Messner|||Magazinweg 7|||Frankfurt a.M. |||60528|||Germany|||&&&45|||Let's Stop N Shop|||Jaime Yorres|||87 Polk St. Suite 5|||San Francisco|||94117|||USA|||&&&46|||LILA-Supermercado|||Carlos González|||Carrera 52 con Ave. Bolívar #65-98 Llano Largo|||Barquisimeto|||3508|||Venezuela|||&&&47|||LINO-Delicateses|||Felipe Izquierdo|||Ave. 5 de Mayo Porlamar|||I. de Margarita|||4980|||Venezuela|||&&&48|||Lonesome Pine Restaurant|||Fran Wilson|||89 Chiaroscuro Rd.|||Portland|||97219|||USA|||&&&49|||Magazzini Alimentari Riuniti|||Giovanni Rovelli|||Via Ludovico il Moro 22|||Bergamo|||24100|||Italy|||&&&50|||Maison Dewey|||Catherine Dewey|||Rue Joseph-Bens 532|||Bruxelles|||B-1180|||Belgium|||&&&51|||Mère Paillarde|||Jean Fresnière|||43 rue St. Laurent|||Montréal|||H1J 1C3|||Canada|||&&&52|||Morgenstern Gesundkost|||Alexander Feuer|||Heerstr. 22|||Leipzig|||04179|||Germany|||&&&53|||North/South|||Simon Crowther|||South House 300 Queensbridge|||London|||SW7 1RZ|||UK|||&&&54|||Océano Atlántico Ltda.|||Yvonne Moncada|||Ing. Gustavo Moncada 8585 Piso 20-A|||Buenos Aires|||1010|||Argentina|||&&&55|||Old World Delicatessen|||Rene Phillips|||2743 Bering St.|||Anchorage|||99508|||USA|||&&&56|||Ottilies Käseladen|||Henriette Pfalzheim|||Mehrheimerstr. 369|||Köln|||50739|||Germany|||&&&57|||Paris spécialités|||Marie Bertrand|||265, boulevard Charonne|||Paris|||75012|||France|||&&&58|||Pericles Comidas clásicas|||Guillermo Fernández|||Calle Dr. Jorge Cash 321|||México D.F.|||05033|||Mexico|||&&&59|||Piccolo und mehr|||Georg Pipps|||Geislweg 14|||Salzburg|||5020|||Austria|||&&&60|||Princesa Isabel Vinhoss|||Isabel de Castro|||Estrada da saúde n. 58|||Lisboa|||1756|||Portugal|||&&&61|||Que Delícia|||Bernardo Batista|||Rua da Panificadora, 12|||Rio de Janeiro|||02389-673|||Brazil|||&&&62|||Queen Cozinha|||Lúcia Carvalho|||Alameda dos Canàrios, 891|||São Paulo|||05487-020|||Brazil|||&&&63|||QUICK-Stop|||Horst Kloss|||Taucherstraße 10|||Cunewalde|||01307|||Germany|||&&&64|||Rancho grande|||Sergio Gutiérrez|||Av. del Libertador 900|||Buenos Aires|||1010|||Argentina|||&&&65|||Rattlesnake Canyon Grocery|||Paula Wilson|||2817 Milton Dr.|||Albuquerque|||87110|||USA|||&&&66|||Reggiani Caseifici|||Maurizio Moroni|||Strada Provinciale 124|||Reggio Emilia|||42100|||Italy|||&&&67|||Ricardo Adocicados|||Janete Limeira|||Av. Copacabana, 267|||Rio de Janeiro|||02389-890|||Brazil|||&&&68|||Richter Supermarkt|||Michael Holz|||Grenzacherweg 237|||Genève|||1203|||Switzerland|||&&&69|||Romero y tomillo|||Alejandra Camino|||Gran Vía, 1|||Madrid|||28001|||Spain|||&&&70|||Santé Gourmet|||Jonas Bergulfsen|||Erling Skakkes gate 78|||Stavern|||4110|||Norway|||&&&71|||Save-a-lot Markets|||Jose Pavarotti|||187 Suffolk Ln.|||Boise|||83720|||USA|||&&&72|||Seven Seas Imports|||Hari Kumar|||90 Wadhurst Rd.|||London|||OX15 4NB|||UK|||&&&73|||Simons bistro|||Jytte Petersen|||Vinbæltet 34|||København|||1734|||Denmark|||&&&74|||Spécialités du monde|||Dominique Perrier|||25, rue Lauriston|||Paris|||75016|||France|||&&&75|||Split Rail Beer & Ale|||Art Braunschweiger|||P.O. Box 555|||Lander|||82520|||USA|||&&&76|||Suprêmes délices|||Pascale Cartrain|||Boulevard Tirou, 255|||Charleroi|||B-6000|||Belgium|||&&&77|||The Big Cheese|||Liz Nixon|||89 Jefferson Way Suite 2|||Portland|||97201|||USA|||&&&78|||The Cracker Box|||Liu Wong|||55 Grizzly Peak Rd.|||Butte|||59801|||USA|||&&&79|||Toms Spezialitäten|||Karin Josephs|||Luisenstr. 48|||Münster|||44087|||Germany|||&&&80|||Tortuga Restaurante|||Miguel Angel Paolino|||Avda. Azteca 123|||México D.F.|||05033|||Mexico|||&&&81|||Tradição Hipermercados|||Anabela Domingues|||Av. Inês de Castro, 414|||São Paulo|||05634-030|||Brazil|||&&&82|||Trail's Head Gourmet Provisioners|||Helvetius Nagy|||722 DaVinci Blvd.|||Kirkland|||98034|||USA|||&&&83|||Vaffeljernet|||Palle Ibsen|||Smagsløget 45|||Århus|||8200|||Denmark|||&&&84|||Victuailles en stock|||Mary Saveley|||2, rue du Commerce|||Lyon|||69004|||France|||&&&85|||Vins et alcools Chevalier|||Paul Henriot|||59 rue de l'Abbaye|||Reims|||51100|||France|||&&&86|||Die Wandernde Kuh|||Rita Müller|||Adenauerallee 900|||Stuttgart|||70563|||Germany|||&&&87|||Wartian Herkku|||Pirkko Koskitalo|||Torikatu 38|||Oulu|||90110|||Finland|||&&&88|||Wellington Importadora|||Paula Parente|||Rua do Mercado, 12|||Resende|||08737-363|||Brazil|||&&&89|||White Clover Markets|||Karl Jablonski|||305 - 14th Ave. S. Suite 3B|||Seattle|||98128|||USA|||&&&90|||Wilman Kala|||Matti Karttunen|||Keskuskatu 45|||Helsinki|||21240|||Finland|||&&&91|||Wolski|||Zbyszek|||ul. Filtrowa 68|||Walla|||01-012|||Poland|||&&&""]",[]
sql||BETWEEN,https://www.w3schools.com/sql/sql_between.asp,,"['The SQL BETWEEN Operator', 'Demo Database', 'BETWEEN Example', 'NOT BETWEEN Example', 'BETWEEN with IN Example', 'BETWEEN Text Values Example', 'NOT BETWEEN Text Values Example', 'Sample Table', 'BETWEEN Dates Example']","['The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates.The BETWEEN operator is inclusive: begin and end values are included.\xa0', 'Below is a selection from the ""Products"" table in the Northwind \nsample database:', 'The following SQL statement selects all products with a price between 10 and 20:', 'To display the products outside the range of the previous example, use \nNOT BETWEEN:', 'The following SQL statement selects all products with a price between 10 and \n20. In addition; do not show products with a CategoryID of 1,2, or 3:', ""The following SQL statement selects all products with a ProductName between Carnarvon \nTigers and Mozzarella di Giovanni:The following SQL statement selects all products with a ProductName between Carnarvon \nTigers and Chef Anton's Cajun Seasoning:"", 'The following SQL statement selects all products with a ProductName not \nbetween Carnarvon \nTigers and Mozzarella di Giovanni:', 'Below is a selection from the ""Orders"" table in the Northwind \nsample database:', ""The following SQL statement selects all orders with an OrderDate between '01-July-1996' and \n'31-July-1996':OR:""]","['\nSELECT column_name(s)\nFROM table_name\nWHERE column_name BETWEEN value1 AND value2;', '\n SELECT * FROM ProductsWHERE Price BETWEEN 10 AND 20;\n', '\n SELECT * FROM ProductsWHERE Price NOT BETWEEN 10 AND 20;\n', '\n SELECT * FROM ProductsWHERE Price BETWEEN 10 AND 20AND CategoryID NOT IN (1,2,3);\n', '\n SELECT * FROM ProductsWHERE ProductName BETWEEN \'Carnarvon Tigers\' AND \'Mozzarella \n  di Giovanni\'ORDER BY ProductName;\n &&&&&& \n SELECT * FROM ProductsWHERE ProductName BETWEEN ""Carnarvon Tigers"" AND \n  ""Chef Anton\'s Cajun Seasoning""ORDER BY ProductName;\n', ""\n SELECT * FROM ProductsWHERE ProductName NOT BETWEEN 'Carnarvon Tigers' AND 'Mozzarella \n  di Giovanni'ORDER BY ProductName;\n"", ""\n SELECT * FROM OrdersWHERE OrderDate BETWEEN #07/01/1996# AND #07/31/1996#;\n &&&&&& \nSELECT * FROM OrdersWHERE OrderDate BETWEEN '1996-07-01' AND '1996-07-31';\n"", '', '']",[''],"[""ProductID|||ProductName|||SupplierID|||CategoryID|||Unit|||Price|||&&&1|||Chais|||1|||1|||10 boxes x 20 bags|||18|||&&&2|||Chang|||1|||1|||24 - 12 oz bottles|||19|||&&&3|||Aniseed Syrup|||1|||2|||12 - 550 ml bottles|||10|||&&&4|||Chef Anton's Cajun Seasoning|||1|||2|||48 - 6 oz jars|||22|||&&&5|||Chef Anton's Gumbo Mix|||1|||2|||36 boxes|||21.35|||&&&"", 'OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10248|||90|||5|||7/4/1996|||3|||&&&10249|||81|||6|||7/5/1996|||1|||&&&10250|||34|||4|||7/8/1996|||2|||&&&10251|||84|||3|||7/9/1996|||1|||&&&10252|||76|||4|||7/10/1996|||2|||&&&']",[]
sql||Aliases,https://www.w3schools.com/sql/sql_alias.asp,,"['SQL Aliases', 'Demo Database', 'Alias for Columns Examples', 'Alias for Tables Example']","['SQL aliases are used to give a table, or a column in a table, a temporary name.Aliases are often used to make column names more readable.An alias only exists for the duration of that query.An alias is created with the AS keyword.', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Customers"" table:And a selection from the ""Orders"" table:', 'The following SQL statement creates two aliases, one for the CustomerID \ncolumn and one for the CustomerName column:The following SQL statement creates two aliases, one for the CustomerName \ncolumn and one for the ContactName column. Note: It requires \ndouble quotation marks or square brackets if the alias name contains spaces:The following SQL statement creates an alias named ""Address"" that combine four columns (Address, PostalCode, \nCity and Country):Note: To get the SQL statement above to work in MySQL use the following:', 'The following SQL statement selects all the orders from the customer with \nCustomerID=4 (Around the Horn). We use the ""Customers"" and ""Orders"" tables, and \ngive them the table aliases of ""c"" and ""o"" respectively (Here we use \naliases to make the SQL shorter):The following SQL statement is the same as above, but without aliases:Aliases can be useful when:']","['\n SELECT column_name AS alias_name\n FROM table_name;', '\n SELECT column_name(s)\n FROM table_name AS alias_name;\n', ""\n SELECT CustomerID AS ID, CustomerName AS Customer\n FROM Customers; &&&&&& \n SELECT CustomerName AS Customer, ContactName AS [Contact Person]\n FROM Customers; &&&&&& \n  SELECT CustomerName, Address + ', ' + PostalCode + ' ' + City + ', ' + Country \n  AS Address\n FROM Customers;"", ""\nSELECT CustomerName, CONCAT(Address,', ',PostalCode,', ',City,', ',Country) AS Address\nFROM Customers;"", ""\n SELECT o.OrderID, o.OrderDate, c.CustomerNameFROM Customers AS c, Orders AS oWHERE c.CustomerName='Around the Horn' AND c.CustomerID=o.CustomerID;\n &&&&&& \n SELECT Orders.OrderID, Orders.OrderDate, Customers.CustomerNameFROM Customers, OrdersWHERE Customers.CustomerName='Around the Horn' AND Customers.CustomerID=Orders.CustomerID;\n""]",['Alias for Tables Example###&&&|||There are more than one table involved in a query|||Functions are used in the query|||Column names are big or not very readable|||Two or more columns are combined together|||'],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&', 'OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10354|||58|||8|||1996-11-14|||3|||&&&10355|||4|||6|||1996-11-15|||1|||&&&10356|||86|||6|||1996-11-18|||2|||&&&']",[]
sql||Joins,https://www.w3schools.com/sql/sql_join.asp,,"['SQL JOIN', 'Different Types of SQL JOINs']","['A JOIN clause is used to combine rows from two or more tables, based on \na related column between them.Let\'s look at a selection from the ""Orders"" table:Then, look at a selection from the ""Customers"" table:Notice that the ""CustomerID"" column in the ""Orders"" table refers to the \n""CustomerID"" in the ""Customers"" table. The relationship between the two tables above \nis the ""CustomerID"" column.Then, we can create the following SQL statement (that contains an \nINNER JOIN), \nthat selects records that have matching values in both tables:and it will produce something like this:', 'Here are the different types of the JOINs in SQL:\n\xa0\n\xa0\n\xa0\n\n']","['\n SELECT Orders.OrderID, Customers.CustomerName, Orders.OrderDateFROM OrdersINNER JOIN Customers ON Orders.CustomerID=Customers.CustomerID;\n', '']","['Different Types of SQL JOINs###&&&|||(INNER) JOIN: Returns records that have matching values in both tables|||LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table|||RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched |||  records from the left table|||FULL (OUTER) JOIN: Returns all records when there is a match in either left |||  or right table|||']","['OrderID|||CustomerID|||OrderDate|||&&&10308|||2|||1996-09-18|||&&&10309|||37|||1996-09-19|||&&&10310|||77|||1996-09-20|||&&&', 'CustomerID|||CustomerName|||ContactName|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mexico|||&&&', 'OrderID|||CustomerName|||OrderDate|||&&&10308|||Ana Trujillo Emparedados y helados|||9/18/1996|||&&&10365|||Antonio Moreno Taquería|||11/27/1996|||&&&10383|||Around the Horn|||12/16/1996|||&&&10355|||Around the Horn|||11/15/1996|||&&&10278|||Berglunds snabbköp|||8/12/1996|||&&&']","['img_innerjoin.gif', 'img_leftjoin.gif', 'img_rightjoin.gif', 'img_fulljoin.gif']"
sql||INNER JOIN,https://www.w3schools.com/sql/sql_join_inner.asp,,"['SQL INNER JOIN Keyword', 'Demo Database', 'SQL INNER JOIN Example', '\xa0JOIN Three Tables']","['The INNER JOIN keyword selects records that have matching values in \nboth tables.', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Orders"" table:And a selection from the ""Customers"" table:', 'The following SQL statement selects all orders with customer information:Note: The INNER JOIN keyword selects all rows from both \ntables as long as there is a match between the columns. If there are records in the \n""Orders"" table that do not have matches in ""Customers"", these orders will not \nbe shown!', 'The following SQL statement selects all orders with customer and shipper \ninformation:']","['\nSELECT column_name(s)\nFROM table1\nINNER JOIN table2 ON table1.column_name = table2.column_name;\n', '\n  SELECT Orders.OrderID, Customers.CustomerNameFROM OrdersINNER JOIN \n  Customers ON Orders.CustomerID = Customers.CustomerID;', '\n  SELECT Orders.OrderID, Customers.CustomerName, Shippers.ShipperNameFROM \n  ((OrdersINNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID)\n  INNER JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID);', '']",[''],"['OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10308|||2|||7|||1996-09-18|||3|||&&&10309|||37|||3|||1996-09-19|||1|||&&&10310|||77|||8|||1996-09-20|||2|||&&&', 'CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&']",['img_innerjoin.gif']
sql||LEFT JOIN,https://www.w3schools.com/sql/sql_join_left.asp,,"['SQL LEFT JOIN Keyword', 'Demo Database', 'SQL LEFT JOIN Example']","['The LEFT JOIN keyword returns all records from the left table (table1), and the \nmatching records from the right table (table2). The result is 0 records from the right side, \nif there is no match.Note: In some databases LEFT JOIN is called LEFT OUTER JOIN.', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Customers"" table:And a selection from the ""Orders"" table:', 'The following SQL statement will select all customers, and any orders they \nmight have:Note: The LEFT JOIN keyword returns all records from the \nleft table (Customers), even if there are no matches in the right table \n(Orders).']","['\nSELECT column_name(s)\nFROM table1\nLEFT JOIN table2 ON table1.column_name = table2.column_name;\n', '', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&', 'OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10308|||2|||7|||1996-09-18|||3|||&&&10309|||37|||3|||1996-09-19|||1|||&&&10310|||77|||8|||1996-09-20|||2|||&&&']",['img_leftjoin.gif']
sql||RIGHT JOIN,https://www.w3schools.com/sql/sql_join_right.asp,,"['SQL RIGHT JOIN Keyword', 'Demo Database', 'SQL RIGHT JOIN Example']","['The RIGHT JOIN keyword returns all records from the right table (table2), and the \nmatching records from the left table (table1). The result is 0 records from the left side, \nif there is no match.Note: In some databases RIGHT JOIN is called \nRIGHT OUTER JOIN.', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Orders"" table:And a selection from the ""Employees"" table:', 'The following SQL statement will return all employees, and any orders they \nmight have placed:Note: The RIGHT JOIN keyword returns all records from the \nright table (Employees), even if there are no matches in the left table \n(Orders).']","['\nSELECT column_name(s)\nFROM table1\nRIGHT JOIN table2 ON table1.column_name = table2.column_name;\n', '\n SELECT Orders.OrderID, Employees.LastName, Employees.FirstNameFROM OrdersRIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID\n ORDER BY Orders.OrderID;', '']",[''],"['OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10308|||2|||7|||1996-09-18|||3|||&&&10309|||37|||3|||1996-09-19|||1|||&&&10310|||77|||8|||1996-09-20|||2|||&&&', 'EmployeeID|||LastName|||FirstName|||BirthDate|||Photo|||&&&1|||Davolio|||Nancy|||12/8/1968|||EmpID1.pic|||&&&2|||Fuller|||Andrew|||2/19/1952|||EmpID2.pic|||&&&3|||Leverling|||Janet|||8/30/1963|||EmpID3.pic|||&&&']",['img_rightjoin.gif']
sql||FULL OUTER JOIN,https://www.w3schools.com/sql/sql_join_full.asp,,"['SQL FULL OUTER JOIN Keyword', 'Demo Database', 'SQL FULL OUTER JOIN Example']","['The FULL OUTER JOIN keyword returns all records when there is a match in \nleft (table1) or right (table2) table records.Tip: FULL OUTER JOIN and \nFULL JOIN are the same.Note: FULL OUTER JOIN can potentially return very large \nresult-sets!', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Customers"" table:And a selection from the ""Orders"" table:', 'The following SQL statement selects all customers, and all orders:A selection from the result set may look like this:Note: The FULL OUTER JOIN keyword returns all matching \nrecords from both tables whether the other table matches or not. So, if \nthere are rows in ""Customers"" that do not have matches in ""Orders"", or if there \nare rows in ""Orders"" that do not have matches in ""Customers"", those rows will be \nlisted as well.']","['\n SELECT column_name(s)\n FROM table1\n FULL OUTER JOIN table2 ON table1.column_name = table2.column_name\n  WHERE condition;', '', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&', 'OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10308|||2|||7|||1996-09-18|||3|||&&&10309|||37|||3|||1996-09-19|||1|||&&&10310|||77|||8|||1996-09-20|||2|||&&&', 'CustomerName|||OrderID|||&&&Null|||10309|||&&&Null|||10310|||&&&Alfreds Futterkiste|||Null|||&&&Ana Trujillo Emparedados y helados |||10308|||&&&Antonio Moreno Taquería |||Null|||&&&']",['img_fulljoin.gif']
sql||Self Join,https://www.w3schools.com/sql/sql_join_self.asp,,"['SQL Self Join', 'Demo Database', 'SQL Self Join Example']","['A self join is a regular join, but the table is joined with itself.T1 and T2 are different table aliases for the same table.', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Customers"" table:', 'The following SQL statement matches customers that are from the same city:']","['\nSELECT column_name(s)\nFROM table1 T1, table1 T2\n  WHERE condition;\n', '', '']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&'],[]
sql||UNION,https://www.w3schools.com/sql/sql_union.asp,,"['The SQL UNION Operator', 'Demo Database', 'SQL UNION Example', 'SQL UNION ALL Example', 'SQL UNION With WHERE', 'SQL UNION ALL With WHERE', 'Another UNION Example']","['The UNION operator is used to combine the result-set of two or more \nSELECT \nstatements.The UNION operator selects only distinct values by default. To allow \nduplicate values, use UNION ALL:Note: The column names in the result-set are usually equal to \nthe column names in the first SELECT statement.', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Customers"" table:And a selection from the ""Suppliers"" table:', 'The following SQL statement returns the cities \n(only distinct values) from both the ""Customers"" and the ""Suppliers"" table:Note: If some customers or suppliers have the same city, each city will only be \nlisted once, because UNION selects only distinct values. Use \nUNION ALL to also select \nduplicate values!', 'The following SQL statement returns the cities \n(duplicate values also) from both the ""Customers"" and the ""Suppliers"" table:', 'The following SQL statement returns the German cities \n(only distinct values) from both the ""Customers"" and the ""Suppliers"" table:', 'The following SQL statement returns the German cities (duplicate values also) from \nboth the ""Customers"" and the ""Suppliers"" table:', 'The following SQL statement lists all customers and suppliers:Notice the ""AS Type"" above - it is an alias. SQL \nAliases are used to give a table or a column a temporary name.\nAn alias only exists for the duration of the query. So, here we have created a \ntemporary column named ""Type"", that list whether the contact person is a \n""Customer"" or a ""Supplier"".']","['\n SELECT column_name(s) FROM table1\n UNION\n SELECT column_name(s) FROM table2;', '\n SELECT column_name(s) FROM table1\n UNION ALL\n SELECT column_name(s) FROM table2;', '\n SELECT City FROM CustomersUNIONSELECT City FROM SuppliersORDER BY City;\n', '\n SELECT City FROM CustomersUNION ALLSELECT City FROM Suppliers\n ORDER BY City;\n', ""\n SELECT City, Country FROM CustomersWHERE Country='Germany'UNION\n SELECT City, Country FROM SuppliersWHERE Country='Germany'ORDER BY City;\n"", ""\n SELECT City, Country FROM CustomersWHERE Country='Germany'UNION ALL\n SELECT City, Country FROM SuppliersWHERE Country='Germany'ORDER BY City;\n"", '']",['The SQL UNION Operator###&&&|||Every SELECT statement within|||  UNION must have the same number |||of columns|||The columns must also have similar data types|||The columns in |||  every SELECT statement must also be in the same order|||'],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&', ""SupplierID|||SupplierName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Exotic Liquid|||Charlotte Cooper|||49 Gilbert St.|||London|||EC1 4SD|||UK|||&&&2|||New Orleans Cajun Delights|||Shelley Burke|||P.O. Box 78934|||New Orleans|||70117|||USA|||&&&3|||Grandma Kelly's Homestead|||Regina Murphy|||707 Oxford Rd.|||Ann Arbor|||48104|||USA|||&&&""]",[]
sql||GROUP BY,https://www.w3schools.com/sql/sql_groupby.asp,,"['The SQL GROUP BY Statement', 'Demo Database', 'SQL GROUP BY Examples', 'Demo Database', 'GROUP BY With JOIN Example']","['The GROUP BY statement groups rows that have the same values into summary \nrows, like ""find the number of customers in each country"".The GROUP BY statement is often used with aggregate functions (COUNT(), \nMAX(), \nMIN(), SUM(), \nAVG()) to group the result-set by one or more columns.', 'Below is a selection from the ""Customers"" table in the Northwind sample \ndatabase:', 'The following SQL statement lists the number of customers in each country:The following SQL statement lists the number of customers in each country, \nsorted high to low:', 'Below is a selection from the ""Orders"" table in the Northwind sample database:And a selection from the ""Shippers"" table:', 'The following SQL statement lists the number of orders sent by each shipper:']","['\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n  GROUP BY column_name(s)ORDER BY column_name(s);\n\n', '\n  SELECT COUNT(CustomerID), CountryFROM CustomersGROUP BY Country;\n &&&&&& \n  SELECT COUNT(CustomerID), CountryFROM CustomersGROUP BY Country\n  ORDER BY COUNT(CustomerID) DESC;\n', '\n  SELECT Shippers.ShipperName, COUNT(Orders.OrderID) AS NumberOfOrders FROM \n  OrdersLEFT JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID\n  GROUP BY ShipperName;\n', '', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10248|||90|||5|||1996-07-04|||3|||&&&10249|||81|||6|||1996-07-05|||1|||&&&10250|||34|||4|||1996-07-08|||2|||&&&', 'ShipperID|||ShipperName|||&&&1|||Speedy Express|||&&&2|||United Package|||&&&3|||Federal Shipping|||&&&']",[]
sql||HAVING,https://www.w3schools.com/sql/sql_having.asp,,"['The SQL HAVING Clause', 'Demo Database', 'SQL HAVING Examples', 'Demo Database', 'More HAVING Examples']","['The HAVING clause was added to SQL because the \nWHERE keyword cannot be \nused with aggregate functions.', 'Below is a selection from the ""Customers"" table in the Northwind sample \ndatabase:', 'The following SQL statement lists the number of customers in each country. \nOnly include countries with more than 5 customers:The following SQL statement lists the number of customers in each country, \nsorted high to low (Only include countries with more than 5 customers):', 'Below is a selection from the ""Orders"" table in the Northwind sample database:And a selection from the ""Employees"" table:', 'The following SQL statement lists the employees that have registered more \nthan 10 orders:The following SQL statement lists if the employees ""Davolio"" or ""Fuller"" have registered \nmore than 25 orders:']","['\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n  GROUP BY column_name(s)HAVING conditionORDER BY \n  column_name(s);', '\n  SELECT COUNT(CustomerID), CountryFROM CustomersGROUP BY Country\n  HAVING COUNT(CustomerID) > 5;\n &&&&&& \n  SELECT COUNT(CustomerID), CountryFROM CustomersGROUP BY CountryHAVING COUNT(CustomerID) \n  > 5\n  ORDER BY COUNT(CustomerID) DESC;\n', '', '', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&', 'OrderID|||CustomerID|||EmployeeID|||OrderDate|||ShipperID|||&&&10248|||90|||5|||1996-07-04|||3|||&&&10249|||81|||6|||1996-07-05|||1|||&&&10250|||34|||4|||1996-07-08|||2|||&&&', 'EmployeeID|||LastName|||FirstName|||BirthDate|||Photo|||Notes|||&&&1|||Davolio|||Nancy|||1968-12-08|||EmpID1.pic|||Education includes a BA....|||&&&2|||Fuller|||Andrew|||1952-02-19|||EmpID2.pic|||Andrew received his BTS....|||&&&3|||Leverling|||Janet|||1963-08-30|||EmpID3.pic|||Janet has a BS degree....|||&&&']",[]
sql||EXISTS Operator,https://www.w3schools.com/sql/sql_exists.asp,,"['The SQL EXISTS Operator', 'Demo Database', 'SQL EXISTS Examples']","['The EXISTS operator is used to test for the existence of any record in a subquery.The EXISTS operator returns TRUE if the subquery returns one or more records.', 'Below is a selection from the ""Products"" table in the Northwind sample database:And a selection from the ""Suppliers"" table:', 'The following SQL statement returns TRUE and lists the suppliers with a product price less than 20:The following SQL statement returns TRUE and lists the suppliers with a product price \nequal to 22:']","['\n  SELECT column_name(s)\n  FROM table_name\n  WHERE \n  EXISTS(SELECT column_name FROM table_name WHERE\n  condition);', '', '']",[''],"[""ProductID|||ProductName|||SupplierID|||CategoryID|||Unit|||Price|||&&&1|||Chais|||1|||1|||10 boxes x 20 bags|||18|||&&&2|||Chang|||1|||1|||24 - 12 oz bottles|||19|||&&&3|||Aniseed Syrup|||1|||2|||12 - 550 ml bottles|||10|||&&&4|||Chef Anton's Cajun Seasoning|||2|||2|||48 - 6 oz jars|||22|||&&&5|||Chef Anton's Gumbo Mix|||2|||2|||36 boxes|||21.35|||&&&"", ""SupplierID|||SupplierName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Exotic Liquid|||Charlotte Cooper|||49 Gilbert St.|||London|||EC1 4SD|||UK|||&&&2|||New Orleans Cajun Delights|||Shelley Burke|||P.O. Box 78934|||New Orleans|||70117|||USA|||&&&3|||Grandma Kelly's Homestead|||Regina Murphy|||707 Oxford Rd.|||Ann Arbor|||48104|||USA|||&&&4|||Tokyo Traders|||Yoshi Nagase|||9-8 Sekimai Musashino-shi|||Tokyo|||100|||Japan|||&&&""]",[]
sql||ANY and ALL Operators,https://www.w3schools.com/sql/sql_any_all.asp,,"['The SQL ANY and ALL Operators', 'The SQL ANY Operator', 'The SQL ALL Operator', 'Demo Database', 'SQL ANY Examples', 'SQL ALL Examples']","['The ANY and ALL operators allow you to perform a comparison between a single \ncolumn value and a range of other values.', 'The ANY operator:ANY means that the condition will be true if the operation is true for \nany of the values in the range.', 'The ALL operator:ALL means that the condition will be true only if the operation is true \nfor all values in the range.\xa0', 'Below is a selection from the ""Products"" table in the Northwind sample database:And a selection from the ""OrderDetails"" table:', 'The following SQL statement lists the ProductName if it \nfinds ANY records in the OrderDetails table has Quantity equal to 10 (this will \nreturn TRUE because the Quantity column has some values of 10):The following SQL statement lists the ProductName if it \nfinds ANY records in the OrderDetails table has Quantity larger than 99 (this \nwill return TRUE because the Quantity column has some values larger than 99):The following SQL statement lists the ProductName if it \nfinds ANY records in the OrderDetails table has Quantity larger than 1000 (this \nwill return FALSE because the Quantity column has no values larger than 1000):', 'The following SQL statement lists ALL the product names:The following SQL statement lists the ProductName if ALL the records in the \nOrderDetails table has Quantity equal to 10. This will of course return FALSE \nbecause the Quantity column has many different values (not only the value of 10):']","['\n  SELECT column_name(s)\n  FROM table_name\n  WHERE \n  column_name operator ANY\xa0 (SELECT column_name\xa0 FROM table_name\xa0 WHERE\n  condition);', '\n  SELECT ALL column_name(s)\n  FROM table_name\n  WHERE \n  condition;', '\n  SELECT column_name(s)\n  FROM table_name\n  WHERE \n  column_name operator ALL\xa0 (SELECT column_name\xa0 FROM table_name\xa0 WHERE condition);', '\n  SELECT ProductNameFROM ProductsWHERE ProductID = ANY\xa0 (SELECT ProductID\xa0 FROM OrderDetails\xa0 WHERE Quantity = 10); &&&&&& \n  SELECT ProductNameFROM ProductsWHERE ProductID = ANY\xa0 (SELECT ProductID\xa0 \n  FROM OrderDetails\xa0 WHERE Quantity > 99); &&&&&& \n  SELECT ProductNameFROM ProductsWHERE ProductID = ANY\xa0 (SELECT ProductID\xa0 \n  FROM OrderDetails\xa0 WHERE Quantity > 1000);', '', '']","['The SQL ANY Operator###The SQL ALL Operator###&&&|||returns a boolean value as a result|||returns TRUE if ANY of the subquery values meet the condition|||&&&|||returns a boolean value as a result|||returns TRUE if ALL of the subquery values meet the condition|||is used with SELECT, |||  WHERE and HAVING statements|||']","[""ProductID|||ProductName|||SupplierID|||CategoryID|||Unit|||Price|||&&&1|||Chais|||1|||1|||10 boxes x 20 bags|||18|||&&&2|||Chang|||1|||1|||24 - 12 oz bottles|||19|||&&&3|||Aniseed Syrup|||1|||2|||12 - 550 ml bottles|||10|||&&&4|||Chef Anton's Cajun Seasoning|||2|||2|||48 - 6 oz jars|||22|||&&&5|||Chef Anton's Gumbo Mix|||2|||2|||36 boxes|||21.35|||&&&6|||Grandma's Boysenberry Spread|||3|||2|||12 - 8 oz jars|||25|||&&&7|||Uncle Bob's Organic Dried Pears|||3|||7|||12 - 1 lb pkgs.|||30|||&&&8|||Northwoods Cranberry Sauce|||3|||2|||12 - 12 oz jars|||40|||&&&9|||Mishi Kobe Niku|||4|||6|||18 - 500 g pkgs.|||97|||&&&"", 'OrderDetailID|||OrderID|||ProductID|||Quantity|||&&&1|||10248|||11|||12|||&&&2|||10248|||42|||10|||&&&3|||10248|||72|||5|||&&&4|||10249|||14|||9|||&&&5|||10249|||51|||40|||&&&6|||10250|||41|||10|||&&&7|||10250|||51|||35|||&&&8|||10250|||65|||15|||&&&9|||10251|||22|||6|||&&&10|||10251|||57|||15|||&&&']",[]
sql||SELECT INTO,https://www.w3schools.com/sql/sql_select_into.asp,,"['The SQL SELECT INTO Statement', 'SQL SELECT INTO Examples']","['The SELECT INTO statement copies data from one table into a new table.Copy all columns into a new table:Copy only some columns into a new table:The new table will be created with the column-names and types as defined in the old table.\nYou can create new column names using the AS clause.', 'The following SQL statement creates a backup copy of Customers:The following SQL statement uses the IN clause to copy the table into a new \ntable in another database:The following SQL statement copies only a few columns into a new table:The following SQL statement copies only the German customers into a new table:The following SQL statement copies data from more than one table into a new table:Tip: SELECT INTO can also be used to create a \nnew, empty table using the schema of another. Just add a \nWHERE clause that \ncauses the query to return no data:']","['\nSELECT *\nINTO newtable [IN externaldb]\nFROM oldtableWHERE condition;', '\nSELECT column1, column2, column3, ...\nINTO newtable [IN externaldb] \nFROM oldtableWHERE condition;']",[''],[],[]
sql||INSERT INTO SELECT,https://www.w3schools.com/sql/sql_insert_into_select.asp,,"['The SQL INSERT INTO SELECT Statement', 'Demo Database', 'SQL INSERT INTO SELECT Examples']","['The INSERT INTO SELECT statement copies data from one table and \ninserts it into another table.The INSERT INTO SELECT statement requires that \nthe data types in source and target tables match.Note: The existing records in the target table are unaffected.Copy all columns from one table to another table:Copy only some columns from one table into another table:', 'In this tutorial we will use the well-known Northwind sample database.Below is a selection from the ""Customers"" table:And a selection from the ""Suppliers"" table:', 'The following SQL statement copies ""Suppliers"" into ""Customers"" (the columns \nthat are not filled with data, will contain NULL):The following SQL statement copies ""Suppliers"" into ""Customers"" (fill all \ncolumns):The following SQL statement copies only the German suppliers into ""Customers"":']","['\nINSERT INTO table2\nSELECT * FROM table1WHERE condition;', '\nINSERT INTO table2 (column1, column2, column3, ...)\nSELECT column1, column2, column3, ... FROM table1\nWHERE condition;', '']",[''],"['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&', ""SupplierID|||SupplierName|||ContactName|||Address|||City|||Postal Code|||Country|||&&&1|||Exotic Liquid|||Charlotte Cooper|||49 Gilbert St.|||Londona|||EC1 4SD|||UK|||&&&2|||New Orleans Cajun Delights|||Shelley Burke|||P.O. Box 78934|||New Orleans|||70117|||USA|||&&&3|||Grandma Kelly's Homestead|||Regina Murphy|||707 Oxford Rd.|||Ann Arbor|||48104|||USA|||&&&""]",[]
sql||CASE,https://www.w3schools.com/sql/sql_case.asp,,"['The SQL CASE Statement', 'CASE Syntax', 'Demo Database', 'SQL CASE Examples']","['The CASE statement goes through conditions and returns a value when the first condition is \nmet (like an if-then-else statement). So, once a condition is true, it will stop \nreading and return the result. If no conditions are true, it returns \nthe value in the ELSE clause. If there is no ELSE part and no conditions are true, it returns NULL.', 'Below is a selection from the ""OrderDetails"" table in the Northwind sample database:', 'The following SQL goes through conditions and returns a value when the first condition is met:The following SQL will order the customers by City. However, if City is NULL, then order by Country:', '']","['\n  CASE\xa0\xa0\xa0 WHEN condition1 THEN result1\xa0\xa0\xa0 \n  WHEN condition2 THEN result2\xa0\xa0\xa0 WHEN \n  conditionN THEN resultN\xa0\xa0\xa0 ELSE resultEND;', '', '', '']",[''],['OrderDetailID|||OrderID|||ProductID|||Quantity|||&&&1|||10248|||11|||12|||&&&2|||10248|||42|||10|||&&&3|||10248|||72|||5|||&&&4|||10249|||14|||9|||&&&5|||10249|||51|||40|||&&&'],[]
sql||NULL,https://www.w3schools.com/sql/sql_isnull.asp,,"['SQL IFNULL(), ISNULL(), COALESCE(), and NVL() Functions', 'Solutions']","['Look at the following ""Products"" table:Suppose that the ""UnitsOnOrder"" column is optional, and may contain NULL values.Look at the following SELECT statement:In the example above, if any of the ""UnitsOnOrder"" values are NULL, the result \nwill be NULL.', 'MySQLThe MySQL IFNULL() function lets you \nreturn an alternative value if an expression is NULL:or we can use the \nCOALESCE() function, like this:SQL ServerThe SQL Server \nISNULL() function lets \nyou return an alternative value when an expression is NULL:MS AccessThe MS Access \nIsNull() function returns \nTRUE (-1) if the expression is a null value, otherwise FALSE (0):OracleThe Oracle NVL() function achieves the same result:']","['\nSELECT ProductName, UnitPrice * (UnitsInStock + UnitsOnOrder)\nFROM Products;', '']",[''],['P_Id|||ProductName|||UnitPrice|||UnitsInStock|||UnitsOnOrder|||&&&1|||Jarlsberg|||10.45|||16|||15|||&&&2|||Mascarpone|||32.56|||23|||\xa0|||&&&3|||Gorgonzola|||15.67|||9|||20|||&&&'],[]
sql||Stored Procedures for SQL Server,https://www.w3schools.com/sql/sql_stored_procedures.asp,,"['What is a Stored Procedure?', 'Demo Database', 'Stored Procedure Example', 'Stored Procedure With One Parameter', 'Stored Procedure With Multiple Parameters']","['A stored procedure is a prepared SQL code that you can save, so the \ncode can be reused over and over again.So if you have an SQL query that you write over and over again, save \nit as a stored procedure, and then just call it to execute it.You can also pass parameters to a stored procedure, so that the stored procedure can act based on the parameter value(s) \nthat is passed.', 'Below is a selection from the ""Customers"" table in the Northwind sample database:', 'The following SQL statement creates a stored procedure named ""SelectAllCustomers"" \nthat selects all records from the ""Customers"" table:Execute the stored procedure above as follows:', 'The following SQL statement creates a stored procedure  \nthat selects Customers from a particular City from the ""Customers"" table:Execute the stored procedure above as follows:', 'Setting up multiple parameters is very easy. Just list each parameter and the \ndata type separated by a comma as shown below.The following SQL statement creates a stored procedure  \nthat selects Customers from a particular City with a particular PostalCode from the ""Customers"" table:Execute the stored procedure above as follows:']","['\n  CREATE PROCEDURE procedure_name\n  ASsql_statement\n  GO;', '\n  EXEC procedure_name;', '\n  CREATE PROCEDURE SelectAllCustomersASSELECT * FROM CustomersGO;\n &&&&&& \n  EXEC SelectAllCustomers;\n', ""\n  CREATE PROCEDURE SelectAllCustomers \n  @City nvarchar(30)ASSELECT * FROM Customers WHERE \n  City = @CityGO;\n &&&&&& \n  EXEC SelectAllCustomers @City = 'London';"", '']",[''],['CustomerID|||CustomerName|||ContactName|||Address|||City|||PostalCode|||Country|||&&&1|||Alfreds Futterkiste|||Maria Anders|||Obere Str. 57|||Berlin|||12209|||Germany|||&&&2|||Ana Trujillo Emparedados y helados|||Ana Trujillo|||Avda. de la Constitución 2222|||México D.F.|||05021|||Mexico|||&&&3|||Antonio Moreno Taquería|||Antonio Moreno|||Mataderos 2312|||México D.F.|||05023|||Mexico|||&&&4|||Around the Horn|||Thomas Hardy|||120 Hanover Sq.|||London|||WA1 1DP|||UK|||&&&5|||Berglunds snabbköp|||Christina Berglund|||Berguvsvägen 8|||Luleå|||S-958 22|||Sweden|||&&&'],[]
sql||Comments,https://www.w3schools.com/sql/sql_comments.asp,"Comments are used to explain sections of SQL statements, or to prevent execution 
of SQL statements.","['SQL Comments', 'Single Line Comments', 'Multi-line Comments']","['Single line comments start with --.Any text between -- and the end of the line will be ignored (will not be executed).The following example uses a single-line comment as an explanation:The following example uses a single-line comment to ignore the end of a line:The following example uses a single-line comment to ignore a statement:', 'Multi-line comments start with /* and end with \n*/.Any text between /* and */ will be ignored.The following example uses a multi-line comment as an explanation:The following example uses a multi-line comment to ignore many statements:To ignore just a part of a statement, also use the /* */ comment.The following example uses a comment to ignore part of a line:The following example uses a comment to ignore part of a statement:', '']","[""\n--Select all:\nSELECT * FROM Customers;\n &&&&&& \nSELECT * FROM Customers -- WHERE City='Berlin';\n &&&&&& \n--SELECT * FROM Customers;\nSELECT * FROM Products;\n"", '', '']",[''],[],[]
sql||Operators,https://www.w3schools.com/sql/sql_operators.asp,,"['SQL Arithmetic Operators', 'SQL Bitwise Operators', 'SQL Comparison Operators', 'SQL Compound Operators', 'SQL Logical Operators']","['', '', '', '', '']","['', '', '', '', '']",[''],"['Operator|||Description|||Example|||&&&+|||Add|||Try it|||&&&-|||Subtract|||Try it|||&&&*|||Multiply|||Try it|||&&&/|||Divide|||Try it|||&&&%|||Modulo|||Try it|||&&&', 'Operator|||Description|||&&&&|||Bitwise AND|||&&&||||Bitwise OR|||&&&^|||Bitwise exclusive OR|||&&&', 'Operator|||Description|||Example|||&&&=|||Equal to|||Try it|||&&&>|||Greater than|||Try it|||&&&<|||Less than|||Try it|||&&&>=|||Greater than or equal to|||Try it|||&&&<=|||Less than or equal to|||Try it|||&&&<>|||Not equal to|||Try it|||&&&', 'Operator|||Description|||&&&+=|||Add equals|||&&&-=|||Subtract equals|||&&&*=|||Multiply equals|||&&&/=|||Divide equals|||&&&%=|||Modulo equals|||&&&&=|||Bitwise AND equals|||&&&^-=|||Bitwise exclusive equals|||&&&|*=|||Bitwise OR equals|||&&&', 'Operator|||Description|||Example|||&&&ALL|||TRUE if all of the subquery values meet the condition|||Try it|||&&&AND|||TRUE if all the conditions separated by AND is TRUE|||Try it|||&&&ANY|||TRUE if any of the subquery values meet the condition|||Try it|||&&&BETWEEN|||TRUE if the operand is within the range of comparisons|||Try it|||&&&EXISTS|||TRUE if the subquery returns one or more records|||Try it|||&&&IN|||TRUE if the operand is equal to one of a list of expressions|||Try it|||&&&LIKE|||TRUE if the operand matches a pattern|||Try it|||&&&NOT|||Displays a record if the condition(s) is NOT TRUE|||Try it|||&&&OR|||TRUE if any of the conditions separated by OR is TRUE|||Try it|||&&&SOME|||TRUE if any of the subquery values meet the condition|||Try it|||&&&']",[]
sql||CREATE DATABASE,https://www.w3schools.com/sql/sql_create_db.asp,,"['The SQL CREATE DATABASE Statement', 'CREATE DATABASE Example']","['The CREATE DATABASE statement is used to create a new SQL database.', 'The following SQL statement creates a database called ""testDB"":']","['\nCREATE DATABASE databasename;', '\nCREATE DATABASE testDB;\n']",[''],[],[]
sql||DROP DATABASE,https://www.w3schools.com/sql/sql_drop_db.asp,,"['The SQL DROP DATABASE Statement', 'DROP DATABASE Example']","['The DROP DATABASE statement is used to drop an existing SQL database.', 'The following SQL statement drops the existing database ""testDB"":']","['\n  DROP DATABASE databasename;', '\n  DROP DATABASE testDB;\n']",[''],[],[]
sql||BACKUP DATABASE,https://www.w3schools.com/sql/sql_backup_db.asp,,"['The SQL BACKUP DATABASE Statement', 'The SQL BACKUP WITH DIFFERENTIAL Statement', 'BACKUP DATABASE Example', 'BACKUP WITH DIFFERENTIAL Example']","['The BACKUP DATABASE statement is used in SQL Server to create a full back up of an existing SQL database.', 'A differential back up only backs up the parts of the database that have \nchanged since the last full database backup.', 'The following SQL statement creates a full back up of the existing database ""testDB"" \nto the D disk:', 'The following SQL statement creates a differential back up of the database ""testDB"":']","[""\nBACKUP DATABASE databasenameTO DISK = 'filepath'; "", ""\nBACKUP DATABASE databasenameTO DISK = 'filepath'WITH \n  DIFFERENTIAL;"", ""\nBACKUP DATABASE testDBTO DISK = 'D:\\backups\\testDB.bak';"", '']",[''],[],[]
sql||CREATE TABLE,https://www.w3schools.com/sql/sql_create_table.asp,,"['The SQL CREATE TABLE Statement', 'SQL CREATE TABLE Example', 'Create Table Using Another Table']","['The CREATE TABLE statement is used to create a new table in a database.The column parameters specify the names of the columns of the table.The datatype parameter specifies the type of data the column can hold (e.g. varchar, integer, date, etc.).Tip: For an overview of the available data types, \ngo to our complete Data Types Reference.', 'The following example creates a table called ""Persons"" that contains five columns: PersonID, LastName, FirstName, \nAddress, and City:The PersonID column is of type int and will hold an integer.The LastName, FirstName, Address, and City columns are of\ntype varchar and will hold characters, and the maximum length for these fields \nis 255 characters.The empty ""Persons"" table will now look like this:Tip: The empty ""Persons"" table can now be filled with data with the \nSQL INSERT INTO statement.', 'A copy of an existing table can also be created using \nCREATE TABLE.The new table gets the same column definitions. All columns or specific \ncolumns can be selected.If you create a new table using an existing table, the new table will be \nfilled with the existing values from the old table.The following SQL creates a new table called ""TestTables"" (which is \na copy of the ""Customers"" table):\xa0']","['\nCREATE TABLE table_name (\n\xa0\xa0\xa0 column1 datatype,\n\xa0\xa0\xa0 column2 datatype,\n\xa0\xa0\xa0 column3 datatype,\n\xa0\xa0\n....\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nLastName varchar(255),\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAddress varchar(255),\n\xa0\xa0\xa0\nCity varchar(255) \n);\n', '\nCREATE TABLE new_table_name AS\xa0\xa0\xa0 \n  SELECT column1, column2,...\xa0\xa0\xa0 FROM \n  existing_table_name\xa0\xa0\xa0 WHERE ....; &&&&&& \n  CREATE TABLE TestTable ASSELECT customername, contactnameFROM \n  customers; ']",[''],['PersonID|||LastName|||FirstName|||Address|||City|||&&&\xa0|||\xa0|||\xa0|||\xa0|||\xa0|||&&&'],[]
sql||DROP TABLE,https://www.w3schools.com/sql/sql_drop_table.asp,,"['The SQL DROP TABLE Statement', 'SQL DROP TABLE Example', 'SQL TRUNCATE TABLE']","['The DROP TABLE statement is used to drop an existing table in a database.', 'The following SQL statement drops the existing table ""Shippers"":', 'The TRUNCATE TABLE statement is used to delete the data inside a table, but \nnot the table itself.']","['\n  DROP TABLE table_name;', '\n  DROP TABLE Shippers;\n', '\n  TRUNCATE TABLE table_name;']",[''],[],[]
sql||ALTER TABLE,https://www.w3schools.com/sql/sql_alter.asp,,"['SQL ALTER TABLE Statement', 'ALTER TABLE - ADD Column', 'ALTER TABLE - DROP COLUMN', 'ALTER TABLE - ALTER/MODIFY COLUMN', 'SQL ALTER TABLE Example', 'Change Data Type Example', 'DROP COLUMN Example']","['The ALTER TABLE statement is used to add, delete, or modify columns in an existing table.The ALTER TABLE statement is also used to add and drop various constraints on \nan existing table.', 'To add a column in a table, use the following syntax:The following SQL adds an ""Email"" column to the ""Customers"" table:', 'To delete a column in a table, use the following syntax (notice that some \ndatabase systems don\'t allow deleting a column):The following SQL deletes the ""Email"" column from the ""Customers"" table:', 'To change the data type of a column in a table, use the following syntax:SQL Server / MS Access:My SQL / Oracle (prior version 10G):Oracle 10G and later:', 'Look at the ""Persons"" table:Now we want to add a column named ""DateOfBirth"" in the ""Persons"" table.We use the following SQL statement:Notice that the new column, ""DateOfBirth"", is of type date and is going to hold a \ndate. The data type specifies what type of data the column can hold. For a complete \nreference of all the data types available in MS Access, MySQL, and SQL Server, \ngo to our complete Data Types reference.The ""Persons"" table will now look like this:', 'Now we want to change the data type of the column named ""DateOfBirth"" in the ""Persons"" table.We use the following SQL statement:Notice that the ""DateOfBirth"" column is now of type year and is going to hold a year in a two- or four-digit format.', 'Next, we want to delete the column named ""DateOfBirth"" in the ""Persons"" table.We use the following SQL statement:The ""Persons"" table will now look like this:']","['\nALTER TABLE table_name\nADD column_name datatype; &&&&&& \n  ALTER TABLE CustomersADD Email varchar(255);\n', '\nALTER TABLE table_name\nDROP COLUMN column_name; &&&&&& \n  ALTER TABLE CustomersDROP COLUMN Email;\n', '\nALTER TABLE table_name\nALTER COLUMN column_name datatype;', '\nALTER TABLE table_name\nMODIFY COLUMN column_name datatype;', '\nALTER TABLE table_name\nMODIFY column_name datatype;', '\nALTER TABLE Persons\nADD DateOfBirth date;', '\nALTER TABLE Persons\nALTER COLUMN DateOfBirth year;', '\nALTER TABLE Persons\nDROP COLUMN DateOfBirth;']",[''],"['ID|||LastName|||FirstName|||Address|||City|||&&&1|||Hansen|||Ola|||Timoteivn 10|||Sandnes|||&&&2|||Svendson|||Tove|||Borgvn 23|||Sandnes|||&&&3|||Pettersen|||Kari|||Storgt 20|||Stavanger|||&&&', 'ID|||LastName|||FirstName|||Address|||City|||DateOfBirth|||&&&1|||Hansen|||Ola|||Timoteivn 10|||Sandnes|||\xa0|||&&&2|||Svendson|||Tove|||Borgvn 23|||Sandnes|||\xa0|||&&&3|||Pettersen|||Kari|||Storgt 20|||Stavanger|||\xa0|||&&&', 'ID|||LastName|||FirstName|||Address|||City|||&&&1|||Hansen|||Ola|||Timoteivn 10|||Sandnes|||&&&2|||Svendson|||Tove|||Borgvn 23|||Sandnes|||&&&3|||Pettersen|||Kari|||Storgt 20|||Stavanger|||&&&']",[]
sql||Constraints,https://www.w3schools.com/sql/sql_constraints.asp,SQL constraints are used to specify rules for data in a table.,"['SQL Create Constraints', 'SQL Constraints']","['Constraints can be specified when the table is created with the \nCREATE TABLE statement, or after the table is created \nwith the ALTER TABLE statement.', 'SQL constraints are used to specify rules for the data in a table.Constraints are used to limit the type of data that can go into a table. This \nensures the accuracy and reliability of the data in the table. If there is any violation between the constraint and the data action, \nthe action is aborted.Constraints can be column level or table level. Column level constraints \napply to a column, and table level constraints apply to the whole table.The following constraints are commonly used in SQL:']","['\nCREATE TABLE table_name (\n\xa0\xa0\xa0 column1 datatype constraint,\n\xa0\xa0\xa0 column2 datatype constraint,\n\xa0\xa0\xa0 column3 datatype constraint,\n\xa0\xa0\xa0\n....\n);\n', '']",['SQL Constraints###&&&|||NOT NULL - Ensures that a column cannot have a NULL value|||UNIQUE - Ensures that all values in a column are |||  different|||PRIMARY KEY - A combination of a |||  NOT NULL and UNIQUE. |||  Uniquely identifies each row in a table|||FOREIGN KEY |||  - Prevents actions that would destroy links between tables||| CHECK - Ensures that |||  the values in a column satisfies a specific condition||| DEFAULT - Sets a default value for a column |||  if no value |||  is specified||| CREATE INDEX - Used to create and retrieve data from the database |||  very quickly|||'],[],[]
sql||NOT NULL,https://www.w3schools.com/sql/sql_notnull.asp,,"['SQL NOT NULL Constraint', 'SQL NOT NULL on CREATE TABLE', 'SQL NOT NULL on ALTER TABLE']","['By default, a column can hold NULL values.The NOT NULL constraint enforces a column to NOT accept NULL values.This enforces a field to always contain a value, which means that you cannot insert a new record, or update a record without adding a value to this field.', 'The following SQL ensures that the ""ID"", ""LastName"", and \n""FirstName"" columns \nwill NOT accept NULL values when the ""Persons"" table is created:', 'To create a NOT NULL constraint on the ""Age"" column when the ""Persons"" table is already created, use the following SQL:']","['\n  CREATE TABLE Persons (\xa0\xa0\xa0 ID int NOT NULL,\xa0\xa0\xa0 \n  LastName varchar(255) NOT NULL,\xa0\xa0\xa0 FirstName varchar(255) \n  NOT NULL,\xa0\xa0\xa0 Age int); ', '', '']",[''],[],[]
sql||UNIQUE,https://www.w3schools.com/sql/sql_unique.asp,,"['SQL UNIQUE Constraint', 'SQL UNIQUE Constraint on CREATE TABLE', 'SQL UNIQUE Constraint on ALTER TABLE', 'DROP a UNIQUE Constraint']","['The UNIQUE constraint ensures that all values in a column are different.Both the UNIQUE and \nPRIMARY KEY constraints provide a guarantee for uniqueness for a column or set of columns.A PRIMARY KEY constraint automatically has a\nUNIQUE constraint.However, you can have many UNIQUE constraints per table, but only one \nPRIMARY KEY constraint per table.', 'The following SQL creates a UNIQUE constraint on the ""ID"" column when the ""Persons"" table is created:SQL Server / Oracle / MS Access:MySQL:To name a UNIQUE constraint, and to define a \nUNIQUE constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To create a UNIQUE constraint on the ""ID"" column when the table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To name a UNIQUE constraint, and to define a \nUNIQUE constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To drop a UNIQUE constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL UNIQUE,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\n);\n', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nUNIQUE (ID)\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCONSTRAINT UC_Person UNIQUE (ID,LastName)\n);', '\nALTER TABLE Persons\nADD UNIQUE (ID);', '\nALTER TABLE Persons\nADD CONSTRAINT UC_Person UNIQUE (ID,LastName);']",[''],[],[]
sql||PRIMARY KEY,https://www.w3schools.com/sql/sql_primarykey.asp,,"['SQL PRIMARY KEY Constraint', 'SQL PRIMARY KEY on CREATE TABLE', 'SQL PRIMARY KEY on ALTER TABLE', 'DROP a PRIMARY KEY Constraint']","['The PRIMARY KEY constraint uniquely identifies each record in a table.Primary keys must contain UNIQUE values, and cannot contain NULL values.A table can have only ONE primary key; and in the table, this primary key can \nconsist of single or multiple columns (fields).', 'The following SQL creates a PRIMARY KEY on the ""ID"" column when the ""Persons"" table is created:MySQL:SQL Server / Oracle / MS Access:To allow naming of a PRIMARY KEY constraint, and for defining a \nPRIMARY KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:Note: In the example above there is only ONE \nPRIMARY KEY (PK_Person). \nHowever, the VALUE of the primary key is made up of TWO COLUMNS (ID + LastName).\n', 'To create a PRIMARY KEY constraint on the ""ID"" column when the table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To allow naming of a PRIMARY KEY constraint, and for defining a \nPRIMARY KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:Note: If you use ALTER TABLE to add a primary key, the primary key column(s) must\nhave been declared to not contain NULL values (when the table was first created).', 'To drop a PRIMARY KEY constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nPRIMARY KEY (ID)\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL PRIMARY KEY,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);', '\nALTER TABLE Persons\nADD PRIMARY KEY (ID);', '\nALTER TABLE Persons\nADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);']",[''],[],[]
sql||FOREIGN KEY,https://www.w3schools.com/sql/sql_foreignkey.asp,,"['SQL FOREIGN KEY Constraint', 'SQL FOREIGN KEY on CREATE TABLE', 'SQL FOREIGN KEY on ALTER TABLE', 'DROP a FOREIGN KEY Constraint']","['The FOREIGN KEY constraint is used to prevent actions that would destroy links between tables.A FOREIGN KEY is a field (or collection of fields) in one table, that refers to \nthe PRIMARY KEY in another table.The table with the foreign key is called the child table, and the table \nwith the primary key is called the referenced or parent table.Look at the following two tables:Notice that the ""PersonID"" column in the ""Orders"" table points to the ""PersonID"" column in the ""Persons"" table.The ""PersonID"" column in the ""Persons"" table is the PRIMARY KEY in the ""Persons"" table.The ""PersonID"" column in the ""Orders"" table is a \nFOREIGN KEY in the ""Orders"" table.The FOREIGN KEY constraint prevents invalid data from being inserted into the foreign key column,\nbecause it has to be one of the values contained in the parent table.', 'The following SQL creates a FOREIGN KEY on the ""PersonID"" column when the ""Orders"" table is created:MySQL:SQL Server / Oracle / MS Access:To allow naming of a FOREIGN KEY constraint, and for defining a \nFOREIGN KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To create a FOREIGN KEY constraint on the ""PersonID"" column when the ""Orders"" table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To allow naming of a FOREIGN KEY constraint, and for defining a \nFOREIGN KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To drop a FOREIGN KEY constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","['\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderID int NOT NULL,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nPRIMARY KEY (OrderID),\n\xa0\xa0\xa0\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);', '\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderID int NOT NULL PRIMARY KEY,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);', '\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderID int NOT NULL,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nPRIMARY KEY (OrderID),\n\xa0\xa0\xa0\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\n\xa0\xa0\xa0\nREFERENCES Persons(PersonID)\n);', '\nALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);', '\nALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);']",[''],"['PersonID|||LastName|||FirstName|||Age|||&&&1|||Hansen|||Ola|||30|||&&&2|||Svendson|||Tove|||23|||&&&3|||Pettersen|||Kari|||20|||&&&', 'OrderID|||OrderNumber|||PersonID|||&&&1|||77895|||3|||&&&2|||44678|||3|||&&&3|||22456|||2|||&&&4|||24562|||1|||&&&']",[]
sql||CHECK,https://www.w3schools.com/sql/sql_check.asp,,"['SQL CHECK Constraint', 'SQL CHECK on CREATE TABLE', 'SQL CHECK on ALTER TABLE', 'DROP a CHECK Constraint']","['The CHECK constraint is used to limit the value range that can be placed in a column.If you define a CHECK constraint on a column it \nwill allow only certain values for this column.If you define a CHECK constraint on a table it can limit the values in certain columns based on values in other columns in the row.', 'The following SQL creates a CHECK constraint on the ""Age"" column when the ""Persons"" table is created.\nThe CHECK constraint ensures that the age of a person must be 18, or older:MySQL:SQL Server / Oracle / MS Access:To allow naming of a CHECK constraint, and for defining a \nCHECK constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To create a CHECK constraint on the ""Age"" column when the table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To allow naming of a CHECK constraint, and for defining a \nCHECK constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To drop a CHECK constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCHECK (Age>=18)\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\xa0CHECK (Age>=18)\n);', ""\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCity varchar(255),\n\xa0\xa0\xa0\nCONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);"", '\nALTER TABLE Persons\nADD CHECK (Age>=18);', ""\nALTER TABLE Persons\nADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');""]",[''],[],[]
sql||DEFAULT,https://www.w3schools.com/sql/sql_default.asp,,"['SQL DEFAULT Constraint', 'SQL DEFAULT on CREATE TABLE', 'SQL DEFAULT on ALTER TABLE', 'DROP a DEFAULT Constraint']","['The DEFAULT constraint is used to set a default value for a column.The default value will be added to all new records, if no other value is specified.', 'The following SQL sets a DEFAULT value for the ""City"" column when the ""Persons"" table is created:My SQL / SQL Server / Oracle / MS Access:The DEFAULT constraint can also be used to insert system values, by using functions like \nGETDATE():', 'To create a DEFAULT constraint on the ""City"" column when the table is already created, use the following SQL:MySQL:SQL Server:MS Access:Oracle:', 'To drop a DEFAULT constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","[""\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCity varchar(255) DEFAULT 'Sandnes'\n);"", '\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nOrderDate date DEFAULT GETDATE()\n);', ""\nALTER TABLE Persons\nALTER City SET DEFAULT 'Sandnes';"", ""\nALTER TABLE PersonsADD CONSTRAINT df_City DEFAULT 'Sandnes' FOR City;"", ""\nALTER TABLE Persons\nALTER COLUMN City SET DEFAULT 'Sandnes';"", ""\nALTER TABLE Persons\nMODIFY City DEFAULT 'Sandnes';""]",[''],[],[]
sql||CREATE INDEX,https://www.w3schools.com/sql/sql_create_index.asp,,"['SQL CREATE INDEX Statement', 'CREATE INDEX Example', 'DROP INDEX Statement']","['The CREATE INDEX statement is used to create indexes in tables.Indexes are used to retrieve data from the database more quickly than \notherwise. The users cannot see the indexes, they are just used to speed up searches/queries.Creates an index on a table. Duplicate values are allowed:Creates a unique index on a table. Duplicate values are not allowed:Note: The syntax for creating indexes varies among different databases. Therefore: Check the syntax for creating indexes in your database.', 'The SQL statement below creates an index named ""idx_lastname"" on the ""LastName"" column in the ""Persons"" table:If you want to create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:', 'The DROP INDEX statement is used to delete an index in a table.MS Access:SQL Server:DB2/Oracle:MySQL:']","['\nCREATE INDEX index_name\nON table_name (column1, column2, ...);', '\nCREATE UNIQUE INDEX index_name\nON table_name (column1, column2, ...);', '\nCREATE INDEX idx_lastname\nON Persons (LastName);', '\nCREATE INDEX idx_pname\nON Persons (LastName, FirstName);']",[''],[],[]
sql||AUTO INCREMENT,https://www.w3schools.com/sql/sql_autoincrement.asp,,"['AUTO INCREMENT Field', 'Syntax for MySQL', 'Syntax for SQL Server', 'Syntax for Access', 'Syntax for Oracle']","['Auto-increment allows a unique number to be generated automatically when a new record is inserted into a table.Often this is the primary key field that we would like to be created automatically every time a new record is inserted.', 'The following SQL statement defines the ""Personid"" column to be an auto-increment primary key field in the ""Persons"" table:MySQL uses the AUTO_INCREMENT keyword to perform an auto-increment feature.By default, the starting value for AUTO_INCREMENT is 1, and it will increment by 1 for each new record.To let the AUTO_INCREMENT sequence start with another value, use the following SQL statement:To insert a new record into the ""Persons"" table, we will NOT have to specify a value for the ""Personid""\ncolumn (a unique value will be added automatically):The SQL statement above would insert a new record into the ""Persons"" table. The \n""Personid"" column would be assigned a unique value. The ""FirstName"" column would be set to \n""Lars"" and the ""LastName"" column would be set to ""Monsen"".', 'The following SQL statement defines the ""Personid"" column to be an auto-increment primary key field in the ""Persons"" table:The MS SQL Server uses the IDENTITY keyword to perform an auto-increment feature. In the example above, the starting value for \nIDENTITY is 1, and it will increment by 1 for each new record.Tip: To specify that the ""Personid"" column should start at value 10 and increment by 5, change \nit to IDENTITY(10,5).To insert a new record into the ""Persons"" table, we will NOT have to specify a value for the ""Personid"" column (a unique value will be added automatically):The SQL statement above would insert a new record into the ""Persons"" table. The \n""Personid"" column would be assigned a unique value. The ""FirstName"" column would be set to \n""Lars"" and the ""LastName"" column would be set to ""Monsen"".', 'The following SQL statement defines the ""Personid"" column to be an auto-increment primary key field in the ""Persons"" table:The MS Access uses the AUTOINCREMENT keyword to perform an auto-increment feature. By default, the starting value for AUTOINCREMENT is 1, and it will increment by 1 for each new record.Tip: To specify that the ""Personid"" column should start at value 10 and increment by 5, change the autoincrement to \nAUTOINCREMENT(10,5).To insert a new record into the ""Persons"" table, we will NOT have to specify a value for the ""Personid"" column (a unique value will be added \nautomatically):The SQL statement above would insert a new record into the ""Persons"" table. The \n""Personid"" column would be assigned a unique value. The ""FirstName"" column would be set to \n""Lars"" and the ""LastName"" column would be set to ""Monsen"".', 'In Oracle the code is a little bit more tricky.You will have to create an auto-increment field with the sequence object (this object generates a number sequence).Use the following CREATE SEQUENCE syntax:The code above creates a sequence object called seq_person, that starts with 1 and will increment by 1.\nIt will also cache up to 10 values for performance. The cache option specifies how many sequence values will be stored in memory for faster access.To insert a new record into the ""Persons"" table, we will have to use the nextval function (this function retrieves the next value from seq_person \nsequence):The SQL statement above would insert a new record into the ""Persons"" table. The ""Personid"" column would be assigned the next number from the seq_person \nsequence. The ""FirstName"" column would be set to ""Lars"" and the ""LastName"" column would be set to ""Monsen"".']","['\nCREATE TABLE Persons\n(\n \xa0\xa0\xa0\n  Personid int NOT NULL AUTO_INCREMENT,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0 Age int,\n\xa0\xa0\xa0\nPRIMARY KEY (Personid)\n);', '\nALTER TABLE Persons AUTO_INCREMENT=100;', ""\nINSERT INTO Persons (FirstName,LastName)\nVALUES ('Lars','Monsen');"", '\nCREATE TABLE Persons\n(\n \xa0\xa0\xa0\n  Personid int IDENTITY(1,1) PRIMARY KEY,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\n);', ""\nINSERT INTO Persons (FirstName,LastName)\nVALUES ('Lars','Monsen');"", '\nCREATE TABLE Persons\n(\n \xa0\xa0\xa0\n  Personid AUTOINCREMENT PRIMARY KEY,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\n);', ""\nINSERT INTO Persons (FirstName,LastName)\nVALUES ('Lars','Monsen');""]",[''],[],[]
sql||Working With Dates,https://www.w3schools.com/sql/sql_dates.asp,,"['SQL Dates', 'SQL Date Data Types', 'SQL Working with Dates']","['As long as your data contains only the date portion, your queries will work as expected. However, if a time portion is involved, it gets \nmore complicated.', 'MySQL comes with the following data types for storing a date or a date/time value in the database:SQL Server comes with the following data types for storing a date or a date/time value in the database:Note: The date types are chosen for a column when you create a new table in your database!', 'Look at the following table:Now we want to select the records with an OrderDate of ""2008-11-11"" from the table above.We use the following SELECT statement:The result-set will look like this:Now, assume that the ""Orders"" table looks like this (notice the \nadded time-component in the ""OrderDate"" column):If we use the same SELECT statement as above:we will get no result! This is because the query is looking only for dates with no time portion.']","['', '', '']",['SQL Date Data Types###SQL Date Data Types###&&&||| DATE - format YYYY-MM-DD||| DATETIME - format: YYYY-MM-DD HH:MI:SS|||TIMESTAMP - format: YYYY-MM-DD HH:MI:SS||| YEAR - format YYYY or YY|||&&&||| DATE - format YYYY-MM-DD||| DATETIME - format: YYYY-MM-DD HH:MI:SS||| SMALLDATETIME - format: YYYY-MM-DD HH:MI:SS|||TIMESTAMP - format: a unique number|||'],"['OrderId|||ProductName|||OrderDate|||&&&1|||Geitost|||2008-11-11|||&&&2|||Camembert Pierrot|||2008-11-09|||&&&3|||Mozzarella di Giovanni|||2008-11-11|||&&&4|||Mascarpone Fabioli|||2008-10-29|||&&&', 'OrderId|||ProductName|||OrderDate|||&&&1|||Geitost|||2008-11-11|||&&&3|||Mozzarella di Giovanni|||2008-11-11|||&&&', 'OrderId|||ProductName|||OrderDate|||&&&1|||Geitost|||2008-11-11 13:23:44|||&&&2|||Camembert Pierrot|||2008-11-09 15:45:21|||&&&3|||Mozzarella di Giovanni|||2008-11-11 11:12:01|||&&&4|||Mascarpone Fabioli|||2008-10-29 14:56:59|||&&&']",[]
sql||Views,https://www.w3schools.com/sql/sql_view.asp,,"['SQL CREATE VIEW Statement', 'SQL CREATE VIEW Examples', 'SQL Updating a View', 'SQL Dropping a View']","['In SQL, a view is a virtual table based on the result-set of an SQL statement.A view contains rows and columns, just like a real table. The fields in a view are fields from one or more real tables in the database.You can add SQL statements and functions to a view and present the data as if the data were coming from one single table.A view is created with the CREATE VIEW \nstatement.\xa0Note: A view always shows up-to-date data! The database engine recreates the \nview, every time a user queries it.', 'The following SQL creates a view that shows all customers from Brazil:We can query the view above as follows:The following SQL creates a view that selects every product in the ""Products"" table with a price higher than the average price:We can query the view above as follows:', 'A view can be updated with the CREATE OR REPLACE \nVIEW statement.The following SQL adds the ""City"" column to the ""Brazil Customers"" view:', 'A view is deleted with the DROP VIEW \nstatement.The following SQL drops the ""Brazil Customers"" view:']","['\nCREATE VIEW view_name AS\nSELECT column1, column2, ...\nFROM table_name\nWHERE condition;', ""\nCREATE VIEW [Brazil \n  Customers] AS\nSELECT \n  CustomerName, ContactName\nFROM Customers\nWHERE \n  Country = 'Brazil'; &&&&&& \nSELECT * FROM [Brazil \n  Customers]; &&&&&& \nCREATE VIEW [Products Above Average Price] AS\nSELECT ProductName, Price\nFROM Products\nWHERE Price > (SELECT AVG(Price) FROM Products); &&&&&& \nSELECT * FROM [Products Above Average Price];"", ""\nCREATE OR REPLACE VIEW view_name AS\nSELECT column1, column2, ...\nFROM table_name\nWHERE condition; &&&&&& \nCREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers\nWHERE Country = 'Brazil';"", '']",[''],[],[]
sql||Injection,https://www.w3schools.com/sql/sql_injection.asp,,"['SQL Injection', 'SQL in Web Pages', 'SQL Injection Based on 1=1 is Always True', 'SQL Injection Based on\xa0""""="""" is Always True', 'SQL Injection Based on Batched SQL Statements\xa0', 'Use SQL Parameters for Protection', 'Examples']","['SQL injection is a code injection technique that might destroy your database.SQL injection is one of the most common web hacking techniques.SQL injection is the placement of malicious code in SQL statements, via web page input.', 'SQL injection usually occurs when you ask a user for input, like their \nusername/userid, and instead of a name/id, the user gives you an SQL statement \nthat you will unknowingly run on your database.Look at the following example which creates a \nSELECT statement by adding a variable \n(txtUserId) to a select string. The variable is fetched from user input \n(getRequestString):The rest of this chapter describes the potential dangers of using user input in SQL statements.', 'Look at the example above again. The original purpose of the code was to create an SQL statement to select a \nuser, with a given user id.If there is nothing to prevent a user from entering ""wrong"" input, the user \ncan enter some ""smart"" input like this:UserId: Then, the SQL statement will look like this:The SQL above is valid and will return ALL rows from the ""Users"" table, since \nOR 1=1 is always TRUE.Does the example above look dangerous? What if the ""Users"" table contains names and passwords?The SQL statement above is much the same as this:A hacker might get access to all the user names and passwords in a database, by \nsimply inserting \n105 OR 1=1 into the input field.', 'Here is an example of a user login on a web site:Username:\nPassword:\n\nA hacker might get access to user names and passwords\xa0in a database by \nsimply inserting "" OR """"="" into the user name or password text box:User Name:\nPassword:\nThe code at the server will create a valid SQL statement like this:The SQL above is valid and will return all rows from the ""Users"" table, \nsince OR """"="""" is always TRUE.', 'Most databases support batched SQL statement.A batch of SQL statements is a group of two or more SQL statements, separated by semicolons.The SQL statement below will return all rows from the ""Users"" table, then delete the \n""Suppliers"" table.Look at the following example: And the following input:User id: The valid SQL statement would look like this:', 'To protect a web site from SQL injection, you can use SQL parameters.SQL parameters are values that are added to an SQL query at execution time, in a controlled manner.Note that parameters are represented in the SQL statement by a @ marker.The SQL engine checks each parameter to ensure that it is correct for its column\nand are treated literally, and not as part of the SQL to be executed.', 'The following examples shows how to build parameterized queries in some common web languages.SELECT STATEMENT IN ASP.NET:INSERT INTO STATEMENT IN ASP.NET:INSERT INTO STATEMENT IN PHP:']","['\n txtUserId = getRequestString(""UserId"");txtSQL = ""SELECT *\nFROM Users WHERE UserId = "" + txtUserId;', '\nSELECT * FROM Users WHERE UserId = 105 OR 1=1;', '\nSELECT UserId, Name, Password\nFROM Users WHERE UserId = 105 or 1=1;', '\nuName = getRequestString(""username"");uPass = getRequestString(""userpassword"");\nsql = \'SELECT * FROM Users WHERE Name =""\' + uName + \'"" AND Pass =""\' + uPass + \n \'""\'', '\nSELECT * FROM Users WHERE Name =""John Doe"" AND Pass =""myPass""', '\nSELECT * FROM Users WHERE Name ="""" or """"="""" AND Pass ="""" or """"=""""', '\nSELECT * FROM Users; DROP TABLE Suppliers\n &&&&&& \ntxtUserId = getRequestString(""UserId"");txtSQL = ""SELECT *\nFROM Users WHERE UserId = "" + txtUserId;', '\nSELECT * FROM Users WHERE \nUserId = 105; DROP TABLE Suppliers;', '\ntxtUserId = getRequestString(""UserId"");txtSQL = ""SELECT *\nFROM Users WHERE UserId = @0"";db.Execute(txtSQL,txtUserId);', '\n txtNam = getRequestString(""CustomerName"");txtAdd = getRequestString(""Address"");txtCit = getRequestString(""City"");\n txtSQL = ""INSERT INTO Customers (CustomerName,Address,City) Values(@0,@1,@2)"";db.Execute(txtSQL,txtNam,txtAdd,txtCit);']",[''],[],[]
sql||Hosting,https://www.w3schools.com/sql/sql_hosting.asp,,"['SQL Hosting', 'MS SQL Server', 'Oracle', 'MySQL', 'MS Access']","['If you want your web site to be able to store and retrieve data from a \ndatabase, your web server should have access to a database-system that uses the \nSQL language.If your web server is hosted by an Internet Service Provider (ISP), you will have to look for SQL hosting plans.The most common SQL hosting databases are MS SQL Server, Oracle, MySQL, and MS Access.', ""Microsoft's SQL Server is a popular database software for  database-driven web sites \nwith high traffic.SQL Server is a very powerful, robust and full featured SQL database system."", 'Oracle is also a popular database software for  database-driven web sites \nwith high traffic.Oracle is a very powerful, robust and full featured SQL database system.', 'MySQL is also a popular database software for web sites.MySQL is a very powerful, robust and full featured SQL database system.MySQL is an inexpensive \nalternative to the expensive Microsoft and Oracle solutions.', 'When a web site requires only a simple database, Microsoft Access can be a \nsolution.MS Access is not well suited for very high-traffic, and not as powerful as \nMySQL, SQL Server, or Oracle.']","['', '', '', '', '']",[''],[],[]
"sql||Data Types for MySQL, SQL Server, and MS Access",https://www.w3schools.com/sql/sql_datatypes.asp,"The data type of a column defines what value the column can hold: 
integer, character, money, date and time, binary, 
and so on.","['SQL Data Types', 'MySQL Data Types (Version 8.0)', 'SQL Server Data Types', 'MS Access Data Types']","['Each column in a database table is required to have a name and a data type.An SQL developer must decide what type of data that will be stored inside each \ncolumn when creating a table. The data type is a \nguideline for SQL to understand what type of data is expected inside of each \ncolumn, and it also identifies how SQL will interact with the stored data.', 'In MySQL there are three main data types: string, numeric, and date and time.Note: All the numeric data types may have an extra option: UNSIGNED \nor ZEROFILL. If you add the UNSIGNED option, MySQL disallows negative values for \nthe column. If you add the ZEROFILL option, MySQL automatically also adds the \nUNSIGNED attribute to the column.', '', '']","['', '', '', '']",[''],"['Data type|||Description|||&&&CHAR(size)|||A FIXED length string (can contain letters, numbers, and special characters). The\n      size parameter specifies the column length in characters - can be \n      from 0 to   255. Default is 1|||&&&VARCHAR(size)|||A VARIABLE length string (can contain letters, numbers, and special \n      characters). The size parameter specifies the maximum column \n      length in characters - can be from 0 to 65535|||&&&BINARY(size)|||Equal to CHAR(), but stores binary byte strings. The size \n      parameter specifies the column length in bytes. Default is 1|||&&&VARBINARY(size)|||Equal to VARCHAR(), but stores binary byte strings. The size \n      parameter specifies the maximum column length in bytes.|||&&&TINYBLOB|||For BLOBs (Binary Large Objects). Max length: 255 bytes|||&&&TINYTEXT|||Holds a string with a maximum length of 255 characters|||&&&TEXT(size)|||Holds a string with a maximum length of 65,535 bytes|||&&&BLOB(size)|||For BLOBs (Binary Large Objects). Holds up to 65,535 bytes of data|||&&&MEDIUMTEXT|||Holds a string with a maximum length of 16,777,215 characters|||&&&MEDIUMBLOB|||For BLOBs (Binary Large Objects). Holds up to 16,777,215 bytes of data|||&&&LONGTEXT|||Holds a string with a maximum length of 4,294,967,295 characters|||&&&LONGBLOB|||For BLOBs (Binary Large Objects). Holds up to 4,294,967,295 bytes of data|||&&&ENUM(val1, val2, val3, ...)|||A string object that can have only one value, chosen from a list of possible values. You can list up to 65535 values in an ENUM list. If a value is inserted that is not in the list, a   blank value will be inserted. \n      The values are sorted in the order you enter them|||&&&SET(val1, val2, val3, ...)|||A string object that can have 0 or more values, chosen from a list of \n      possible values. You can list up to 64 values in a SET list|||&&&', 'Data type|||Description|||&&&BIT(size)|||A bit-value type. The number of bits per value is specified in size. \n      The size parameter can hold a value from 1 to 64. The default \n      value for size is 1.|||&&&TINYINT(size)|||A very small integer. Signed range is from -128 to 127. Unsigned range \n      is from 0 to 255. The size parameter specifies the maximum \n      display width (which is 255)|||&&&BOOL|||Zero is considered as false, nonzero values are considered as true. |||&&&BOOLEAN|||Equal to BOOL|||&&&SMALLINT(size)|||A small integer. Signed range is from -32768 to 32767. Unsigned range \n      is from 0 to 65535. The size parameter specifies the maximum \n      display width (which is 255)|||&&&MEDIUMINT(size)|||A medium integer. Signed range is from -8388608 to 8388607. Unsigned \n      range is from 0 to 16777215. The size parameter specifies the \n      maximum display width (which is 255)|||&&&INT(size)|||A medium integer. Signed range is from -2147483648 to 2147483647. \n      Unsigned range is from 0 to 4294967295. The size parameter \n      specifies the maximum display width (which is 255)|||&&&INTEGER(size)|||Equal to INT(size)|||&&&BIGINT(size)|||A large integer. Signed range is from -9223372036854775808 to \n      9223372036854775807. Unsigned range is from 0 to 18446744073709551615. The\n      size parameter specifies the maximum display width (which is 255)|||&&&FLOAT(size, d)|||A floating point number. The total number of digits is specified in \n      size. The   number of digits after the decimal point is specified \n      in the d parameter. This syntax is deprecated in MySQL 8.0.17, \n      and it will be removed in future MySQL versions|||&&&FLOAT(p)|||A floating point number. MySQL uses the p value to determine \n      whether to use FLOAT or DOUBLE for the resulting data type. If p \n      is from 0 to 24, the data type becomes FLOAT(). If p is from 25 to \n      53, the data type becomes DOUBLE()|||&&&DOUBLE(size, d)|||A normal-size floating point number. The total number of digits is specified in \n      size. The   number of digits after the decimal point is specified \n      in the d parameter|||&&&DOUBLE PRECISION(size, d)|||\xa0|||&&&DECIMAL(size, d)|||An exact fixed-point number. The   total number of digits is specified in \n      size. The   number of digits after the decimal point is specified \n      in the d parameter. The maximum number for size is 65. \n      The maximum number for d is 30. The default value for size \n      is 10. The default value for d is 0.|||&&&DEC(size, d)|||Equal to DECIMAL(size,d)|||&&&', ""Data type|||Description|||&&&DATE|||A date. Format: YYYY-MM-DD. The supported range is from '1000-01-01' to '9999-12-31'|||&&&DATETIME(fsp)|||A date and time combination. Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1000-01-01 00:00:00' to '9999-12-31 23:59:59'. \n      Adding DEFAULT and ON UPDATE in the column definition to get automatic \n      initialization and updating to the current date and time|||&&&TIMESTAMP(fsp)|||A timestamp. TIMESTAMP values are stored as the number of seconds since the Unix epoch ('1970-01-01 00:00:00' UTC). Format: YYYY-MM-DD   \n      hh:mm:ss. The supported range is from '1970-01-01 00:00:01'   UTC to '2038-01-09 03:14:07' UTC. \n      Automatic initialization and updating to the current date and time can be \n      specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE CURRENT_TIMESTAMP \n      in the column definition|||&&&TIME(fsp)|||A time. Format: hh:mm:ss. The supported range is from '-838:59:59' to '838:59:59'|||&&&YEAR|||A year in four-digit format. Values allowed in four-digit format: 1901 to 2155, and 0000.\n      MySQL 8.0 does not support year in two-digit format.|||&&&"", 'Data type|||Description|||Max size|||Storage|||&&&char(n)|||Fixed width character string|||8,000 characters|||Defined width|||&&&varchar(n)|||Variable width character string|||8,000 characters|||2 bytes + number of chars|||&&&varchar(max)|||Variable width character string|||1,073,741,824 characters|||2 bytes + number of chars|||&&&text|||Variable width character string|||2GB of text data|||4 bytes + number of chars|||&&&nchar|||Fixed width Unicode string|||4,000 characters|||Defined width x 2|||&&&nvarchar|||Variable width Unicode string|||4,000 characters|||\xa0|||&&&nvarchar(max)|||Variable width Unicode string|||536,870,912 characters|||\xa0|||&&&ntext|||Variable width Unicode string|||2GB of text data|||\xa0|||&&&binary(n)|||Fixed width binary string|||8,000 bytes|||\xa0|||&&&varbinary|||Variable width binary string|||8,000 bytes|||\xa0|||&&&varbinary(max)|||Variable width binary string|||2GB|||\xa0|||&&&image|||Variable width binary string|||2GB|||\xa0|||&&&', 'Data type|||Description|||Storage|||&&&bit|||Integer that can be 0, 1, or NULL|||\xa0|||&&&tinyint|||Allows whole numbers from 0 to 255|||1 byte|||&&&smallint|||Allows whole numbers between -32,768 and 32,767|||2 bytes|||&&&int|||Allows whole numbers between -2,147,483,648 and 2,147,483,647 |||4 bytes|||&&&bigint|||Allows whole numbers between -9,223,372,036,854,775,808 and   9,223,372,036,854,775,807 |||8 bytes|||&&&decimal(p,s)|||Fixed precision and scale numbers.\n      Allows numbers from -10^38 +1 to 10^38 –1.\nThe p parameter indicates the maximum total number of digits that can  be stored (both to the left and to the right of the decimal point). p  must be a value from 1 to 38. Default is 18.\nThe s parameter indicates the maximum number of digits stored to the  right of the decimal point. s must be a value from 0 to p. Default value  is 0|||5-17 bytes|||&&&numeric(p,s)|||Fixed precision and scale numbers.\n      Allows numbers from -10^38 +1 to 10^38 –1.\nThe p parameter indicates the maximum total number of digits that can  be stored (both to the left and to the right of the decimal point). p  must be a value from 1 to 38. Default is 18.\nThe s parameter indicates the maximum number of digits stored to the  right of the decimal point. s must be a value from 0 to p. Default value  is 0|||5-17 bytes|||&&&smallmoney|||Monetary data from -214,748.3648 to 214,748.3647 |||4 bytes|||&&&money|||Monetary data from -922,337,203,685,477.5808 to   922,337,203,685,477.5807|||8 bytes|||&&&float(n)|||Floating precision number data from -1.79E + 308 to 1.79E + 308.The   n parameter indicates whether the field should hold 4 or 8 bytes.   float(24) holds a 4-byte field and float(53) holds an 8-byte field.   Default value of n is 53.|||4 or 8 bytes|||&&&real|||Floating precision number data from -3.40E + 38 to 3.40E + 38|||4 bytes|||&&&', 'Data type|||Description|||Storage|||&&&datetime|||From January 1, 1753 to December 31, 9999 with an accuracy of 3.33   milliseconds|||8 bytes|||&&&datetime2|||From January 1, 0001 to December 31, 9999 with an accuracy of 100   nanoseconds|||6-8 bytes|||&&&smalldatetime|||From January 1, 1900 to June 6, 2079 with an accuracy of 1 minute|||4 bytes|||&&&date|||Store a date only. From January 1, 0001 to December 31, 9999|||3 bytes|||&&&time|||Store a time only to an accuracy of 100 nanoseconds|||3-5 bytes|||&&&datetimeoffset|||The same as datetime2 with the addition of a time zone offset|||8-10 bytes|||&&&timestamp|||Stores a unique number that gets updated every time a row gets created   or modified. The timestamp value is based upon an internal clock and does   not correspond to real time. Each table may have only one timestamp   variable|||\xa0|||&&&', 'Data type|||Description|||&&&sql_variant|||Stores up to 8,000 bytes of data of various data types, except text,   ntext, and timestamp|||&&&uniqueidentifier|||Stores a globally unique identifier (GUID)|||&&&xml|||Stores XML formatted data. Maximum 2GB|||&&&cursor|||Stores a reference to a cursor used for database operations|||&&&table|||Stores a result-set for later processing|||&&&', ""Data type|||Description|||Storage|||&&&Text|||Use for text or combinations of text and numbers. 255 characters maximum|||\xa0|||&&&Memo|||Memo is used for larger amounts of text. Stores up to 65,536 characters. Note: You cannot sort a memo field. However, they are   searchable|||\xa0|||&&&Byte|||Allows whole numbers from 0 to 255|||1 byte|||&&&Integer|||Allows whole numbers between -32,768 and 32,767|||2 bytes|||&&&Long|||Allows whole numbers between -2,147,483,648 and 2,147,483,647|||4 bytes|||&&&Single|||Single precision floating-point. Will handle most decimals |||4 bytes|||&&&Double|||Double precision floating-point. Will handle most decimals|||8 bytes|||&&&Currency|||Use for currency. Holds up to 15 digits of whole dollars, plus 4 decimal places. Tip: You can choose which country's currency to use|||8 bytes|||&&&AutoNumber|||AutoNumber fields automatically give each record its own number, usually starting at 1|||4 bytes|||&&&Date/Time|||Use for dates and times|||8 bytes|||&&&Yes/No|||A logical field can be displayed as Yes/No, True/False, or On/Off. In code, use the constants True and False (equivalent to -1 and 0). Note:   Null values are not allowed in Yes/No fields|||1 bit|||&&&Ole Object|||Can store pictures, audio, video, or other BLOBs (Binary Large Objects)|||up to 1GB|||&&&Hyperlink|||Contain links to other files, including web pages|||\xa0|||&&&Lookup Wizard|||Let you type a list of options, which can then be chosen from a drop-down list|||4 bytes|||&&&""]",[]
sql||,https://www.w3schools.com/sql/sql_ref_keywords.asp,This SQL keywords reference contains the reserved words in SQL.,['SQL Keywords'],[''],[''],[''],"['Keyword|||Description|||&&&ADD|||Adds a column in an existing table|||&&&ADD CONSTRAINT|||Adds a constraint after a table is already created|||&&&ALL|||Returns true if all of the subquery values meet the \ncondition|||&&&ALTER|||Adds, deletes, or modifies columns in a table, or changes the data \ntype of a column in a table|||&&&ALTER COLUMN|||Changes the data type of a column in a table|||&&&ALTER TABLE|||Adds, deletes, or modifies columns in a table|||&&&AND|||Only includes rows where both conditions is true|||&&&ANY|||Returns true if any of the subquery values meet the \ncondition|||&&&AS|||Renames a column or table with an alias|||&&&ASC|||Sorts the result set in ascending order|||&&&BACKUP DATABASE|||Creates a back up of an existing database|||&&&BETWEEN|||Selects values within a given range|||&&&CASE|||Creates different outputs based on conditions|||&&&CHECK|||A constraint that limits the value that can be placed in a \ncolumn|||&&&COLUMN|||Changes the data type of a column or deletes a column in a table|||&&&CONSTRAINT|||Adds or deletes a constraint|||&&&CREATE|||Creates a database, index, view, table, or procedure|||&&&CREATE DATABASE|||Creates a new SQL database|||&&&CREATE INDEX|||Creates an index on a table (allows duplicate values)|||&&&CREATE OR REPLACE VIEW|||Updates a view|||&&&CREATE TABLE|||Creates a new table in the database|||&&&CREATE PROCEDURE|||Creates a stored procedure|||&&&CREATE UNIQUE INDEX|||Creates a unique index on a table (no duplicate values)|||&&&CREATE VIEW|||Creates a view based on the result set of a SELECT statement|||&&&DATABASE|||Creates or deletes an SQL database|||&&&DEFAULT|||A constraint that provides a default value for a column|||&&&DELETE|||Deletes rows from a table|||&&&DESC|||Sorts the result set in descending order|||&&&DISTINCT|||Selects only distinct (different) values|||&&&DROP|||Deletes a column, constraint, database, index, table, or view|||&&&DROP COLUMN|||Deletes a column in a table|||&&&DROP CONSTRAINT|||Deletes a UNIQUE, PRIMARY KEY, FOREIGN KEY, or CHECK constraint|||&&&DROP DATABASE|||Deletes an existing SQL database|||&&&DROP DEFAULT|||Deletes a DEFAULT constraint|||&&&DROP INDEX|||Deletes an index in a table|||&&&DROP TABLE|||Deletes an existing table in the database|||&&&DROP VIEW|||Deletes a view|||&&&EXEC|||Executes a stored procedure|||&&&EXISTS|||Tests for the existence of any record in a subquery|||&&&FOREIGN KEY|||A constraint that is a key used to link two tables together|||&&&FROM|||Specifies which table to select or delete data from|||&&&FULL OUTER JOIN|||Returns all rows when there is a match in either left table or right table|||&&&GROUP BY|||Groups the result set (used with aggregate functions: COUNT, MAX, MIN, SUM, \nAVG)|||&&&HAVING|||Used instead of WHERE with aggregate functions|||&&&IN|||Allows you to specify multiple values in a WHERE clause|||&&&INDEX|||Creates or deletes an index in a table |||&&&INNER JOIN|||Returns rows that have matching values in both tables|||&&&INSERT INTO|||Inserts new rows in a table|||&&&INSERT INTO SELECT|||Copies data from one table into another table|||&&&IS NULL|||Tests for empty values|||&&&IS NOT NULL|||Tests for non-empty values|||&&&JOIN|||Joins tables|||&&&LEFT JOIN|||Returns all rows from the left table, and the matching rows from the right \ntable|||&&&LIKE|||Searches for a specified pattern in a column|||&&&LIMIT|||Specifies the number of records to return in the result set|||&&&NOT|||Only includes rows where a condition is not true|||&&&NOT NULL|||A constraint that enforces a column to not accept NULL values|||&&&OR|||Includes rows where either condition is true|||&&&ORDER BY|||Sorts the result set in ascending or descending order|||&&&OUTER JOIN|||Returns all rows when there is a match in either left table or right table|||&&&PRIMARY KEY|||A constraint that uniquely identifies each record in a database table|||&&&PROCEDURE|||A stored procedure|||&&&RIGHT JOIN|||Returns all rows from the right table, and the matching rows from the \nleft table|||&&&ROWNUM|||Specifies the number of records to return in the result set|||&&&SELECT|||Selects data from a database|||&&&SELECT DISTINCT|||Selects only distinct (different) values|||&&&SELECT INTO|||Copies data from one table into a new table|||&&&SELECT TOP|||Specifies the number of records to return in the result set|||&&&SET|||Specifies which columns and values that should be updated in a table|||&&&TABLE|||Creates a table, or adds, deletes, or modifies columns in a table, or \ndeletes a table or data inside a table|||&&&TOP|||Specifies the number of records to return in the result set|||&&&TRUNCATE TABLE|||Deletes the data inside a table, but not the table itself|||&&&UNION|||Combines the result set of two or more SELECT statements (only \ndistinct values)|||&&&UNION ALL|||Combines the result set of two or more SELECT statements (allows \nduplicate values)|||&&&UNIQUE|||A constraint that ensures that all values in a column are unique|||&&&UPDATE|||Updates existing rows in a table|||&&&VALUES|||Specifies the values of an INSERT INTO statement|||&&&VIEW|||Creates, updates, or deletes a view|||&&&WHERE|||Filters a result set to include only records that fulfill a specified \ncondition|||&&&']",[]
sql||ADD Keyword,https://www.w3schools.com/sql/sql_ref_add.asp,,['ADD'],"['The ADD command is used to add a column in an \nexisting table.The following SQL adds an ""Email"" column to the ""Customers"" table:']",[''],[''],[],[]
sql||ADD CONSTRAINT Keyword,https://www.w3schools.com/sql/sql_ref_add_constraint.asp,,['ADD CONSTRAINT'],"['The ADD CONSTRAINT command is used to create \na constraint after a table is already created.The following SQL adds a constraint named ""PK_Person"" that is a \nPRIMARY KEY constraint on multiple columns (ID and LastName):']",[''],[''],[],[]
sql||ALTER Keyword,https://www.w3schools.com/sql/sql_ref_alter.asp,,"['ALTER TABLE', 'ALTER COLUMN']","['The ALTER TABLE command adds, deletes, or \nmodifies columns in a table.The ALTER TABLE command also adds and \ndeletes various constraints in a table.The following SQL adds an ""Email"" column to the ""Customers"" table:The following SQL deletes the ""Email"" column from the ""Customers"" table:', 'The ALTER COLUMN command is used to change the data type of a column in a table.The following SQL changes the data type of the column named ""BirthDate"" in \nthe ""Employees"" table to type year:']","['\n  ALTER TABLE CustomersADD Email varchar(255);\n &&&&&& \n  ALTER TABLE CustomersDROP COLUMN Email;\n', '']",[''],[],[]
sql||ALTER COLUMN Keyword,https://www.w3schools.com/sql/sql_ref_alter_column.asp,,['ALTER COLUMN'],"['The ALTER COLUMN command is used to change the data type of a column in a table.The following SQL changes the data type of the column named ""BirthDate"" in \nthe ""Employees"" table to type year:']",[''],[''],[],[]
sql||ALTER TABLE Keyword,https://www.w3schools.com/sql/sql_ref_alter_table.asp,,['ALTER TABLE'],"['The ALTER TABLE command adds, deletes, or \nmodifies columns in a table.The ALTER TABLE command also adds and \ndeletes various constraints in a table.The following SQL adds an ""Email"" column to the ""Customers"" table:The following SQL deletes the ""Email"" column from the ""Customers"" table:']",[''],[''],[],[]
sql||ALL Keyword,https://www.w3schools.com/sql/sql_ref_all.asp,,['ALL'],['The ALL command returns true if all of the subquery values meet \nthe \ncondition.The following SQL statement returns TRUE and lists the productnames if ALL \nthe records in the OrderDetails table has quantity = 10:'],[''],[''],[],[]
sql||AND Keyword,https://www.w3schools.com/sql/sql_ref_and.asp,,['AND'],"['The AND command is used with WHERE to only include rows where both conditions is true.The following SQL statement selects all fields from ""Customers"" where country is ""Germany"" AND city is ""Berlin"":']",[''],[''],[],[]
sql||ANY Keyword,https://www.w3schools.com/sql/sql_ref_any.asp,,['ANY'],['The ANY command returns true if any of the subquery values meet \nthe \ncondition.The following SQL statement returns TRUE and lists the productnames if it \nfinds ANY records in the OrderDetails table where quantity = 10:The following SQL statement returns TRUE and lists the productnames if it \nfinds ANY records in the OrderDetails table where quantity > 99:'],[''],[''],[],[]
sql||AS Keyword,https://www.w3schools.com/sql/sql_ref_as.asp,,"['AS', 'Alias for Columns', 'Alias for Tables']","['The AS command is used to rename a column or table with an alias.An alias only exists for the duration of the query.', 'The following SQL statement creates two aliases, one for the CustomerID \ncolumn and one for the CustomerName column:The following SQL statement creates two aliases. Notice that it requires \ndouble quotation marks or square brackets if the alias name contains spaces:The following SQL statement creates an alias named ""Address"" that combine four columns (Address, PostalCode, \nCity and Country):Note: To get the SQL statement above to work in MySQL use the following:', 'The following SQL statement selects all the orders from the customer with \nCustomerID=4 (Around the Horn). We use the ""Customers"" and ""Orders"" tables, and \ngive them the table aliases of ""c"" and ""o"" respectively (Here we use \naliases to make the SQL shorter):']","[""\n SELECT CustomerID AS ID, CustomerName AS Customer\n FROM Customers; &&&&&& \n SELECT CustomerName AS Customer, ContactName AS [Contact Person]\n FROM Customers; &&&&&& \n  SELECT CustomerName, Address + ', ' + PostalCode + ' ' + City + ', ' + Country \n  AS Address\n FROM Customers;"", ""\nSELECT CustomerName, CONCAT(Address,', ',PostalCode,', ',City,', ',Country) AS Address\nFROM Customers;"", '']",[''],[],[]
sql||ASC Keyword,https://www.w3schools.com/sql/sql_ref_asc.asp,,['ASC'],"['The ASC command is used to sort the data \nreturned in ascending order.The following SQL statement selects all the columns from the ""Customers"" \ntable, sorted by the ""CustomerName"" column:']",[''],[''],[],[]
sql||BACKUP DATABASE Keyword,https://www.w3schools.com/sql/sql_ref_backup_database.asp,,['BACKUP DATABASE'],"['The BACKUP DATABASE command is used in SQL \nServer to create a full back up of an existing SQL database.The following SQL statement creates a full back up of the existing database ""testDB"" \nto the D disk:A differential back up only backs up the parts of the database that have \nchanged since the last full database backup.The following SQL statement creates a differential back up of the database ""testDB"":']",[''],[''],[],[]
sql||BETWEEN Keyword,https://www.w3schools.com/sql/sql_ref_between.asp,,['BETWEEN'],"[""The BETWEEN command is used to select values \nwithin a given range. The values can be numbers, text, or dates.The BETWEEN command is inclusive: begin and end values are included.\xa0The following SQL statement selects all products with a price BETWEEN 10 and 20:To display the products outside the range of the previous example, use NOT BETWEEN:The following SQL statement selects all products with a ProductName BETWEEN 'Carnarvon \nTigers' and 'Mozzarella di Giovanni':""]",[''],[''],[],[]
sql||CASE Keyword,https://www.w3schools.com/sql/sql_ref_case.asp,,['CASE'],"['The CASE command is used is to \ncreate different output based on conditions.The following SQL goes through several conditions and returns a value when the \nspecified condition is met:The following SQL will order the customers by City. However, if City is NULL, \nthen order by Country:']",[''],[''],[],[]
sql||CHECK Keyword,https://www.w3schools.com/sql/sql_ref_check.asp,,"['CHECK', 'SQL CHECK on CREATE TABLE', 'SQL CHECK on ALTER TABLE', 'DROP a CHECK Constraint']","['The CHECK constraint limits the value that can be placed in a \ncolumn.', 'The following SQL creates a CHECK constraint on the ""Age"" column when the ""Persons"" table is created.\nThe CHECK constraint ensures that you can not have any person below 18 years:MySQL:SQL Server / Oracle / MS Access:To allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To create a CHECK constraint on the ""Age"" column when the table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To allow naming of a CHECK constraint, and for defining a CHECK constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To drop a CHECK constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCHECK (Age>=18)\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nAge int\xa0CHECK (Age>=18)\n);', ""\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCity varchar(255),\n\xa0\xa0\xa0\nCONSTRAINT CHK_Person CHECK (Age>=18 AND City='Sandnes')\n);"", '\nALTER TABLE Persons\nADD CHECK (Age>=18);', ""\nALTER TABLE Persons\nADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');""]",[''],[],[]
sql||COLUMN Keyword,https://www.w3schools.com/sql/sql_ref_column.asp,,"['ALTER COLUMN', 'DROP COLUMN']","['The ALTER COLUMN command is used to change the data type of a column in a table.The following SQL changes the data type of the column named ""BirthDate"" in \nthe ""Employees"" table to type year:', 'The DROP COLUMN command is used to delete a column in an \nexisting table.The following SQL deletes the ""ContactName"" column from the ""Customers"" table:']","['\n  ALTER TABLE EmployeesALTER COLUMN BirthDate \n  year;\n', '']",[''],[],[]
sql||CONSTRAINT Keyword,https://www.w3schools.com/sql/sql_ref_constraint.asp,,"['ADD CONSTRAINT', 'DROP CONSTRAINT', 'DROP a UNIQUE Constraint', 'DROP a PRIMARY KEY Constraint', 'DROP a FOREIGN KEY Constraint', 'DROP a CHECK Constraint']","['The ADD CONSTRAINT command is used to create \na constraint after a table is already created.The following SQL adds a constraint named ""PK_Person"" that is a \nPRIMARY KEY constraint on multiple columns (ID and LastName):', 'The DROP CONSTRAINT command is used to delete \na UNIQUE, PRIMARY KEY, FOREIGN KEY, or CHECK constraint.', 'To drop a UNIQUE constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a PRIMARY KEY constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a FOREIGN KEY constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a CHECK constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:']","['\n  ALTER TABLE PersonsADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);\n', '\nALTER TABLE Persons\nDROP CONSTRAINT UC_Person;', '\nALTER TABLE Persons\nDROP INDEX UC_Person;', '\nALTER TABLE Persons\nDROP CONSTRAINT PK_Person;', '\nALTER TABLE Persons\nDROP PRIMARY KEY;', '\nALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;', '\nALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;']",[''],[],[]
sql||CREATE Keyword,https://www.w3schools.com/sql/sql_ref_create.asp,,"['CREATE DATABASE', 'CREATE TABLE', 'CREATE TABLE Using Another Table', 'CREATE INDEX', 'CREATE UNIQUE INDEX', 'CREATE VIEW', 'CREATE OR REPLACE VIEW', 'Query The View', 'CREATE PROCEDURE']","['The CREATE DATABASE command is used is to \ncreate a new SQL database.The following SQL creates a database called ""testDB"":', 'The CREATE TABLE command creates a new table \nin the database.The following SQL creates a table called ""Persons"" that contains five columns: PersonID, LastName, FirstName, \nAddress, and City:', 'The following SQL creates a new table called ""TestTables"" (which is \na copy of two columns of the ""Customers"" table):\xa0', 'The CREATE INDEX command is used to \ncreate indexes in tables (allows duplicate values).Indexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.The following SQL creates an index named ""idx_lastname"" on the ""LastName"" column in the ""Persons"" table:If you want to create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:Note: The syntax for creating indexes varies among different databases. Therefore: Check the syntax for creating indexes in your database.', 'The CREATE UNIQUE INDEX command creates a unique index on a table (no duplicate values \nallowed)The following SQL creates an index named ""uidx_pid"" on the ""PersonID"" column in the ""Persons"" table:', 'The CREATE VIEW command creates a view.A view is a virtual table based on the result set of an SQL statement.The following SQL creates a view that selects all customers from Brazil:', 'The CREATE OR REPLACE VIEW command updates a view.The following SQL adds the ""City"" column to the ""Brazil Customers"" view:', 'We can query the view above as follows:', 'The CREATE PROCEDURE command is used to \ncreate a stored procedure.A stored procedure is a prepared SQL code that you can save, so the \ncode can be reused over and over again.The following SQL creates a stored procedure named ""SelectAllCustomers"" \nthat selects all records from the ""Customers"" table:Execute the stored procedure above as follows:']","['\nCREATE DATABASE testDB;\n', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nLastName varchar(255),\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAddress varchar(255),\n\xa0\xa0\xa0\nCity varchar(255) \n);\n', '\n  CREATE TABLE TestTable ASSELECT customername, contactnameFROM \n  customers; ', '\nCREATE INDEX idx_lastname\nON Persons (LastName);', '\nCREATE INDEX idx_pname\nON Persons (LastName, FirstName);', '\nCREATE UNIQUE INDEX uidx_pid\nON Persons (PersonID);', '\nCREATE VIEW [Brazil \n  Customers] AS\nSELECT \n  CustomerName, ContactName\nFROM Customers\nWHERE \n  Country = ""Brazil"";', '\nCREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers\nWHERE Country = ""Brazil"";', '\nSELECT * FROM [Brazil \n  Customers];']",[''],[],[]
sql||CREATE DATABASE Keyword,https://www.w3schools.com/sql/sql_ref_create_database.asp,,['CREATE DATABASE'],"['The CREATE DATABASE command is used is to \ncreate a new SQL database.The following SQL creates a database called ""testDB"":']",[''],[''],[],[]
sql||CREATE INDEX Keyword,https://www.w3schools.com/sql/sql_ref_create_index.asp,,['CREATE INDEX'],"['The CREATE INDEX command is used to \ncreate indexes in tables (allows duplicate values).Indexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.The following SQL creates an index named ""idx_lastname"" on the ""LastName"" column in the ""Persons"" table:If you want to create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:Note: The syntax for creating indexes varies among different databases. Therefore: Check the syntax for creating indexes in your database.']",[''],[''],[],[]
sql||CREATE OR REPLACE VIEW Keyword,https://www.w3schools.com/sql/sql_ref_create_or_replace_view.asp,,"['CREATE OR REPLACE VIEW', 'Query The View']","['The CREATE OR REPLACE VIEW command updates a view.The following SQL adds the ""City"" column to the ""Brazil Customers"" view:', 'We can query the view above as follows:']","['\nCREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers\nWHERE Country = ""Brazil"";', '']",[''],[],[]
sql||CREATE TABLE Keyword,https://www.w3schools.com/sql/sql_ref_create_table.asp,,"['CREATE TABLE', 'CREATE TABLE Using Another Table']","['The CREATE TABLE command creates a new table \nin the database.The following SQL creates a table called ""Persons"" that contains five columns: PersonID, LastName, FirstName, \nAddress, and City:', 'The following SQL creates a new table called ""TestTables"" (which is \na copy of two columns of the ""Customers"" table):\xa0']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nLastName varchar(255),\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAddress varchar(255),\n\xa0\xa0\xa0\nCity varchar(255) \n);\n', '']",[''],[],[]
sql||CREATE PROCEDURE Keyword,https://www.w3schools.com/sql/sql_ref_create_procedure.asp,,['CREATE PROCEDURE'],"['The CREATE PROCEDURE command is used to \ncreate a stored procedure.A stored procedure is a prepared SQL code that you can save, so the \ncode can be reused over and over again.The following SQL creates a stored procedure named ""SelectAllCustomers"" \nthat selects all records from the ""Customers"" table:Execute the stored procedure above as follows:']",[''],[''],[],[]
sql||CREATE UNIQUE INDEX Keyword,https://www.w3schools.com/sql/sql_ref_create_unique_index.asp,,['CREATE UNIQUE INDEX'],"['The CREATE UNIQUE INDEX command creates a unique index on a table (no duplicate values \nallowed)Indexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.The following SQL creates an index named ""uidx_pid"" on the ""PersonID"" column in the ""Persons"" table:Note: The syntax for creating indexes varies among different databases. Therefore: Check the syntax for creating indexes in your database.']",[''],[''],[],[]
sql||CREATE VIEW Keyword,https://www.w3schools.com/sql/sql_ref_create_view.asp,,"['CREATE VIEW', 'Query The View']","['The CREATE VIEW command creates a view.A view is a virtual table based on the result set of an SQL statement.The following SQL creates a view that selects all customers from Brazil:', 'We can query the view above as follows:']","['\nCREATE VIEW [Brazil \n  Customers] AS\nSELECT \n  CustomerName, ContactName\nFROM Customers\nWHERE \n  Country = ""Brazil"";', '']",[''],[],[]
sql||DATABASE Keyword,https://www.w3schools.com/sql/sql_ref_database.asp,,"['CREATE DATABASE', 'DROP DATABASE']","['The CREATE DATABASE command is used is to \ncreate a new SQL database.The following SQL creates a database called ""testDB"":', 'The DROP DATABASE command is used is to \ndelete an existing SQL database.The following SQL drops a database named ""testDB"":']","['\nCREATE DATABASE testDB;\n', '']",[''],[],[]
sql||DEFAULT Keyword,https://www.w3schools.com/sql/sql_ref_default.asp,,"['DEFAULT', 'SQL DEFAULT on CREATE TABLE', 'SQL DEFAULT on ALTER TABLE', 'DROP a DEFAULT Constraint']","['The DEFAULT constraint provides a default \nvalue for a column.The default value will be added to all new records if no other value is specified.', 'The following SQL sets a DEFAULT value for the ""City"" column when the ""Persons"" table is created:My SQL / SQL Server / Oracle / MS Access:The DEFAULT constraint can also be used to insert system values, by using functions like GETDATE():', 'To create a DEFAULT constraint on the ""City"" column when the table is already created, use the following SQL:MySQL:SQL Server:MS Access:Oracle:', 'To drop a DEFAULT constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","[""\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nCity varchar(255) DEFAULT 'Sandnes'\n);"", '\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderDate date DEFAULT GETDATE()\n);', ""\nALTER TABLE Persons\nALTER City SET DEFAULT 'Sandnes';"", ""\nALTER TABLE PersonsADD CONSTRAINT df_City DEFAULT 'Sandnes' FOR City;"", ""\nALTER TABLE Persons\nALTER COLUMN City SET DEFAULT 'Sandnes';"", ""\nALTER TABLE Persons\nMODIFY City DEFAULT 'Sandnes';""]",[''],[],[]
sql||DELETE Keyword,https://www.w3schools.com/sql/sql_ref_delete.asp,,['DELETE'],"['The DELETE command is used to delete \nexisting records in a table.The following SQL statement deletes the customer ""Alfreds Futterkiste"" from \nthe ""Customers"" table:It is possible to delete all rows in a table without deleting the table. This \nmeans that the table structure, attributes, and indexes will be intact:The following SQL statement deletes all rows in the ""Customers"" table, \nwithout deleting the table. This means that the table structure, attributes, and \nindexes will be intact:']",[''],[''],[],[]
sql||DESC Keyword,https://www.w3schools.com/sql/sql_ref_desc.asp,,['DESC'],"['The DESC command is used to sort the data \nreturned in descending order.The following SQL statement selects all the columns from the ""Customers"" \ntable, sorted descending by the ""CustomerName"" column:']",[''],[''],[],[]
sql||SELECT DISTINCT Keyword,https://www.w3schools.com/sql/sql_ref_select_distinct.asp,,['SELECT DISTINCT'],"['The SELECT DISTINCT command returns only \ndistinct (different) values in the result set.The following SQL statement selects only the DISTINCT values from the ""Country"" column in the ""Customers"" table:']",[''],[''],[],[]
sql||DROP Keyword,https://www.w3schools.com/sql/sql_ref_drop.asp,,"['DROP COLUMN', 'DROP a UNIQUE Constraint', 'DROP a PRIMARY KEY Constraint', 'DROP a FOREIGN KEY Constraint', 'DROP a CHECK Constraint', 'DROP DEFAULT', 'DROP INDEX', 'DROP DATABASE', 'DROP TABLE', 'DROP VIEW']","['The DROP COLUMN command is used to delete a column in an \nexisting table.The following SQL deletes the ""ContactName"" column from the ""Customers"" table:', 'To drop a UNIQUE constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a PRIMARY KEY constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a FOREIGN KEY constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a CHECK constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'The DROP DEFAULT command is used to delete \na DEFAULT constraint.To drop a DEFAULT constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'The DROP INDEX command is used to delete an \nindex in a table.MS Access:SQL Server:DB2/Oracle:MySQL:', 'The DROP DATABASE command is used is to \ndelete an existing SQL database.The following SQL drops a database named ""testDB"":', 'The DROP TABLE command deletes a table in \nthe database.The following SQL deletes the table ""Shippers"":', 'The DROP VIEW command deletes a view.The following SQL drops the ""Brazil Customers"" view:']","['\n  ALTER TABLE CustomersDROP COLUMN ContactName;\n', '\nALTER TABLE Persons\nDROP CONSTRAINT UC_Person;', '\nALTER TABLE Persons\nDROP INDEX UC_Person;', '\nALTER TABLE Persons\nDROP CONSTRAINT PK_Person;', '\nALTER TABLE Persons\nDROP PRIMARY KEY;', '\nALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;', '\nALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;', '\nALTER TABLE Persons\nDROP CONSTRAINT CHK_PersonAge;', '\nALTER TABLE Persons\nDROP CHECK CHK_PersonAge;', '\nALTER TABLE Persons\nALTER COLUMN City DROP DEFAULT;', '\nALTER TABLE Persons\nALTER City DROP DEFAULT;', '\nDROP INDEX index_name ON table_name;', '\nDROP INDEX table_name.index_name;', '\nDROP INDEX index_name;', '\nALTER TABLE table_nameDROP INDEX index_name;', '\n  DROP DATABASE testDB;', '\n  DROP TABLE Shippers;\n']",[''],[],[]
sql||DROP COLUMN Keyword,https://www.w3schools.com/sql/sql_ref_drop_column.asp,,['DROP COLUMN'],"['The DROP COLUMN command is used to delete a column in an \nexisting table.The following SQL deletes the ""ContactName"" column from the ""Customers"" table:']",[''],[''],[],[]
sql||DROP CONSTRAINT Keyword,https://www.w3schools.com/sql/sql_ref_drop_constraint.asp,,"['DROP CONSTRAINT', 'DROP a UNIQUE Constraint', 'DROP a PRIMARY KEY Constraint', 'DROP a FOREIGN KEY Constraint', 'DROP a CHECK Constraint']","['The DROP CONSTRAINT command is used to delete \na UNIQUE, PRIMARY KEY, FOREIGN KEY, or CHECK constraint.', 'To drop a UNIQUE constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a PRIMARY KEY constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a FOREIGN KEY constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:', 'To drop a CHECK constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:']","['\nALTER TABLE Persons\nDROP CONSTRAINT UC_Person;', '\nALTER TABLE Persons\nDROP INDEX UC_Person;', '\nALTER TABLE Persons\nDROP CONSTRAINT PK_Person;', '\nALTER TABLE Persons\nDROP PRIMARY KEY;', '\nALTER TABLE Orders\nDROP CONSTRAINT FK_PersonOrder;', '\nALTER TABLE Orders\nDROP FOREIGN KEY FK_PersonOrder;']",[''],[],[]
sql||DROP DATABASE Keyword,https://www.w3schools.com/sql/sql_ref_drop_database.asp,,['DROP DATABASE'],"['The DROP DATABASE command is used to \ndelete an existing SQL database.The following SQL drops a database named ""testDB"":']",[''],[''],[],[]
sql||DROP DEFAULT Keyword,https://www.w3schools.com/sql/sql_ref_drop_default.asp,,['DROP DEFAULT'],"['The DROP DEFAULT command is used to delete \na DEFAULT constraint.To drop a DEFAULT constraint, use the following SQL:SQL Server / Oracle / MS Access:MySQL:']",[''],[''],[],[]
sql||DROP INDEX Keyword,https://www.w3schools.com/sql/sql_ref_drop_index.asp,,['DROP INDEX'],['The DROP INDEX command is used to delete an \nindex in a table.MS Access:SQL Server:DB2/Oracle:MySQL:'],[''],[''],[],[]
sql||DROP TABLE and TRUNCATE TABLE Keywords,https://www.w3schools.com/sql/sql_ref_drop_table.asp,,"['DROP TABLE', 'TRUNCATE TABLE']","['The DROP TABLE command deletes a table in \nthe database.The following SQL deletes the table ""Shippers"":', 'The TRUNCATE TABLE command deletes the data inside a table, but \nnot the table itself.The following SQL truncates the table ""Categories"":\xa0']","['\n  DROP TABLE Shippers;\n', '']",[''],[],[]
sql||DROP VIEW Keyword,https://www.w3schools.com/sql/sql_ref_drop_view.asp,,['DROP VIEW'],"['The DROP VIEW command deletes a view.The following SQL drops the ""Brazil Customers"" view:']",[''],[''],[],[]
sql||EXEC Keyword,https://www.w3schools.com/sql/sql_ref_exec.asp,,['EXEC'],"['The EXEC command is used to execute a stored procedure.The following SQL executes a stored procedure named ""SelectAllCustomers"":']",[''],[''],[],[]
sql||EXISTS Keyword,https://www.w3schools.com/sql/sql_ref_exists.asp,,['EXISTS'],"['The EXISTS command tests for the existence of any record in a subquery, \nand returns true if the subquery returns one or more records.The following SQL lists the suppliers with a product price less than 20:The following SQL lists the suppliers with a product price \nequal to 22:']",[''],[''],[],[]
sql||FOREIGN KEY Keyword,https://www.w3schools.com/sql/sql_ref_foreign_key.asp,,"['FOREIGN KEY', 'SQL FOREIGN KEY on CREATE TABLE', 'SQL FOREIGN KEY on ALTER TABLE', 'DROP a FOREIGN KEY Constraint']","['The FOREIGN KEY constraint is a key used to link two tables together.A FOREIGN KEY is a field (or collection of fields) in one table that refers to \nthe PRIMARY KEY in another table.', 'The following SQL creates a FOREIGN KEY on the ""PersonID"" column when the ""Orders"" table is created:MySQL:SQL Server / Oracle / MS Access:To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To create a FOREIGN KEY constraint on the ""PersonID"" column when the ""Orders"" table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To allow naming of a FOREIGN KEY constraint, and for defining a FOREIGN KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To drop a FOREIGN KEY constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","['\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderID int NOT NULL,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nPRIMARY KEY (OrderID),\n\xa0\xa0\xa0\nFOREIGN KEY (PersonID) REFERENCES Persons(PersonID)\n);', '\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderID int NOT NULL PRIMARY KEY,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nPersonID int FOREIGN KEY REFERENCES Persons(PersonID)\n);', '\nCREATE TABLE Orders\n(\n\xa0\xa0\xa0\nOrderID int NOT NULL,\n\xa0\xa0\xa0\nOrderNumber int NOT NULL,\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nPRIMARY KEY (OrderID),\n\xa0\xa0\xa0\nCONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID)\n\xa0\xa0\xa0\nREFERENCES Persons(PersonID)\n);', '\nALTER TABLE Orders\nADD FOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);', '\nALTER TABLE Orders\nADD CONSTRAINT FK_PersonOrder\nFOREIGN KEY (PersonID)\nREFERENCES Persons(PersonID);']",[''],[],[]
sql||FROM Keyword,https://www.w3schools.com/sql/sql_ref_from.asp,,['FROM'],"['The FROM command is used to specify which \ntable to select or delete data from.The following SQL statement selects the ""CustomerName"" and ""City"" columns \nfrom the ""Customers"" table:The following SQL statement selects all the columns from the ""Customers"" \ntable:The following SQL statement deletes the customer ""Alfreds Futterkiste"" from \nthe ""Customers"" table:']",[''],[''],[],[]
sql||FULL OUTER JOIN Keyword,https://www.w3schools.com/sql/sql_ref_full_outer_join.asp,,['FULL OUTER JOIN'],"['The FULL OUTER JOIN command returns all rows \nwhen there is a match in either left table or right table.The following SQL statement selects all customers, and all orders:Note: The FULL OUTER JOIN keyword returns all the rows from \nthe left table (Customers), and all the rows from the right table (Orders). If \nthere are rows in ""Customers"" that do not have matches in ""Orders"", or if there \nare rows in ""Orders"" that do not have matches in ""Customers"", those rows will be \nlisted as well.']",[''],[''],[],[]
sql||GROUP BY Keyword,https://www.w3schools.com/sql/sql_ref_group_by.asp,,['GROUP BY'],"['The GROUP BY command is used to group the result set (used with aggregate functions: COUNT, MAX, MIN, SUM, \nAVG).The following SQL lists the number of customers in each country:The following SQL lists the number of customers in each country, \nsorted high to low:']",[''],[''],[],[]
sql||HAVING Keyword,https://www.w3schools.com/sql/sql_ref_having.asp,,['HAVING'],"['The HAVING command is used instead of WHERE with aggregate functions.The following SQL lists the number of customers in each country. \nOnly include countries with more than 5 customers:The following SQL lists the number of customers in each country, \nsorted high to low (Only include countries with more than 5 customers):']",[''],[''],[],[]
sql||IN Keyword,https://www.w3schools.com/sql/sql_ref_in.asp,,['IN'],"['The IN command allows you to specify \nmultiple values in a WHERE clause.The IN operator is a shorthand for multiple OR conditions.The following SQL selects all customers that are located in ""Germany"", ""France"" and ""UK"":The following SQL selects all customers that are NOT located in ""Germany"", ""France"" or ""UK"":The following SQL selects all customers that are from the same \ncountries as the suppliers:']",[''],[''],[],[]
sql||INDEX Keyword,https://www.w3schools.com/sql/sql_ref_index.asp,,"['CREATE INDEX', 'DROP INDEX']","['The CREATE INDEX command is used to \ncreate indexes in tables (allows duplicate values).Indexes are used to retrieve data from the database very fast. The users cannot see the indexes, they are just used to speed up searches/queries.The following SQL creates an index named ""idx_lastname"" on the ""LastName"" column in the ""Persons"" table:If you want to create an index on a combination of columns, you can list the column names within the parentheses, separated by commas:Note: The syntax for creating indexes varies among different databases. Therefore: Check the syntax for creating indexes in your database.', 'The DROP INDEX command is used to delete an \nindex in a table.MS Access:SQL Server:DB2/Oracle:MySQL:']","['\nCREATE INDEX idx_lastname\nON Persons (LastName);', '\nCREATE INDEX idx_pname\nON Persons (LastName, FirstName);']",[''],[],[]
sql||INNER JOIN Keyword,https://www.w3schools.com/sql/sql_ref_inner_join.asp,,['INNER JOIN'],"['The INNER JOIN command returns rows that have matching values in both tables.The following SQL selects all orders with customer information:Note: The INNER JOIN keyword selects all rows from both \ntables as long as there is a match between the columns. If there are records in the \n""Orders"" table that do not have matches in ""Customers"", these orders will not \nbe shown!The following SQL statement selects all orders with customer and shipper \ninformation:']",[''],[''],[],[]
sql||INSERT INTO Keyword,https://www.w3schools.com/sql/sql_ref_insert_into.asp,,['INSERT INTO'],"['The INSERT INTO command is used to insert new rows in a table.The following SQL inserts a new record in the ""Customers"" table:The following SQL will insert a new record, but only insert data in the ""CustomerName"", \n""City"", and ""Country"" columns (CustomerID will \nbe updated automatically):']",[''],[''],[],[]
sql||INSERT INTO SELECT Keyword,https://www.w3schools.com/sql/sql_ref_insert_into_select.asp,,['INSERT INTO SELECT'],"['The INSERT INTO SELECT command copies data \nfrom one table and inserts it into another table.The following SQL copies ""Suppliers"" into ""Customers"" (the columns \nthat are not filled with data, will contain NULL):The following SQL copies ""Suppliers"" into ""Customers"" (fill all \ncolumns):The following SQL copies only the German suppliers into ""Customers"":']",[''],[''],[],[]
sql||IS NULL Keyword,https://www.w3schools.com/sql/sql_ref_is_null.asp,,['IS NULL'],"['The IS NULL command is used to test for \nempty values (NULL values).The following SQL lists all customers with a NULL value in the ""Address"" \nfield:']",[''],[''],[],[]
sql||IS NOT NULL Keyword,https://www.w3schools.com/sql/sql_ref_is_not_null.asp,,['IS NOT NULL'],"['The IS NOT NULL command is used to test for \nnon-empty values (NOT NULL values).The following SQL lists all customers with a value in the ""Address"" field:']",[''],[''],[],[]
sql||JOIN Keyword,https://www.w3schools.com/sql/sql_ref_join.asp,,"['INNER JOIN', 'LEFT JOIN', 'RIGHT JOIN', 'FULL OUTER JOIN']","['The INNER JOIN command returns rows that have matching values in both tables.The following SQL selects all orders with customer information:Note: The INNER JOIN keyword selects all rows from both \ntables as long as there is a match between the columns. If there are records in the \n""Orders"" table that do not have matches in ""Customers"", these orders will not \nbe shown!The following SQL statement selects all orders with customer and shipper \ninformation:', 'The LEFT JOIN command returns all rows from \nthe left table, and the matching rows from the right table. The result is NULL \nfrom the right side, if there is no match.The following SQL will select all customers, and any orders they \nmight have:Note: The LEFT JOIN keyword returns all records from the \nleft table (Customers), even if there are no matches in the right table \n(Orders).', 'The RIGHT JOIN command returns all rows from \nthe right table, and the matching records from the left table. The result is \nNULL from the left side, when there is no match.The following SQL will return all employees, and any orders they \nmight have placed:Note: The RIGHT JOIN keyword returns all records from the \nright table (Employees), even if there are no matches in the left table \n(Orders).', 'The FULL OUTER JOIN command returns all rows \nwhen there is a match in either left table or right table.The following SQL statement selects all customers, and all orders:Note: The FULL OUTER JOIN keyword returns all the rows from \nthe left table (Customers), and all the rows from the right table (Orders). If \nthere are rows in ""Customers"" that do not have matches in ""Orders"", or if there \nare rows in ""Orders"" that do not have matches in ""Customers"", those rows will be \nlisted as well.']","['\n  SELECT Orders.OrderID, Customers.CustomerNameFROM OrdersINNER JOIN \n  Customers ON Orders.CustomerID = Customers.CustomerID; &&&&&& \n  SELECT Orders.OrderID, Customers.CustomerName, Shippers.ShipperNameFROM \n  ((OrdersINNER JOIN Customers ON Orders.CustomerID = Customers.CustomerID)\n  INNER JOIN Shippers ON Orders.ShipperID = Shippers.ShipperID);', '\n SELECT Customers.CustomerName, Orders.OrderID\n FROM Customers\n LEFT JOIN Orders\n ON Customers.CustomerID = Orders.CustomerID\n ORDER BY Customers.CustomerName;\n', '\n SELECT Orders.OrderID, Employees.LastName, Employees.FirstNameFROM OrdersRIGHT JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID\n ORDER BY Orders.OrderID;', '']",[''],[],[]
sql||LEFT JOIN Keyword,https://www.w3schools.com/sql/sql_ref_left_join.asp,,['LEFT JOIN'],"['The LEFT JOIN command returns all rows from \nthe left table, and the matching rows from the right table. The result is NULL \nfrom the right side, if there is no match.The following SQL will select all customers, and any orders they \nmight have:Note: The LEFT JOIN keyword returns all records from the \nleft table (Customers), even if there are no matches in the right table \n(Orders).']",[''],[''],[],[]
sql||LIKE Keyword,https://www.w3schools.com/sql/sql_ref_like.asp,,['LIKE'],"['The LIKE command is used in a WHERE clause \nto search for a specified pattern in a column.You can use two wildcards with LIKE: The following SQL selects all customers with a CustomerName starting with \n""a"":The following SQL selects all customers with a CustomerName ending with ""a"":The following SQL selects all customers with a CustomerName that \nhave ""or"" in any position:The following SQL statement selects all customers with a CustomerName that \nstarts with ""a"" and are at least 3 characters in length:']",[''],"['LIKE###&&&|||% - Represents zero, one, or multiple characters|||_ - Represents a single character (MS Access uses a question mark (?) instead)|||']",[],[]
"sql||SELECT TOP, LIMIT and ROWNUM Keywords",https://www.w3schools.com/sql/sql_ref_top.asp,,"['SELECT TOP, LIMIT and ROWNUM']","['The LIMIT, SELECT TOP \nor ROWNUM command is used to specify the number of records to return.The following SQL statement selects the first three records from the ""Customers"" table \n(SQL SERVER):The following SQL statement shows the equivalent example using the LIMIT clause \n(MySQL):The following SQL statement shows the equivalent example using ROWNUM \n(Oracle):']",[''],[''],[],[]
sql||NOT Keyword,https://www.w3schools.com/sql/sql_ref_not.asp,,['NOT'],"['The NOT command is used with WHERE to only \ninclude rows where a condition is not true.The following SQL statement selects all fields from ""Customers"" where country is NOT ""Germany"":']",[''],[''],[],[]
sql||NOT NULL Keyword,https://www.w3schools.com/sql/sql_ref_not_null.asp,,['NOT NULL'],"['The NOT NULL constraint enforces a column to \nnot accept NULL values, which means that you cannot insert or update a record without adding a value to this field.The following SQL ensures that the ""ID"", ""LastName"", and \n""FirstName"" columns \nwill NOT accept NULL values:The following SQL creates a NOT NULL constraint on the ""Age"" column when the ""Persons"" table is already created:']",[''],[''],[],[]
sql||OR Keyword,https://www.w3schools.com/sql/sql_ref_or.asp,,['OR'],"['The OR command is used with WHERE to include \nrows where either condition is true.The following SQL statement selects all fields from ""Customers"" where city is \n""Berlin"" OR city is ""München"":']",[''],[''],[],[]
sql||ORDER BY Keyword,https://www.w3schools.com/sql/sql_ref_order_by.asp,,"['ORDER BY', 'ASC', 'DESC']","['The ORDER BY command is used to sort the result set in ascending or descending order.The ORDER BY command sorts the result set in \nascending order by default. To sort the records in descending order, use the \nDESC keyword.The following SQL statement selects all the columns from the ""Customers"" \ntable, sorted by the ""CustomerName"" column:', 'The ASC command is used to sort the data \nreturned in ascending order.The following SQL statement selects all the columns from the ""Customers"" \ntable, sorted by the ""CustomerName"" column:', 'The DESC command is used to sort the data \nreturned in descending order.The following SQL statement selects all the columns from the ""Customers"" \ntable, sorted descending by the ""CustomerName"" column:']","['\n SELECT * FROM CustomersORDER BY CustomerName;', '\n SELECT * FROM CustomersORDER BY CustomerName ASC;', '']",[''],[],[]
sql||FULL OUTER JOIN Keyword,https://www.w3schools.com/sql/sql_ref_full_outer_join.asp,,['FULL OUTER JOIN'],"['The FULL OUTER JOIN command returns all rows \nwhen there is a match in either left table or right table.The following SQL statement selects all customers, and all orders:Note: The FULL OUTER JOIN keyword returns all the rows from \nthe left table (Customers), and all the rows from the right table (Orders). If \nthere are rows in ""Customers"" that do not have matches in ""Orders"", or if there \nare rows in ""Orders"" that do not have matches in ""Customers"", those rows will be \nlisted as well.']",[''],[''],[],[]
sql||PRIMARY KEY Keyword,https://www.w3schools.com/sql/sql_ref_primary_key.asp,,"['PRIMARY KEY', 'SQL PRIMARY KEY on CREATE TABLE', 'SQL PRIMARY KEY on ALTER TABLE', 'DROP a PRIMARY KEY Constraint']","['The PRIMARY KEY constraint uniquely identifies each record in a table.A table can have only one primary key, which may consist of one single or of multiple fields.', 'The following SQL creates a PRIMARY KEY on the ""ID"" column when the ""Persons"" table is created:MySQL:SQL Server / Oracle / MS Access:To allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:Note: In the example above there is only ONE PRIMARY KEY (PK_Person). \nHowever, the VALUE of the primary key is made up of TWO COLUMNS (ID + LastName).', 'To create a PRIMARY KEY constraint on the ""ID"" column when the table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To allow naming of a PRIMARY KEY constraint, and for defining a PRIMARY KEY constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:Note: If you use the ALTER TABLE statement to add a primary key, the primary key column(s) must\nalready have been declared to not contain NULL values (when the table was first created).', 'To drop a PRIMARY KEY constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nPRIMARY KEY (ID)\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL PRIMARY KEY,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCONSTRAINT PK_Person PRIMARY KEY (ID,LastName)\n);', '\nALTER TABLE Persons\nADD PRIMARY KEY (ID);', '\nALTER TABLE Persons\nADD CONSTRAINT PK_Person PRIMARY KEY (ID,LastName);']",[''],[],[]
sql||CREATE PROCEDURE Keyword,https://www.w3schools.com/sql/sql_ref_create_procedure.asp,,['CREATE PROCEDURE'],"['The CREATE PROCEDURE command is used to \ncreate a stored procedure.A stored procedure is a prepared SQL code that you can save, so the \ncode can be reused over and over again.The following SQL creates a stored procedure named ""SelectAllCustomers"" \nthat selects all records from the ""Customers"" table:Execute the stored procedure above as follows:']",[''],[''],[],[]
sql||RIGHT JOIN Keyword,https://www.w3schools.com/sql/sql_ref_right_join.asp,,['RIGHT JOIN'],"['The RIGHT JOIN command returns all rows from \nthe right table, and the matching records from the left table. The result is \nNULL from the left side, when there is no match.The following SQL will return all employees, and any orders they \nmight have placed:Note: The RIGHT JOIN keyword returns all records from the \nright table (Employees), even if there are no matches in the left table \n(Orders).']",[''],[''],[],[]
"sql||SELECT TOP, LIMIT and ROWNUM Keywords",https://www.w3schools.com/sql/sql_ref_top.asp,,"['SELECT TOP, LIMIT and ROWNUM']","['The LIMIT, SELECT TOP \nor ROWNUM command is used to specify the number of records to return.The following SQL statement selects the first three records from the ""Customers"" table \n(SQL SERVER):The following SQL statement shows the equivalent example using the LIMIT clause \n(MySQL):The following SQL statement shows the equivalent example using ROWNUM \n(Oracle):']",[''],[''],[],[]
sql||SELECT Keyword,https://www.w3schools.com/sql/sql_ref_select.asp,,['SELECT'],"['The SELECT command is used to select data \nfrom a database. The data returned is stored in a result table, called the result set.The following SQL statement selects the ""CustomerName"" and ""City"" columns \nfrom the ""Customers"" table:The following SQL statement selects all the columns from the ""Customers"" \ntable:']",[''],[''],[],[]
sql||SELECT DISTINCT Keyword,https://www.w3schools.com/sql/sql_ref_select_distinct.asp,,['SELECT DISTINCT'],"['The SELECT DISTINCT command returns only \ndistinct (different) values in the result set.The following SQL statement selects only the DISTINCT values from the ""Country"" column in the ""Customers"" table:']",[''],[''],[],[]
sql||SELECT INTO Keyword,https://www.w3schools.com/sql/sql_ref_select_into.asp,,['SELECT INTO'],['The SELECT INTO command copies data \nfrom one table and inserts it into a new table.The following SQL statement creates a backup copy of Customers:The following SQL statement uses the IN clause to copy the table into a new \ntable in another database:The following SQL statement copies only a few columns into a new table:The following SQL statement copies only the German customers into a new table:The following SQL statement copies data from more than one table into a new table:'],[''],[''],[],[]
"sql||SELECT TOP, LIMIT and ROWNUM Keywords",https://www.w3schools.com/sql/sql_ref_top.asp,,"['SELECT TOP, LIMIT and ROWNUM']","['The LIMIT, SELECT TOP \nor ROWNUM command is used to specify the number of records to return.The following SQL statement selects the first three records from the ""Customers"" table \n(SQL SERVER):The following SQL statement shows the equivalent example using the LIMIT clause \n(MySQL):The following SQL statement shows the equivalent example using ROWNUM \n(Oracle):']",[''],[''],[],[]
sql||SET Keyword,https://www.w3schools.com/sql/sql_ref_set.asp,,['SET'],"['The SET command is used with UPDATE to specify which columns and values that should be updated \nin a table.The following SQL updates the first customer (CustomerID = 1) with a new ContactName and \na new City:The following SQL will \nupdate the ""ContactName"" field to ""Juan"" for all records where Country is ""Mexico"":']",[''],[''],[],[]
sql||TABLE Keyword,https://www.w3schools.com/sql/sql_ref_table.asp,,"['CREATE TABLE', 'CREATE TABLE Using Another Table', 'ALTER TABLE', 'DROP TABLE', 'TRUNCATE TABLE']","['The CREATE TABLE command creates a new table \nin the database.The following SQL creates a table called ""Persons"" that contains five columns: PersonID, LastName, FirstName, \nAddress, and City:', 'A copy of an existing table can also be created using \nCREATE TABLE.The following SQL creates a new table called ""TestTables"" (which is \na copy of the ""Customers"" table):\xa0', 'The ALTER TABLE command adds, deletes, or \nmodifies columns in a table.The ALTER TABLE command also adds and \ndeletes various constraints in a table.The following SQL adds an ""Email"" column to the ""Customers"" table:The following SQL deletes the ""Email"" column from the ""Customers"" table:', 'The DROP TABLE command deletes a table in \nthe database.The following SQL deletes the table ""Shippers"":', 'The TRUNCATE TABLE command deletes the data inside a table, but \nnot the table itself.The following SQL truncates the table ""Categories"":\xa0']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0\nPersonID int,\n\xa0\xa0\xa0\nLastName varchar(255),\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAddress varchar(255),\n\xa0\xa0\xa0\nCity varchar(255) \n);\n', '\n  CREATE TABLE TestTable ASSELECT customername, contactnameFROM \n  customers; ', '\n  ALTER TABLE CustomersADD Email varchar(255);\n &&&&&& \n  ALTER TABLE CustomersDROP COLUMN Email;\n', '\n  DROP TABLE Shippers;\n', '']",[''],[],[]
"sql||SELECT TOP, LIMIT and ROWNUM Keywords",https://www.w3schools.com/sql/sql_ref_top.asp,,"['SELECT TOP, LIMIT and ROWNUM']","['The LIMIT, SELECT TOP \nor ROWNUM command is used to specify the number of records to return.The following SQL statement selects the first three records from the ""Customers"" table \n(SQL SERVER):The following SQL statement shows the equivalent example using the LIMIT clause \n(MySQL):The following SQL statement shows the equivalent example using ROWNUM \n(Oracle):']",[''],[''],[],[]
sql||DROP TABLE and TRUNCATE TABLE Keywords,https://www.w3schools.com/sql/sql_ref_drop_table.asp,,"['DROP TABLE', 'TRUNCATE TABLE']","['The DROP TABLE command deletes a table in \nthe database.The following SQL deletes the table ""Shippers"":', 'The TRUNCATE TABLE command deletes the data inside a table, but \nnot the table itself.The following SQL truncates the table ""Categories"":\xa0']","['\n  DROP TABLE Shippers;\n', '']",[''],[],[]
sql||UNION Keyword,https://www.w3schools.com/sql/sql_ref_union.asp,,['UNION'],"['The UNION command combines the result set of two or more SELECT statements (only \ndistinct values)The following SQL statement returns the cities \n(only distinct values) from both the ""Customers"" and the ""Suppliers"" table:']",[''],[''],[],[]
sql||UNION Keyword,https://www.w3schools.com/sql/sql_ref_union.asp,,['UNION'],"['The UNION command combines the result set of two or more SELECT statements (only \ndistinct values)The following SQL statement returns the cities \n(only distinct values) from both the ""Customers"" and the ""Suppliers"" table:']",[''],[''],[],[]
sql||UNIQUE Keyword,https://www.w3schools.com/sql/sql_ref_unique.asp,,"['UNIQUE', 'SQL UNIQUE Constraint on CREATE TABLE', 'SQL UNIQUE Constraint on ALTER TABLE', 'DROP a UNIQUE Constraint']","['The UNIQUE constraint ensures that all \nvalues in a column are unique.', 'The following SQL creates a UNIQUE constraint on the ""ID"" column when the ""Persons"" table is created:SQL Server / Oracle / MS Access:MySQL:To name a UNIQUE constraint, and to define a UNIQUE constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To create a UNIQUE constraint on the ""ID"" column when the table is already created, use the following SQL:MySQL / SQL Server / Oracle / MS Access:To name a UNIQUE constraint, and to define a UNIQUE constraint on multiple columns, use the following SQL syntax:MySQL / SQL Server / Oracle / MS Access:', 'To drop a UNIQUE constraint, use the following SQL:MySQL:SQL Server / Oracle / MS Access:']","['\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL UNIQUE,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int\n);\n', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nUNIQUE (ID)\n);', '\nCREATE TABLE Persons\n(\n\xa0\xa0\xa0 ID int NOT NULL,\n\xa0\xa0\xa0\nLastName varchar(255) NOT NULL,\n\xa0\xa0\xa0\nFirstName varchar(255),\n\xa0\xa0\xa0\nAge int,\n\xa0\xa0\xa0\nCONSTRAINT UC_Person UNIQUE (ID,LastName)\n);', '\nALTER TABLE Persons\nADD UNIQUE (ID);', '\nALTER TABLE Persons\nADD CONSTRAINT UC_Person UNIQUE (ID,LastName);']",[''],[],[]
sql||UPDATE Keyword,https://www.w3schools.com/sql/sql_ref_update.asp,,['UPDATE'],"['The UPDATE command is used to update existing rows in a table.The following SQL statement updates the first customer (CustomerID = 1) with a new contact person and \na new city.The following SQL statement will \nupdate the contactname to ""Juan"" for all records where country is ""Mexico"":']",[''],[''],[],[]
sql||VALUES Keyword,https://www.w3schools.com/sql/sql_ref_values.asp,,['VALUES'],"['The VALUES command specifies the values of an INSERT INTO statement.The following SQL inserts a new record in the ""Customers"" table:The following SQL will insert a new record, but only insert data in the ""CustomerName"", \n""City"", and ""Country"" columns (CustomerID will \nbe updated automatically):']",[''],[''],[],[]
sql||VIEW Keyword,https://www.w3schools.com/sql/sql_ref_view.asp,,"['CREATE VIEW', 'Query The View', 'CREATE OR REPLACE VIEW', 'DROP VIEW']","['In SQL, a view is a virtual table based on the result set of an SQL statement.The CREATE VIEW command creates a view.The following SQL creates a view that selects all customers from Brazil:', 'We can query the view above as follows:', 'The CREATE OR REPLACE VIEW command updates a view.The following SQL adds the ""City"" column to the ""Brazil Customers"" view:', 'The DROP VIEW command deletes a view.The following SQL drops the ""Brazil Customers"" view:']","['\nCREATE VIEW [Brazil \n  Customers] AS\nSELECT \n  CustomerName, ContactName\nFROM Customers\nWHERE \n  Country = ""Brazil"";', '\nSELECT * FROM [Brazil \n  Customers];', '\nCREATE OR REPLACE VIEW [Brazil Customers] AS\nSELECT CustomerName, ContactName, City\nFROM Customers\nWHERE Country = ""Brazil"";', '']",[''],[],[]
sql||WHERE Keyword,https://www.w3schools.com/sql/sql_ref_where.asp,,['SELECT'],"['The WHERE command filters a result set to include only records that fulfill a specified condition.The following SQL statement selects all the customers from  \n""Mexico"" in the ""Customers"" table:SQL requires single quotes around text values (most database systems will \nalso allow double quotes).However, numeric fields should not be enclosed in quotes:Note: The WHERE clause is not only used in SELECT statement, it is also used in UPDATE,\nDELETE statement, etc.!The following operators can be used in the WHERE clause:']",[''],[''],['Operator|||Description|||&&&=|||Equal|||&&&<>|||Not equal. Note: In some versions of SQL this operator may be written as !=|||&&&>|||Greater than|||&&&<|||Less than|||&&&>=|||Greater than or equal|||&&&<=|||Less than or equal|||&&&BETWEEN|||Between a certain range|||&&&LIKE|||Search for a pattern|||&&&IN|||To specify multiple possible values for a column|||&&&'],[]
sql||Functions,https://www.w3schools.com/sql/sql_ref_mysql.asp,MySQL has many built-in functions.,"['MySQL String Functions', 'MySQL Numeric Functions', 'MySQL Date Functions', 'MySQL Advanced Functions']","['This reference contains string, numeric, date, and some advanced functions \nin MySQL.', '', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&ASCII|||Returns the ASCII value for the specific character|||&&&CHAR_LENGTH|||Returns the length of a string (in characters)|||&&&CHARACTER_LENGTH|||Returns the length of a string (in characters)|||&&&CONCAT|||Adds two or more expressions together|||&&&CONCAT_WS|||Adds two or more expressions together with a separator|||&&&FIELD|||Returns the index position of a value in a list of values|||&&&FIND_IN_SET|||Returns the position of a string within a list of strings|||&&&FORMAT|||Formats a number to a format like ""#,###,###.##"", rounded to a \nspecified number \nof decimal places|||&&&INSERT|||Inserts a string within a string at the specified position and for a certain \nnumber of characters|||&&&INSTR|||Returns the position of the first occurrence of a string in another string|||&&&LCASE|||Converts a string to lower-case|||&&&LEFT|||Extracts a number of characters from a string (starting from left)|||&&&LENGTH|||Returns the length of a string (in bytes)|||&&&LOCATE|||Returns the position of the first occurrence of a substring in a string|||&&&LOWER|||Converts a string to lower-case|||&&&LPAD|||Left-pads a string with another string, to a certain length|||&&&LTRIM|||Removes leading spaces from a string|||&&&MID|||Extracts a substring from a string (starting at any position)|||&&&POSITION|||Returns the position of the first occurrence of a substring in a string|||&&&REPEAT|||Repeats a string as many times as specified|||&&&REPLACE|||Replaces all occurrences of a substring within a string, with a new \nsubstring|||&&&REVERSE|||Reverses a string and returns the result|||&&&RIGHT|||Extracts a number of characters from a string (starting from right)|||&&&RPAD|||Right-pads a string with another string, to a certain length|||&&&RTRIM|||Removes trailing spaces from a string|||&&&SPACE|||Returns a string of the specified number of space characters|||&&&STRCMP|||Compares two strings|||&&&SUBSTR|||Extracts a substring from a string (starting at any position)|||&&&SUBSTRING|||Extracts a substring from a string (starting at any position)|||&&&SUBSTRING_INDEX|||Returns a substring of a string before a specified number of \ndelimiter occurs|||&&&TRIM|||Removes leading and trailing spaces from a string|||&&&UCASE|||Converts a string to upper-case|||&&&UPPER|||Converts a string to upper-case|||&&&', 'Function|||Description|||&&&ABS|||Returns the absolute value of a number|||&&&ACOS|||Returns the arc cosine of a number|||&&&ASIN|||Returns the arc sine of a number|||&&&ATAN|||Returns the arc tangent of one or two numbers|||&&&ATAN2|||Returns the arc tangent of two numbers|||&&&AVG|||Returns the average value of an expression|||&&&CEIL|||Returns the smallest integer value that is >= to a number|||&&&CEILING|||Returns the smallest integer value that is >= to a number|||&&&COS|||Returns the cosine of a number|||&&&COT|||Returns the cotangent of a number|||&&&COUNT|||Returns the number of records returned by a select query|||&&&DEGREES|||Converts a value in radians to degrees|||&&&DIV|||Used for integer division|||&&&EXP|||Returns e raised to the power of a specified number|||&&&FLOOR|||Returns the largest integer value that is <= to a number|||&&&GREATEST|||Returns the greatest value of the list of arguments|||&&&LEAST|||Returns the smallest value of the list of arguments|||&&&LN|||Returns the natural logarithm of a number|||&&&LOG|||Returns the natural logarithm of a number, or the logarithm of a number to a \nspecified base|||&&&LOG10|||Returns the natural logarithm of a number to base 10|||&&&LOG2|||Returns the natural logarithm of a number to base 2|||&&&MAX|||Returns the maximum value in a set of values|||&&&MIN|||Returns the minimum value in a set of values|||&&&MOD|||Returns the remainder of a number divided by another number|||&&&PI|||Returns the value of PI|||&&&POW|||Returns the value of a number raised to the power of another number|||&&&POWER|||Returns the value of a number raised to the power of another number|||&&&RADIANS|||Converts a degree value into radians|||&&&RAND|||Returns a random number|||&&&ROUND|||Rounds a number to a specified number of decimal places|||&&&SIGN|||Returns the sign of a number|||&&&SIN|||Returns the sine of a number|||&&&SQRT|||Returns the square root of a number|||&&&SUM|||Calculates the sum of a set of values|||&&&TAN|||Returns the tangent of a number|||&&&TRUNCATE|||Truncates a number to the specified number of decimal places|||&&&', 'Function|||Description|||&&&ADDDATE|||Adds a time/date interval to a date and then returns the date|||&&&ADDTIME|||Adds a time interval to a time/datetime and then returns the time/datetime|||&&&CURDATE|||Returns the current date|||&&&CURRENT_DATE|||Returns the current date|||&&&CURRENT_TIME|||Returns the current time|||&&&CURRENT_TIMESTAMP|||Returns the current date and time|||&&&CURTIME|||Returns the current time|||&&&DATE|||Extracts the date part from a datetime expression|||&&&DATEDIFF|||Returns the number of days between two date values|||&&&DATE_ADD|||Adds a time/date interval to a date and then returns the date|||&&&DATE_FORMAT|||Formats a date|||&&&DATE_SUB|||Subtracts a time/date interval from a date and then returns the date|||&&&DAY|||Returns the day of the month for a given date|||&&&DAYNAME|||Returns the weekday name for a given date|||&&&DAYOFMONTH|||Returns the day of the month for a given date|||&&&DAYOFWEEK|||Returns the weekday index for a given date|||&&&DAYOFYEAR|||Returns the day of the year for a given date|||&&&EXTRACT|||Extracts a part from a given date|||&&&FROM_DAYS|||Returns a date from a numeric datevalue|||&&&HOUR|||Returns the hour part for a given date|||&&&LAST_DAY|||Extracts the last day of the month for a given date|||&&&LOCALTIME|||Returns the current date and time|||&&&LOCALTIMESTAMP|||Returns the current date and time|||&&&MAKEDATE|||Creates and returns a date based on a year and a number of days value|||&&&MAKETIME|||Creates and returns a time based on an hour, minute, and second value|||&&&MICROSECOND|||Returns the microsecond part of a time/datetime|||&&&MINUTE|||Returns the minute part of a time/datetime|||&&&MONTH|||Returns the month part for a given date|||&&&MONTHNAME|||Returns the name of the month for a given date|||&&&NOW|||Returns the current date and time|||&&&PERIOD_ADD|||Adds a specified number of months to a period|||&&&PERIOD_DIFF|||Returns the difference between two periods|||&&&QUARTER|||Returns the quarter of the year for a given date value|||&&&SECOND|||Returns the seconds part of a time/datetime|||&&&SEC_TO_TIME|||Returns a time value based on the specified seconds|||&&&STR_TO_DATE|||Returns a date based on a string and a format|||&&&SUBDATE|||Subtracts a time/date interval from a date and then returns the date|||&&&SUBTIME|||Subtracts a time interval from a datetime and then returns the time/datetime|||&&&SYSDATE|||Returns the current date and time|||&&&TIME|||Extracts the time part from a given time/datetime|||&&&TIME_FORMAT|||Formats a time by a specified format|||&&&TIME_TO_SEC|||Converts a time value into seconds|||&&&TIMEDIFF|||Returns the difference between two time/datetime expressions|||&&&TIMESTAMP|||Returns a datetime value based on a date or datetime value|||&&&TO_DAYS|||Returns the number of days between a date and date ""0000-00-00""|||&&&WEEK|||Returns the week number for a given date|||&&&WEEKDAY|||Returns the weekday number for a given date|||&&&WEEKOFYEAR|||Returns the week number for a given date|||&&&YEAR|||Returns the year part for a given date|||&&&YEARWEEK|||Returns the year and week number for a given date|||&&&', 'Function|||Description|||&&&BIN|||Returns a binary representation of a number|||&&&BINARY|||Converts a value to a binary string|||&&&CASE|||Goes through conditions and return a value when the first condition is \nmet|||&&&CAST|||Converts a value (of any type) into a specified datatype|||&&&COALESCE|||Returns the first non-null value in a list|||&&&CONNECTION_ID|||Returns the unique connection ID for the current connection|||&&&CONV|||Converts a number from one numeric base system to another|||&&&CONVERT|||Converts a value into the specified datatype or character set|||&&&CURRENT_USER|||Returns the user name and host name for the MySQL account that the server \nused to authenticate the current client|||&&&DATABASE|||Returns the name of the current database|||&&&IF|||Returns a value if a condition is TRUE, or another value if a condition is FALSE|||&&&IFNULL|||Return a specified value if the expression is NULL, otherwise return the \nexpression|||&&&ISNULL|||Returns 1 or 0 depending on whether an expression is NULL|||&&&LAST_INSERT_ID|||Returns the AUTO_INCREMENT id of the last row that has been inserted or \nupdated in a table|||&&&NULLIF|||Compares two expressions and returns NULL if they are equal. Otherwise, the \nfirst expression is returned|||&&&SESSION_USER|||Returns the current MySQL user name and host name|||&&&SYSTEM_USER|||Returns the current MySQL user name and host name|||&&&USER|||Returns the current MySQL user name and host name|||&&&VERSION|||Returns the current version of the MySQL database|||&&&']",[]
sql||ASCII(),https://www.w3schools.com/sql/func_mysql_ascii.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ASCII() function returns the ASCII value for the specific character.', '', '', '']","['\n SELECT ASCII(CustomerName) AS NumCodeOfFirstCharFROM Customers; ', '', '', '']",[''],"['Parameter|||Description|||&&&character|||Required. The character to return the ASCII value for. If more than one \n    character is entered, it will only return the value for the first character|||&&&', 'Works in:|||&&&']",[]
sql||CHAR_LENGTH(),https://www.w3schools.com/sql/func_mysql_char_length.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CHAR_LENGTH() function return the length of a string (in characters).Note: This function is equal to the \nCHARACTER_LENGTH() function.', '', '', '', '']","['\nSELECT CHAR_LENGTH(""SQL Tutorial"") AS LengthOfString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to count the length for|||&&&', 'Works in:|||&&&']",[]
sql||CHARACTER_LENGTH(),https://www.w3schools.com/sql/func_mysql_character_length.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CHARACTER_LENGTH() function return the length of a string (in characters).Note: This function is equal to the \nCHAR_LENGTH() function.', '', '', '', '']","['\nSELECT CHARACTER_LENGTH(""SQL Tutorial"") AS LengthOfString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to count the length for|||&&&', 'Works in:|||&&&']",[]
sql||CONCAT(),https://www.w3schools.com/sql/func_mysql_concat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CONCAT() function adds two or more expressions together.Note: Also look at the CONCAT_WS() function.', '', '', '', '']","['\nSELECT CONCAT(""SQL "", ""Tutorial "", ""is "", ""fun!"") AS ConcatenatedString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression1,expression2,expression3,etc.|||Required. The expressions to add together.\n    Note:  \nIf any of the expressions is a NULL value, it returns NULL\n|||&&&', 'Works in:|||&&&']",[]
sql||CONCAT_WS(),https://www.w3schools.com/sql/func_mysql_concat_ws.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CONCAT_WS() function adds two or more expressions together with a separator.Note: Also look at the CONCAT() function.', '', '', '', '']","['\nSELECT CONCAT_WS(""-"", ""SQL"", ""Tutorial"", ""is"", ""fun!"") AS ConcatenatedString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&separator|||Required. The separator to add between each of the  \n    expressions. If separator is NULL, this function returns NULL|||&&&expression1,expression2,expression3,etc.|||Required. The expressions to add together. An expression with a NULL value \n    will be skipped|||&&&', 'Works in:|||&&&']",[]
sql||FIELD(),https://www.w3schools.com/sql/func_mysql_field.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The FIELD() function returns the index position of a value in a list of \nvalues.This function performs a case-insensitive search.Note: If the specified value is not found in the list of values, this function \nwill return 0. If value is NULL, this function will return 0.', '', '', '', '']","['\n SELECT FIELD(""q"", ""s"", ""q"", ""l""); ', '', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. The value to search for in the list|||&&&val1, val2, val3, ....|||Required. The list of values to search|||&&&', 'Works in:|||&&&']",[]
sql||FIND_IN_SET(),https://www.w3schools.com/sql/func_mysql_find_in_set.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Return Values', 'Technical Details', 'More Examples']","['The FIND_IN_SET() function returns the position of a string within a list of strings.', '', '', '', '', '']","['\n  SELECT FIND_IN_SET(""q"", ""s,q,l"");', '', '', '', '', '']","['Return Values###&&&|||If string is not found in string_list, this function returns 0|||If string or string_list is NULL, this function returns |||  NULL|||If string_list is an empty string (""""), this function returns 0|||']","['Parameter|||Description|||&&&string|||Required. The string to search for|||&&&string_list|||Required. The list of string values to be searched (separated by commas)|||&&&', 'Works in:|||&&&']",[]
sql||FORMAT(),https://www.w3schools.com/sql/func_mysql_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The FORMAT() function formats a number to a format like ""#,###,###.##"", rounded to a \nspecified number \nof decimal places, then it returns the result as a string.', '', '', '', '']","['\n  SELECT FORMAT(250500.5634, 2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. The number to be formatted|||&&&decimal_places|||Required. The number of decimal places for number. If this \n    parameter is 0, this function returns a string \n  with no decimal places|||&&&', 'Works in:|||&&&']",[]
sql||INSERT(),https://www.w3schools.com/sql/func_mysql_insert.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Return Values', 'Technical Details', 'More Examples']","['The INSERT() function inserts a string within a string at the specified position \nand for a certain number of characters.', '', '', '', '', '']","['\n  SELECT INSERT(""W3Schools.com"", 1, 9, ""Example"");', '', '', '', '', '']","['Return Values###&&&|||If position is outside the length of string, this |||  function returns string|||If number is higher than the length of the rest of the string, |||  this function replaces string from position until |||  the end of string|||']","['Parameter|||Description|||&&&string|||Required. The string that will be modified|||&&&position|||Required. The position where to insert string2|||&&&number|||Required. The number of characters to replace|||&&&string2|||Required. The string to insert into string|||&&&', 'Works in:|||&&&']",[]
sql||INSTR(),https://www.w3schools.com/sql/func_mysql_instr.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The INSTR() function returns the position of the first occurrence of a string \nin another string.This function performs a case-insensitive search.', '', '', '', '']","['\n  SELECT INSTR(""W3Schools.com"", ""3"") AS MatchPosition;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string1|||Required. The string that will be searched|||&&&string2|||Required. The string to search for in string1. If string2 is not found, this function returns 0|||&&&', 'Works in:|||&&&']",[]
sql||LCASE(),https://www.w3schools.com/sql/func_mysql_lcase.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LCASE() function converts a string to lower-case.Note: The LOWER() function is a synonym for the LCASE() \nfunction.', '', '', '', '']","['\nSELECT LCASE(""SQL Tutorial is FUN!""); ', '', '', '', '']",[''],"['Parameter|||Description|||&&&text|||Required. The string to convert|||&&&', 'Works in:|||&&&']",[]
sql||LEFT(),https://www.w3schools.com/sql/func_mysql_left.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LEFT() function extracts a number of characters from a string (starting from left).Tip: Also look at the RIGHT() \nfunction.', '', '', '', '']","['\n  SELECT LEFT(""SQL Tutorial"", 3) AS ExtractString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to extract from|||&&&number_of_chars|||Required. The number of characters to extract. If this parameter is \n    larger than the number of characters in string, \n  this function will return string|||&&&', 'Works in:|||&&&']",[]
sql||LENGTH(),https://www.w3schools.com/sql/func_mysql_length.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LENGTH() function returns the length of a string (in bytes).', '', '', '', '']","['\nSELECT LENGTH(""SQL Tutorial"") AS LengthOfString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to count the length for|||&&&', 'Works in:|||&&&']",[]
sql||LOCATE(),https://www.w3schools.com/sql/func_mysql_locate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LOCATE() function returns the position of the first occurrence of a substring in a string.If the substring is not found within the original string, this function returns 0.This function performs a case-insensitive search.Note: This function is equal to the\nPOSITION() function.', '', '', '', '']","['\nSELECT LOCATE(""3"", ""W3Schools.com"") AS MatchPosition;', '', '', '', '']",[''],"['Parameter|||Description|||&&&substring|||Required. The substring to search for in string |||&&&string|||Required. The string that will be searched|||&&&start|||Optional. The starting position for the search. Position 1 is default|||&&&', 'Works in:|||&&&']",[]
sql||LOWER(),https://www.w3schools.com/sql/func_mysql_lower.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LOWER() function converts a string to lower-case.Note: The LCASE() \nfunction is equal to the LOWER() function.', '', '', '', '']","['\nSELECT LOWER(""SQL Tutorial is FUN!""); ', '', '', '', '']",[''],"['Parameter|||Description|||&&&text|||Required. The string to convert|||&&&', 'Works in:|||&&&']",[]
sql||LPAD(),https://www.w3schools.com/sql/func_mysql_lpad.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LPAD() function left-pads a string with another string, to a certain \nlength.Note: Also look at the RPAD() \nfunction.', '', '', '', '']","['\nSELECT LPAD(""SQL Tutorial"", \n  20, ""ABC"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The original string. If the length of the original string is \n    larger than the length parameter, this function removes the overfloating characters from\n    string|||&&&length|||Required. The length of the string after it has been left-padded|||&&&lpad_string|||Required. The string to left-pad to string|||&&&', 'Works in:|||&&&']",[]
sql||LTRIM(),https://www.w3schools.com/sql/func_mysql_ltrim.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The LTRIM() function removes leading spaces from a string.', '', '', '']","['\n  SELECT LTRIM(""\xa0\xa0\xa0\xa0 SQL Tutorial"") AS LeftTrimmedString; ', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to remove leading spaces from|||&&&', 'Works in:|||&&&']",[]
sql||MID(),https://www.w3schools.com/sql/func_mysql_mid.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MID() function extracts a substring from a string (starting at any \nposition).Note: The MID() and SUBSTR() functions \nequals the SUBSTRING() function. ', '', '', '', '']","['\n  SELECT MID(""SQL Tutorial"", 5, 3) AS ExtractString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to extract from|||&&&start|||Required. The start position. Can be both a positive or negative number. \n    If it is a positive number, this function extracts from the beginning of the \n    string. If it is a negative number, this function extracts from the \n  end of the string|||&&&length|||Required. The number of characters to extract|||&&&', 'Works in:|||&&&']",[]
sql||POSITION(),https://www.w3schools.com/sql/func_mysql_position.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The POSITION() function returns the position of the first occurrence of a substring \nin a string.If the substring is not found within the original string, this function returns 0.This function performs a case-insensitive search.Note: The LOCATE() function is \nequal to the \nPOSITION() function.', '', '', '', '']","['\n  SELECT POSITION(""3"" IN ""W3Schools.com"") AS MatchPosition;', '', '', '', '']",[''],"['Parameter|||Description|||&&&substring|||Required. The substring to search for in string |||&&&string|||Required. The original string that will be searched|||&&&', 'Works in:|||&&&']",[]
sql||REPEAT(),https://www.w3schools.com/sql/func_mysql_repeat.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The REPEAT() function repeats a string as many times as specified.', '', '', '', '']","['\n  SELECT REPEAT(""SQL Tutorial"", 3);', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to repeat|||&&&number|||Required. The number of times to repeat the string|||&&&', 'Works in:|||&&&']",[]
sql||REPLACE(),https://www.w3schools.com/sql/func_mysql_replace.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The REPLACE() function replaces all occurrences of a substring within a \nstring, with a new substring.Note: This function performs a case-sensitive \nreplacement.', '', '', '', '']","['\n  SELECT REPLACE(""SQL Tutorial"", ""SQL"", ""HTML"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The original string|||&&&from_string|||Required. The substring to be replaced|||&&&new_string|||Required. The new replacement substring|||&&&', 'Works in:|||&&&']",[]
sql||REVERSE(),https://www.w3schools.com/sql/func_mysql_reverse.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The REVERSE() function reverses a string and returns the result.', '', '', '', '']","['\n  SELECT REVERSE(""SQL Tutorial"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to reverse|||&&&', 'Works in:|||&&&']",[]
sql||RIGHT(),https://www.w3schools.com/sql/func_mysql_right.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The RIGHT() function extracts a number of characters from a string (starting \nfrom right).Tip: Also look at the LEFT() \nfunction.', '', '', '', '']","['\n  SELECT RIGHT(""SQL Tutorial is cool"", 4) AS ExtractString;', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to extract from|||&&&number_of_chars|||Required. The number of characters to extract. If this parameter is \n    larger than the number of characters in string, \n  this function will return string|||&&&', 'Works in:|||&&&']",[]
sql||RPAD(),https://www.w3schools.com/sql/func_mysql_rpad.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The RPAD() function right-pads a string with another string, to a certain \nlength.Note: Also look at the LPAD() \nfunction.', '', '', '', '']","['\nSELECT RPAD(""SQL Tutorial"", \n  20, ""ABC"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The original string. If the length of the original string is \n    larger than the length parameter, this function removes the overfloating characters from\n    string|||&&&length|||Required. The length of the string after it has been right-padded|||&&&rpad_string|||Required. The string to right-pad to string|||&&&', 'Works in:|||&&&']",[]
sql||RTRIM(),https://www.w3schools.com/sql/func_mysql_rtrim.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The RTRIM() function removes trailing spaces from a string.', '', '', '']","['\n  SELECT RTRIM(""SQL Tutorial\xa0\xa0\xa0\xa0 "") AS RightTrimmedString; ', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to remove trailing spaces from|||&&&', 'Works in:|||&&&']",[]
sql||SPACE(),https://www.w3schools.com/sql/func_mysql_space.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The SPACE() function returns a string of the specified number of space \ncharacters.', '', '', '']","['\n  SELECT \n  SPACE(10);', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. The number of space characters to return|||&&&', 'Works in:|||&&&']",[]
sql||STRCMP(),https://www.w3schools.com/sql/func_mysql_strcmp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Return Values', 'Technical Details', 'More Examples']","['The STRCMP() function compares two strings.', '', '', '', '', '']","['\nSELECT STRCMP(""SQL Tutorial"", \n  ""SQL Tutorial"");', '', '', '', '', '']","['Return Values###&&&|||If string1 = string2, this function returns 0|||If string1 < string2, this function returns -1|||If string1 > string2, this function returns 1|||']","['Parameter|||Description|||&&&string1, string2|||Required. The two strings to be compared|||&&&', 'Works in:|||&&&']",[]
sql||SUBSTR(),https://www.w3schools.com/sql/func_mysql_substr.asp,,"['Definition and Usage', 'Syntax']","['The SUBSTR() function extracts a substring from a string (starting at any \nposition).Note: The SUBSTR() and MID() functions \nequals to the \nSUBSTRING() \nfunction. OR:\n\n  SUBSTR(string FROM start FOR length)\nParameter Values\n\n\nParameter\nDescription \n\nstring\nRequired. The string to extract from\n\n\nstart\nRequired. The start position. Can be both a positive or negative number. \n    If it is a positive number, this function extracts from the beginning of the \n    string. If it is a negative number, this function extracts from the \n  end of the string\n\n\nlength\nOptional. The number of characters to extract. If omitted, the whole \n    string will be returned (from the start position)\n\n\nTechnical Details\n\n\nWorks in:\nFrom MySQL 4.0\n\n\n\nMore Examples\n\nExample\nExtract a substring from the text in a column (start at position 2, extract 5 \ncharacters):\n\n  SELECT SUBSTR(CustomerName, \n  2, 5) AS ExtractStringFROM Customers;\nTry it Yourself »\n\n\nExample\nExtract a substring from a string (start from the end, at position -5, extract \n5 \ncharacters):\n\n  SELECT SUBSTR(""SQL Tutorial"", -5, 5) AS ExtractString;\nTry it Yourself »\n\n\n\n❮ Previous\n❮ MySQL Functions\nNext ❯\n\n\n\n', '']","['\n  SELECT SUBSTR(""SQL Tutorial"", 5, 3) AS ExtractString;', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to extract from|||&&&start|||Required. The start position. Can be both a positive or negative number. \n    If it is a positive number, this function extracts from the beginning of the \n    string. If it is a negative number, this function extracts from the \n  end of the string|||&&&length|||Optional. The number of characters to extract. If omitted, the whole \n    string will be returned (from the start position)|||&&&', 'Works in:|||&&&']",[]
sql||SUBSTRING(),https://www.w3schools.com/sql/func_mysql_substring.asp,,"['Definition and Usage', 'Syntax']","['The SUBSTRING() function extracts a substring from a string (starting at any \nposition).Note: The SUBSTR() and MID() functions \nequals to the SUBSTRING() \nfunction. OR:\n\n  SUBSTRING(string FROM start FOR length)\nParameter Values\n\n\nParameter\nDescription \n\nstring\nRequired. The string to extract from\n\n\nstart\nRequired. The start position. Can be both a positive or negative number. \n    If it is a positive number, this function extracts from the beginning of the \n    string. If it is a negative number, this function extracts from the \n  end of the string\n\n\nlength\nOptional. The number of characters to extract. If omitted, the whole \n    string will be returned (from the start position)\n\n\nTechnical Details\n\n\nWorks in:\nFrom MySQL 4.0\n\n\n\nMore Examples\n\nExample\nExtract a substring from the text in a column (start at position 2, extract 5 \ncharacters):\n\n  SELECT SUBSTRING(CustomerName, \n  2, 5) AS ExtractStringFROM Customers;\nTry it Yourself »\n\n\nExample\nExtract a substring from a string (start from the end, at position -5, extract \n5 \ncharacters):\n\n  SELECT SUBSTRING(""SQL Tutorial"", -5, 5) AS ExtractString;\nTry it Yourself »\n\n\n\n❮ Previous\n❮ MySQL Functions\nNext ❯\n\n\n\n', '']","['\n  SELECT SUBSTRING(""SQL Tutorial"", 5, 3) AS ExtractString;', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to extract from|||&&&start|||Required. The start position. Can be both a positive or negative number. \n    If it is a positive number, this function extracts from the beginning of the \n    string. If it is a negative number, this function extracts from the \n  end of the string|||&&&length|||Optional. The number of characters to extract. If omitted, the whole \n    string will be returned (from the start position)|||&&&', 'Works in:|||&&&']",[]
sql||SUBSTRING_INDEX(),https://www.w3schools.com/sql/func_mysql_substring_index.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SUBSTRING_INDEX() function returns a substring of a string before a \nspecified number of \ndelimiter occurs.', '', '', '', '']","['\n  SELECT SUBSTRING_INDEX(""www.w3schools.com"", ""."", 1);', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The original string|||&&&delimiter|||Required. The delimiter to search for|||&&&number|||Required. The number of times to search for the delimiter. Can \n    be both a positive or negative number. If it is a positive number, this \n    function returns all to the left of the delimiter. If it is a \n    negative number, this function returns all to the right of the delimiter.|||&&&', 'Works in:|||&&&']",[]
sql||TRIM(),https://www.w3schools.com/sql/func_mysql_trim.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The TRIM() function removes leading and trailing spaces from a string.', '', '', '']","[""\n  SELECT TRIM('\xa0\xa0\xa0 SQL Tutorial\xa0\xa0\xa0 ') AS TrimmedString; "", '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to remove leading and trailing spaces from|||&&&', 'Works in:|||&&&']",[]
sql||UCASE(),https://www.w3schools.com/sql/func_mysql_ucase.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The UCASE() function converts a string to upper-case.Note: This function is equal to the UPPER() function.', '', '', '', '']","['\nSELECT UCASE(""SQL Tutorial is FUN!""); ', '', '', '', '']",[''],"['Parameter|||Description|||&&&text|||Required. The string to convert|||&&&', 'Works in:|||&&&']",[]
sql||UPPER(),https://www.w3schools.com/sql/func_mysql_upper.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The UPPER() function converts a string to upper-case.Note: This function is equal to the UCASE() \nfunction.', '', '', '', '']","['\nSELECT UPPER(""SQL Tutorial is FUN!""); ', '', '', '', '']",[''],"['Parameter|||Description|||&&&text|||Required. The string to convert|||&&&', 'Works in:|||&&&']",[]
sql||ABS(),https://www.w3schools.com/sql/func_mysql_abs.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The ABS() function returns the absolute (positive) value of a number.', '', '', '']","['\nSELECT ABS(-243.5); ', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||ACOS(),https://www.w3schools.com/sql/func_mysql_acos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ACOS() function returns the arc cosine of a number.The specified number must be between -1 to 1, otherwise \nthis function returns NULL.', '', '', '', '']","['\n  SELECT ACOS(0.25);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||ASIN(),https://www.w3schools.com/sql/func_mysql_asin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ASIN() function returns the arc sine of a number.The specified number must be between -1 to 1, otherwise \nthis function returns NULL.\xa0', '', '', '', '']","['\n  SELECT ASIN(0.25);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||ATAN(),https://www.w3schools.com/sql/func_mysql_atan.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ATAN() function returns the arc tangent of one or two numbers.OR:', '', '', '', '']","['\n  SELECT ATAN(2.5);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||A numeric value|||&&&a, b|||Two numeric values to calculate the arc tangent of|||&&&', 'Works in:|||&&&']",[]
sql||ATAN2(),https://www.w3schools.com/sql/func_mysql_atan2.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ATAN2() function returns the arc tangent of two numbers.', '', '', '', '']","['\n  SELECT ATAN2(0.50, 1);', '', '', '', '']",[''],"['Parameter|||Description|||&&&a, b|||Required. Two numeric values to calculate the arc tangent of|||&&&', 'Works in:|||&&&']",[]
sql||AVG(),https://www.w3schools.com/sql/func_mysql_avg.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The AVG() function returns the average value of an expression.Note: NULL values are ignored.\xa0', '', '', '', '']","['\nSELECT AVG(Price) AS \n  AveragePrice FROM Products;', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. A numeric value (can be a field or a formula)|||&&&', 'Works in:|||&&&']",[]
sql||CEIL(),https://www.w3schools.com/sql/func_mysql_ceil.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CEIL() function returns the smallest integer value that is bigger than or \nequal to a number.Note: This function is equal to the \nCEILING() \nfunction.', '', '', '', '']","['\n  SELECT CEIL(25.75);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||CEILING(),https://www.w3schools.com/sql/func_mysql_ceiling.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CEILING() function returns the smallest integer value that is bigger than \nor equal to a number.Note: This function is equal to the CEIL() function.', '', '', '', '']","['\n  SELECT CEILING(25.75);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||COS(),https://www.w3schools.com/sql/func_mysql_cos.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The COS() function returns the cosine of a number.', '', '', '', '']","['\n  SELECT COS(2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||COT(),https://www.w3schools.com/sql/func_mysql_cot.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The COT() function returns the cotangent of a number.', '', '', '', '']","['\n  SELECT COT(6);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value. If number is 0, an error or NULL is returned|||&&&', 'Works in:|||&&&']",[]
sql||COUNT(),https://www.w3schools.com/sql/func_mysql_count.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The COUNT() function returns the number of records returned by a select query.Note: NULL values are not counted.', '', '', '']","['\nSELECT COUNT(ProductID) AS NumberOfProducts FROM Products;', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. A field or a string value|||&&&', 'Works in:|||&&&']",[]
sql||DEGREES(),https://www.w3schools.com/sql/func_mysql_degrees.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DEGREES() function converts a value in radians to degrees.Note: See also the RADIANS() and\nPI() functions.', '', '', '', '']","['\n  SELECT DEGREES(1.5);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||DIV,https://www.w3schools.com/sql/func_mysql_div.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DIV function is used for integer division (x is divided by y). An integer value is \nreturned.', '', '', '', '']","['\n  SELECT 10 DIV 5;', '', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. A value that will be divided by y|||&&&y|||Required. The divisor|||&&&', 'Works in:|||&&&']",[]
sql||EXP(),https://www.w3schools.com/sql/func_mysql_exp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The EXP() function returns e raised to the power of the specified \nnumber.The constant e (2.718281...), is the base of natural logarithms.Tip: Also look at the LOG() and\nLN() functions.', '', '', '', '']","['\n  SELECT EXP(1);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. The power number|||&&&', 'Works in:|||&&&']",[]
sql||FLOOR(),https://www.w3schools.com/sql/func_mysql_floor.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The FLOOR() function returns the largest integer value that is smaller than \nor equal to a number.Note: Also look at the ROUND(), \nCEIL(), CEILING(), \nTRUNCATE(), and\nDIV functions.', '', '', '', '']","['\n  SELECT FLOOR(25.75);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||GREATEST(),https://www.w3schools.com/sql/func_mysql_greatest.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The GREATEST() function returns the greatest value of the list of arguments.Note: See also the LEAST() function.', '', '', '', '']","['\n  SELECT GREATEST(3, 12, 34, 8, 25);', '', '', '', '']",[''],"['Parameter|||Description|||&&&arg1, arg2, arg3, ...|||Required. The list of arguments to be evaluated|||&&&', 'Works in:|||&&&']",[]
sql||LEAST(),https://www.w3schools.com/sql/func_mysql_least.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LEAST() function returns the smallest value of the list of arguments.Note: See also the \nGREATEST() function.', '', '', '', '']","['\n  SELECT LEAST(3, 12, 34, 8, 25);', '', '', '', '']",[''],"['Parameter|||Description|||&&&arg1, arg2, arg3, ...|||Required. The list of arguments to be evaluated|||&&&', 'Works in:|||&&&']",[]
sql||LN(),https://www.w3schools.com/sql/func_mysql_ln.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LN() function returns the natural logarithm of a number.Note: See also the LOG() and\nEXP() functions.', '', '', '', '']","['\n  SELECT LN(2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A number. Must be \n    greater than 0|||&&&', 'Works in:|||&&&']",[]
sql||LOG(),https://www.w3schools.com/sql/func_mysql_log.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LOG() function returns the natural logarithm of a specified number, or the logarithm of \nthe \nnumber to the \nspecified base.Note: See also the LN() and\nEXP() functions.OR:', '', '', '', '']","['\n  SELECT LOG(2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A number. Must be greater than 0|||&&&base|||The base of number. Must be greater \n    than 1|||&&&', 'Works in:|||&&&']",[]
sql||LOG10(),https://www.w3schools.com/sql/func_mysql_log10.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LOG10() function returns the natural logarithm of a number to base-10.Note: See also the LOG() function.', '', '', '', '']","['\n  SELECT LOG10(2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||A number greater than 0|||&&&', 'Works in:|||&&&']",[]
sql||LOG2(),https://www.w3schools.com/sql/func_mysql_log2.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LOG2() function returns the natural logarithm of a number to base-2.Note: See also the LOG() function.', '', '', '', '']","['\n  SELECT LOG2(6);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||A number. Must be greater than 0|||&&&', 'Works in:|||&&&']",[]
sql||MAX(),https://www.w3schools.com/sql/func_mysql_max.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The MAX() function returns the maximum value in a set of values.Note: See also the MIN() function.', '', '', '']","['\nSELECT MAX(Price) AS LargestPrice FROM Products;', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. A numeric value (can be a field or a formula)|||&&&', 'Works in:|||&&&']",[]
sql||MIN(),https://www.w3schools.com/sql/func_mysql_min.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The MIN() function returns the minimum value in a set of values.Note: See also the MAX() function.', '', '', '']","['\nSELECT MIN(Price) AS \n  SmallestPrice FROM Products;', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. A numeric value (can be a field or a formula)|||&&&', 'Works in:|||&&&']",[]
sql||MOD(),https://www.w3schools.com/sql/func_mysql_mod.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MOD() function returns the remainder of a number divided by another \nnumber.OR:OR:', '', '', '', '']","['\n  SELECT MOD(18, 4);', '', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. A value that will be divided by y|||&&&y|||Required. The divisor|||&&&', 'Works in:|||&&&']",[]
sql||PI(),https://www.w3schools.com/sql/func_mysql_pi.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The PI() function returns the value of PI.Note: See also the \nDEGREES() and RADIANS() functions.', '', '']","['\n  SELECT PI();', '', '']",[''],['Works in:|||&&&'],[]
sql||POW(),https://www.w3schools.com/sql/func_mysql_pow.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The POW() function returns the value of a number raised to the power of \nanother number.Note: This function is equal to the\nPOWER() function.', '', '', '', '']","['\n  SELECT POW(4, 2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. A number (the base)|||&&&y|||Required. A number (the exponent)|||&&&', 'Works in:|||&&&']",[]
sql||POWER(),https://www.w3schools.com/sql/func_mysql_power.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The POWER() function returns the value of a number raised to the power of \nanother number.Note: This function is equal to the \nPOW() \nfunction.', '', '', '', '']","['\n  SELECT POWER(4, 2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&x|||Required. A number (the base)|||&&&y|||Required. A number (the exponent)|||&&&', 'Works in:|||&&&']",[]
sql||RADIANS(),https://www.w3schools.com/sql/func_mysql_radians.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The RADIANS() function converts a degree value into radians.Note: See also the DEGREES() and PI() functions.', '', '', '', '']","['\n  SELECT RADIANS(180);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A number in degrees|||&&&', 'Works in:|||&&&']",[]
sql||RAND(),https://www.w3schools.com/sql/func_mysql_rand.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The RAND() function returns a random number between 0 (inclusive) and 1 \n(exclusive).', '', '', '', '']","['\n  SELECT RAND();', '', '', '', '']",[''],"['Parameter|||Description|||&&&seed|||Optional. If seed is specified, it returns a repeatable sequence of \n    random numbers. If no seed is specified, it returns a completely random number|||&&&', 'Works in:|||&&&']",[]
sql||ROUND(),https://www.w3schools.com/sql/func_mysql_round.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ROUND() function rounds a number to a specified number of decimal places.Note: See also the FLOOR(), \nCEIL(), CEILING(), and \nTRUNCATE() functions.', '', '', '', '']","['\n  SELECT ROUND(135.375, 2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. The number to be rounded|||&&&decimals|||Optional. The number of decimal places to round number to. If omitted, \n    it returns the integer (no decimals)|||&&&', 'Works in:|||&&&']",[]
sql||SIGN(),https://www.w3schools.com/sql/func_mysql_sign.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SIGN() function returns the sign of a number.This function will return one of the following:', '', '', '', '']","['\n  SELECT SIGN(255.5);', '', '', '', '']","['Definition and Usage###&&&|||If number > 0, it returns 1|||If number = 0, it returns 0|||If number < 0, it returns -1|||']","['Parameter|||Description|||&&&number|||Required. The number to return the sign for|||&&&', 'Works in:|||&&&']",[]
sql||SIN(),https://www.w3schools.com/sql/func_mysql_sin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SIN() function returns the sine of a number.', '', '', '', '']","['\n  SELECT SIN(2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||SQRT(),https://www.w3schools.com/sql/func_mysql_sqrt.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SQRT() function returns the square root of a number.', '', '', '', '']","['\n  SELECT SQRT(64);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A number to calculate the square root of. Must be greater than 0|||&&&', 'Works in:|||&&&']",[]
sql||SUM(),https://www.w3schools.com/sql/func_mysql_sum.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The SUM() function calculates the sum of a set of values.Note: NULL values are ignored.', '', '', '']","['\n  SELECT SUM(Quantity) AS TotalItemsOrdered FROM OrderDetails;', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. A field or a formula|||&&&', 'Works in:|||&&&']",[]
sql||TAN(),https://www.w3schools.com/sql/func_mysql_tan.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TAN() function returns the tangent of a number.', '', '', '', '']","['\n  SELECT TAN(1.75);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A numeric value|||&&&', 'Works in:|||&&&']",[]
sql||TRUNCATE(),https://www.w3schools.com/sql/func_mysql_truncate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TRUNCATE() function truncates a number to the specified number of decimal places.Note: See also the FLOOR(), \nCEIL(), CEILING(), and \nROUND() functions.', '', '', '', '']","['\n  SELECT TRUNCATE(135.375, 2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. The number to be truncated|||&&&decimals|||Required. The number of decimal places to truncate to|||&&&', 'Works in:|||&&&']",[]
sql||ADDDATE(),https://www.w3schools.com/sql/func_mysql_adddate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ADDDATE() function adds a time/date interval to a date and then returns the date.OR:', '', '', '', '']","['\n  SELECT ADDDATE(""2017-06-15"", INTERVAL 10 DAY);', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date to be modified|||&&&days|||Required. The number of days to add to date|||&&&value|||Required. The value of the time/date interval to add. Both \n    positive and negative values are allowed|||&&&addunit|||Required. The type of interval to add. Can be one of the following \n    values:\n    \nMICROSECOND\nSECOND\nMINUTE\nHOUR\nDAY\nWEEK\nMONTH\nQUARTER\nYEAR\nSECOND_MICROSECOND\nMINUTE_MICROSECOND\nMINUTE_SECOND\nHOUR_MICROSECOND\nHOUR_SECOND\nHOUR_MINUTE\nDAY_MICROSECOND\nDAY_SECOND\nDAY_MINUTE\nDAY_HOUR\nYEAR_MONTH\n\n|||&&&', 'Works in:|||&&&']",[]
sql||ADDTIME(),https://www.w3schools.com/sql/func_mysql_addtime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ADDTIME() function adds a time interval to a time/datetime and then returns the time/datetime.', '', '', '', '']","['\n  SELECT ADDTIME(""2017-06-15 \n  09:34:21"", ""2"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required.\xa0 The time/datetime to be modified|||&&&addtime|||Required. The time interval to add to datetime. Both \n    positive and negative values are allowed|||&&&', 'Works in:|||&&&']",[]
sql||CURDATE(),https://www.w3schools.com/sql/func_mysql_curdate.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The CURDATE() function returns the current date.Note: The date is returned as \n""YYYY-MM-DD"" (string) or as YYYYMMDD (numeric).Note: This function equals the\nCURRENT_DATE() function.', '', '', '']","['\n  SELECT CURDATE();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||CURRENT_DATE(),https://www.w3schools.com/sql/func_mysql_current_date.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The CURRENT_DATE() function returns the current date.Note: The date is returned as \n""YYYY-MM-DD"" (string) or as YYYYMMDD (numeric).Note: This function equals the \nCURDATE() \nfunction.', '', '', '']","['\n  SELECT CURRENT_DATE();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||CURRENT_TIME(),https://www.w3schools.com/sql/func_mysql_current_time.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The CURRENT_TIME() function returns the current time.Note: The time is returned as \n""HH-MM-SS"" (string) or as HHMMSS.uuuuuu (numeric).Note: This function equals the\nCURTIME() \nfunction.', '', '', '']","['\n  SELECT CURRENT_TIME();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||CURRENT_TIMESTAMP(),https://www.w3schools.com/sql/func_mysql_current_timestamp.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The CURRENT_TIMESTAMP() function returns the current date and time.Note: The date and time is returned as ""YYYY-MM-DD HH-MM-SS"" \n(string) or as YYYYMMDDHHMMSS.uuuuuu (numeric).', '', '', '']","['\n  SELECT CURRENT_TIMESTAMP();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||CURTIME(),https://www.w3schools.com/sql/func_mysql_curtime.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The CURTIME() function returns the current time.Note: The time is returned as \n""HH-MM-SS"" (string) or as HHMMSS.uuuuuu (numeric).Note: This function equals the CURRENT_TIME() \nfunction.', '', '', '']","['\n  SELECT CURTIME();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||DATE(),https://www.w3schools.com/sql/func_mysql_date.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DATE() function extracts the date part from a datetime \nexpression.', '', '', '', '']","['\n  SELECT DATE(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required.\xa0 A valid date/datetime value. Returns NULL if expression is not a date or a datetime|||&&&', 'Works in:|||&&&']",[]
sql||DATEDIFF(),https://www.w3schools.com/sql/func_mysql_datediff.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DATEDIFF() function returns the number of days between two date values.', '', '', '', '']","['\n  SELECT DATEDIFF(""2017-06-25"", ""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date1, date2|||Required. Two dates to calculate the number of days between. (date1 - \n    date2)|||&&&', 'Works in:|||&&&']",[]
sql||DATE_ADD(),https://www.w3schools.com/sql/func_mysql_date_add.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DATE_ADD() function adds a time/date interval to a date and then returns the date.', '', '', '', '']","['\n  SELECT DATE_ADD(""2017-06-15"", INTERVAL 10 DAY);', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to be modified|||&&&value|||Required. The value of the time/date interval to add. Both positive and \n    negative values are allowed|||&&&addunit|||Required. The type of interval to add. Can be one of the following \n    values:\n    \nMICROSECOND\nSECOND\nMINUTE\nHOUR\nDAY\nWEEK\nMONTH\nQUARTER\nYEAR\nSECOND_MICROSECOND\nMINUTE_MICROSECOND\nMINUTE_SECOND\nHOUR_MICROSECOND\nHOUR_SECOND\nHOUR_MINUTE\nDAY_MICROSECOND\nDAY_SECOND\nDAY_MINUTE\nDAY_HOUR\nYEAR_MONTH\n\n|||&&&', 'Works in:|||&&&']",[]
sql||DATE_FORMAT(),https://www.w3schools.com/sql/func_mysql_date_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DATE_FORMAT() function formats a date as specified.', '', '', '', '']","['\n  SELECT DATE_FORMAT(""2017-06-15"", ""%Y"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to be formatted|||&&&Format|||Description|||&&&Format|||Description|||&&&%a|||Abbreviated weekday name (Sun to Sat)|||&&&%b|||Abbreviated month name (Jan to Dec)|||&&&%c|||Numeric month name (0 to 12)|||&&&%D|||Day of the month as a numeric value, followed by suffix (1st, 2nd, 3rd, \n    ...)|||&&&%d|||Day of the month as a numeric value (01 to 31)|||&&&%e|||Day of the month as a numeric value (0 to 31)|||&&&%f|||Microseconds (000000 to 999999)|||&&&%H|||Hour (00 to 23)|||&&&%h|||Hour (00 to 12)|||&&&%I|||Hour (00 to 12)|||&&&%i|||Minutes (00 to 59)|||&&&%j|||Day of the year (001 to 366)|||&&&%k|||Hour (0 to 23)|||&&&%l|||Hour (1 to 12)|||&&&%M|||Month name in full (January to December)|||&&&%m|||Month name as a numeric value (00 to 12)|||&&&%p|||AM or PM|||&&&%r|||Time in 12 hour AM or PM format (hh:mm:ss AM/PM)|||&&&%S|||Seconds (00 to 59)|||&&&%s|||Seconds (00 to 59)|||&&&%T|||Time in 24 hour format (hh:mm:ss)|||&&&%U|||Week where Sunday is the first day of the week (00 to 53)|||&&&%u|||Week where Monday is the first day of the week (00 to 53)|||&&&%V|||Week where Sunday is the first day of the week (01 to 53). Used with %X|||&&&%v|||Week where Monday is the first day of the week (01 to 53). Used with %x|||&&&%W|||Weekday name in full (Sunday to Saturday)|||&&&%w|||Day of the week where Sunday=0 and Saturday=6|||&&&%X|||Year for the week where Sunday is the first day of the week. Used with \n    %V|||&&&%x|||Year for the week where Monday is the first day of the week. Used with \n    %v|||&&&%Y|||Year as a numeric, 4-digit value|||&&&%y|||Year as a numeric, 2-digit value|||&&&', 'Format|||Description|||&&&%a|||Abbreviated weekday name (Sun to Sat)|||&&&%b|||Abbreviated month name (Jan to Dec)|||&&&%c|||Numeric month name (0 to 12)|||&&&%D|||Day of the month as a numeric value, followed by suffix (1st, 2nd, 3rd, \n    ...)|||&&&%d|||Day of the month as a numeric value (01 to 31)|||&&&%e|||Day of the month as a numeric value (0 to 31)|||&&&%f|||Microseconds (000000 to 999999)|||&&&%H|||Hour (00 to 23)|||&&&%h|||Hour (00 to 12)|||&&&%I|||Hour (00 to 12)|||&&&%i|||Minutes (00 to 59)|||&&&%j|||Day of the year (001 to 366)|||&&&%k|||Hour (0 to 23)|||&&&%l|||Hour (1 to 12)|||&&&%M|||Month name in full (January to December)|||&&&%m|||Month name as a numeric value (00 to 12)|||&&&%p|||AM or PM|||&&&%r|||Time in 12 hour AM or PM format (hh:mm:ss AM/PM)|||&&&%S|||Seconds (00 to 59)|||&&&%s|||Seconds (00 to 59)|||&&&%T|||Time in 24 hour format (hh:mm:ss)|||&&&%U|||Week where Sunday is the first day of the week (00 to 53)|||&&&%u|||Week where Monday is the first day of the week (00 to 53)|||&&&%V|||Week where Sunday is the first day of the week (01 to 53). Used with %X|||&&&%v|||Week where Monday is the first day of the week (01 to 53). Used with %x|||&&&%W|||Weekday name in full (Sunday to Saturday)|||&&&%w|||Day of the week where Sunday=0 and Saturday=6|||&&&%X|||Year for the week where Sunday is the first day of the week. Used with \n    %V|||&&&%x|||Year for the week where Monday is the first day of the week. Used with \n    %v|||&&&%Y|||Year as a numeric, 4-digit value|||&&&%y|||Year as a numeric, 2-digit value|||&&&', 'Works in:|||&&&']",[]
sql||DATE_SUB(),https://www.w3schools.com/sql/func_mysql_date_sub.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DATE_SUB() function subtracts a time/date interval from a date and then returns the date.', '', '', '', '']","['\n  SELECT DATE_SUB(""2017-06-15"", INTERVAL 10 DAY);', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to be modified|||&&&value|||Required. The value of the time/date interval to subtract. Both positive \n    and negative values are allowed|||&&&interval|||Required. The type of interval to subtract. Can be one of the following \n    values:\n    \nMICROSECOND\nSECOND\nMINUTE\nHOUR\nDAY\nWEEK\nMONTH\nQUARTER\nYEAR\nSECOND_MICROSECOND\nMINUTE_MICROSECOND\nMINUTE_SECOND\nHOUR_MICROSECOND\nHOUR_SECOND\nHOUR_MINUTE\nDAY_MICROSECOND\nDAY_SECOND\nDAY_MINUTE\nDAY_HOUR\nYEAR_MONTH\n\n|||&&&', 'Works in:|||&&&']",[]
sql||DAY(),https://www.w3schools.com/sql/func_mysql_day.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DAY() function returns the day of the month for a given date (a number from 1 to 31).Note: This function equals the\nDAYOFMONTH() function.', '', '', '', '']","['\n  SELECT DAY(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to extract the day from|||&&&', 'Works in:|||&&&']",[]
sql||DAYNAME(),https://www.w3schools.com/sql/func_mysql_dayname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DAYNAME() function returns the weekday name for a given date.', '', '', '', '']","['\n  SELECT DAYNAME(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date to extract the \n    weekday name from|||&&&', 'Works in:|||&&&']",[]
sql||DAYOFMONTH(),https://www.w3schools.com/sql/func_mysql_dayofmonth.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DAYOFMONTH() function returns the day of the month for a given date (a number from 1 to 31).Note: This function equals the DAY() function.', '', '', '', '']","['\n  SELECT DAYOFMONTH(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0The date to extract the day from|||&&&', 'Works in:|||&&&']",[]
sql||DAYOFWEEK(),https://www.w3schools.com/sql/func_mysql_dayofweek.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DAYOFWEEK() function returns the weekday index for a given date (a number from 1 to \n7).Note: 1=Sunday, 2=Monday, 3=Tuesday, 4=Wednesday, \n5=Thursday, 6=Friday, 7=Saturday.', '', '', '', '']","['\n  SELECT DAYOFWEEK(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to return the weekday index from|||&&&', 'Works in:|||&&&']",[]
sql||DAYOFYEAR(),https://www.w3schools.com/sql/func_mysql_dayofyear.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The DAYOFYEAR() function returns the day of the year for a given date (a number from 1 to \n366).', '', '', '', '']","['\n  SELECT DAYOFYEAR(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to return the day \n    of the year from|||&&&', 'Works in:|||&&&']",[]
sql||EXTRACT(),https://www.w3schools.com/sql/func_mysql_extract.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The EXTRACT() function extracts a part from a given date.', '', '', '', '']","['\n  SELECT EXTRACT(MONTH FROM ""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&part|||Required. The part to extract. Can be one of the following:\n    \nMICROSECOND\nSECOND\nMINUTE\nHOUR\nDAY\nWEEK\nMONTH\nQUARTER\nYEAR\nSECOND_MICROSECOND\nMINUTE_MICROSECOND\nMINUTE_SECOND\nHOUR_MICROSECOND\nHOUR_SECOND\nHOUR_MINUTE\nDAY_MICROSECOND\nDAY_SECOND\nDAY_MINUTE\nDAY_HOUR\nYEAR_MONTH\n\n|||&&&date|||Required. The date to extract a part from|||&&&', 'Works in:|||&&&']",[]
sql||FROM_DAYS(),https://www.w3schools.com/sql/func_mysql_from_days.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The FROM_DAYS() function returns a date from a numeric datevalue.The FROM_DAYS() function is to be used only with dates within the Gregorian \ncalendar.Note: This function is the opposite of the\nTO_DAYS() function.', '', '', '', '']","['\n  SELECT FROM_DAYS(685467);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required.\xa0 The numeric day to convert to a date|||&&&', 'Works in:|||&&&']",[]
sql||HOUR(),https://www.w3schools.com/sql/func_mysql_hour.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The HOUR() function returns the hour part for a given date (from 0 to 838).', '', '', '', '']","['\n  SELECT HOUR(""2017-06-20 09:34:00"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required. The datetime value to extract the hour from|||&&&', 'Works in:|||&&&']",[]
sql||LAST_DAY(),https://www.w3schools.com/sql/func_mysql_last_day.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The LAST_DAY() function extracts the last day of the month for a given date.', '', '', '', '']","['\n  SELECT LAST_DAY(""2017-06-20"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date to extract the last day \n    of the month from|||&&&', 'Works in:|||&&&']",[]
sql||LOCALTIME(),https://www.w3schools.com/sql/func_mysql_localtime.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The LOCALTIME() function returns the current date and time.Note: The date and time is returned as ""YYYY-MM-DD HH-MM-SS"" \n(string) or as YYYYMMDDHHMMSS.uuuuuu (numeric).', '', '', '']","['\n  SELECT \n  LOCALTIME();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||LOCALTIMESTAMP(),https://www.w3schools.com/sql/func_mysql_localtimestamp.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The LOCALTIMESTAMP() function returns the current date and time.Note: The date and time is returned as ""YYYY-MM-DD HH-MM-SS"" \n(string) or as YYYYMMDDHHMMSS.uuuuuu (numeric).', '', '', '']","['\n  SELECT \n  LOCALTIMESTAMP();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||MAKEDATE(),https://www.w3schools.com/sql/func_mysql_makedate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MAKEDATE() function creates and returns a date based on a year and a \nnumber of days value.', '', '', '', '']","['\n  SELECT MAKEDATE(2017, 3);', '', '', '', '']",[''],"['Parameter|||Description|||&&&year|||Required. A year (4-digits)|||&&&day|||Required. A number that indicates the day of the year|||&&&', 'Works in:|||&&&']",[]
sql||MAKETIME(),https://www.w3schools.com/sql/func_mysql_maketime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MAKETIME() function creates and returns a time based on an hour, minute, \nand second value.', '', '', '', '']","['\n  SELECT MAKETIME(11, 35, \n  4);', '', '', '', '']",[''],"['Parameter|||Description|||&&&hour|||Required. The hour value|||&&&minute|||Required. The minute value|||&&&second|||Required. The seconds value|||&&&', 'Works in:|||&&&']",[]
sql||MICROSECOND(),https://www.w3schools.com/sql/func_mysql_microsecond.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MICROSECOND() function returns the microsecond part of a time/datetime (from 0 to \n999999).', '', '', '', '']","['\n  SELECT MICROSECOND(""2017-06-20 09:34:00.000023"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required. The time or datetime to extract the \n    microsecond from|||&&&', 'Works in:|||&&&']",[]
sql||MINUTE(),https://www.w3schools.com/sql/func_mysql_minute.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MINUTE() function returns the minute part of a time/datetime (from 0 to \n59).', '', '', '', '']","['\n  SELECT MINUTE(""2017-06-20 09:34:00"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required. The time or datetime extract the minute from|||&&&', 'Works in:|||&&&']",[]
sql||MONTH(),https://www.w3schools.com/sql/func_mysql_month.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MONTH() function returns the month part for a given date (a number from 1 to \n12).', '', '', '', '']","['\n  SELECT MONTH(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date or datetime to extract the \n    month from|||&&&', 'Works in:|||&&&']",[]
sql||MONTHNAME(),https://www.w3schools.com/sql/func_mysql_monthname.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The MONTHNAME() function returns the name of the month for a given date.', '', '', '', '']","['\n  SELECT MONTHNAME(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The date or datetime value to extract the \n    month name from|||&&&', 'Works in:|||&&&']",[]
sql||NOW(),https://www.w3schools.com/sql/func_mysql_now.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The NOW() function returns the current date and time.Note: The date and time is returned as ""YYYY-MM-DD HH-MM-SS"" \n(string) or as YYYYMMDDHHMMSS.uuuuuu (numeric).', '', '', '']","['\n  SELECT \n  NOW();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||PERIOD_ADD(),https://www.w3schools.com/sql/func_mysql_period_add.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The PERIOD_ADD() function adds a specified number of months to a period.The PERIOD_ADD() function will return the result formatted as YYYYMM.', '', '', '', '']","['\n  SELECT PERIOD_ADD(201703, 5);', '', '', '', '']",[''],"['Parameter|||Description|||&&&period|||Required. A period. Format: YYMM or YYYYMM|||&&&number|||Required. The number of months to add to period. Both positive \n    and negative values are allowed |||&&&', 'Works in:|||&&&']",[]
sql||PERIOD_DIFF(),https://www.w3schools.com/sql/func_mysql_period_diff.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The PERIOD_DIFF() function returns the difference between two \nperiods. The result will be in months.Note: period1 and period2 should be in the \nsame format.', '', '', '', '']","['\n  SELECT PERIOD_DIFF(201710, 201703);', '', '', '', '']",[''],"['Parameter|||Description|||&&&period1|||Required. A period. Format: YYMM or YYYYMM|||&&&period2|||Required. Another period. Format: YYMM or YYYYMM|||&&&', 'Works in:|||&&&']",[]
sql||QUARTER(),https://www.w3schools.com/sql/func_mysql_quarter.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The QUARTER() function returns the quarter of the year for a given date value (a number from 1 to \n4).', '', '', '', '']","['\n  SELECT QUARTER(""2017-06-15"");', '', '', '', '']",['Definition and Usage###&&&|||January-March returns 1|||April-June returns 2|||July-Sep returns 3|||Oct-Dec returns 4|||'],"['Parameter|||Description|||&&&date|||Required. The date or datetime to extract the \n    quarter from|||&&&', 'Works in:|||&&&']",[]
sql||SECOND(),https://www.w3schools.com/sql/func_mysql_second.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SECOND() function returns the seconds part of a time/datetime (from 0 to 59).', '', '', '', '']","['\nSELECT SECOND(""2017-06-20 09:34:00.000023"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required. The time or datetime to extract the \n    second from|||&&&', 'Works in:|||&&&']",[]
sql||SEC_TO_TIME(),https://www.w3schools.com/sql/func_mysql_sec_to_time.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SEC_TO_TIME() function returns a time value (in format HH:MM:SS) based on \nthe specified seconds.', '', '', '', '']","['\nSELECT SEC_TO_TIME(1);', '', '', '', '']",[''],"['Parameter|||Description|||&&&seconds|||Required. The number of seconds. Both positive or negative values are \n    allowed|||&&&', 'Works in:|||&&&']",[]
sql||STR_TO_DATE(),https://www.w3schools.com/sql/func_mysql_str_to_date.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The STR_TO_DATE() function returns a date based on a string and a format.', '', '', '', '']","['\n  SELECT \n  STR_TO_DATE(""August 10 2017"", ""%M %d %Y"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&string|||Required. The string to be formatted to a date|||&&&Format|||Description|||&&&Format|||Description|||&&&%a|||Abbreviated weekday name (Sun to Sat)|||&&&%b|||Abbreviated month name (Jan to Dec)|||&&&%c|||Numeric month name (0 to 12)|||&&&%D|||Day of the month as a numeric value, followed by suffix (1st, 2nd, 3rd, \n    ...)|||&&&%d|||Day of the month as a numeric value (01 to 31)|||&&&%e|||Day of the month as a numeric value (0 to 31)|||&&&%f|||Microseconds (000000 to 999999)|||&&&%H|||Hour (00 to 23)|||&&&%h|||Hour (00 to 12)|||&&&%I|||Hour (00 to 12)|||&&&%i|||Minutes (00 to 59)|||&&&%j|||Day of the year (001 to 366)|||&&&%k|||Hour (0 to 23)|||&&&%l|||Hour (1 to 12)|||&&&%M|||Month name in full (January to December)|||&&&%m|||Month name as a numeric value (01 to 12)|||&&&%p|||AM or PM|||&&&%r|||Time in 12 hour AM or PM format (hh:mm:ss AM/PM)|||&&&%S|||Seconds (00 to 59)|||&&&%s|||Seconds (00 to 59)|||&&&%T|||Time in 24 hour format (hh:mm:ss)|||&&&%U|||Week where Sunday is the first day of the week (00 to 53)|||&&&%u|||Week where Monday is the first day of the week (00 to 53)|||&&&%V|||Week where Sunday is the first day of the week (01 to 53). Used with %X|||&&&%v|||Week where Monday is the first day of the week (01 to 53). Used with %X|||&&&%W|||Weekday name in full (Sunday to Saturday)|||&&&%w|||Day of the week where Sunday=0 and Saturday=6|||&&&%X|||Year for the week where Sunday is the first day of the week. Used with \n    %V|||&&&%x|||Year for the week where Monday is the first day of the week. Used with \n    %V|||&&&%Y|||Year as a numeric, 4-digit value|||&&&%y|||Year as a numeric, 2-digit value|||&&&', 'Format|||Description|||&&&%a|||Abbreviated weekday name (Sun to Sat)|||&&&%b|||Abbreviated month name (Jan to Dec)|||&&&%c|||Numeric month name (0 to 12)|||&&&%D|||Day of the month as a numeric value, followed by suffix (1st, 2nd, 3rd, \n    ...)|||&&&%d|||Day of the month as a numeric value (01 to 31)|||&&&%e|||Day of the month as a numeric value (0 to 31)|||&&&%f|||Microseconds (000000 to 999999)|||&&&%H|||Hour (00 to 23)|||&&&%h|||Hour (00 to 12)|||&&&%I|||Hour (00 to 12)|||&&&%i|||Minutes (00 to 59)|||&&&%j|||Day of the year (001 to 366)|||&&&%k|||Hour (0 to 23)|||&&&%l|||Hour (1 to 12)|||&&&%M|||Month name in full (January to December)|||&&&%m|||Month name as a numeric value (01 to 12)|||&&&%p|||AM or PM|||&&&%r|||Time in 12 hour AM or PM format (hh:mm:ss AM/PM)|||&&&%S|||Seconds (00 to 59)|||&&&%s|||Seconds (00 to 59)|||&&&%T|||Time in 24 hour format (hh:mm:ss)|||&&&%U|||Week where Sunday is the first day of the week (00 to 53)|||&&&%u|||Week where Monday is the first day of the week (00 to 53)|||&&&%V|||Week where Sunday is the first day of the week (01 to 53). Used with %X|||&&&%v|||Week where Monday is the first day of the week (01 to 53). Used with %X|||&&&%W|||Weekday name in full (Sunday to Saturday)|||&&&%w|||Day of the week where Sunday=0 and Saturday=6|||&&&%X|||Year for the week where Sunday is the first day of the week. Used with \n    %V|||&&&%x|||Year for the week where Monday is the first day of the week. Used with \n    %V|||&&&%Y|||Year as a numeric, 4-digit value|||&&&%y|||Year as a numeric, 2-digit value|||&&&', 'Works in:|||&&&']",[]
sql||SUBDATE(),https://www.w3schools.com/sql/func_mysql_subdate.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SUBDATE() function subtracts a time/date interval from a date and then returns the date.OR:', '', '', '', '']","['\n  SELECT SUBDATE(""2017-06-15"", INTERVAL 10 DAY);', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The original date|||&&&days|||Required. The number of days to subtract from date|||&&&value|||Required. The value of the time/date interval to subtract. Both \n    positive and negative values are allowed|||&&&unit|||Required. The type of interval. Can be one of the following \n    values:\n    \nMICROSECOND\nSECOND\nMINUTE\nHOUR\nDAY\nWEEK\nMONTH\nQUARTER\nYEAR\nSECOND_MICROSECOND\nMINUTE_MICROSECOND\nMINUTE_SECOND\nHOUR_MICROSECOND\nHOUR_SECOND\nHOUR_MINUTE\nDAY_MICROSECOND\nDAY_SECOND\nDAY_MINUTE\nDAY_HOUR\nYEAR_MONTH\n\n|||&&&', 'Works in:|||&&&']",[]
sql||SUBTIME(),https://www.w3schools.com/sql/func_mysql_subtime.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The SUBTIME() function subtracts time from a time/datetime expression and then returns the \nnew time/datetime.', '', '', '', '']","['\n  SELECT SUBTIME(""2017-06-15 10:24:21.000004"", ""5.000001"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&datetime|||Required. The time or datetime to be modified|||&&&time_interval|||Required. The time interval to subtract from\n    datetime. Both positive and negative values are allowed|||&&&', 'Works in:|||&&&']",[]
sql||SYSDATE(),https://www.w3schools.com/sql/func_mysql_sysdate.asp,,"['Definition and Usage', 'Syntax', 'Technical Details', 'More Examples']","['The SYSDATE() function returns the current date and time.Note: The date and time is returned as ""YYYY-MM-DD HH:MM:SS"" \n(string) or as YYYYMMDDHHMMSS (numeric).', '', '', '']","['\n  SELECT SYSDATE();', '', '', '']",[''],['Works in:|||&&&'],[]
sql||TIME(),https://www.w3schools.com/sql/func_mysql_time.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TIME() function extracts the time part from a given time/datetime.Note: This function returns ""00:00:00"" if expression is not a \ndatetime/time, or NULL if expression is NULL.', '', '', '', '']","['\n  SELECT TIME(""19:30:10"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. The time/datetime to extract the time from|||&&&', 'Works in:|||&&&']",[]
sql||TIME_FORMAT(),https://www.w3schools.com/sql/func_mysql_time_format.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TIME_FORMAT() function formats a time by a specified format.', '', '', '', '']","['\n  SELECT TIME_FORMAT(""19:30:10"", ""%H %i %s"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&time|||Required. The time to be formatted|||&&&Format|||Description|||&&&Format|||Description|||&&&%f|||Microseconds (000000 to 999999)|||&&&%H|||Hour (00 to 23)|||&&&%h|||Hour (00 to 12)|||&&&%I|||Hour (00 to 12)|||&&&%i|||Minutes (00 to 59)|||&&&%p|||AM or PM|||&&&%r|||Time in 12 hour AM or PM format (hh:mm:ss AM/PM)|||&&&%S|||Seconds (00 to 59)|||&&&%s|||Seconds (00 to 59)|||&&&%T|||Time in 24 hour format (hh:mm:ss)|||&&&', 'Format|||Description|||&&&%f|||Microseconds (000000 to 999999)|||&&&%H|||Hour (00 to 23)|||&&&%h|||Hour (00 to 12)|||&&&%I|||Hour (00 to 12)|||&&&%i|||Minutes (00 to 59)|||&&&%p|||AM or PM|||&&&%r|||Time in 12 hour AM or PM format (hh:mm:ss AM/PM)|||&&&%S|||Seconds (00 to 59)|||&&&%s|||Seconds (00 to 59)|||&&&%T|||Time in 24 hour format (hh:mm:ss)|||&&&', 'Works in:|||&&&']",[]
sql||TIME_TO_SEC(),https://www.w3schools.com/sql/func_mysql_time_to_sec.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TIME_TO_SEC() function converts a time value into seconds.', '', '', '', '']","['\n  SELECT TIME_TO_SEC(""19:30:10"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&time|||Required. The time value|||&&&', 'Works in:|||&&&']",[]
sql||TIMEDIFF(),https://www.w3schools.com/sql/func_mysql_timediff.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TIMEDIFF() function returns the difference between two \ntime/datetime expressions.Note: time1 and time2 should be in the \nsame format, and the calculation is time1 - time2.', '', '', '', '']","['\n  SELECT TIMEDIFF(""13:10:11"", ""13:10:10"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&time1|||Required. A time value|||&&&time2|||Required. Another time value|||&&&', 'Works in:|||&&&']",[]
sql||,https://www.w3schools.com/sql/func_mysql_timestamp.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TIMESTAMP() function returns a datetime value based on a date or datetime value.Note: If there are specified two arguments with this \nfunction, it first adds the second argument to the first, and then returns a \ndatetime value.', '', '', '', '']","['\n  SELECT TIMESTAMP(""2017-07-23"",\xa0 ""13:10:11"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. A date or datetime value|||&&&time|||Optional. A time value to add to expression|||&&&', 'Works in:|||&&&']",[]
sql||,https://www.w3schools.com/sql/func_mysql_to_days.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The TO_DAYS() function returns the number of days between a date and year 0 \n(date ""0000-00-00"").The TO_DAYS() function can be used only with dates within the Gregorian \ncalendar.Note: This function is the opposite of the \nFROM_DAYS() function.', '', '', '', '']","['\n  SELECT TO_DAYS(""2017-06-20"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required. The given date|||&&&', 'Works in:|||&&&']",[]
sql||,https://www.w3schools.com/sql/func_mysql_week.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The WEEK() function returns the week number for a given date (a number from 0 to \n53).', '', '', '', '']","['\n  SELECT WEEK(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date or datetime to extract the \n    week number form|||&&& firstdayofweek|||\nOptional. Specifies what day the week starts on. Can be one of the \n    following:\n\n0 - First day of week is Sunday\n1 - First day of week is Monday and the first week of the year has more than 3 \n      days\n2 - First day of week is Sunday\n3 - First day of week is Monday and the first week of the year has more than 3 \n      days\n4 - First day of week is Sunday and the first week of the year has more than 3 \n      days\n5 - First day of week is Monday\n6 - First day of week is Sunday and the first week of the year has more than 3 \n      days\n7 - First day of week is Monday\n\n|||&&&', 'Works in:|||&&&']",[]
sql||,https://www.w3schools.com/sql/func_mysql_weekday.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The WEEKDAY() function returns the weekday number for a given date.Note: 0 = Monday, 1 = Tuesday, 2 = Wednesday, 3 = Thursday, \n4 = Friday, 5 = Saturday, 6 = Sunday.', '', '', '', '']","['\n  SELECT WEEKDAY(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date or datetime to extract the \n    weekday number from|||&&&', 'Works in:|||&&&']",[]
sql||,https://www.w3schools.com/sql/func_mysql_weekofyear.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The WEEKOFYEAR() function returns the week number for a given date (a number from 1 to \n53).Note: This function assumes that the first day \nof the week is Monday and the first week of the year has more than 3 days.Tip: Also look at the WEEK() \nfunction.', '', '', '', '']","['\n  SELECT WEEKOFYEAR(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date or datetime to extract the \n    week number from|||&&&', 'Works in:|||&&&']",[]
sql||YEAR(),https://www.w3schools.com/sql/func_mysql_year.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The YEAR() function returns the year part for a given date (a number from 1000 to 9999).', '', '', '', '']","['\n  SELECT YEAR(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date/datetime to extract the \n    year from|||&&&', 'Works in:|||&&&']",[]
sql||YEARWEEK(),https://www.w3schools.com/sql/func_mysql_yearweek.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The YEARWEEK() function returns the year and week number (a number from 0 to \n53) for a given date.', '', '', '', '']","['\n  SELECT YEARWEEK(""2017-06-15"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&date|||Required.\xa0 The date or datetime value to extract the \n    year and week number from|||&&& firstdayofweek|||\nOptional. Specifies what day the week starts on. Can be one of the \n    following:\n\n0 - First day of week is Sunday\n1 - First day of week is Monday and the first week has more than 3 \n      days\n2 - First day of week is Sunday\n3 - First day of week is Monday and the first week has more than 3 \n      days\n4 - First day of week is Sunday and the first week has more than 3 \n      days\n5 - First day of week is Monday\n6 - First day of week is Sunday and the first week has more than 3 \n      days\n7 - First day of week is Monday\n\n|||&&&', 'Works in:|||&&&']",[]
sql||BIN(),https://www.w3schools.com/sql/func_mysql_bin.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The BIN() function returns a binary representation of a number, as \na string value.', '', '', '', '']","['\n  SELECT BIN(15);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A number|||&&&', 'Works in:|||&&&']",[]
sql||BINARY,https://www.w3schools.com/sql/func_mysql_binary.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The BINARY function converts a value to a binary string.This function is equivalent to using CAST(value AS BINARY).', '', '', '', '']","['\n  SELECT BINARY ""W3Schools.com"";', '', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. The value to convert|||&&&', 'Works in:|||&&&']",[]
sql||CASE,https://www.w3schools.com/sql/func_mysql_case.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CASE statement goes through conditions and return a value when the first condition is \nmet (like an IF-THEN-ELSE statement). So, once a condition is true, it will stop \nreading and return the result.If no conditions are true, it will return the value in the ELSE clause. If there is no ELSE part and no conditions are true, it returns NULL.', 'The following SQL will order the customers by City. However, if City is NULL, then order by Country:', '', '', '']","['\n  SELECT OrderID, Quantity,CASE\xa0\xa0\xa0 WHEN Quantity > 30 \n  THEN ""The quantity is greater than 30""\xa0\xa0\xa0 WHEN Quantity = \n  30 THEN ""The quantity is 30""\xa0\xa0\xa0 ELSE ""The quantity is \n  under 30""ENDFROM OrderDetails;', '', '', '', '']",[''],"['Parameter|||Description|||&&&condition1, condition2, ...conditionN|||Required. The conditions. These are evaluated in the same order as they \n    are listed|||&&&result1, result2, ...resultN|||Required. The value to return once a condition is true|||&&&', 'Works in:|||&&&']",[]
sql||CAST(),https://www.w3schools.com/sql/func_mysql_cast.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CAST() function converts a value (of any type) into the specified datatype.Tip: See also the CONVERT() \nfunction.', '', '', '', '']","['\n  SELECT \n  CAST(""2017-08-29"" AS DATE);', '', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. The value to convert|||&&&Value|||Description|||&&&Value|||Description|||&&&DATE|||Converts value to DATE. Format: ""YYYY-MM-DD""|||&&&DATETIME|||Converts value to DATETIME. Format: ""YYYY-MM-DD HH:MM:SS""|||&&&DECIMAL|||Converts value to DECIMAL. Use the optional M and D parameters \n    to specify the maximum number of digits (M) and the number of digits \n    following the decimal point (D).|||&&&TIME|||Converts value to TIME. Format: ""HH:MM:SS""|||&&&CHAR|||Converts value to CHAR (a fixed length string)|||&&&NCHAR|||Converts value to NCHAR (like CHAR, but produces a string with \n    the national character set)|||&&&SIGNED|||Converts value to SIGNED (a signed 64-bit integer)|||&&&UNSIGNED|||Converts value to UNSIGNED (an unsigned 64-bit integer)|||&&&BINARY|||Converts value to BINARY (a binary string)|||&&&', 'Value|||Description|||&&&DATE|||Converts value to DATE. Format: ""YYYY-MM-DD""|||&&&DATETIME|||Converts value to DATETIME. Format: ""YYYY-MM-DD HH:MM:SS""|||&&&DECIMAL|||Converts value to DECIMAL. Use the optional M and D parameters \n    to specify the maximum number of digits (M) and the number of digits \n    following the decimal point (D).|||&&&TIME|||Converts value to TIME. Format: ""HH:MM:SS""|||&&&CHAR|||Converts value to CHAR (a fixed length string)|||&&&NCHAR|||Converts value to NCHAR (like CHAR, but produces a string with \n    the national character set)|||&&&SIGNED|||Converts value to SIGNED (a signed 64-bit integer)|||&&&UNSIGNED|||Converts value to UNSIGNED (an unsigned 64-bit integer)|||&&&BINARY|||Converts value to BINARY (a binary string)|||&&&', 'Works in:|||&&&']",[]
sql||COALESCE(),https://www.w3schools.com/sql/func_mysql_coalesce.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The COALESCE() function returns the first non-null value in a list.', '', '', '', '']","[""\n  SELECT \n  COALESCE(NULL, NULL, NULL, 'W3Schools.com', NULL, 'Example.com');"", '', '', '', '']",[''],"['Parameter|||Description|||&&&val1, val2, val_n|||Required. The values to test|||&&&', 'Works in:|||&&&']",[]
sql||CONNECTION_ID(),https://www.w3schools.com/sql/func_mysql_connection_id.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The CONNECTION_ID() function returns the unique connection ID for the current connection.', '', '']","['\nSELECT CONNECTION_ID();', '', '']",[''],['Works in:|||&&&'],[]
sql||CONV(),https://www.w3schools.com/sql/func_mysql_conv.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CONV() function converts a number from one numeric base system to another, and returns the result as \na string value.Note: This function returns NULL if any of the parameters \nare NULL.Tip: Also look at the BIN() function.', '', '', '', '']","['\n  SELECT CONV(15, \n  10, 2);', '', '', '', '']",[''],"['Parameter|||Description|||&&&number|||Required. A number|||&&&from_base|||The numeric base system of number (a number between 2 and 36)|||&&&to_base|||The numeric base system to convert to (a number between 2 and 36 or \n    -2 and -36)|||&&&', 'Works in:|||&&&']",[]
sql||CONVERT(),https://www.w3schools.com/sql/func_mysql_convert.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The CONVERT() function converts a value into the specified datatype or character set.Tip: Also look at the CAST() function.OR:', '', '', '', '']","['\n  SELECT \n  CONVERT(""2017-08-29"", DATE);', '', '', '', '']",[''],"['Parameter|||Description|||&&&value|||Required. The value to convert|||&&&Value|||Description|||&&&Value|||Description|||&&&DATE|||Converts value to DATE. Format: ""YYYY-MM-DD""|||&&&DATETIME|||Converts value to DATETIME.\n    Format: ""YYYY-MM-DD HH:MM:SS""|||&&&DECIMAL|||Converts value to DECIMAL. Use the optional M and D parameters \n    to specify the maximum number of digits (M) and the number of digits \n    following the decimal point (D).|||&&&TIME|||Converts value to TIME. Format: ""HH:MM:SS""|||&&&CHAR|||Converts value to CHAR (a fixed length string)|||&&&NCHAR|||Converts value to NCHAR (like CHAR, but produces a string with \n    the national character set)|||&&&SIGNED|||Converts value to SIGNED (a signed 64-bit integer)|||&&&UNSIGNED|||Converts value to UNSIGNED (an unsigned 64-bit integer)|||&&&BINARY|||Converts value to BINARY (a binary string)|||&&&charset|||Required. The character set to convert to|||&&&', 'Value|||Description|||&&&DATE|||Converts value to DATE. Format: ""YYYY-MM-DD""|||&&&DATETIME|||Converts value to DATETIME.\n    Format: ""YYYY-MM-DD HH:MM:SS""|||&&&DECIMAL|||Converts value to DECIMAL. Use the optional M and D parameters \n    to specify the maximum number of digits (M) and the number of digits \n    following the decimal point (D).|||&&&TIME|||Converts value to TIME. Format: ""HH:MM:SS""|||&&&CHAR|||Converts value to CHAR (a fixed length string)|||&&&NCHAR|||Converts value to NCHAR (like CHAR, but produces a string with \n    the national character set)|||&&&SIGNED|||Converts value to SIGNED (a signed 64-bit integer)|||&&&UNSIGNED|||Converts value to UNSIGNED (an unsigned 64-bit integer)|||&&&BINARY|||Converts value to BINARY (a binary string)|||&&&', 'Works in:|||&&&']",[]
sql||CURRENT_USER(),https://www.w3schools.com/sql/func_mysql_current_user.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The CURRENT_USER() function returns the user name and host name for the MySQL \naccount that the server used to authenticate the current client.The result is returned as a string in the UTF8 character \nset.Tip: See also the USER() \nfunction.', '', '']","['\n  SELECT CURRENT_USER();', '', '']",[''],['Works in:|||&&&'],[]
sql||DATABASE(),https://www.w3schools.com/sql/func_mysql_database.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The DATABASE() function returns the name of the current database.If there is no current database, this function returns NULL \nor """".', '', '']","['\nSELECT DATABASE();', '', '']",[''],['Works in:|||&&&'],[]
sql||IF(),https://www.w3schools.com/sql/func_mysql_if.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The IF() function returns a value if a condition is TRUE, or another value if \na condition is FALSE.', '', '', '', '']","['\n  SELECT \n  IF(500<1000, ""YES"", ""NO"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&condition|||Required. The value to test|||&&&value_if_true|||Required. The value to return if condition is TRUE|||&&&value_if_false|||Required. The value to return if condition is FALSE|||&&&', 'Works in:|||&&&']",[]
sql||IFNULL(),https://www.w3schools.com/sql/func_mysql_ifnull.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The IFNULL() function returns a specified value if the expression is NULL.If the expression is NOT NULL, this function returns the expression.', '', '', '', '']","['\n  SELECT IFNULL(NULL, ""W3Schools.com"");', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. The expression to test whether is NULL|||&&&alt_value|||Required. The value to return if expression is NULL|||&&&', 'Works in:|||&&&']",[]
sql||ISNULL(),https://www.w3schools.com/sql/func_mysql_isnull.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The ISNULL() function returns 1 or 0 depending on whether an expression is NULL.If expression is NULL, this function returns 1. Otherwise, it returns 0.', '', '', '', '']","['\n  SELECT ISNULL(NULL);', '', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Required. The value to test|||&&&', 'Works in:|||&&&']",[]
sql||LAST_INSERT_ID(),https://www.w3schools.com/sql/func_mysql_last_insert_id.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details']","['The LAST_INSERT_ID() function returns the AUTO_INCREMENT id of the last row \nthat has been inserted or updated in a table.', '', '', '']","['\n  SELECT LAST_INSERT_ID();', '', '', '']",[''],"['Parameter|||Description|||&&&expression|||Optional. An expression|||&&&', 'Works in:|||&&&']",[]
sql||NULLIF(),https://www.w3schools.com/sql/func_mysql_nullif.asp,,"['Definition and Usage', 'Syntax', 'Parameter Values', 'Technical Details', 'More Examples']","['The NULLIF() function compares two expressions and returns NULL if they are equal. \nOtherwise, the first expression is returned.', '', '', '', '']","['\n  SELECT NULLIF(25, 25);', '', '', '', '']",[''],"['Parameter|||Description|||&&&expr1, expr2|||Required. The two expressions to be compared|||&&&', 'Works in:|||&&&']",[]
sql||SESSION_USER(),https://www.w3schools.com/sql/func_mysql_session_user.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The SESSION_USER() function returns the current user name and host name for \nthe MySQL connection.Note: This function is equal to the\nSYSTEM_USER() and the USER() function.', '', '']","['\n  SELECT SESSION_USER();', '', '']",[''],['Works in:|||&&&'],[]
sql||SYSTEM_USER(),https://www.w3schools.com/sql/func_mysql_system_user.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The SYSTEM_USER() function returns the current user name and host name for \nthe MySQL connection.Note: This function is equal to the\nSESSION_USER() function and the\nUSER() function.', '', '']","['\n  SELECT SYSTEM_USER();', '', '']",[''],['Works in:|||&&&'],[]
sql||USER(),https://www.w3schools.com/sql/func_mysql_user.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The USER() function returns the current user name and host name for the MySQL \nconnection.Note: This function is equal to the\nSESSION_USER() function and the\nSYSTEM_USER() function.Tip: Also look at the \nCURRENT_USER() function.', '', '']","['\n  SELECT USER();', '', '']",[''],['Works in:|||&&&'],[]
sql||VERSION(),https://www.w3schools.com/sql/func_mysql_version.asp,,"['Definition and Usage', 'Syntax', 'Technical Details']","['The VERSION() function returns the current version of the MySQL database, as \na string.', '', '']","['\n  SELECT VERSION();', '', '']",[''],['Works in:|||&&&'],[]
sql||Functions,https://www.w3schools.com/sql/sql_ref_sqlserver.asp,SQL Server has many built-in functions.,"['SQL Server String Functions', 'SQL Server Math/Numeric Functions', 'SQL Server Date Functions', 'SQL Server Advanced Functions']","['This reference contains string, numeric, date,  \nconversion, and some advanced functions \nin SQL Server.', '', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&ASCII|||Returns the ASCII value for the specific character|||&&&CHAR|||Returns the character based on the ASCII code|||&&&CHARINDEX|||Returns the position of a substring in a string|||&&&CONCAT|||Adds two or more strings together|||&&&Concat with +|||Adds two or more strings together|||&&&CONCAT_WS|||Adds two or more strings together with a separator|||&&&DATALENGTH|||Returns the number of bytes used to represent an expression|||&&&DIFFERENCE|||Compares two SOUNDEX values, and returns an integer value|||&&&FORMAT|||Formats a value with the specified format|||&&&LEFT|||Extracts a number of characters from a string (starting from left)|||&&&LEN|||Returns the length of a string|||&&&LOWER|||Converts a string to lower-case|||&&&LTRIM|||Removes leading spaces from a string|||&&&NCHAR|||Returns the Unicode character based on the number code|||&&&PATINDEX|||Returns the position of a pattern in a string|||&&&QUOTENAME|||Returns a Unicode string with delimiters added to make the string \na valid SQL Server delimited identifier|||&&&REPLACE|||Replaces all occurrences of a substring within a string, with a new \nsubstring|||&&&REPLICATE|||Repeats a string a specified number of times|||&&&REVERSE|||Reverses a string and returns the result|||&&&RIGHT|||Extracts a number of characters from a string (starting from right)|||&&&RTRIM|||Removes trailing spaces from a string|||&&&SOUNDEX|||Returns a four-character code to evaluate the similarity of two strings|||&&&SPACE|||Returns a string of the specified number of space characters|||&&&STR|||Returns a number as string|||&&&STUFF|||Deletes a part of a string and then inserts another part into the string, \nstarting at a specified position|||&&&SUBSTRING|||Extracts some characters from a string|||&&&TRANSLATE|||Returns the string from the first argument after the characters specified in \nthe second argument are translated into the characters specified in the third \nargument.|||&&&TRIM|||Removes leading and trailing spaces (or other specified characters) from a string|||&&&UNICODE|||Returns the Unicode value for the first \ncharacter of the input expression|||&&&UPPER|||Converts a string to upper-case|||&&&', 'Function|||Description|||&&&ABS|||Returns the absolute value of a number|||&&&ACOS|||Returns the arc cosine of a number|||&&&ASIN|||Returns the arc sine of a number|||&&&ATAN|||Returns the arc tangent of a number|||&&&ATN2|||Returns the arc tangent of two numbers|||&&&AVG|||Returns the average value of an expression|||&&&CEILING|||Returns the smallest integer value that is >= a number|||&&&COUNT|||Returns the number of records returned by a select query|||&&&COS|||Returns the cosine of a number|||&&&COT|||Returns the cotangent of a number|||&&&DEGREES|||Converts a value in radians to degrees|||&&&EXP|||Returns e raised to the power of a specified number|||&&&FLOOR|||Returns the largest integer value that is <= to a number|||&&&LOG|||Returns the natural logarithm of a number, or the logarithm of a number to a \nspecified base|||&&&LOG10|||Returns the natural logarithm of a number to base 10|||&&&MAX|||Returns the maximum value in a set of values|||&&&MIN|||Returns the minimum value in a set of values|||&&&PI|||Returns the value of PI|||&&&POWER|||Returns the value of a number raised to the power of another number|||&&&RADIANS|||Converts a degree value into radians|||&&&RAND|||Returns a random number|||&&&ROUND|||Rounds a number to a specified number of decimal places|||&&&SIGN|||Returns the sign of a number|||&&&SIN|||Returns the sine of a number|||&&&SQRT|||Returns the square root of a number|||&&&SQUARE|||Returns the square of a number|||&&&SUM|||Calculates the sum of a set of values|||&&&TAN|||Returns the tangent of a number|||&&&', 'Function|||Description|||&&&CURRENT_TIMESTAMP|||Returns the current date and time|||&&&DATEADD|||Adds a time/date interval to a date and then returns the date|||&&&DATEDIFF|||Returns the difference between two dates|||&&&DATEFROMPARTS|||Returns a date from the specified parts (year, month, and day values)|||&&&DATENAME|||Returns a specified part of a date (as string)|||&&&DATEPART|||Returns a specified part of a date (as integer)|||&&&DAY|||Returns the day of the month for a specified date|||&&&GETDATE|||Returns the current database system date and time|||&&&GETUTCDATE|||Returns the current database system UTC date and time|||&&&ISDATE|||Checks an expression and returns 1 if it is a valid date, otherwise 0|||&&&MONTH|||Returns the month part for a specified date (a number from 1 to 12)|||&&&SYSDATETIME|||Returns the date and time of the SQL Server|||&&&YEAR|||Returns the year part for a specified date|||&&&', 'Function|||Description|||&&&CAST|||Converts a value (of any type) into a specified datatype|||&&&COALESCE|||Returns the first non-null value in a list|||&&&CONVERT|||Converts a value (of any type) into a specified datatype|||&&&CURRENT_USER|||Returns the name of the current user in the SQL Server database|||&&&IIF|||Returns a value if a condition is TRUE, or another value if a condition is FALSE|||&&&ISNULL|||Return a specified value if the expression is NULL, otherwise return the \nexpression|||&&&ISNUMERIC|||Tests whether an expression is numeric|||&&&NULLIF|||Returns NULL if two expressions are equal|||&&&SESSION_USER|||Returns the name of the current user in the SQL Server database|||&&&SESSIONPROPERTY|||Returns the session settings for a specified option|||&&&SYSTEM_USER|||Returns the login name for the current user|||&&&USER_NAME|||Returns the database user name based on the specified id|||&&&']",[]
sql||Functions,https://www.w3schools.com/sql/sql_ref_msaccess.asp,MS Access has many built-in functions.,"['MS Access String Functions', 'MS Access Numeric Functions', 'MS Access Date Functions', 'MS Access Some Other Functions']","['This reference contains the string, numeric, and date functions \nin MS Access.', '', '', '']","['', '', '', '']",[''],"['Function|||Description|||&&&Asc|||Returns the ASCII value for the specific character|||&&&Chr|||Returns the character for the specified ASCII number code|||&&&Concat with &|||Adds two or more strings together|||&&&CurDir|||Returns the full path for a specified drive|||&&&Format|||Formats a value with the specified format|||&&&InStr|||Gets the position of the first occurrence of a string in another|||&&&InstrRev|||Gets the position of the first occurrence of a string in another, \nfrom the end of string|||&&&LCase|||Converts a string to lower-case|||&&&Left|||Extracts a number of characters from a string (starting from left)|||&&&Len|||Returns the length of a string|||&&&LTrim|||Removes leading spaces from a string|||&&&Mid|||Extracts some characters from a string (starting at any position)|||&&&Replace|||Replaces a substring within a string, with another \nsubstring, a specified number of times|||&&&Right|||Extracts a number of characters from a string (starting from right)|||&&&RTrim|||Removes trailing spaces from a string|||&&&Space|||Returns a string of the specified number of space characters|||&&&Split|||Splits a string into an array of substrings|||&&&Str|||Returns a number as string|||&&&StrComp|||Compares two strings|||&&&StrConv|||Returns a converted string|||&&&StrReverse|||Reverses a string and returns the result|||&&&Trim|||Removes both leading and trailing spaces from a string|||&&&UCase|||Converts a string to upper-case|||&&&', 'Function|||Description|||&&&Abs|||Returns the absolute value of a number|||&&&Atn|||Returns the arc tangent of a number|||&&&Avg|||Returns the average value of an expression|||&&&Cos|||Returns the cosine of an angle|||&&&Count|||Returns the number of records returned by a select query|||&&&Exp|||Returns e raised to the power of a specified number|||&&&Fix|||Returns the integer part of a number|||&&&Format|||Formats a numeric value with the specified format|||&&&Int|||Returns the integer part of a number|||&&&Max|||Returns the maximum value in a set of values|||&&&Min|||Returns the minimum value in a set of values|||&&&Randomize|||Initializes the random number generator (used by Rnd()) with a seed|||&&&Rnd|||Returns a random number|||&&&Round|||Rounds a number to a specified number of decimal places|||&&&Sgn|||Returns the sign of a number|||&&&Sqr|||Returns the square root of a number|||&&&Sum|||Calculates the sum of a set of values|||&&&Val|||Reads a string and returns the numbers found in the string|||&&&', ""Function|||Description|||&&&Date|||Returns the current system date|||&&&DateAdd|||Adds a time/date interval to a date and then returns the date|||&&&DateDiff|||Returns the difference between two dates|||&&&DatePart|||Returns a specified part of a date (as an integer)|||&&&DateSerial|||Returns a date from the specified parts (year, month, and day values)|||&&&DateValue|||Returns a date based on a string|||&&&Day|||Returns the day of the month for a given date|||&&&Format|||Formats a date value with the specified format|||&&&Hour|||Returns the hour part of a time/datetime|||&&&Minute|||Returns the minute part of a time/datetime|||&&&Month|||Returns the month part of a given date|||&&&MonthName|||Returns the name of the month based on a number|||&&&Now|||Returns the current date and time based on the computer's system date and \ntime|||&&&Second|||Returns the seconds part of a time/datetime|||&&&Time|||Returns the current system time|||&&&TimeSerial|||Returns a time from the specified parts (hour, minute, and second value)|||&&&TimeValue|||Returns a time based on a string|||&&&Weekday|||Returns the weekday number for a given date|||&&&WeekdayName|||Returns the weekday name based on a number|||&&&Year|||Returns the year part of a given date|||&&&"", 'Function|||Description|||&&&CurrentUser|||Returns the name of the current database user|||&&&Environ|||Returns a string that contains the value of an operating system environment \nvariable|||&&&IsDate|||Checks whether an expression can be converted to a date|||&&&IsNull|||Checks whether an expression contains Null (no data)|||&&&IsNumeric|||Checks whether an expression is a valid number|||&&&']",[]
sql||Quick Reference,https://www.w3schools.com/sql/sql_quickref.asp,,[],['Source : https://www.w3schools.com/sql/sql_quickref.asp'],[],[''],"['SQL Statement|||Syntax|||&&&AND / OR|||SELECT column_name(s)\n  FROM table_name\n  WHERE condition\n  AND|OR condition|||&&&ALTER TABLE|||ALTER TABLE table_name \n  ADD column_name datatypeor\nALTER TABLE table_name \n  DROP COLUMN column_name|||&&&AS (alias)|||SELECT column_name AS column_alias\n  FROM table_nameor\nSELECT column_name\n  FROM table_name\xa0 AS table_alias|||&&&BETWEEN|||SELECT column_name(s)\n  FROM table_name\n  WHERE column_name\n  BETWEEN value1 AND value2|||&&&CREATE DATABASE|||CREATE DATABASE database_name|||&&&CREATE TABLE|||CREATE TABLE table_name\n  (\n  column_name1 data_type,\n  column_name2 data_type,\n  column_name3 data_type,\n  ...\n  )|||&&&CREATE INDEX|||CREATE INDEX index_name\n  ON table_name (column_name)or\nCREATE UNIQUE INDEX index_name\n  ON table_name (column_name)|||&&&CREATE VIEW|||CREATE VIEW view_name AS\n  SELECT column_name(s)\n  FROM table_name\n  WHERE condition|||&&&DELETE|||DELETE FROM table_name\n  WHERE some_column=some_valueor\nDELETE FROM table_name \n  (Note: Deletes the entire table!!)\nDELETE * FROM table_name \n  (Note: Deletes the entire table!!)|||&&&DROP DATABASE|||DROP DATABASE database_name|||&&&DROP INDEX|||DROP INDEX table_name.index_name (SQL  Server)\n  DROP INDEX index_name ON table_name (MS Access)\n  DROP INDEX index_name (DB2/Oracle)\n  ALTER TABLE table_name\n  DROP INDEX index_name (MySQL)|||&&&DROP TABLE|||DROP TABLE table_name|||&&&EXISTS|||IF EXISTS (SELECT * FROM table_name WHERE id = ?)BEGIN--do   what needs to be done if existsENDELSEBEGIN--do what needs   to be done if notEND|||&&&GROUP BY|||SELECT column_name,  aggregate_function(column_name)\n  FROM table_name\n  WHERE column_name operator value\n  GROUP BY column_name|||&&&HAVING|||SELECT column_name,  aggregate_function(column_name)\n  FROM table_name\n  WHERE column_name operator value\n  GROUP BY column_name\n  HAVING aggregate_function(column_name) operator value|||&&&IN|||SELECT column_name(s)\n  FROM table_name\n  WHERE column_name\n  IN (value1,value2,..)|||&&&INSERT INTO|||INSERT INTO table_name\n  VALUES (value1, value2, value3,....)or\nINSERT INTO table_name\n  (column1, column2, column3,...)\n  VALUES (value1, value2, value3,....)|||&&&INNER JOIN|||SELECT column_name(s)\n  FROM table_name1\n  INNER JOIN table_name2 \n  ON table_name1.column_name=table_name2.column_name|||&&&LEFT JOIN|||SELECT column_name(s)\n  FROM table_name1\n  LEFT JOIN table_name2 \n  ON table_name1.column_name=table_name2.column_name|||&&&RIGHT JOIN|||SELECT column_name(s)\n  FROM table_name1\n  RIGHT JOIN table_name2 \n  ON table_name1.column_name=table_name2.column_name|||&&&FULL JOIN|||SELECT column_name(s)\n  FROM table_name1\n  FULL JOIN table_name2 \n  ON table_name1.column_name=table_name2.column_name|||&&&LIKE|||SELECT column_name(s)\n  FROM table_name\n  WHERE column_name\n  LIKE pattern|||&&&ORDER BY|||SELECT column_name(s)\n  FROM table_name\n  ORDER BY column_name [ASC|DESC]|||&&&SELECT|||SELECT column_name(s)\n  FROM table_name|||&&&SELECT *|||SELECT *\n  FROM table_name|||&&&SELECT DISTINCT|||SELECT DISTINCT column_name(s)\n  FROM table_name|||&&&SELECT INTO|||SELECT *\n  INTO new_table_name [IN externaldatabase]\n  FROM old_table_nameor\nSELECT column_name(s)\n  INTO new_table_name [IN externaldatabase]\n  FROM old_table_name|||&&&SELECT TOP|||SELECT TOP number|percent column_name(s)\n  FROM table_name|||&&&TRUNCATE TABLE|||TRUNCATE TABLE table_name|||&&&UNION|||SELECT column_name(s) FROM table_name1\n  UNION\n  SELECT column_name(s) FROM table_name2|||&&&UNION ALL|||SELECT column_name(s) FROM table_name1\n  UNION ALL\n  SELECT column_name(s) FROM table_name2|||&&&UPDATE|||UPDATE table_name\n  SET column1=value, column2=value,...\n  WHERE some_column=some_value|||&&&WHERE|||SELECT column_name(s)\n  FROM table_name\n  WHERE column_name operator value|||&&&']",[]
sql||Examples,https://www.w3schools.com/sql/sql_examples.asp,,"['SQL Syntax', 'SQL SELECT', 'SQL SELECT DISTINCT', 'SQL WHERE', 'SQL AND, OR and NOT Operators', 'SQL ORDER BY', 'SQL INSERT INTO', 'SQL NULL Values', 'SQL Update', 'SQL DELETE', 'SQL SELECT TOP', 'SQL MIN() and MAX()', 'SQL COUNT, AVG() and SUM()', 'SQL LIKE', 'SQL Wildcards', 'SQL IN', 'SQL BETWEEN', 'SQL Aliases', 'SQL Joins', 'SQL UNION', 'SQL GROUP BY', 'SQL HAVING', 'SQL EXISTS', 'SQL ANY and ALL', 'SQL INSERT INTO SELECT', 'SQL CASE', 'SQL Comments', 'SQL Database']","['Example Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Example Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'Examples Explained', 'SQL Database tutorials can be found here:']","['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '']",[''],[],[]
sql||Quiz,https://www.w3schools.com/sql/sql_quiz.asp,You can test your SQL skills with W3Schools' Quiz.,"['The Test', 'Count Your Score']","[""The test contains 25 questions and there is no time limit.The test is not official, it's just a nice way to see how much you know, or don't know, about SQL.You will get 1 point for each correct answer. At the end of the Quiz, your total score will be displayed. Maximum score is 25 points."", '']","['', '']",[''],[],[]
sql||Exercises,https://www.w3schools.com/sql/sql_exercises.asp,You can test your SQL skills with W3Schools' Exercises.,[],"['We have gathered a variety of SQL exercises (with answers) for each SQL Chapter.Try to solve an exercise by filling in the missing parts of a code. If you\'re stuck, hit the ""Show Answer"" button to see what you\'ve done wrong.You will get 1 point for\neach correct answer. Your score and total score will always be displayed.']",[],[''],[],[]
sql||SQL Certificate,https://www.w3schools.com/sql/sql_exam.asp,,['How Does It Work?'],[''],[''],"['How Does It Work?###&&&|||Study for free at W3Schools.com|||Study at your own speed|||Test your skills with W3Schools online quizzes|||Apply for your certificate by paying an exam fee|||Take your exam online, at any time, and from any location|||']","['.cls-1{fill:#04aa6b;}.cls-2{font-size:23px;}.cls-2,.cls-3,.cls-4{fill:#fff;}.cls-2,.cls-3{font-family:RobotoMono-Medium, Roboto Mono;font-weight:500;}.cls-3{font-size:20.08px;}w3schools CERTIFIED  .  2021\n|||\xa0\xa0|||\nW3Schools offers an Online Certification Program.\nThe perfect solution for busy professionals who need to balance work, family, and career building.\nMore than 30 000 certificates already issued!\n|||&&&', '\nDocument Your Skills\nKnowledge is power, especially in the current job market. Documentation of your skills enables you to advance your career, or help you to start a new one.\nGet a Certificate\nGetting a certificate proves your commitment to upgrade your skills,\ngives you the credibility needed for more responsibilities, larger projects, and a higher salary.\n\nGet Your Certificate »\n\n|||\n\n|||&&&']",['/cert/pic_html_cert_small.gif']
